{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "71c64a29-300e-467a-94f9-33e1bfd50381",
        "name": "Clear Cache",
        "item": [
          {
            "id": "946ad799-57ad-44a6-bdcf-ffda11261cbd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6481aa34-9550-42a0-abdc-47539bf36b6c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9377e74-ea2a-41d6-8ef8-f91630216cfa"
                }
              }
            ]
          },
          {
            "id": "65c76c32-6d6d-460d-ab1c-23acc4642ed3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab1d7083-80cd-42a0-91e4-b6538a6ae68a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "141d7689-128a-44dd-b691-140a87d41281"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a2036f20-1fba-493a-ba05-8e6c8de90500",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e8178be6-3c27-4a6d-bff0-5186b61d5fad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94787393-0063-4197-a24c-7028e2ca9dd9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1890c346-7856-4ce7-86e1-46b09ee711ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a357839a-8306-4280-af54-7f7bb1bfa0f3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b66d485-2ee3-41e5-a001-506bfdad6807",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa8fe4e6-23e3-4477-a31f-a3a43bb3e59e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0916222-c3ff-4504-97d4-569348b8f3be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5145725d-8bdd-4221-8ced-fd2d6ba5e949"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6820abec-9cda-4026-96cb-f103fee81e00",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d9212924-8c0b-4730-8e8e-02f61e09b554"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e6ec2f8-4e8d-4fc0-945c-37a6493e8e75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51bff5a8-89d8-4f55-947b-2a62c49eba45"
            }
          }
        ]
      },
      {
        "id": "29031ad4-b093-4b34-81cd-a883580b7783",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "947b1ff7-6f6d-4771-849c-2096fcb523fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b00d09a-7c33-4988-afe5-2dd7eabfaf57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "58b0051b-6934-4c3a-a283-64ecbd0a1eaf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089a2b68-93dd-451c-8255-4c3871e8380a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd96a89b-da43-4f2a-8bb0-b5e53f7b7e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753b966c-a26f-4156-8737-4be20cd2cca4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1170a2ee-23c2-4df2-ae3a-c40d24ad13e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20d0218c-60a0-4a78-a806-e6c27a2082bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6e7c83-d1a3-4856-b8fa-e23bea90db79",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cb0104-02de-47db-9d04-50f12b036aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ce4ebcc-686f-47ed-a449-0ae8006d67d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfd11da7-7a14-4bb8-9349-348eb3e84a77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b185bb9-6c9a-4d75-99d9-591a00d4370c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d32b71-5d1a-4354-827e-83ee9988a527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c5eaa8c-8224-4274-8c6b-3fccbdb84495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9becaf71-8772-47e4-a5d2-038e739f29bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0b3271-b0ca-4bb3-a8d9-49a87965a521"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "553aff13-4b99-4690-b88d-28860abb916e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2574918d-8a47-4716-b842-77e7b8c38038",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e70e4a-1d48-4460-a95f-28828dacca3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "93682c6c-9eed-4d11-8d3c-66a6913287e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "301f9590-9eed-4278-af59-bb9a6cae21a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8420a778-38a7-4ac3-bf96-7c9d108a891d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9db00fe-ff6f-4249-9b0a-a827703397e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79f582f2-2cc7-4f1e-ab97-e25f1c909cdf"
            }
          }
        ]
      },
      {
        "id": "2fd9f641-fa94-4b96-b78a-fc6c476663c7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "472ec3df-39f3-42e9-92b2-59aff777be67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60befe5a-85f9-46b3-b894-99462db4dff6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f6520cda-d3a1-4789-b68c-ce1f38e25156",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e70eade-9405-4a81-8b9d-36f8254b2c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5980df5f-8ae4-4ce1-85e4-1d601c88069d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47597718-1c81-41c3-919b-c1d5b92983d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d19ea0a3-71ea-4a06-81d3-e73f3e813533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dcac34-8816-49d4-ab60-db1cd8c59627",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d155f5-2a9b-43ef-a53b-7fda54a9093a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2a4982-bd35-4121-8eb7-528d802afa0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c355ede2-c340-4c32-b1e7-3742ec12752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0d4a3bc-e63a-44e8-86bd-caf39c6c2e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c32264-f38a-46fc-ac90-a3131972c9c0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b52fb1e-a756-453a-9843-a7263f0f9d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdf8435-eacc-40ae-abb6-e9ca8bc3c64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6006523-0c19-4935-a953-faad8a880b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f5f6365-e9de-42dc-b6cc-93b0063c2a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b8dfa7-71fc-495e-8893-4e1a96b275a4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52e1654-cf21-47c2-9c08-5d9bbaa3d7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaa4cec-cbd0-4ddc-b0a1-2bc9fa1adc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b6b0b0-6883-41ae-b2a5-fea58a917b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f01d836-41d2-46a1-aa0f-a45a394ee0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b91ae1-88df-4d98-ad4a-42b3f526f35f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602c4427-3684-475a-ad82-b928396cf0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10654ddf-1b74-4a4f-b1e7-30d26d8d98d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888cc28d-0b69-4786-a8fe-930f01dea3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb5ac5d2-8b23-4be5-822b-43b60a2f3503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e05e25-e465-45a1-9f0f-1489d3b1f11e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84e1b87-e600-45ca-ab6d-303adc068665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b484537a-642a-44f6-ae8e-539a42aa319e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9602ad30-d4b6-4227-bcb3-59a5f1ec9084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4267eb53-713d-4204-a4ba-a3dd733f5be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b27ca45-51a6-4f65-9f10-36aa632db916",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4eed2b-9ba6-40b4-900e-2b7a710a4042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a39201-8ff5-41f0-b86a-e62bdcec624c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a78e77e-9b5a-499b-8e5c-ecc68518a618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2658a352-76df-44da-92e7-a4f035df0987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478e6acc-9242-43b1-b554-e1d1bdf5f5c1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d687bd9c-9b62-4a76-b7b2-a8d3f92735fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5715177-0ce9-44d7-88e9-6f33a7f190af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89875a05-339c-4e8f-a697-147a185ff323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "200eba42-b612-4810-a0ee-dceda85d097d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaeda49-f304-4040-827c-4ba2b7f32b00",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9280c0-86bb-4e62-b8f6-caca5c6b9bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892150ae-d295-4cdc-8c2f-1928af46023e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e38e377-1ef7-46a2-8ef1-dcce37736837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd504a6-5582-40fd-a901-2bc41a74d309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0893f404-237c-4d6d-ab63-31cb85fb42cd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b180167-fa98-4f56-b395-897654d813d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c5a6dd-0f50-499e-8ade-2a3a24b61f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7e9e98-52fd-4aae-92ec-025d6ee1a919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4006feb7-7f3d-427b-a2aa-765da26b276c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f61ff0-bf1e-4e38-b4d1-c13b6d4cd466",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a134d6-0c25-400b-a985-3f56c41babc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd06120-d28b-4e26-b383-06ec91ad4b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1efc0be-9876-43c9-9dc3-91134818747d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd837161-87aa-44a3-b56a-fc8d1ca1d885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a4a66b-aea1-42f1-a87c-7e4e26309d88",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669eea6d-04ab-477f-b501-02476ba869fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb381b09-31e1-4372-989d-e4d8e131b99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7367c33c-2135-43aa-8404-6d369e1f0a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "822301c2-c5f2-4d07-a7af-7020612893b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6464f62-e199-49b2-bd50-18e7da34282e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8132e429-33a4-466a-8b40-d498f9693b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a7eec8-ccf9-485b-b1a7-8fb409fdb3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dac6c5-7b16-4fef-ada2-da5dcdc4120d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34c1d447-b6db-4a23-b69e-9b7f91b2bd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df61ae1b-49d0-4b13-9f8f-dbb958c62eee",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80666659-3ba2-4541-896f-a51e002ee023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb9e713-c708-40f7-b027-8841f1c1be68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22ab75a-4226-4e7f-b71c-f01acf6e7033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57f06094-787b-478c-9d34-4191bc22d8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3e4064-6536-498d-8dcb-3f4918e47696",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fc416a-b5e5-4660-b540-7307aad3252e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf91b26-296a-4af3-93c8-4fc588bd86fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca147885-b42e-42cf-afe8-56d2749c28c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0810463-896e-4a9f-a3b7-db875a07bb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67b2e2a-b238-4a74-86f9-306106c64b05",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bfaedc-a20b-4094-9c8a-6d78a1a9c63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1908ab8-e232-4342-bdd2-e4da0013f08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36db09e9-b9bf-41ef-89ca-ba300a828905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88c94f31-8072-4bd4-9393-7ca873aaa4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92cbd74-8dd7-4d63-a733-86b6a57aaf7f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2301ffbd-b882-4f61-b976-023c7ca993d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d104b0b-3f1e-4606-bf43-594a9e5bb833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b92e6-55e1-4870-8727-d6700177584d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab2e6044-4b8b-4219-90f8-bf948213b5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c6daab-78c2-40d0-b30d-4d7dbca4826b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac9d31b-c9f6-4ec6-834c-84b5ae4dfb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ece61ab-eebb-4c31-9509-be10247472e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba257c2-f6dd-4510-ab39-50a117c68e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "706eeab1-39e1-4eb3-bd24-d08559366d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f275798-5130-4e2d-af53-4e43595188a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e9c9e2-3614-4ea9-a3c2-3245634e376e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c0f865-3572-4936-80d6-1e0afd49f5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678cb929-f011-4c81-90c8-8c8fabf2707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3d3755-e495-496c-af09-f2b5125d3005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36439254-1c86-47ce-8759-272f957edca4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e5e2a2-351c-410b-ad12-7834b565f969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b69dc5-f9d5-47d5-8e4a-95c6101dca75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c61fc06-8c3d-4def-8d4a-265cb08635d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1b0342-74c1-456c-a97f-69785ccf1fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640b0078-a8a5-4b32-a95f-3c99a3c19f00",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca4a578-1918-421c-895d-b105a6b1fae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b692f549-a227-41d8-b0ed-e37f3441f9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5c5ea9-b2be-4189-87a6-09505bc41571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3d6820-eee7-4aba-b279-910700ae5ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f337e412-215a-47ff-bc7f-e9dc9d8027b1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a14245-bd92-4c25-bd48-12f0d1fdca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ede233-2744-48d8-af72-80c2ca2cfc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5141ac3-3108-4095-a355-78e3b813c2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5af9eafb-6c53-49a8-9296-6996e1087a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eddfd4-1b8e-4afc-8437-f4a639439c14",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33875873-7405-408b-bd70-7027ac8e9e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1ce388-3cf1-4668-906d-26301ec73935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39174ce-0fe6-4fd2-96b7-ffdd0792c7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb94532-11e2-4c50-817e-a23eaefb5a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edeabebd-17b6-46de-8fde-9c4788085747",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd28a4e9-aaa6-4ac1-8df2-db334b9c1762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dedb0e9-b957-41f4-a0a8-1f2313083130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bf503f-5a3a-4547-9c24-31db7f96fc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4850a4f7-fb31-4627-bec2-05d5edd2da6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55ada79-13ee-493b-a82e-33b57a9ae782",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2fff76-3b19-4fc3-abaa-d4f5814fc475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb430ccc-c6ae-4eac-89c3-359c5617bb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8664dff-9736-4c51-84dc-1e2006e62b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6166021d-6e04-4585-8320-001bff3977ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16958f46-633b-415d-867e-ec19d46ccaf5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64145413-c839-4b83-9516-1e8775086553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa173b85-4745-4b80-99cf-a36a399372f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c1157c-b3b5-4d33-849a-8a889fd5cdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8bfdde-b7d3-4330-8355-63667e09d347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb42989e-30ab-40dd-bebd-56af378bd587",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755364ce-45c2-4bf7-b826-58e16d96dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09aadb8a-7549-406f-b9b6-86633815b601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bd3710-1a6d-4d15-82c2-dd85509d5355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c042fee4-22cc-453b-acde-6298ffb04f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d481d4-c0ca-4559-8c9e-d0fb030164dd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9e8dec-3416-4309-a06d-f35d31fc76a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b6fd68-7674-41e7-b4c3-dc26fe83deb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ff19a0-0e57-4627-ba52-4b3fc1ad9849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1709602a-da6e-4a08-ae66-886786eb7119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f6c14b-87bf-4ba6-930d-2f7f982e9999",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59dbcf2-686f-4930-8c94-71e7e7cae0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5288ad8-1ba9-4d2c-90be-f62c35c12917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918d0339-7039-465c-b7a0-3c27c2dabe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c26c506f-3cfa-43f5-a497-b3d05bfcbe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ac9329-704b-4977-855a-2bc358dadfc3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acce18b-3774-4cce-abc2-661ba8560fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7bba83-e746-4ed2-b859-15ed835a3c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4754fd3-8ec9-4fb4-ade5-63b79de6e826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b501a0-18af-4931-a863-a68bb7740a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e85633a-1fe1-4895-a776-a066bf21f2f3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf39c37-84c6-427b-a020-91acbd3db494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08815907-bb4f-451d-91eb-fa4e8ac6ce6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eed2499-7366-4080-924c-34d5fbe6697a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1cc650-ab8b-44b5-be7d-6668c3ad608e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd957587-dc34-4605-b7c2-432cd0dcc18c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9603dc7e-d9b8-47d9-8d7a-929f956884a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f8b2d5-df4b-4185-a5fa-1b64c74e9d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d88874f-1c8f-4bd1-bb34-cb930fb8190c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07fddbe2-fb7e-4624-acdc-2c14832e548c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0830e6ac-af22-4b2f-baf1-453eadc508b7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae552057-5010-44d0-9e40-b5c2e90942df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9708038d-87c4-47fa-9952-15fc00c35872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c37540d-8057-44fb-bd20-6d4aa506d539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b607bb6-d193-484e-b4ae-1d4471fe43aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e53a7c2-4140-47fd-8367-9d0ebcebda60",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6d5475-0997-41d7-ba47-ffbd411cabb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392c5f72-7b83-4a62-8d6d-1dcc62e8e839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b90d991-9382-463a-a91b-cb2d5558459d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98033278-6d84-40e7-a627-028eafd3358c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55db5f8-2e05-49ce-83f6-2db9dac62280",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124746f4-e352-4eb3-8c9f-4440ea3be2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d377257d-3a5c-4b00-bd13-01b29fd0a17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5c998c-62e0-4ba2-ab91-3f83ebbf3563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4a56f52e-7902-427e-9066-ed23fc03ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510e6a10-6ad0-4cd2-9edc-a466c311143c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c04edaf-29ed-43a1-9286-737e911e7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a70b3e88-d077-4325-a500-9129974f3ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649166e7-719a-4547-97fe-a07a9fe41fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3141eb-4529-4ea0-ac15-56140a6c6790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be213c5e-0f2b-406b-99af-f96e96e39fc6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b22679-ad7f-4743-9484-cb326bb7754c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282e2499-3665-4203-9925-dd8987ad5de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88149040-0d53-47be-af3b-7bb08d040bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f33ac8-191d-4390-b109-07177fad697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f406ecc5-852e-4cf5-8c44-71a2ecfee2e2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f4cce9-e193-4d6e-be9a-fffa5f28c631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0312f623-7532-4b1c-8000-1bf5e6955e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d6fcfa-5d5c-4dde-b881-ea9911f13ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e19e482e-4763-4e08-b543-e34c6b4be3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7773c6f-cd14-469f-95db-4201ca37b264",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2b9004-9440-4e21-a239-d72bfb88e9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993afaf9-a4f9-43fa-b941-3e9886492346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b1e3de-d64a-421e-af8d-9f98ceee55a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d94613-4abc-43f5-9ae8-fc60ebe515ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13348670-be84-48b4-ae4a-c4a54ebb48de",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c45ca-8c11-4672-8ef8-9202f0289e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11dc5aaf-f18b-4357-889d-96d758682c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d5f366-3892-4fdd-8d30-baad66f30c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08ea1ea-e8be-48e9-bb7e-a98571914945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50069bf4-6923-4666-8998-02e35f229874",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439a29d0-db91-4b81-b8b6-e21bee6fbe90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8cc971-6a6e-420b-ad5f-daf1238fe909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173ff160-7381-47cf-9fe2-5a2dd60c4482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "044353a6-dd1a-4761-be9b-620faa0b8890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c586e694-b16b-40e4-8998-d1b53d15f892",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f875e7-178a-492a-ac5b-7dcd7c831dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb912084-b48a-425c-9d24-4a66ce5283a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217ef72a-8c44-4152-a01c-4e324e13d824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "53d60261-a18a-4c43-b224-5f8998a415c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae9e999-437b-4155-8da1-f466b21c29d4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2cde72-9813-40a1-8cd7-0d0b5f449db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8153900a-d889-4c2b-8332-9691cc47c224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc84d7c-8dcb-42ca-adfc-77526636c827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5b6e99-bd42-41a9-8d26-9c3da43ee6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d738d556-440f-4110-9de7-464e47acd468",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0139805b-89df-43b0-a717-88382aa9517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde3d89a-bee5-4bbb-9ead-45dd43da010a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665025f6-d5f9-4767-82cb-dcce01eb7438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d490d674-f557-4158-a653-08e2c8ae7074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f235c8b1-8002-4142-958b-35e1376cc0f5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a67d3-89b7-4c6e-ae8c-d258ffc9cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "409e27c7-3efb-4b49-8e44-cded65f41fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bebc3bc-074a-4d1e-875a-6c6a62d7c06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0efb01e-3758-4d42-99da-6161d675d80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a6a69a-1d1e-4420-9536-8df473688625",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8566e5e7-1a31-4b4b-bbeb-e99fa67d110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2390365-b959-47fc-9e5d-33ac617b0bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95eae954-dab8-41f5-9713-9d8a983fd6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c7ae1a-2ee3-49b0-b264-0bab0d2f359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcddf488-54ec-4b0d-b897-2baf2aa7a293",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8bd5d2-bd57-4f52-b31b-716bd1083b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e943ecc-c400-4a2a-bdb4-fb3eea376791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c559005a-62aa-41d1-bbd5-157b7ee8d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26afcbc-c17d-4091-bba0-fa9b1b7bd5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50d6370-616f-44d3-b01a-4a4cb76615cb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b74157-fd8f-45d8-a83d-e6194e4bdeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27b15b3-4743-4caa-a9ff-de959d355b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47796ae-655c-45a4-b32d-7ddfc4ea8675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aec8ba1f-c0cb-45fe-a628-441ed70889db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788144fa-625c-456a-bebd-13a83ff23274",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21612cc5-538a-47bf-a90d-3c461437f992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407803d8-03b2-4a94-8dfe-aae97cb60225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2427a213-7486-441a-8695-9eb9a11bce3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f749d564-2058-47a2-967a-3ced7307ebab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff88747-f266-4163-b125-110420d66a1b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9226d1-ff68-4a5d-b4f0-02fc5f2e101a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8444bea7-0d1d-4b39-a3f1-aae28999f768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f858d44-7f4d-4e98-9fdd-c223e7bf6f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e37c155-7172-4beb-9a6a-bfdf44d7b3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ca779f-2ef7-4ad0-8bd0-a71fb8c78aaa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d47656-f580-4735-b64a-d916f7f2b075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb637cf-9221-464d-9c69-88bf9f765615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8780fc20-8761-47f5-b14c-721e2640c9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa3f31b-b0cd-4bda-b2e0-919b6a169588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721cd313-9bf8-4805-bbe0-e2e00876f0ea",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d97686-5e78-4f35-8019-867bca369101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677d7037-8974-451d-865d-03ce16b4312e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0130f3-d46d-4594-a486-daefdba1c57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3be4a4c-c34e-42f6-84f3-cf0b2687120a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c024f6-a14c-4407-a0e2-b26a5960df8c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa627ce-16cd-48f7-b426-d1e36823a8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27b974f-8f9c-4441-8105-448f74c0845b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129ad2dc-a107-4014-8f68-840c47a87672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f94827f-bee7-4f7c-848f-c6c5e612291a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76af080c-ff83-4076-a813-f5f2173f2212",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671fbd20-cc75-46ad-b502-947285556963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71e9bd7-6228-4da6-982d-0f920f92fff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db196035-ef70-4c6b-a243-c2fc91fdc4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "948bbf9e-16da-4678-a73f-d20b19c7492b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8914fe-7341-4e35-b15f-83e10ebb7907",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d620e675-dae9-47da-bb08-b94bb4f9d32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96df20fe-fcc2-428a-9837-ce4b3daf45cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d209e0-ac11-4a72-9ea2-b47d79c956f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d15e69-18b0-489a-af25-e19dda92a7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd094cdf-032d-4a13-a321-120d8cab7a02",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eea38bd-46cf-412b-80a4-006f7896ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a954474d-3cd5-411e-89a0-0a76283176c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4152c2f6-0e24-4e09-b970-e6771027e7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e1f256-b4d3-4ad3-b204-ffbebdb97bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a467a7a0-39cb-47de-ad3d-300bb7a7473c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fa704f-1530-4bb1-9f1a-902c3b7dbd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fd5b11-34a1-4e00-a1db-99f52f3e2fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c7325f-fd2d-4b3b-a204-284716c8c335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fddfb3d-82fd-4770-9c78-fff6174cba1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d346f645-2fb9-4d67-b861-f9fb664cb138",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6df7ab4-1c00-4ca6-8ba1-5c8b9d0a9610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0d025e-0943-4f35-a30a-15b408445aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c40fd9-ec00-4691-b4ac-ebab3c2fc512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07b7d6bc-f700-4cdd-9380-5302788e6c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70af836d-b29d-4c1e-81cb-ef34a02d4b03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e393f63b-fea7-4704-9879-10330eda84ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde63638-87a9-44e9-bcce-8416e9a31982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ac4f79-de57-4469-863c-60caff41a634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fb93d7-bcf3-4071-8bbd-a4200b84d0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561b6e8e-362c-4f79-bc1e-6424632e7445",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed1a90a-42f4-47e1-8c37-d943039bfba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f46040d-bab4-48d3-9174-99922473c8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d7c7f8-e81d-4d3d-9f43-0fd53f6e68e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "283a8c96-f5ff-4e67-92f8-206b7a20d4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadc911b-1186-4f46-8752-55f2f31b32fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22fadfd-991a-4a2d-8878-572cac75e97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc85023-eda7-4d9d-a206-d6bca0f003b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c0071f-b126-435c-8a97-6b79eefeb636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b030c4ad-c29e-4542-a1b9-3ac0fb95e0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcb1392-1918-4bed-8970-e962ffc561b3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170ee389-1193-4d07-91ee-e1f31c326ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cb1eb4-23ac-4e74-8a44-9e949ef2bb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3c21d9-9318-464c-8a2f-5838a703cbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e48817-90e4-4692-89a2-bf4b637a9a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b07a9c0-7e54-4e67-9627-df1a5479b020",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c6ab0-eb87-4019-b7dd-9f1171014231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d344f87a-c57c-4022-904c-803056ce5f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bdbc8a-b665-42dc-a649-8517c78534e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f59c06a-239b-43ad-bb4d-924d5b82a70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6841fc6-ac74-4359-8049-12e02b8b8223",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7996d4b-a529-4316-bc3a-927b057ea652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40483e64-7c51-4d00-a6c2-89f885dcdf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1080a142-69f9-4488-8feb-8a6a3e85348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2b2503-e6a1-4e97-a30e-e9dda89e8e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27979b11-7e23-42b4-b4c5-6274d81f9173",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a88c29-54bd-4738-af72-4b2c8943cf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ab699e-429d-4832-8deb-8f9ff1b071b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67b6b26-6c72-4fd7-aca3-4f8c0f51fd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08140a06-ec33-4689-b0ad-a09b748d5c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15fa39b-dfa7-4718-becf-b5d125f3692f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdc61cc-9e46-418d-9130-4fd9debb6155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5ab024-f4d3-4f16-99c7-88200bd5b6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3437ac19-05b9-4674-9cf7-c87dcf54f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce335ae1-1421-4fae-99d1-77ab4d094eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc5de2-cfcf-4ed1-b527-ca5aa285716a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff102519-a387-49c4-8059-9cdf6b75f94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2971b647-a9e7-4fd4-8768-b671eed5dddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3594a915-b203-476c-999a-347ac9423926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "673b94aa-743f-40eb-abfc-74c150ac3456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0696266c-d2d5-498b-8c42-1d1a313b8636",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b53dbb-88d7-4b7c-8af5-cae252b65e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cf3ef1-ede1-4be6-8860-0e0749d240b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5887ef95-58f4-466c-b883-bba9a646ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e646a0dd-4cd1-4eb0-b37b-70c03702b445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad0f483-a822-48db-9126-46ca9fe02a88",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bab157-9284-4694-9b77-e9ea30f808af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e104362-616c-44ad-ad9f-17f7e62a7ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d245f3-67b2-4444-988b-2cfef63ef0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "909bc8a2-b6cf-4491-85d9-2c2e80888cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71e7665-a18d-4658-9f55-83b8d748e7b7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea6ee49-1fa9-4246-b621-e76dab818168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be75ea65-47bb-4408-ba9e-67519d6fb2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485d11ed-1cc8-4eea-b012-47ac63fea150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e3cc50-5709-4d0e-9e76-f1783efac0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deb507e-51c0-4239-af1c-9419bd315bdf",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebcb4d5-10a0-4e12-85e5-60d281fb53b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea35962-1796-41be-8440-a81da4f18082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45f813f-b1b9-4d10-a4d5-4e275c197461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d5efea-a230-440c-af4b-7a8a7995e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be3165b-6dcd-4e3e-9355-7281070a8f1c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb94fdfb-b7c4-4742-a0ee-038d808b0311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e82b9d2-b8da-4835-b4a7-4bf62e06fc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3234e677-1891-4e38-9589-3c239cdc2e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49917aec-2c83-4323-9f94-2f2c555caa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cad7e6-ca0c-46de-87f4-c2841b50375b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e225448-1962-46a0-ae5b-d0cb0a323635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fd31bd-ce00-4344-b3fb-456c54e98bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b13454-d28f-47cc-8482-9c1670479335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd80047-698a-4a2c-9431-20a2cca5db5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e1bc1c-f83f-423a-b258-5dde5d53db19",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afec9f28-1156-4a8e-931d-dbb913c00505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19817f98-d71e-41b2-b7e6-caa4b289a291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6305bba-ed69-4a3f-b232-44dea588d966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e25c3fb-b933-4646-a83d-8205278c1666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a090fb9-d440-4b5f-8ceb-43cc9eeb44af",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff6b0b2-d63c-4215-bb42-304a1defff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c410503-66e3-4106-afe2-5a4edca8fac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6536d473-c6c0-48d5-abc1-488a0d6ca8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d27a10-7684-4b81-aae0-9a23afa68f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdf93f6-370d-43bf-b371-883262016b85",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7b2ab9-a0ea-45dd-ae71-522443a255a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f550ad72-d074-4117-89b0-7f5cf6869155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e9db80-0c23-486b-a379-6cbb6a0c38bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f20df4df-38dc-4be8-9e7f-ed74ea4d72a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dd56f8-04ff-4449-bfea-4292b14dd822",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31e8d19-9146-46e2-99ec-973f226a5034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4707623-e534-4c9d-af05-04d4472af88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bc6eb2-77ea-4c1d-a779-ecb0873b5b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06edce1c-7956-4853-acae-f508f9655b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dedfd5-ae01-4d84-8fe1-5f0ddd70816f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbe3b6b-8a3d-412d-a066-ceb92e3dc0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e18cd6-4060-4314-9915-c5f99d03adf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618c5cd4-b958-4c83-a96c-059641e3801e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d02c25d-f07a-44f2-81fe-1d565849566a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca75849-3ea7-4c05-95cc-61c5f2648ad1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68397e23-065e-4126-9a48-0d36436a4f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aea15fc-4a27-4c55-a778-416cd0423129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bc8b84-b90e-49d1-abf7-d4cc8baf6b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1416af6c-ac4c-46fa-a87f-b9a03ec809d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dab015-b104-4d3d-ab6f-6224887c85ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea751f5-d115-41fa-b208-2b7f04413b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ec3e9f-1d6e-4215-bb0a-df420898a96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4707292-c010-4d63-a263-40980f0dd06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d11afb87-c953-406b-a262-8c1a791af566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e62981-3619-4b92-9739-bc6c08b9a899",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b685544e-ba69-4e53-ad37-8a7ca834552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26dbc16-d84d-43e9-8098-99a41ce23e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cbb758-6af5-4c68-b95f-00b8fd2fbd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4161e907-a8bb-4bb3-860e-2188c0bc632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53474d27-dcdc-41df-b801-0d1fe552953b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb68a411-d99a-4f39-b3ef-c5e47d64affc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09192401-b0b9-4c07-8706-c43b0e2c79ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2824eab0-6ed6-4f21-ab9e-f882a61d545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b435b27-d773-423e-ae15-131f4e105900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decd9536-c1ff-4222-9c6d-23b52ba39fa5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84851632-98dd-4d64-b72a-570d03d0fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764feffd-752e-4d56-bf22-5d77c5902b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843d9e55-d777-401e-8e52-d50f3fa5079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a87aad4-c1ba-407d-814c-3144967f39c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40901e0-98dc-4748-80b3-cff2c0f43527",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a78e858-d7a3-4592-9a56-cea4d7a2c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5e4995-d55c-45cb-8109-22751b9f0a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b79e28-f83d-4f46-b63c-6675a87aca22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a050607-6097-4531-8ce8-baf711b7489f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daf90c3-3221-465b-87df-97293afdbfe2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a77b06-a90a-42a3-b4da-2d2f18379369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620c7a85-4e29-46bf-92e4-fd656313cffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e3aaf5-69b3-401b-b943-ba7443cb67c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c2ac95-e06a-4789-9ed6-777957c01189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f199cc64-39e9-4219-ace5-97ed42da7eaa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fe5328-926b-4607-89b2-9174670dc0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7455cb2-440b-4631-9874-4901bc0c3b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f1513f-a4bb-4dc9-86a2-f688e1c49e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc4d97c-68f4-49a4-adb5-d4cd3aee70fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90eb225-d958-42d4-959d-666875453520",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8b8d7a-f01d-46d7-bd9e-ef4a0753b54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9712b6-0e61-4320-9fe9-2b454cfa7b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ea5bb9-3414-47e2-a937-f2a4b72638d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06315798-fa3d-4dc9-b1d4-3786f3bb1fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c5d014-0321-466e-8451-4951c3405dc0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b65bf3a-ae87-474f-9976-08ab2256bffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6518d12-7d79-40ab-85ed-cc8d72b040a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6740a04a-5bbf-45b2-a4fc-57490ebf9ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75f9ae30-2dcd-4ed6-ae90-f55951aa96b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913b99ee-75fc-4885-85f7-a45b5c47d001",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864759ed-4b05-4b44-9624-c1c84dd57737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856b17be-fdf6-43e8-bf07-5a96e8f6caf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f8b354-f118-46da-8c7f-9a919ef77996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee38f33e-86f6-4d15-8ee5-50d55b005a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e037bd-3f4f-425c-9ff7-da9357ba4906",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deb2d6c-d456-4cf4-8aba-eb8a1a97e1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e831557-fa47-4da4-8a54-1ac6cb4ad16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3089985-953d-452e-bc1d-6739a71d82e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "090c2fb6-f6ec-4cf0-bbf0-22903a9798af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc142e54-57e9-4594-875a-a7873fe69fc4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3f135a-48ee-4a1f-b205-db0b3f95da4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0f8c48-39f2-47bd-8daa-2cba3e9ed7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd92ac0-3987-49cd-833f-9f5b7e7a1edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "035ebcda-7a36-4028-bd07-5f6afab2a9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a997419d-6390-40e0-9f66-6c46d086161c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b9db4c-8db7-4610-a4db-2171faf54d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3e2f1551-e664-45ca-b0ab-75bbe06dedc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1eb562-7811-49bb-b156-3493b9eed9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a76ccfc2-105b-4791-bfe9-3baa22c2ff5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e36a136-cbd6-4de2-b093-52e578eba594",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab342ed4-9d25-43f8-bc04-426265dc463a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbdcb57-1dbe-43dd-a473-f3f4f0f2ac92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77fa6327-dc8b-4458-9426-e690fe13bfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bf32b6-ff8e-423e-b78e-6ced5d5be8d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4226dfbf-d232-4795-bcb0-b3b959d1b371"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65ab8909-3295-4fff-81b9-31ed8d12f0eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f32661b-579c-4582-8176-c799347aa82a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6543e5b-9f00-44d9-9cac-aa11a5d8860b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23de0b9b-2cfa-4a68-b8ae-0746faab1f49"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6dba5d29-9603-4b70-a375-a26ad7d4928a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bff173f-62f3-4ddb-bc06-0faff95876e9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ae4c710-3dfe-4354-b949-8ae6ef4e61e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e425939f-49bc-4cad-b841-7eea78230c7e"
                }
              }
            ]
          },
          {
            "id": "2caa9bac-4451-4cf5-8cf5-b06bde1ada49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9bc70a9d-023d-4e9b-baae-9cc70c8d63af",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86f0c0d4-8e15-46f2-833a-821077440243",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "828de883-9f56-4e6d-a37d-baf4591a84c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcaf0924-20fd-488c-805c-8ba0da5593d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab7cb3e5-575a-4448-b676-33540b70927d"
                    }
                  }
                ]
              },
              {
                "id": "32c75767-c91a-4f0b-8b66-d80e538e6802",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36ca95aa-0660-41db-9cba-33122332d7e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a77cae76-eb20-4ebe-a2ce-aba2c63e00f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e078430f-586f-4f7a-a73e-99ea7adfa141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1a2bb1b-d0cc-4b95-8114-5825ca021c20"
                    }
                  }
                ]
              },
              {
                "id": "58c475a5-ffd2-45c1-b6d6-22d3a6e977c1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abc8ff73-de54-462d-9e9f-6cef37e194bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b85d2643-e1b0-4ddd-aeea-76c7778c2d5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9a567a2-4960-4cd5-8fd3-a61e8c8b4efd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "101fd1a8-5c38-47dc-b96c-20e6adae4d1b"
                    }
                  }
                ]
              },
              {
                "id": "c226b7e3-5b9f-4b29-88aa-56da50b213ed",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11a78824-1bf0-460b-8921-22e9465fdcd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53a4188a-079e-4a5b-85d0-6520b0012268"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c8a8b1d-075c-4d0c-badb-2dc711e2c934",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "78036a1d-5a53-4e3a-9eed-9e1788d93e5b"
                    }
                  }
                ]
              },
              {
                "id": "fa1b9940-2800-4dcb-8fd8-aff9615ad75e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3bca0ce-8d35-4b61-b143-cf8af8ce049d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f94c90a-0d4a-4116-a617-2f455a237533"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c65347dd-ae0e-4815-86df-c38d2d771734",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "661eee84-f353-4f90-aae0-7f5adf31e0aa"
                    }
                  }
                ]
              },
              {
                "id": "5c0fff28-bc94-4b65-aab9-f16bf59876a0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3dd608-0798-4ef1-822c-41d00e0cfc9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25dab6e4-2094-47bf-b7f1-c4741d1d33d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6582d69-65c0-49c4-8e0c-2dcbb652a135",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a605b1c-a928-4357-9952-ba8ae586bed8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c363b7b-c17a-40a1-9fd8-8b1b0e8619bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "767b91b3-c3d6-4260-8093-9ce23538e7c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64c3b417-a1e4-4ecb-8373-505a76ce836e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42ac4fee-74f4-4f9e-9758-0a9a16f88487"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b577d131-3271-412f-9a12-d47a8f6ee5cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8db7d817-c65f-4011-bba3-7edd8a822313"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5bffd6e-3329-452d-90af-ea02812db621",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a05c156c-57f5-4027-8d0e-802537e157c6"
            }
          }
        ]
      },
      {
        "id": "a5bd1838-100b-4da1-a73e-f525284b898b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4fcb44c7-faa6-43ca-b183-c858b9129fb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9489cd76-fa67-45a9-ad37-901bee2d3e7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b015a15-177d-4ac7-9921-fd7445f2c266",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faca38f-8ff9-4534-b7d5-ed323eaab189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb17182f-d954-4ec3-a1bf-bd635f4ca70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a53c546-3350-4181-a91a-caa673995fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1686312-6b97-436f-a79b-8d97ca6dc4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f7095f-7b46-4055-82ee-668156e33fc4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd5c30c-27c9-45b1-932c-9f790b6317a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009f4170-4bc9-4f63-a3a2-ada54b417d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04806f11-20a9-4f5b-be15-d5a89c6e5cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee931108-47c4-40ae-a8f8-c1d4495679ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914122d0-ef09-4ff0-a4c9-70e78ce3bff6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8ef5d6-9cf6-40a7-a4d0-7754ceae9949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9383a692-b925-4dbd-988b-e77132b774d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a5036a-0a40-4cd0-8ece-aa8c88100e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7983eda5-a04d-4844-874d-48eca225fe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f56316-4b2b-4745-9358-ebcee54d999c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced5019b-8ac8-4a4d-8ef9-869129a52409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f707e0f-d391-4e72-b000-b0d0f46f090f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cd8371-4a12-48dc-b461-1e4c88b7650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e788840-7e7d-4b15-8d56-1d7362e89189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556d14a9-8185-4494-a9a1-548ee4c8a56a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7127107-b303-483c-be95-44776f7f6b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc26e0b-5ba9-4220-88d9-96d3c7ed4063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e1a5d3-b637-447c-8f05-e7a19f2194d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36886285-b123-4395-8ebd-a7ab2bc656be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15f4e4b-9d27-4a69-86cd-865802832e1c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f1414-20fe-4c23-bd85-4b71f89ab1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ce8808-666c-4f4f-90b7-367c44cab7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2068ec7-4e86-466c-8132-4bb06bc88b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40e3869d-36e5-4fea-8e89-e759ffc365e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd08111f-e4e9-4ccc-bbaa-52292c6108cf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6393e2c1-7276-4dac-9d51-95788bcf106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db007d3-be82-4c1a-9a04-9da9a1c3b589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b0e57a-1966-4c82-bf97-1dceeedd75b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "35937f7c-4956-4a4f-882f-b66a63168837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1d8e87-5d15-4da4-b6b1-273fb260d760",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e48a5a-7181-44b1-b603-fecf998f38ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08af226d-eb43-4de3-90af-f1e955d81e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a59f2c-8344-44ba-8476-40e0bcde5c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d40d4352-a322-47c8-97c2-8bf3ec59faea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58d3888-16d6-4c56-8cec-f791de69fa76",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b66d6e-7aff-4868-a884-61dba4b24f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa28488-9226-4ff4-9e19-8dd446a68132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdf0c16-759d-49db-84ea-57c066421021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c342d025-deab-4736-b8ad-4ea819c56972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a88bde-faaf-4f83-936f-4c78c3a51b66",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b857424-2cc4-4903-be0a-d60ebfb6cafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61090ee8-f80c-4811-8f08-3849485acd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746b6134-eb39-4157-aa3e-db32eca3f53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e097b9-8dd2-4845-b178-5544c35c0a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb04fb5-137f-4be8-b103-52ca13a80e86",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010e3dcc-9887-47d9-8568-7991e4fbff36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b595d9-3799-40ab-a27a-ba2734759aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6393b708-73ed-4147-bdd7-05a23d9bbf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac68e13-4eea-4f72-a9da-1d4c41d8d9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edee4774-e375-4a3f-9bc6-274ffdd6946c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673bbd06-b55d-42c0-8425-58b6e7bc095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2142f6-7f24-438b-80ad-16f160279764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75636f6a-59a9-4c36-8008-a34ba1c23d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4deda58-e1bf-4ae6-8e9a-a5aea5b87f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ef3edc-2cd0-4a91-b6fd-e1bbc4f7138c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7996fc-86dd-4ca6-aefe-c76b0bb94d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08b32c3-97df-4a12-9b59-16e07ab3cf8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417e51e1-bf92-4e3d-948a-a93ee07f1868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbfa48d-46e0-4377-ab70-59037f25f11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76848aea-fbe7-4d8a-bac4-88ebf57a8376",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0d7ca8-a31c-45bf-a09f-09836014a8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2645697c-c6b9-4a62-9a22-b2df189c339e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0274cd-a0ad-4251-91d5-2b48ff780239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "968df818-0ac6-4e4c-b099-ea04895fafd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e16ac2-04fc-4ee0-8247-c9589b546f52",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dbb4e0-c131-48ab-a42a-74015480e92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef441185-e5da-4597-a4ea-4db7a00c3c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f52511-d2ca-45ca-a821-5e5887ea863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f0b7ad-8189-414c-a66f-f712c6bb954a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80f225e-ef22-41da-abc5-8b90e15bac40",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21972f5-3682-4255-815e-d28ad1d87abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f1bbed-0f10-4c63-a302-10f6c9d4876f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b053f1b-0a4d-40b5-a54a-ca7b443f7083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3396401-c266-4900-801a-7fa0bb0a4e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2c16d2-7ecd-421c-9f72-20de206ddbec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a2f442-a6a1-4000-ac0d-1500d288fdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e13d2a6-0674-4e2b-ba2e-c509aba19922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "121cbc9a-b160-4759-ad39-1a66a635855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "954ce98d-6a43-4a19-9b45-69ef813bb005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81948a95-e433-403e-bb62-41fe5533ee51",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7bafdd-3c28-442c-81b5-48b785f528b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8242d05-2856-4a7e-82d5-29c39a3725f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee731efa-47bc-49fa-9793-3b586c60869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01cb49e7-d7df-44cc-8bd2-5131c85eeee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a39fe3-874e-4187-b8b7-4c0599a6a518",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b98ec8f-0e04-4593-85c2-f0fa8738eff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75054307-61ef-46c1-acbf-7b02f82a0aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f7883b-d701-47f9-b223-2a578d26cbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24085429-25c6-47e0-ae9f-7071be15861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83565789-a0cf-4abd-9e6e-a31dfd44c2c0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079f30b0-1873-4042-9156-a89a29d2c486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71199078-9d19-4a64-ba5f-d786d8b8815c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bf6b17-fb27-4ffd-a3fe-634cf59c7a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f37514-2fc3-4676-8e5d-1462199550bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3290e37f-f075-46d2-871d-928291af39a4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b99d35-9d63-4fdb-a3e5-1a5d1358caf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9dfa352-2858-4749-88d4-577baf105794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1e8fc9-115a-46d1-a2c7-07f8a9689d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b421fb-c32f-4d77-bbb3-07407069d28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a57c19-9ef2-4d41-952b-b546dae08504",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b606dc-1055-49a2-91e6-d02f9fa279f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cd3d8b-758a-4a11-af8e-6d6a7ed5eb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fce555e-cf2f-41fd-bc39-3b70e7bdafb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab72a77d-a767-457f-8b2d-a02e3195d74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7534a4-92b2-4d85-9dac-33ec306f1db2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885d75ac-e995-42a2-961a-c170d508f339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd3c79e-075f-4e07-ba77-3ea570123b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def21bc9-ac7e-4217-b5b3-5c41499abb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "136ee25e-897f-4161-8509-b916196db6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eced5d-1bc0-4efc-b559-f46e175b3187",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11452b78-9677-4bd2-9670-23b2f3e100ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ad7035-dafe-44ad-9f0a-b0130134a963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d0153a-a163-48d9-a5ba-c83c9ad1db87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dccf38-8d43-4409-a029-9637a5c9c46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961bf500-c010-4f89-a300-934d7951fd0f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce29c917-77a5-4390-b766-900d41cb94de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237268a4-42df-447a-a530-83256c75c395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3ead84-a54b-498a-aaab-e7deaf851bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbb18be-65f7-4389-945b-7f64e21819a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6c968c-e13d-48fd-8431-13e858669267",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b50f670-71a8-4f9c-9a23-fd587e4bb852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de54562-67a3-4a64-a336-0d3b8f0ef9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a7dfb9-9a70-4c1d-8972-1eb93808892e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f663b05c-2b4a-4858-b3f6-6b0c32d4f134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec73e16-3fd6-4e3c-9c3f-98c0c54fe7bc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b25b2f4-2e5e-474e-b87d-ac5cd81c4fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e0c5a0-035d-4770-94de-3d84d969c2cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0497117-e1b0-4763-9db5-b921eeefa6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71ec20ce-bb3b-4ef1-a2b7-5b14f0b288b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b47b2-4faa-4052-b375-8376f474ee6a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb99484-16d6-418b-a4cc-bfd129e0b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d932e210-c093-4ad2-b7a4-086b1be30bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2e95e0-dfbe-4b84-9ce8-de0b240f03e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17c9a37b-8630-4986-a87e-f240e3bf124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a329c2ee-a971-4b79-a8e9-43fc8ad7ff00",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef19b9-c65b-4087-a5e7-253aacc43adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644fbd5a-fa9f-4ecc-be87-0e721aa1451a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b99711-9c2a-45b1-bf64-3771fb27cf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c753e675-771c-472d-852a-d3f425b97377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d228f4-39b1-4c61-8c83-366cbf8c050b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232948ee-7812-4317-972e-d3ae3668f763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b2bfac-4709-414e-8a4f-bbbc606ddb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297f183f-832d-4e9a-bc3a-f56a479be308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd07a32d-b0c4-4624-af23-929068a0bfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8d3d94-80ab-4d39-8b2b-aea3efa18232",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b27b0c1-28ae-4dc9-af2e-87d2110a3617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276dac22-fae8-49b8-83b8-d0718b494b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a519abe3-2105-4c19-a0f6-4fda171f806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89543849-0d60-4914-8e59-e29e03fe636d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bfd42e-8894-443d-bdeb-c41fb4f64938",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190861b2-60bd-4805-aeed-11f2e0c68f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3814aea5-b37d-41da-9db3-eaab9dd4ba92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c57dfa-136a-4bb1-b004-3bc963fb7d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0099651-7faf-4330-b80f-8b52f87b9d71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1324474c-740e-4679-b20f-8f2dda4cc2c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f3441e2-5c03-4216-8ac7-9664416a0d1d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fceebe-2b02-4095-9d8d-a6f75813955e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d19954-8818-4178-884b-b73e1b5e76f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd46c7eb-0150-4d32-9013-d049debb8447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "826ab621-804c-413e-98f5-f18acb559cfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b18e736-bd9c-4b84-8432-d66efeb7fec2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a765b4b1-79eb-4244-bb44-2e6084ed17bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5516fe9-0c0a-485e-a421-495ba99ac844",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6439e52e-5ffb-4b02-a760-d8bcafaee2b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "585c4d28-1797-4120-b208-944db5f7f7db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f403228a-d23a-4295-af22-42af6699c074"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff852bd3-39b8-4d40-a11e-af449eafbf84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d082ff7b-5493-4228-bafc-97d619d26d10"
            }
          }
        ]
      },
      {
        "id": "463d7d99-387a-48ae-8160-6117f27aa836",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cf4b1355-bc87-4f26-92d0-9a0b7e795ce6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d012088c-be74-44cf-9c7d-179ffdf04854",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dec724d-05d8-4bd1-9c8b-868977f57570",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ed7513-8346-4c04-8e16-65b05f2049dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93eeccce-2d7e-4c28-8f6d-b51006b82998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989ff08c-da6f-45c2-87f7-292f7e7fee92",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b85993-d8f8-454c-8fa3-c7865ef2467e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606fd6c4-3ab9-4470-a0e7-7257f0c97471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02d282c-147c-47e7-8971-8390990af108",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2c55e0-9efb-409a-b5fe-2d20ff5f299e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a6d136-f2df-4268-b508-ba7a01944cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb750674-df23-40ea-a937-d84383359c78",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef5b64f-eead-4cb2-93f6-1522c2aedd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f3bfdb-4916-4519-b50f-4b3eedcf7385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee69ebe2-0d38-41a8-bec3-455019f15f60",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f167bda3-63f0-44b8-90fc-9d53b02069f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db78543f-9521-4ef1-a031-49ef2cb16fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c9034a-d964-4ab7-bcef-a60708a958fe",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af10f592-e848-40a7-acb1-b694914ffb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065e1e4d-4a35-4e4b-81dc-478be71c1be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea507d3-c629-44e5-bd16-163531712fe7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c32299a-7110-4293-98c2-8ab2baed843c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5600e0-eaff-41c9-8687-7aaf2a99e756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720f98e9-d0df-4d69-b13b-da41127b5d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836c979b-ba55-4cb1-b153-b7078f116e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37818a4-ccee-4b3d-b327-b552eb19df28",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3891ea-3cd6-45d5-80ad-291e02cd3e0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae794ae-e78c-4184-96cb-85d48e754d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97041ea6-ac60-4b5e-98dd-59255dddbceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c382841-b93c-4506-b504-2113f5c47563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90541035-f90a-4dfb-b1f2-ba09042a07d2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3df3ec-d1b5-4fc1-a859-070a2354adf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea8a028b-f45b-4fd7-ab7c-a574028e21ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0b763c-bc34-46bf-b27a-b05459f240f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8236a904-c00c-4f16-ad63-379d5415f4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9e8281-bbc4-4a57-ac85-036307904622",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8ac0f4-fb2d-4049-a08b-50425d221b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495c3abb-4aa2-43da-acca-02a6587b4b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd57e580-0cc6-41e7-aef0-60769cec1ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e1f043-430c-463c-a673-bb77c118e495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d444c24-7371-4c5c-947c-c0d8b0ef2ba0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60e4d67-9daa-4422-8a90-d34fdaee9805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbdf349-b421-400a-8472-100290be4ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f016543-b49e-4176-8d2e-6bb200fd06f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b28219-73dd-4ab4-a449-6a196e8e1ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b30a032-ed5a-4c1e-9151-72b074d19c7e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb3a117-c5c7-4bd9-8ad5-fbd5176e7a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74c0dc7-d468-44ab-86b7-3c43634253cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9608d5a3-a5ac-4a73-a9f7-e1d23a19deae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95f45a1-ace3-4573-ba65-71778710fd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f907a58d-ec7c-42c6-b2d4-aed26039fb38",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8f9a13-c4ec-4cba-ba34-ff65d722dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdc8ce8-e266-4e5d-bc9a-f4dd42ead811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085cb875-9de8-453c-a67f-b6d28b713210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1483497f-2e2d-4646-a949-13ababf85eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3487e294-932e-4bdc-b6d4-ddceed75cb2d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4154aa20-5329-4aaa-9cd7-f1d5506216b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "975f22f2-03d3-479a-bc6b-b98e3897c701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b238e997-f556-4eef-a86e-ae94608b5ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fca81a9-d049-4950-b2d6-43d586e541e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda4a046-ffd6-49a8-a4ac-7c2955d7f036",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9371e6ba-0922-40ec-9cf9-4ba7bd4fa2de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71946252-de51-4d3b-bb13-cb46affb7694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608cc795-5e6e-4046-9dcc-a9922ea27d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f61d2f-b17b-475f-90ae-145d4d1061c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6829fe4-4aae-4581-8e90-0e672378dceb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed77dd1-09e3-4072-bfc3-df78cd5d0cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a44c532-5ed5-4b8e-be38-712d50485b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a236b1e0-e987-4d01-af69-146c2621fcf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1501ffb-de22-40ce-9c2c-7b75fce6b89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3399d043-c5be-40ef-a160-39fb789efcd8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9199c573-2521-4e65-b69a-ff5baf2f637c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9b7fed-a9a5-4b4a-942b-ab4b757563fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43264d01-53de-49d9-95b8-f5ce1208b9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cf512f-6f04-4bf5-b4e3-dc58aacab1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae458930-0b6c-4aef-9890-50cbbc337d22",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f39584b-88e7-4e83-a289-dccc5b30896f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0564308-7aec-4320-b7d7-9c0b6ee8c9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa5ee2e-64b1-4b30-a4db-9fb7f5c1005d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8189a5-9512-460c-8b8d-e8130ac68015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71765342-42cd-47ef-a34c-9c696df99ebe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5b34d9-f52d-4938-9332-d4fe07deeb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0090d5f6-3993-47c7-9b7e-17a7e54513ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d68bf3-8a4d-4c5c-a118-9c6f9f782c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed3b5c6-41b2-49d1-8660-5ee2c24dd0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a498737f-1bb5-4db5-8107-fd247559511f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb6b959-79cb-4686-89cc-13882e0d81d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a19988e-3ce9-49aa-a3e9-5e54049da510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5fae80-a56e-4d75-a666-85cee8ff921e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839d5b02-eafc-4bf2-a02f-b13ea646e86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec018de-c97e-4c3f-bc67-cb1a7adbd4c3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a3f761-9c86-41a7-9f8a-222ce7420255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30cf819-493f-4708-82bf-a3f684931032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a286c9-b483-4421-ab5b-a44d60320da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7607c20-a7fe-4dc1-8cdf-730a7355bc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c6e379-66fd-4bde-a790-9da2c3c54333",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34038324-3f83-4353-bb51-fe719243bcfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87a0aa8-e296-43c5-91df-de4b72b3574a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814cb62b-51ee-4374-bd66-4cbb928419d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814b8371-5711-4116-8355-8972f0a94b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f8afed-ce12-4980-a1dc-be765790dc72",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a051e70-156a-4a0e-a00d-cb98c084f270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3aa691-4ad4-45b3-84d8-c9f3d0ee0578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61226720-4877-444b-ba5c-19fe3acc2c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ce317f-20e9-49cb-853b-06dc9b69a474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c907d701-084e-4d37-acd9-213dfbaab468",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56deba7f-8f3a-4202-867b-5ba69eb0fc9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a386f9f5-8bd1-4f5c-ad50-f3e28359e3fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b92b73-b4db-43f3-ae48-6de895b7b575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cf9c14-66d8-4edb-8767-d6c458ec7907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1afb63-1504-481e-a477-912308fe9ea7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fea8ec8-7872-47f4-a552-993b39168e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e74970-c9f5-434c-9cfc-e0703b8cb713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b85180-40fc-428b-b710-3b2910e4a94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f441a998-a0c4-4b3b-aa0b-348a6b87d498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9950d4cc-6820-4015-aa4d-0bbb4f714931",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0425cf1e-9430-409d-9c79-d72646758931",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d176b6d-31b1-4640-8707-4d551ec93aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3332722d-d077-4197-8eba-b9ad8eca1953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991a9f67-230f-4c51-acae-5fce38f37923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39490a48-a0b3-45de-ae7f-e2cca9c8cf99",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c37a395-6dbe-448e-887d-b2fb487637b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecbf2dc-f395-491d-85eb-9842c08e666b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e46b0-6bc4-428f-a45e-d0a914f7d286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfd8e55-f39a-40a4-84dc-f65f5ebaf436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738d2108-05b4-44ed-b650-60ceb2de3372",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c48078-42da-41df-81e1-faf54ac9ee73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd75223-39a4-4cbd-8d71-663f5c957653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f1f63c-4d7e-427e-8d66-a995f54f8d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10357e96-13b9-44df-94d9-85515f0be137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d0cdea-1cad-49c7-9449-1e2694bb21f6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e38607-3f1a-4f41-b55a-12a23ac9a272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6231d5-52fb-4c50-9daf-61050dfd0f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f968484-67f9-4315-9e3f-ad7bf29eabbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6ce57e-b7c8-4631-9b85-bceb4d2f133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7460a810-41aa-456a-ad7b-a31959f18328",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c46fda1-f550-4888-b47a-d5cdb1f532d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4247e1-2853-4bdc-8fc1-94f0de3d8f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4dad15-9969-429d-adf0-71d87a51eaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7f3b14-6192-41cd-897f-bf8eed74e4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc812f73-aec3-4ee3-83ea-7ed32bff7b05",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d0578d-2be4-45c9-98f0-09b834277342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eddf4ad4-d29d-45ab-a573-0384734efa48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f3747e-89a5-42e2-b554-c60fe5158c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97915571-0a4b-4cef-a442-cc7d13f6fa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91fb023-5ee0-44dc-a9c2-4c07a8c5818e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97427aef-7bc6-48f7-ba6f-dfdebbf7705d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ee4bde3-9a6e-4272-be09-b2baa1324636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9332c016-5807-4332-98e7-ce9bbc63b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a83d9a-56d3-4d04-8e63-33a14f30c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8046ecea-e1a1-43c1-891d-541392169f2a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ccdeb5-8505-4238-b54a-2a2e0fc8bcc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2163bb9a-72ef-405a-87ac-863c29a69664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e2bc33-12ff-489e-99b5-2b6dc120bc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b37e9c50-51ad-4098-a937-d0d21c46cada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b47935f-94cd-412b-8054-c2f9341e1dcd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99ef584-64c5-4842-96e1-3bf4db102e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cab3e05b-0138-41ab-8c0d-0dd182d955d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6291fc9a-0e3b-4cf6-a1f9-9e3d3e3c2896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb76ebe-1fda-418f-b73b-75089913ec2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305557aa-3953-45dd-82c0-5ffd65489cdf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99730dc-5a8c-4fd2-baaa-bffd54185559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3d321b-1e83-4168-b5ec-407c0f239096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c842416-60f1-413b-8588-b0a5caca254d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59db0350-5364-48bc-a8c2-006ff5c5f683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ba2f4b-d274-45ec-a01f-2c4a6b57d1a9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85a6d0-4b96-473a-9c66-1692b21aa76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b55892b-a70e-40e8-b0f0-7536f9c5ee58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d088d736-8803-4f7a-9e65-fe55191033ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fabcde-0bc9-46bd-9e85-97b4c91830d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66346bc1-b037-473b-b5da-007939f55e9f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e71a4a3-faee-4e84-b299-6e47f0dbef8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c80e59b-d08b-4063-bdb2-3bb8d736e4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa8d491-157a-4c39-9cc3-e9c21a9cefdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dec042b-fda2-4295-8dfc-cd6eeaeafb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d970325f-bf11-4b97-875f-c7cebedb3d49",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b9e679-cc0e-48a8-83b8-e72932d2fcdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78e2622-5da9-4208-996d-84abdfebe82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bd4628-de56-4bc1-a905-2ea0669a68eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c59487-d6ce-4701-886b-430000edfd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4393ebb2-d71e-4968-83c3-2c1e3b56ddee",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c57433-ce6e-43c8-8b0a-2e487098d740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61456c8c-96e0-4c62-a969-d8f1e9915d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03af632d-1ddf-48a2-ad72-053d4f825ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f4bdb1-4d05-43aa-b560-2d16c23897b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f3c256-0c72-4624-8c7f-386f5cfc2652",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5724729-20ba-4b75-b62a-0cb624960502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47129d4-7d00-4469-b31a-e6a13f785dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b144d44b-b4b5-4ce0-a597-1ec2a267409e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd22fec-d008-4986-99fb-a6eb431516e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc15e7c7-f63e-425e-8fa4-dba600e5feab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bd5534-00c3-46e1-8f11-5b85d0ee5e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84534373-028e-4b74-9f2c-affb584d4505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d17697-1f47-4053-8181-1c67cb3a6abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cfd2f3-5ee0-4434-a0a0-91ac317a4d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9517c3-a1b3-4f7a-80b1-76d4155fe070",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ee8dbc-e5f6-4d38-84f4-627e6a1dc0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f09cc68-bdcc-451f-82fa-985d1fa8a6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11a7307-f245-40c6-a697-55882fb9facf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c8df4f-5954-444d-b235-db6df63880dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23d3181-eedd-4b00-b897-ef22bc88d16d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0daaebd-6615-483c-b654-dc7d88a2d821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9337bc0-7047-4bab-86ce-67b0c331da2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab30672a-5e10-4fc0-a8e3-2287ae985d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170c3e29-5ca1-410e-b14b-76034792c204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cea5b5-cce7-4ad1-853e-bd1d94b25c51",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373f093b-3f5b-48b3-a33f-1431471e50ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8a2c0e-c3d5-44e9-9188-337c087902f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7b196e-67c4-4ef0-a739-6e00ad037fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff263364-0d91-444f-a58c-0f786e0738c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3a86b7-d63b-450c-8315-14d9867bd376",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0224b165-a113-464b-96f9-6a416c587049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ded2d90-1aae-4117-9995-31fecd6feaf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222aed53-de0c-4b15-8d94-3aaeade6bc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541e4c61-8cc6-44d2-9f35-8de469133734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e48ba9-c14f-4e00-97fe-ef8f91babf49",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8682ccca-fa5a-4932-b4b9-c84dcc6e1bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94da7cdf-c7f6-40c7-8c75-3fe5362407fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94650c70-7da4-4e3c-b303-9ba3959b2a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d636c8f-a122-4ff7-a998-e75ab1d37c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aee44f-26bb-493b-8b47-8f9954d24e5d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a769b4b-c278-44a0-901e-c43803b729f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30655376-97f3-47c4-8ae9-d6a78a86e785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab3a84c-04a9-49fb-a135-437562d038ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c17abec-6cee-41ba-9739-24852c4b1010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7816b9-57da-460f-8145-1c581b8a1162",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8718da33-44d3-4ce5-981f-a7165c8e51ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b311f59-3acb-4750-9b38-650a87634732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c217eb-a495-4bc3-93f5-958b02e75234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7bf8c3-c0dd-41fa-abbf-909052cb50c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5b411e-f996-45dc-917a-67135e9ddbbf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bca623a-d842-4cc4-92b7-9fae3d077b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595f3bf7-f96b-4dfb-857a-2cdd924ce6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9337badb-194c-494a-8e31-af59cb559503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccddc6e6-5cd4-40e0-a368-37d4c2f239b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591a5378-e656-42d4-a83e-93b3c32484be",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34123a6f-6715-437c-a403-9aaf6b098bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f196416a-e83d-41f9-834d-c992e9963ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3969d7f9-9468-4870-ad50-4b67c26f427d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3c999e-de33-4864-ae7d-eeb54b95dba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468bf00d-0a8a-4eba-b047-a77177479261",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebf261a-157b-44f6-b3ff-d7206de1cc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c95bc8b-b576-4865-88d2-d5ca93041982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dbbc5b-4e96-475b-963d-729de366f3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2563cbfb-7259-411d-80e5-c396da949803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86184cb9-5119-46e1-b69c-a7708ab3f9bb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89dff2a-ea48-41eb-bb85-e4fa93e825c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc66477-a8ae-47f9-9587-c5f3706a8fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6436830a-aa96-4ee9-a049-f39d439e8a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ba8c181-bed4-480a-974b-8c440037dfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd3202f-c62b-4376-b8fe-847e146548af",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0793fdf8-6d9f-41d5-8162-27a3a9b32720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494065af-fb35-4f86-8e30-0981d3dfa345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e4bfc7-5fa0-48c7-97be-498f035739ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a1f9d9-9875-4f0b-948b-17e4172100d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0913f31f-3fbe-471e-a62e-061b3982a5e7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66bd71a-85b0-42dd-8615-10a0a75af4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f1b7c8-aeac-4b6e-aaaa-f6807cf2004b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a238fa2-54e6-41a8-bf9b-fcf2ba91d5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ace433b-3afb-4304-bcff-ae597164cab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16a2560-3842-466f-bb6e-92fed711d4ca",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f73d9c0-5b18-4281-8e0c-1fb1b2f37344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904b1ef0-3737-4b36-bebd-654f9fa12b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0252e4-eef4-4e05-a7be-a9a95202816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f179da1-aba6-4bfe-ae7b-6c946c0ce363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58b3e86-3729-4474-b8e9-dbf876410353",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d856a14-eae7-42cc-b1e5-5f81039c82fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2d2f47-cb89-4dc6-bceb-bda03378233d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da62f32e-8d43-4a8d-be04-3fa0c1fd977e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de056e62-5611-4b95-8289-02a6b17bfee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c202eb9-8618-4ae7-9476-c736c048e3a0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35a1417-66d7-4d9b-89ba-f19e2c45507e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bec2022-033e-4cf6-bcff-99187e99ef5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afb280a-8a85-4b79-923e-b2cd01f1ec6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59f4ad6-f89f-4a3e-9307-f6fd01b9c018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926b7cb2-dc32-47c9-b366-18f8cf538e9c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc12f31-9dd1-458a-8b45-8698677838ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d669f5-0176-44d1-b3da-7e58be299076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6687c5b-d1de-414f-8d3d-ad66b774d47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c06db1-6857-41e5-90e5-63a3f2af44da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4490b3-4577-4e30-a1ef-8c99a38094f0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81bcb99-bfd9-4218-b7ae-6c6ab7041368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9084077a-ef31-4915-ad97-201e553b4469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab02b876-213e-4d01-862a-f1ccbca1655c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df6a5a2-cd2d-4412-a62c-2074ec84c790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2956a6-d941-493d-bb67-7eb12d2b98c2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14927b83-4aa0-42a5-8522-85adb54d787a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460c1449-cdfa-4004-82be-8a276e99ab82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ab7c32-37fc-4cee-97e7-be10ca619210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bf51f8-4386-421e-a368-2d18cfa56bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6f61f6-1633-4cf3-9202-e449fe70165c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96400c95-9ed2-4ba7-956b-12e27e5394fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdca0233-bb8b-405b-8e5d-c13b8fbb82e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca73e5-feb3-49ee-a9d6-a1a43328325d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e788dff-70f4-486b-ba87-63b647346935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da149b3b-3794-4259-a1dc-0459ef5c3bde",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c925c00e-75e6-4174-b9e1-7d5982c9f0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eeb2086-e158-4140-af8f-69ae724623b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13653fa2-5b00-4fbb-ac54-a4defcb743c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76df8445-6de9-4b70-bf70-613d02874b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4591c2cb-5f52-4502-9105-f59305f50057",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cb11a3-4d01-418d-bee1-8e89cbac33d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa01ad69-b97f-41f9-898c-da484520eaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca47af9-9a9f-4f8e-97b2-bd9b3f73bee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45613366-860b-452b-aa94-0f1b86300f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5347b0bd-fb75-4130-b76a-4e142b66a4c2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4b3694-1c68-4f72-9ef5-f2627dd568f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a225b757-c7e8-46ed-857e-c23af80b4901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbaa351-ce89-4d61-be63-76e9c1bd3e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f80643-909b-4dd8-8942-94a307b57e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb0a8da-3829-438a-99ac-79341b277375",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05951c7-2a6c-4e33-88db-e5fd51f7db0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf9011f-05b2-4703-9bb0-bd0e3501840e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2883f087-cd39-47ff-b8be-c1ad7e32bf08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5045a86f-faf8-41b6-b62f-62d14c23934d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dea7fa-d106-4d4a-8d05-687d8716ab57",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51940c00-c60c-4183-ad1d-1d9236333a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1e4ab7-c56c-434b-a62c-5649c7d9f731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a0133d-971d-485b-aebc-b6ebfa63cd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e124f9c3-422b-4639-a06e-730c4f6c1c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31cc9ee-a248-4b9c-93ce-30c0dad84e79",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3550bd28-52fe-46b1-bb1e-3229c0dd4b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7508a76f-5330-497e-8724-d20ec587a175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4bc75d-b1d0-4600-90f8-8b4edbf9995a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4931796-8c78-4d3f-819c-3f2dbc6b492f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6b8d52-e40d-419e-82a8-e12fe3276c74",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a415580-2f39-46a8-bb52-3ae283cd88a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94c5979-82e5-4360-9f33-8b20c50ef1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3f53c4-cc36-437b-a9b1-17adf5971eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b702c4c8-bfeb-4887-b56a-ed1d4908fe5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be5d25d-8f46-410d-91d9-b22bdabd9ab8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abc2905-ff82-4c48-97d6-2e95dab5927f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0beb9492-9392-48d0-956b-23f5c7dd7f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f51de2-5a6d-4a6d-ac1f-1073d2b46c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4a4825-b80a-40b5-9e55-641fb36bd9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10909085-64ab-41bb-9b6a-9a1dd443b768",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a934ed30-0de1-4115-b716-6e8b6f6e90af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "886d99b5-0e1a-4014-a371-2a1a6c4513a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956ea234-587c-4674-a3fc-35900b73acda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c618e61b-8dd1-4e03-93eb-1ff9ed0c32f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67aec006-8ded-459a-b709-f7d051ceb3b1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad91e5d8-f5cd-44e0-9296-7b8a0befe4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ecfc93-fe0f-434a-8e58-715df546b186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2beede05-e189-42ab-8990-2e514e9ec6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0d70ad-a6b1-41af-980a-51d2f1540429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2067e13b-c95e-4267-a573-98c96b5b74d8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f56db8-4b59-4a53-804c-9cf24358e49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f508f44a-be68-4937-be79-1e2096d261ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f14fed6-cad8-48d3-9f85-6f3d3c9a9deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca740c67-4ec3-498a-adad-572d1beb5678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0144f8-c6ae-44d9-b10d-b523d1d39c63",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9c73f0-a770-48db-a114-7e8a4fb20460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cfd559-c936-474a-a1be-d323385974fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af60480-6099-43cf-8dc8-7dfcaa3b6faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc7060b-9f8a-4308-ac99-b3659e0e7b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971295d0-9f0a-47e2-b865-a7354ecb93dd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0c44c0-75de-4edc-a2b0-24b84c2ea17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2832ad0e-6a59-4a7d-b639-1a3bfe8b4fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b356b93-7365-4fd5-8f1e-187c445ff8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0229717f-d591-40d7-903b-2d6bb314f87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a38036-e184-41b3-9ae0-4b73e047de44",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea624fb3-c6c4-481e-b604-4d00d19ef5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83732084-d0d1-442a-80e6-8dc7e0f49312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edbae26-4e3b-4d6b-b1b8-033f24dc157d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97729828-6f4c-4072-a9d5-aa735500efc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8f58fc-8154-489f-83ff-734a23ebba69",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb0f192-b0c0-403d-950b-d16b2e0bb3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5247e1b5-b236-41b8-8afe-f6f6d4f26188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f64436-101a-4f1d-a0ca-71d2a12569e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4a0994-be39-40a7-9d0c-349e8339673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01214cc3-e40a-46c0-8511-ed48cc4c28af",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71e8e03-3cd0-4173-a31b-4a8758ba54f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "795cdb9c-0a8e-4adc-b122-a980a7cf87e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e3318d-39b7-4b25-82fe-8ac0ff79cb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ebefa4-2776-4420-a2ba-6038847b497d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffa023e-c562-472a-b69d-3cbb156474dd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4742166f-1028-4075-99e9-4f9d519e0cb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "774305ad-c0a1-40f8-9edf-79e83b25a5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba2de5e-c486-4c6c-b643-37dbbb74fb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93524fe5-a332-4909-bc7e-f222ec9afd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f3da50-cdd9-44f0-90cb-2327ebcfa61f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45874a81-1648-4b3c-a2e4-86d803fb1778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4afae2f-82fa-40db-9672-37c896d5afb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcde963-c67b-4cc3-909d-963a6484e960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f97731-5ffb-4f9c-b451-0c365feddeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5d5f4e-4114-4b90-a35a-08947f693eff",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ac1c87-1f3a-4c04-943c-27e5db1bdd0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e13b365-75bf-4cdd-8648-d69c210f79e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c10681-e5db-4386-aa18-ddeaf9925ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9e0688-1272-44ea-b7e1-75e2687306e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d4a83f-7f66-4013-980d-e62b74e43de4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799050c8-e4e7-48ad-9d51-1e7d6b8d32bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8053a5a1-a6d9-48a3-84f4-0e0021d51302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087be50e-7540-4eb6-a4f1-97311961928f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b568f22-6b24-4a90-9e43-a5828518a43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e3b43b-a18d-4fb7-94ca-e224b7dc3898",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9427e70-0faf-4b2d-9ad5-ab393e6ffec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ed7cc7-4637-4f8f-96d6-7144ad538e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e3fdea-1adc-47e3-bf64-956ce4111655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7816f978-18a3-465c-8861-05fc7085d996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aed35f-32aa-4b10-897b-ef1512677499",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b1cc94-8459-49fe-aa83-ab2343cbd986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ca7bd6-08c1-48f7-879a-efb7023501b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8363c586-3d02-46ec-ae0c-20b0e74b2ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebab7d6-1fe6-4709-82e7-d8d6475102b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5651fa4f-5651-4936-ab0e-59d1de241309",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc306f0-4c20-41ef-95f0-5b72e4aebe30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1f553e-cc58-4c08-b782-0679d7a4c841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad63860-c44c-4a48-a394-3b18653e893c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c341c3-13de-4b06-8736-f259acaafd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282103d6-f223-4a4d-ba00-865b5c31d91d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4133c3a-7d19-498a-a356-35d52ecee256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a36727c-bc14-4107-b7d4-3c4c5cbb5cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c904cc3-d3d3-4e87-8a66-2b93b07cd97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9400ab-5aec-489c-9d81-3a61a2445f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415df9f8-f01e-445d-a5e0-5b7fea3a9515",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4333cd46-361b-4ce9-abc6-e571b83a363a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d3caeb-e1df-44b2-8a20-884461358371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28c1ae1-f6ae-4065-972a-5088fd025743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11df2b2-9473-487a-a3fc-2fab51fa030d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b04ca0f-b210-494e-aae9-de7132162eb9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940870fb-c0ed-4909-962a-f55c26016d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e1a3e20-db0d-4843-9127-dcf8af03d74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb26a36-26b1-4576-99c9-c11e719446ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a423653b-eff1-492c-a7d9-814b36c55d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda6bd93-0211-46ee-941f-1845ed82780e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945c531a-af26-4c01-be98-31d0b9e29528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45474024-75a2-4f9d-9eb7-e479fe843254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec9bac3-ccf9-410f-9430-5f7ec9d8d9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4eaa9c1-126f-4ce4-ae46-07d164554180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230301e0-69e3-4185-b58d-46dfcb595505",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b916608d-0d03-49f0-90f3-c4b0bf85a213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6586a0df-0cac-4b01-b543-53aad85d93b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4e4cb1-cc5b-4f12-b4da-8978564d68d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172fac89-67af-440c-ad6a-4b255082e88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b37f99d-1cab-4615-9917-026fa5e4cc2d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188ce470-ba38-4676-9712-e26342a68d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521ecc17-813f-42ee-a096-0fc73478005f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de42046-c16d-4997-bb5b-12ddf2c91a22",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5229f04e-a9c6-48e7-ac72-78408ecaf5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48339b4-d78b-4ba9-aa28-5c29d6d7c0a0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21db2044-2023-4ff4-8a25-d7134238b2e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8dc31a-a063-4ca9-b7d7-f3cc8e4ddd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6f1edc-1c63-4cb9-b47d-443928ed2cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca364629-677d-41e1-80f1-2d1d90edb69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5583b414-76db-4f8a-bb8a-56abd8984e45",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1988459-9ef8-479b-8a3c-d19c8aa6ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f527432-d9e4-45b6-8633-ae5d5d09724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5181432e-9123-4332-970f-92eb7b063fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ed1bc6-a600-48c9-87eb-c7bdf70a300e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d259e5c-7478-4533-a5fb-2c38f7bebe67",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a31f393-21e9-41c8-bb18-cca98e182266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d5f4b3-e6ee-4827-837f-0d12583befe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4f2d07-9262-4790-8923-d35cddd9bbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7aba263-c293-4dd4-b356-fb57bb5eb765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e9a8fe-8644-4d0d-a801-08303523c474",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85e8f68-bb7d-4bb7-b248-7b4021293261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48584e74-ec84-4f56-b0ed-7e733d733fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f87f33-0438-4d23-860f-d4f5601f4732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eed39f4-351d-4635-98b0-b269618b98b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc239f80-8f36-4fed-aa92-97fe648b1b63",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf373c6d-2dd7-42c9-a2d3-f3b15ae1b890",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7d34aa-1548-4cb4-a103-7b433171b604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf653398-9e3c-4545-ad39-8a280cb5b619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d741a248-a486-43d6-9b7c-550b62c0bfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1add900-9dd3-4150-ba96-460c08cfec5c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb7cf9b-9138-4c5d-b24b-f5cd41ff75c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca20223b-2e24-410c-a888-5264f7d2dc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d662d0-c554-4477-a6b2-308ca75577aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2f208d-7880-4e8b-86ef-2fd360dda02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90557b05-085f-4633-a19d-6e46b84fa48c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795fada-0a6b-4bfd-9445-2b66af026d2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1134cf8b-d426-44c5-81ea-5cc52813c398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2603cc7-9c3d-4a52-9ab2-abd0ca5112a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a34da95-6c18-4b73-8ef1-a017abee10ab"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "295ad24c-a6aa-4805-b2ba-c18b01de5936",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1e30525-31a7-4862-ae67-2ebf9c6d353c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1f581f9-9b69-4f6c-b80f-0019cf88195d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cb491d1-8650-4be2-939a-7d3bc680160a"
                    }
                  }
                ]
              },
              {
                "id": "0666ce57-ce4a-40be-9b58-928f407791f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0effcbc5-6c8b-4f93-b069-c55c3aa351c9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7798b7e-8042-4883-b81b-c7dbac908a5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "837f9354-335f-4212-a86d-fc33b1496cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6777d0d-581a-42ef-baf5-7f2b8ee1ed55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03f5ba83-1434-40e5-9ea7-5a8857a95979"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d710d84-6365-4143-b2ce-e227859fd8f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20e80daa-ab78-41b0-97f5-9dc87350d12c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4df9118-ddce-4728-9c84-f677ee386a1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a77bf50-f0c8-40e4-b206-6243540b1824"
                    }
                  }
                ]
              },
              {
                "id": "ad9ea262-d8f9-4a76-a1b3-5aa2aebb5062",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "aa05974a-7294-496d-b4a5-ce05a8d6e556",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505899ae-411b-40e9-bf54-870cfeb569ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1aec2883-2178-49e2-b011-bb3e8fca2497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb30010-d987-472a-aba9-79c443aaec55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b81630-3218-4711-b1f1-77d7e049d9d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d348b518-792a-438e-a6ff-df98a205381f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b067845-d10c-447f-91d9-6f1f58565643",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7068499f-b32a-47f9-a800-136bba206590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "89cb7108-a5e1-4129-829d-3b66aca57c76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3ec3d8d-b28e-4c06-9aff-3e016b6952fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0964fd3-e9e7-4bb0-8ae5-24666d957ec6"
                    }
                  }
                ]
              },
              {
                "id": "d379e2e7-a357-40d2-a8c6-c5c616816229",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4a43734-1297-435a-b2aa-f651641c6513",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1832fec-b59e-4f75-a918-911ee918b03f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8736f928-33d8-4a69-a21b-d828f3b52c6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b4b4c62-6a82-43b6-bf65-ddd8146161d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46626500-8e0c-433b-a157-07ed296e27c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1cb3ed0a-5538-4e65-aa3c-fecef2ee23c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "712f1b6a-ddc3-4992-8592-d50745a4ac2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08677ab7-964e-4363-9176-3dd2282e2db0"
            }
          }
        ]
      },
      {
        "id": "237eb8a2-1c4e-4daf-ba25-bfac1bbfdb8b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bc331a78-ef4f-4587-992a-9e9e010f370b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4223cca-f930-4123-b509-33988e50fb6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f89b8211-06b1-4f9c-b1f1-ec3ea3f28d8f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67296545-3f8e-46ab-9655-de4d5a645f36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1b43d9c3-00e4-47f5-ad2b-227aad5be36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2e3ffd-2d89-4ca2-8ccf-d6cb7539b439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33238cc8-903d-4583-9d2c-ab4a4ea00f37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a2acaa-c54f-464e-a78d-a7c7ceca5ffd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b90f97-7ebc-405d-906f-f5e0ade1858c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "124ae871-da07-4bb2-ab39-49d2d30ad3b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c0e7b2a-7ad0-41ed-8309-55a5609112d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da06084f-ca62-4c66-b52b-5a61e2b75c11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "10957cfc-6222-48e4-9c43-7d6a1e6f77e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0f8f269-2074-4d79-8d21-2aac920e68ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f557fbd7-0c03-4396-9478-08692b195111"
            }
          }
        ]
      },
      {
        "id": "9a21548e-4c80-4068-99f4-6a14cee4aa8a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3cbde8f0-c22d-466a-9754-7b847f0c43a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9f83e93-50f9-4b60-b993-9efc8328ec2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f9d0e71-0b10-4b15-a8b8-d2fe671e0d94",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f97f41-b7ca-43d5-a9c1-41861cf71c77",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40a4948d-e3d9-4999-a32f-050409da531a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a50436-8d69-4c11-bbf5-9a0f4552919c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae44bd0-5bc4-4432-a8ee-416cb98ac6f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c8925b2-8cb7-44f9-9c68-1fcbe357c1ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00764f63-ecc6-4de9-a34d-b99b5d2bd3aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b565a690-f870-4590-b085-d3e1034ba32a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f84639fb-7048-4625-a5ac-75d8a70a090e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c5052ac-ff81-4345-b926-160574ab46ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "691dea06-b919-4f47-b610-6a9f7118d899"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f46cec3-a348-4b73-99d9-d5a8416fac0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "460e0c9d-db7e-444c-9978-bf53bcd1c7ae"
            }
          }
        ]
      },
      {
        "id": "6aeee262-232d-4eea-93d2-edc9b1af79b0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fef01c0c-cf1e-4e1d-8f27-6a7d88f22c5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04204864-e6fb-437a-8041-79d192ebea20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96b504aa-d26c-45cd-843a-a426bc4de97f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb7d65e-81d9-40bd-8d58-85ed383fb5b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c63b92eb-b994-40c5-9d5d-429b3309d12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51209f76-2250-40e6-8b52-c88f0f552292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea4bd62f-caf9-4a08-bea4-2c38190fe1ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c4a6082-5ded-494a-aaeb-5c59354bf3e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2acc306-785b-4a0f-a635-a031c74a94ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f65df6db-c2b5-4465-a936-181bb88243db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a162d61-7c2f-43da-9390-300df4cb0f81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f01bcc81-7ecc-48aa-883a-6213e9bb0376",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca114105-01ae-4e05-b7a5-cfce4b693615"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caf632fc-3ad7-49db-8b9e-b945fb426bb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8409c6f9-ce1c-4b67-8817-0c1a1e52dc2a"
            }
          }
        ]
      },
      {
        "id": "cf37ca92-63cb-4b9e-8f8e-0982c244d633",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d962915e-481d-4a26-9147-5e02d028448e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f239e12e-64c0-4a5a-aab0-5e774a71d720",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d1011978-21c8-47ed-a2d0-92ff5361c845",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffc53d60-6c69-481b-9a7d-44256dedce8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2053597e-4e5a-4a39-8de6-78c7b64a6cc7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 693.5772357723575,
      "responseMin": 7,
      "responseMax": 7618,
      "responseSd": 885.0550624378293,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686530680096,
      "completed": 1686530861462
    },
    "executions": [
      {
        "id": "946ad799-57ad-44a6-bdcf-ffda11261cbd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e62b8d71-a268-4016-9f2a-3010a8980b7d",
          "httpRequestId": "ac4340bb-bbb5-43a6-8c9a-13b69431fdc3"
        },
        "item": {
          "id": "946ad799-57ad-44a6-bdcf-ffda11261cbd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0f7630f2-2dc4-42e0-b21f-040876c4276f",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "65c76c32-6d6d-460d-ab1c-23acc4642ed3",
        "cursor": {
          "ref": "24395d4b-ba6e-4668-bbb1-17efd9a95474",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b48da28f-b028-473b-935a-7a5379b84aff"
        },
        "item": {
          "id": "65c76c32-6d6d-460d-ab1c-23acc4642ed3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "33de1e7b-fa48-480e-a12c-567272d98bbb",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "94787393-0063-4197-a24c-7028e2ca9dd9",
        "cursor": {
          "ref": "3f91400e-2489-4d96-9b4f-93c6d3771b9d",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "42f34889-3c67-41aa-a586-b84fb3b8979a"
        },
        "item": {
          "id": "94787393-0063-4197-a24c-7028e2ca9dd9",
          "name": "did_json"
        },
        "response": {
          "id": "58ca4d94-06dc-4125-bec5-0e656c7a7ac9",
          "status": "OK",
          "code": 200,
          "responseTime": 1347,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b0051b-6934-4c3a-a283-64ecbd0a1eaf",
        "cursor": {
          "ref": "77051816-c28c-46ba-96f3-58f2149f4eba",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aea29d7e-51bf-4b60-9639-6c690f14acb6"
        },
        "item": {
          "id": "58b0051b-6934-4c3a-a283-64ecbd0a1eaf",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c0568eb-81e3-46bd-a84a-1e030f85d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1363,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b0051b-6934-4c3a-a283-64ecbd0a1eaf",
        "cursor": {
          "ref": "77051816-c28c-46ba-96f3-58f2149f4eba",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aea29d7e-51bf-4b60-9639-6c690f14acb6"
        },
        "item": {
          "id": "58b0051b-6934-4c3a-a283-64ecbd0a1eaf",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c0568eb-81e3-46bd-a84a-1e030f85d4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1363,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753b966c-a26f-4156-8737-4be20cd2cca4",
        "cursor": {
          "ref": "a1b3eb96-7c81-4bb8-9fe0-e5040aeee710",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0108cc55-0626-4293-8a2a-cd6b410ed53d"
        },
        "item": {
          "id": "753b966c-a26f-4156-8737-4be20cd2cca4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4779e05c-7c94-4342-a0bb-4bf0dbe29e4e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 971,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6e7c83-d1a3-4856-b8fa-e23bea90db79",
        "cursor": {
          "ref": "9ea40167-7818-4eb8-b244-ca197209beb9",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "11275301-5c7e-42fe-9e1f-18e228e8e4cf"
        },
        "item": {
          "id": "fa6e7c83-d1a3-4856-b8fa-e23bea90db79",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2a91f50b-51a0-494d-8aba-93bdda43ffc0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 589,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b185bb9-6c9a-4d75-99d9-591a00d4370c",
        "cursor": {
          "ref": "2ee7a3b5-804f-46ce-8211-14c11689b316",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3e2ec5bb-1a0d-4aac-bab7-562f5c463172"
        },
        "item": {
          "id": "2b185bb9-6c9a-4d75-99d9-591a00d4370c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4d3bb417-3b7b-4320-92d0-303af84434ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2574918d-8a47-4716-b842-77e7b8c38038",
        "cursor": {
          "ref": "d51eefda-e9fa-4ad5-8dcb-184e929c38a7",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c4533e4-ccc1-4d9e-a69a-3d25ec7e1129"
        },
        "item": {
          "id": "2574918d-8a47-4716-b842-77e7b8c38038",
          "name": "identifiers"
        },
        "response": {
          "id": "80528e21-c970-4ea3-ab20-f312a44e8809",
          "status": "OK",
          "code": 200,
          "responseTime": 1262,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6520cda-d3a1-4789-b68c-ce1f38e25156",
        "cursor": {
          "ref": "a796c537-b422-43ee-983c-9bc4b886f301",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "017bc995-51a0-40d0-9714-d77c2d1fbd84"
        },
        "item": {
          "id": "f6520cda-d3a1-4789-b68c-ce1f38e25156",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9e9d2b1c-992e-42da-831c-73e5d124f193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dcac34-8816-49d4-ab60-db1cd8c59627",
        "cursor": {
          "ref": "b1881c7a-f33b-46ac-80de-ea04e6247f54",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5dc6a6b3-17bf-4dbd-9cb5-9edc10f20f02"
        },
        "item": {
          "id": "73dcac34-8816-49d4-ab60-db1cd8c59627",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d8593d0a-b14c-4cda-a96c-591e026072d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c32264-f38a-46fc-ac90-a3131972c9c0",
        "cursor": {
          "ref": "ae7f6e30-5527-4421-bef2-42224a374aef",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8ecc0e0f-7fc4-41b7-9846-d03d7219ef2f"
        },
        "item": {
          "id": "a1c32264-f38a-46fc-ac90-a3131972c9c0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0f75b8c1-a701-4f0a-8c43-5f5f87abb37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b8dfa7-71fc-495e-8893-4e1a96b275a4",
        "cursor": {
          "ref": "d55f772d-0429-49a2-bab4-77d0626ebb5a",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d8bd01dd-cd62-4fd0-b9b3-66e4548a599d"
        },
        "item": {
          "id": "06b8dfa7-71fc-495e-8893-4e1a96b275a4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "851d836f-2342-4c56-828d-b9268088767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b91ae1-88df-4d98-ad4a-42b3f526f35f",
        "cursor": {
          "ref": "5666ba8a-d22e-4ac8-8d56-0e562b37893f",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ad158b91-2d63-4c99-9fb5-b309ebbebbac"
        },
        "item": {
          "id": "09b91ae1-88df-4d98-ad4a-42b3f526f35f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "204145e6-15fa-4d3e-8c4f-36e0307adca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e05e25-e465-45a1-9f0f-1489d3b1f11e",
        "cursor": {
          "ref": "29ca420d-c1ab-4d87-97ca-029e5e6fff3a",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "33a037f2-4292-474c-a8b9-b336381afb64"
        },
        "item": {
          "id": "95e05e25-e465-45a1-9f0f-1489d3b1f11e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "64fb52b5-af5b-48b6-888c-440916c3317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b27ca45-51a6-4f65-9f10-36aa632db916",
        "cursor": {
          "ref": "71512f9d-b9bd-4484-9c78-c8d8f3b271cd",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e3141d3f-baa8-49bc-ab04-7e3b96cdd403"
        },
        "item": {
          "id": "3b27ca45-51a6-4f65-9f10-36aa632db916",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "49ccedcf-e03c-4a2c-b78c-0261d344fc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478e6acc-9242-43b1-b554-e1d1bdf5f5c1",
        "cursor": {
          "ref": "47099404-43ef-465c-8385-bba9b8bb8192",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b0bf538f-4b8c-4d5a-b490-78d8f5e3ec6d"
        },
        "item": {
          "id": "478e6acc-9242-43b1-b554-e1d1bdf5f5c1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bd5f0ab7-3211-4d82-bc0a-a3644342b304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaeda49-f304-4040-827c-4ba2b7f32b00",
        "cursor": {
          "ref": "c8938b52-6719-46ea-bec0-e487a131d133",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f3b45c86-12f0-4e5d-8c54-3a8fdbefb8b5"
        },
        "item": {
          "id": "fcaeda49-f304-4040-827c-4ba2b7f32b00",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fab5dfa8-0eb3-49d0-bcd7-c87f2c578034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0893f404-237c-4d6d-ab63-31cb85fb42cd",
        "cursor": {
          "ref": "ee05cd0a-4aae-4d16-a4d2-1e2274b4df43",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4f87edd9-670b-4319-a9c3-ea6f16f7c7e1"
        },
        "item": {
          "id": "0893f404-237c-4d6d-ab63-31cb85fb42cd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "434534d0-1aa4-45d6-a35b-242a5e90896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f61ff0-bf1e-4e38-b4d1-c13b6d4cd466",
        "cursor": {
          "ref": "e065ce6c-7d37-47be-8b74-29ada72ca98b",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d284e0b9-596d-4bb6-8b7e-9341e83c8667"
        },
        "item": {
          "id": "74f61ff0-bf1e-4e38-b4d1-c13b6d4cd466",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b3c735e8-0634-44de-b00a-9465df2cd22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a4a66b-aea1-42f1-a87c-7e4e26309d88",
        "cursor": {
          "ref": "cffa0dce-cee3-4a91-958d-5771ea08f821",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0ad2f870-676c-4c06-a0de-8348df864488"
        },
        "item": {
          "id": "79a4a66b-aea1-42f1-a87c-7e4e26309d88",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b7f1df3f-3bf6-4808-abdc-60bd11b1bd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6464f62-e199-49b2-bd50-18e7da34282e",
        "cursor": {
          "ref": "4d5e20bf-a9b5-4bb5-9155-726d850f8c21",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb1dbca9-a85c-4262-a909-39fc812db44d"
        },
        "item": {
          "id": "d6464f62-e199-49b2-bd50-18e7da34282e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d400bbc4-1d1b-4fd8-adde-db69ecec68f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df61ae1b-49d0-4b13-9f8f-dbb958c62eee",
        "cursor": {
          "ref": "2c9005a5-47dc-488e-b2b2-fb40f470e555",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "27cad78d-69fb-453a-a60a-e87bb2a3b0e3"
        },
        "item": {
          "id": "df61ae1b-49d0-4b13-9f8f-dbb958c62eee",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9d03ac6c-074e-4e1f-8ccb-2a0dfadd7f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3e4064-6536-498d-8dcb-3f4918e47696",
        "cursor": {
          "ref": "1c15dc61-043e-45c9-a303-4c099c326033",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b24d4682-c4bf-40b0-8657-960327f0eb36"
        },
        "item": {
          "id": "6e3e4064-6536-498d-8dcb-3f4918e47696",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "97b6769d-a632-4454-878e-7b6dfc67a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67b2e2a-b238-4a74-86f9-306106c64b05",
        "cursor": {
          "ref": "35ff80a1-c162-420d-b830-37fe9d580237",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2451e7d8-3b27-460e-916e-a16768266925"
        },
        "item": {
          "id": "a67b2e2a-b238-4a74-86f9-306106c64b05",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b6e5079d-d8da-41ad-a262-4bb035a3a76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92cbd74-8dd7-4d63-a733-86b6a57aaf7f",
        "cursor": {
          "ref": "1d170bb0-6e83-4fca-bced-e0d14acec1fc",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a0a712ba-1b2c-43c4-9a70-ce697e25513a"
        },
        "item": {
          "id": "a92cbd74-8dd7-4d63-a733-86b6a57aaf7f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7cb27a63-f1f9-4b1a-b7f6-593ed7cdeaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c6daab-78c2-40d0-b30d-4d7dbca4826b",
        "cursor": {
          "ref": "0efebee0-9b92-4424-a0a5-c2ce913779fe",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "89769c4e-33ca-4527-ab1b-9863fc370a24"
        },
        "item": {
          "id": "e8c6daab-78c2-40d0-b30d-4d7dbca4826b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3ed78fa7-f600-4de9-b3a1-435e1ff26c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f275798-5130-4e2d-af53-4e43595188a0",
        "cursor": {
          "ref": "96d70f15-f9d3-4ced-8392-5d06f1150973",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "439cb563-b4eb-45f1-bee8-0c70853c9777"
        },
        "item": {
          "id": "9f275798-5130-4e2d-af53-4e43595188a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "12c9591e-8e59-4acf-9fcb-e9664c930fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36439254-1c86-47ce-8759-272f957edca4",
        "cursor": {
          "ref": "c9ba9b66-8f48-4594-865d-d78e8ffad0af",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6b357aaf-d906-4703-9b2e-8c5656b9021e"
        },
        "item": {
          "id": "36439254-1c86-47ce-8759-272f957edca4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aa79719d-9622-4b9b-9ced-55d0fd4488c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640b0078-a8a5-4b32-a95f-3c99a3c19f00",
        "cursor": {
          "ref": "50ab56ef-cfb1-4f44-bb81-49c5db50bd29",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "57c641a5-edc9-4b94-9bdd-4986b2cd70d1"
        },
        "item": {
          "id": "640b0078-a8a5-4b32-a95f-3c99a3c19f00",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cb31726e-48e7-4f87-b72e-50c8f63676c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f337e412-215a-47ff-bc7f-e9dc9d8027b1",
        "cursor": {
          "ref": "cc701e84-f096-4f10-aef4-992dea76248d",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "615e26c8-faca-4302-adb7-3b19192ee690"
        },
        "item": {
          "id": "f337e412-215a-47ff-bc7f-e9dc9d8027b1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c8410edf-26e6-47be-9a8d-df51091a5cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eddfd4-1b8e-4afc-8437-f4a639439c14",
        "cursor": {
          "ref": "bbe698e0-1ecb-4bad-9044-50d53a9aa371",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0e0386db-6d18-4447-8634-7fded84d2862"
        },
        "item": {
          "id": "78eddfd4-1b8e-4afc-8437-f4a639439c14",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ce1cf502-809d-4fbb-ab1f-3cfbfda9d6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edeabebd-17b6-46de-8fde-9c4788085747",
        "cursor": {
          "ref": "4c220983-a557-47e8-96b3-fe26263bbbbd",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7ffad109-bed4-4d99-97e9-9fc45e2a38ae"
        },
        "item": {
          "id": "edeabebd-17b6-46de-8fde-9c4788085747",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e9efd26f-d5c1-4ab5-ae18-0aa2618e8b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55ada79-13ee-493b-a82e-33b57a9ae782",
        "cursor": {
          "ref": "d1d611d0-ec02-45ac-91a1-79bdb0cdfa99",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8ec79136-cd93-4b6c-8584-ab0c84a3ae4a"
        },
        "item": {
          "id": "d55ada79-13ee-493b-a82e-33b57a9ae782",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "68f6c3ab-c4ee-4697-b63d-36795ba80776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16958f46-633b-415d-867e-ec19d46ccaf5",
        "cursor": {
          "ref": "91d963e5-a716-466e-bd1a-54a08eca102d",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "411f509a-dd06-40f8-bc72-6726c07f271a"
        },
        "item": {
          "id": "16958f46-633b-415d-867e-ec19d46ccaf5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f0dffcf4-568f-43a2-bec1-ac43c6dbd5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb42989e-30ab-40dd-bebd-56af378bd587",
        "cursor": {
          "ref": "34665d99-517f-4ecf-9117-397f895089a0",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ca76be35-6b80-4b82-bb1f-88fce62c3a5a"
        },
        "item": {
          "id": "fb42989e-30ab-40dd-bebd-56af378bd587",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e1b45b8e-ee37-499c-9c38-a3fdd4cc4004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d481d4-c0ca-4559-8c9e-d0fb030164dd",
        "cursor": {
          "ref": "eda68bf6-9999-48b3-91c8-82c0fd4ac6b0",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ea042742-29b2-4cad-84c3-e1b228f9fd79"
        },
        "item": {
          "id": "68d481d4-c0ca-4559-8c9e-d0fb030164dd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9934c233-3d61-475d-8c47-34638dd346de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f6c14b-87bf-4ba6-930d-2f7f982e9999",
        "cursor": {
          "ref": "71cd33fd-5cd9-4fbb-a1a4-9f21d36ebb0a",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "498d6fe0-be83-482c-b311-3fbd6c44055c"
        },
        "item": {
          "id": "56f6c14b-87bf-4ba6-930d-2f7f982e9999",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8c5a14b9-974f-44ba-b8c6-b54bd9ca0f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ac9329-704b-4977-855a-2bc358dadfc3",
        "cursor": {
          "ref": "31ddfeff-cae9-4f38-a731-c15280182396",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c4e23ee7-92d8-4163-9334-3dae1591c0e1"
        },
        "item": {
          "id": "68ac9329-704b-4977-855a-2bc358dadfc3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fa5dac70-b89f-4e3d-a41a-351e1a8204c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e85633a-1fe1-4895-a776-a066bf21f2f3",
        "cursor": {
          "ref": "d894060d-ddb0-497f-9165-077de9223642",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "67d1ff1b-bb9c-44a9-9a58-5be65fd60fd2"
        },
        "item": {
          "id": "0e85633a-1fe1-4895-a776-a066bf21f2f3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bea18ae8-a85f-463e-8622-b766f90a1ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd957587-dc34-4605-b7c2-432cd0dcc18c",
        "cursor": {
          "ref": "ea24aa9f-3dc4-4a5a-b506-e6137ae7b683",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "85f28bb4-3ab4-4332-ab14-2aba36fc9021"
        },
        "item": {
          "id": "fd957587-dc34-4605-b7c2-432cd0dcc18c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3772951d-e492-489c-8f45-a1f18bf71a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0830e6ac-af22-4b2f-baf1-453eadc508b7",
        "cursor": {
          "ref": "3528eb39-a78d-4310-8079-34b6571cefe3",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ccdfed5-bfb0-45a2-89a3-a5dbaccaa4cc"
        },
        "item": {
          "id": "0830e6ac-af22-4b2f-baf1-453eadc508b7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "615b6faa-bc13-4b60-94db-c6383a2875e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e53a7c2-4140-47fd-8367-9d0ebcebda60",
        "cursor": {
          "ref": "350ef76d-4bc7-4f89-a826-dee5d2fd58e1",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b2836f0d-6f89-437e-80d6-1603c583a129"
        },
        "item": {
          "id": "6e53a7c2-4140-47fd-8367-9d0ebcebda60",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "57433196-9b3e-46dd-9ec6-cd467be24b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55db5f8-2e05-49ce-83f6-2db9dac62280",
        "cursor": {
          "ref": "c7927440-4b35-4b2c-a211-34069a7488d9",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8cde7098-3658-423e-b9ca-667de5012604"
        },
        "item": {
          "id": "c55db5f8-2e05-49ce-83f6-2db9dac62280",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bd083891-b048-49c8-81c3-a0fb31bed0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510e6a10-6ad0-4cd2-9edc-a466c311143c",
        "cursor": {
          "ref": "7ca0d758-7e80-430c-9b71-62998e87501b",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d4189d24-3d6a-4e5d-9573-99ce29d59ebd"
        },
        "item": {
          "id": "510e6a10-6ad0-4cd2-9edc-a466c311143c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0074fee7-7b67-4163-8fc6-e7c9875c66ba",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 812,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be213c5e-0f2b-406b-99af-f96e96e39fc6",
        "cursor": {
          "ref": "5b2fd830-b467-4713-898e-bdce4caa1975",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3bc2f11a-b4d1-44e4-800b-439dcdc805f7"
        },
        "item": {
          "id": "be213c5e-0f2b-406b-99af-f96e96e39fc6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9de2f4fe-4979-4c5c-8c96-4340f255e9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f406ecc5-852e-4cf5-8c44-71a2ecfee2e2",
        "cursor": {
          "ref": "04864ef4-ded6-4467-af96-b9612c4c178e",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "98bda6f0-0c4f-49d5-98de-2b58bdb5ed1a"
        },
        "item": {
          "id": "f406ecc5-852e-4cf5-8c44-71a2ecfee2e2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "950e2b02-21b0-49d6-ad49-46c523d41567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7773c6f-cd14-469f-95db-4201ca37b264",
        "cursor": {
          "ref": "1c437f99-0395-4db3-94ab-c3fdb0d57d17",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "18a97411-426d-4063-9a6c-0cc1ea56ad8a"
        },
        "item": {
          "id": "b7773c6f-cd14-469f-95db-4201ca37b264",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7e9ba6ee-be82-420b-a8db-99fe5865cfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13348670-be84-48b4-ae4a-c4a54ebb48de",
        "cursor": {
          "ref": "656c7b42-5687-4696-bdfb-261f93ac2fc6",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "94dfb67b-4d7c-46d9-8212-7eaf6220eba4"
        },
        "item": {
          "id": "13348670-be84-48b4-ae4a-c4a54ebb48de",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "32b5ffae-b219-4a4b-afcf-fbd7f21ca43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50069bf4-6923-4666-8998-02e35f229874",
        "cursor": {
          "ref": "4358882c-11a6-4261-969d-2e1e504f5985",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a77e3dad-1412-4eda-b5d3-8552ce96e2b2"
        },
        "item": {
          "id": "50069bf4-6923-4666-8998-02e35f229874",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "20b9eaa0-f39d-4cfb-911d-d7fd44c09a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c586e694-b16b-40e4-8998-d1b53d15f892",
        "cursor": {
          "ref": "67abd554-ba61-4b9f-bf58-87820b823b1d",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "640ea3ff-2576-4e91-abdb-5099920aba5a"
        },
        "item": {
          "id": "c586e694-b16b-40e4-8998-d1b53d15f892",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9c01709a-f62f-4cea-a913-9cbce885593e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae9e999-437b-4155-8da1-f466b21c29d4",
        "cursor": {
          "ref": "bb446170-b3d6-448c-aa8c-114f9393f02b",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8832a281-f108-495d-89b2-7d79658d6cff"
        },
        "item": {
          "id": "6ae9e999-437b-4155-8da1-f466b21c29d4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "52b2f221-421c-4bc1-8928-dc80f28bc5fa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 786,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d738d556-440f-4110-9de7-464e47acd468",
        "cursor": {
          "ref": "2eea8434-9bb6-4d26-ac19-43444b43d7e0",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "68d560f4-2cd4-49e7-80a4-c7d25018c5f8"
        },
        "item": {
          "id": "d738d556-440f-4110-9de7-464e47acd468",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "26996cf9-a040-4dd8-985c-cb4881bf988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f235c8b1-8002-4142-958b-35e1376cc0f5",
        "cursor": {
          "ref": "20026c24-72cb-4a43-be22-1cc414c255ff",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "77a2820a-4e37-4b56-909d-f31baff03cff"
        },
        "item": {
          "id": "f235c8b1-8002-4142-958b-35e1376cc0f5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8d4c38d8-5bd4-40a3-8133-2a812101f4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a6a69a-1d1e-4420-9536-8df473688625",
        "cursor": {
          "ref": "9bc38a10-5288-4287-8c21-8d033836fbc9",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "931f7215-8ebf-44b1-91c3-c8a86a6d9642"
        },
        "item": {
          "id": "19a6a69a-1d1e-4420-9536-8df473688625",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dd3b863d-ec53-4e24-aa2b-a2a19d4982e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcddf488-54ec-4b0d-b897-2baf2aa7a293",
        "cursor": {
          "ref": "5e212471-6f8b-4428-a3b7-fd86df5d095f",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1d3d40fc-9692-4433-954d-b0727ede9a00"
        },
        "item": {
          "id": "fcddf488-54ec-4b0d-b897-2baf2aa7a293",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5d57a159-57c6-4538-8456-2ba037e3337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50d6370-616f-44d3-b01a-4a4cb76615cb",
        "cursor": {
          "ref": "fa726ec8-f1e3-4652-988a-97b6e36296a5",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "50b39469-b078-4bbf-a800-c96d1503b243"
        },
        "item": {
          "id": "e50d6370-616f-44d3-b01a-4a4cb76615cb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0b5ad260-a0c0-4ada-b1ce-5f940675b4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788144fa-625c-456a-bebd-13a83ff23274",
        "cursor": {
          "ref": "aebdb9a7-c733-41e2-8b62-8378c168032d",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "813eacd1-c463-42fd-9433-8d9ad91e4339"
        },
        "item": {
          "id": "788144fa-625c-456a-bebd-13a83ff23274",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b903761c-1325-44e2-989f-2a6f3affbdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff88747-f266-4163-b125-110420d66a1b",
        "cursor": {
          "ref": "1052bda9-f755-42d5-be75-761183c3ef2c",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7d77f5b3-a064-4977-bd32-0ef42da125c3"
        },
        "item": {
          "id": "8ff88747-f266-4163-b125-110420d66a1b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5305ca3d-2153-4c1d-8941-bf2cbe13d37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ca779f-2ef7-4ad0-8bd0-a71fb8c78aaa",
        "cursor": {
          "ref": "d65edcb0-293b-4019-a653-582c34f59a99",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f60c18ba-3125-41bf-9a93-23319d4ae73f"
        },
        "item": {
          "id": "a0ca779f-2ef7-4ad0-8bd0-a71fb8c78aaa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f8f00ede-f66c-43ca-8ff3-81e5f986c36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721cd313-9bf8-4805-bbe0-e2e00876f0ea",
        "cursor": {
          "ref": "04aeca05-a55a-4f71-a6d7-467924325c79",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dd21913f-885f-4c2d-8bf6-43cbeb2150d2"
        },
        "item": {
          "id": "721cd313-9bf8-4805-bbe0-e2e00876f0ea",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "490211a0-d7c6-4716-b081-031b9a668981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c024f6-a14c-4407-a0e2-b26a5960df8c",
        "cursor": {
          "ref": "e4cbe758-faba-4d08-becc-de2efa19cfba",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "43b3529e-f737-4a55-8529-2e5d7c335453"
        },
        "item": {
          "id": "58c024f6-a14c-4407-a0e2-b26a5960df8c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b7df7dcf-e212-4892-95a3-78c6d1cd6d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76af080c-ff83-4076-a813-f5f2173f2212",
        "cursor": {
          "ref": "227d2935-dd57-4873-8205-6a35a69ceed4",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dac54fb9-4cb1-49cb-a77d-bae4673c81d2"
        },
        "item": {
          "id": "76af080c-ff83-4076-a813-f5f2173f2212",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac05ae32-1a9d-401c-94cf-f09784844721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8914fe-7341-4e35-b15f-83e10ebb7907",
        "cursor": {
          "ref": "49f692bc-b860-476d-bf70-e05a3024be1e",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0287a9e5-ca93-4600-aea3-f3b765467ed3"
        },
        "item": {
          "id": "dd8914fe-7341-4e35-b15f-83e10ebb7907",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "69c38ef2-86ed-4392-838a-1e2c1268ae10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd094cdf-032d-4a13-a321-120d8cab7a02",
        "cursor": {
          "ref": "b41d1829-2901-4cdd-817f-b31548bb25e4",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2cb61b66-b6bc-4eb9-a422-d96488b14ff5"
        },
        "item": {
          "id": "bd094cdf-032d-4a13-a321-120d8cab7a02",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "074e1c64-d104-41c6-aa03-9854449bccc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a467a7a0-39cb-47de-ad3d-300bb7a7473c",
        "cursor": {
          "ref": "b443cefe-f9ca-422e-ab35-89c85b0d621f",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "87bcee68-0d28-4ba7-9397-8c0794a7f9e8"
        },
        "item": {
          "id": "a467a7a0-39cb-47de-ad3d-300bb7a7473c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d6837c70-d959-40cb-9838-cf6a65de8cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d346f645-2fb9-4d67-b861-f9fb664cb138",
        "cursor": {
          "ref": "fabfeca1-0e47-4171-ab63-d8be27600222",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c2bf206-5134-4904-9132-0b1f9c9ef2bc"
        },
        "item": {
          "id": "d346f645-2fb9-4d67-b861-f9fb664cb138",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1ea50cd2-a401-4e1b-9ec6-d913f1fe15c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70af836d-b29d-4c1e-81cb-ef34a02d4b03",
        "cursor": {
          "ref": "4a99c41a-f396-4921-a7f1-15c4d3ff703d",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "55cc0781-29b3-4e72-8104-3c2008ee8c00"
        },
        "item": {
          "id": "70af836d-b29d-4c1e-81cb-ef34a02d4b03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "56d145b0-c400-4552-b9c0-925f32bb0b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561b6e8e-362c-4f79-bc1e-6424632e7445",
        "cursor": {
          "ref": "d6fe36c5-f3e0-4682-93e4-2fa2df0ec1fa",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e835c88a-b5cc-4226-ab9f-84e3127805a1"
        },
        "item": {
          "id": "561b6e8e-362c-4f79-bc1e-6424632e7445",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6eb51b5f-3ad7-4c6b-afa1-daf370421867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadc911b-1186-4f46-8752-55f2f31b32fa",
        "cursor": {
          "ref": "b6cb2141-af9e-437a-ad56-c5f962d678e8",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ac518aa-d0ab-43ef-ae11-1bd35f7ed630"
        },
        "item": {
          "id": "eadc911b-1186-4f46-8752-55f2f31b32fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d7dec4cd-895b-4daf-98a5-82076e771f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcb1392-1918-4bed-8970-e962ffc561b3",
        "cursor": {
          "ref": "661768fd-73f9-4f5f-91f1-a4d38d6df97b",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4d8b8820-7a62-4142-a77a-186761267d15"
        },
        "item": {
          "id": "1fcb1392-1918-4bed-8970-e962ffc561b3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e9c3a37f-ef71-4108-9818-25eaf12b368b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b07a9c0-7e54-4e67-9627-df1a5479b020",
        "cursor": {
          "ref": "0c23cdc8-94a2-4ba2-829e-910c79eb5537",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0e9e7a57-4257-4c50-990a-539e5d078036"
        },
        "item": {
          "id": "2b07a9c0-7e54-4e67-9627-df1a5479b020",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1be57463-048a-49ed-8434-7edcde1c36d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6841fc6-ac74-4359-8049-12e02b8b8223",
        "cursor": {
          "ref": "f42d6476-8bd2-4270-ad63-666e171e7f97",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a7fe90f2-d8fe-47c4-90e7-067e8f329417"
        },
        "item": {
          "id": "d6841fc6-ac74-4359-8049-12e02b8b8223",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1b2d3c73-13af-497a-9a58-c9f46b82f110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27979b11-7e23-42b4-b4c5-6274d81f9173",
        "cursor": {
          "ref": "73a945fa-b6ea-4ca1-913d-ba7df850754a",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3c4b38e2-58d0-45e5-8a09-e5cc8421657c"
        },
        "item": {
          "id": "27979b11-7e23-42b4-b4c5-6274d81f9173",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "70c7f72f-8059-4698-b3b3-f055b6e5db31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15fa39b-dfa7-4718-becf-b5d125f3692f",
        "cursor": {
          "ref": "3a5c9b8c-5907-4ba8-bc73-713ed5d05687",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "166304c9-b69c-4bab-9868-d56c896ff460"
        },
        "item": {
          "id": "d15fa39b-dfa7-4718-becf-b5d125f3692f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "48143f10-c3bb-4555-b3ed-84e9f0bb546a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc5de2-cfcf-4ed1-b527-ca5aa285716a",
        "cursor": {
          "ref": "82f51f21-1def-402f-8e3c-569b2c92a575",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2199dcf3-3c42-4930-b820-9ff325732dee"
        },
        "item": {
          "id": "6edc5de2-cfcf-4ed1-b527-ca5aa285716a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f21813e1-14ce-4820-8bd0-7b0f170ef4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0696266c-d2d5-498b-8c42-1d1a313b8636",
        "cursor": {
          "ref": "975e4084-d544-43ba-9ada-16f3f4c3c2d9",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "80c53a96-579c-4f3a-a86c-e7b7744d434c"
        },
        "item": {
          "id": "0696266c-d2d5-498b-8c42-1d1a313b8636",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f18b2c2d-c484-4e88-b074-28505e529c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad0f483-a822-48db-9126-46ca9fe02a88",
        "cursor": {
          "ref": "6da1456b-7829-497a-9f4c-9b26d8ce3a22",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "58c20ea4-d6f5-491b-9e49-ee1ff5b30930"
        },
        "item": {
          "id": "bad0f483-a822-48db-9126-46ca9fe02a88",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d3f2152a-a939-4e19-82fc-cb540298b693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71e7665-a18d-4658-9f55-83b8d748e7b7",
        "cursor": {
          "ref": "e3d8c4a7-ba60-4054-b481-dd73feba18b9",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "84056872-6aa3-4a46-8891-113bea6573bc"
        },
        "item": {
          "id": "b71e7665-a18d-4658-9f55-83b8d748e7b7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "da256f08-9dcb-4530-a37c-70cd95d5c817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deb507e-51c0-4239-af1c-9419bd315bdf",
        "cursor": {
          "ref": "85e2b9a9-abfa-4880-8253-9d901d58da0b",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5535beef-9d54-4c3c-94d8-487ba835fd88"
        },
        "item": {
          "id": "2deb507e-51c0-4239-af1c-9419bd315bdf",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e96e4aee-59c1-421b-9360-a0e2bca207c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be3165b-6dcd-4e3e-9355-7281070a8f1c",
        "cursor": {
          "ref": "2a68b53d-65a0-4be1-af0c-8aaca996194b",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c59872aa-9083-41e1-a667-a710d43390e3"
        },
        "item": {
          "id": "6be3165b-6dcd-4e3e-9355-7281070a8f1c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b42f2a90-5706-414d-b5df-d743969805b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cad7e6-ca0c-46de-87f4-c2841b50375b",
        "cursor": {
          "ref": "3b20712c-14e3-46a4-adcd-70cddc630eb0",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5897eabf-5b64-4177-8f3e-7270d5eed525"
        },
        "item": {
          "id": "d1cad7e6-ca0c-46de-87f4-c2841b50375b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7c793da5-a7da-4b68-a191-9ad130cad5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e1bc1c-f83f-423a-b258-5dde5d53db19",
        "cursor": {
          "ref": "0d1d9ff0-c205-46b5-822b-3a2d11a89c59",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5d64ffcf-4845-463c-80dc-3d1410b74fbb"
        },
        "item": {
          "id": "86e1bc1c-f83f-423a-b258-5dde5d53db19",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9d83e00c-72cc-4772-8711-0de54e2f0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a090fb9-d440-4b5f-8ceb-43cc9eeb44af",
        "cursor": {
          "ref": "8edf926e-eda6-49b9-b828-f5ff28abf355",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "43e12cf2-45b9-4171-98a5-3d9c48d66832"
        },
        "item": {
          "id": "2a090fb9-d440-4b5f-8ceb-43cc9eeb44af",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "34f96562-f09b-4741-97f9-1249edec2155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdf93f6-370d-43bf-b371-883262016b85",
        "cursor": {
          "ref": "92773132-9f65-46d4-ad03-57a527a74ae4",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5c13d453-39dd-48f8-a471-d62efd7c8d39"
        },
        "item": {
          "id": "9cdf93f6-370d-43bf-b371-883262016b85",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3974e161-2cb9-42c4-ac2e-e48ca3f3a27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dd56f8-04ff-4449-bfea-4292b14dd822",
        "cursor": {
          "ref": "e5d748d1-fa0e-4025-ad19-5e4c0dedc9b6",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bf59b349-28a9-44ee-9e4f-258faec40ffe"
        },
        "item": {
          "id": "44dd56f8-04ff-4449-bfea-4292b14dd822",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5f3091a4-847b-4cb8-a0e1-c67f52a3385e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dedfd5-ae01-4d84-8fe1-5f0ddd70816f",
        "cursor": {
          "ref": "dc2a575c-c1a4-48dc-a0e0-5a61fca9bc61",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9c7f77ec-00e6-45fa-89e6-bc95f02fbb3e"
        },
        "item": {
          "id": "66dedfd5-ae01-4d84-8fe1-5f0ddd70816f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "00cbd090-9e84-473e-b3e8-00150e47bba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca75849-3ea7-4c05-95cc-61c5f2648ad1",
        "cursor": {
          "ref": "d68eb4a6-d617-45a3-948d-ff443e419847",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5d806255-1df9-4407-ae10-2ef02cc3dc93"
        },
        "item": {
          "id": "7ca75849-3ea7-4c05-95cc-61c5f2648ad1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e85fb5d-354d-4491-a088-6b32304df70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dab015-b104-4d3d-ab6f-6224887c85ad",
        "cursor": {
          "ref": "13b38a44-1726-4149-989a-d364123c0d01",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2f0a8ebc-8061-4ed7-91a8-eed4c0c0151b"
        },
        "item": {
          "id": "88dab015-b104-4d3d-ab6f-6224887c85ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8e0adcca-fd5a-4c43-a22e-e0d1514e7ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e62981-3619-4b92-9739-bc6c08b9a899",
        "cursor": {
          "ref": "51bb1015-6abe-4f52-9ca7-f723880de40b",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "39b76edb-ea08-43d4-b601-153384e4a6b2"
        },
        "item": {
          "id": "93e62981-3619-4b92-9739-bc6c08b9a899",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "56d803ff-3874-485b-ac26-c9bc568426b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53474d27-dcdc-41df-b801-0d1fe552953b",
        "cursor": {
          "ref": "793fd3ce-2133-4037-a2c7-ea9ee6472787",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "71ec7f5a-007a-41f1-ba44-f603b7848ddb"
        },
        "item": {
          "id": "53474d27-dcdc-41df-b801-0d1fe552953b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e58ca205-c573-46f7-87cd-20e757e9a455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decd9536-c1ff-4222-9c6d-23b52ba39fa5",
        "cursor": {
          "ref": "e3004984-a845-42f5-9fad-bedad24f074e",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "165ac7b8-e195-44c2-bd19-909ad6d69048"
        },
        "item": {
          "id": "decd9536-c1ff-4222-9c6d-23b52ba39fa5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "26567653-b846-45bc-a7e8-a37d3662c7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40901e0-98dc-4748-80b3-cff2c0f43527",
        "cursor": {
          "ref": "b291e7ad-bc15-444e-8253-24c3c152c46c",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ddb2d284-e26d-4f63-832a-5c2f51d92c3a"
        },
        "item": {
          "id": "e40901e0-98dc-4748-80b3-cff2c0f43527",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fc2917c9-fc22-4f31-b897-aa685f00a145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daf90c3-3221-465b-87df-97293afdbfe2",
        "cursor": {
          "ref": "3a169fd2-8275-41e8-a455-5b2f9372e6e5",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c6ba883a-dc54-4fb3-809b-6905a994bc84"
        },
        "item": {
          "id": "2daf90c3-3221-465b-87df-97293afdbfe2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a4b3e426-e2d7-4633-99d3-fb614ef7d91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f199cc64-39e9-4219-ace5-97ed42da7eaa",
        "cursor": {
          "ref": "3400abc1-1c10-4f1f-89cb-abe324cb149b",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "533c790a-92e6-4c4e-88bc-686139d70658"
        },
        "item": {
          "id": "f199cc64-39e9-4219-ace5-97ed42da7eaa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e9eb422a-5007-4594-8bbe-44bd2f22572a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90eb225-d958-42d4-959d-666875453520",
        "cursor": {
          "ref": "32bc668f-c849-414d-8bc0-ce169868f1c1",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b08ebec8-8777-42b8-8e10-f9c35e2b4e5f"
        },
        "item": {
          "id": "b90eb225-d958-42d4-959d-666875453520",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "aada5acc-6620-4d8c-b95a-4708a8321da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c5d014-0321-466e-8451-4951c3405dc0",
        "cursor": {
          "ref": "c8d3664b-b185-4380-a8d3-fa74a1537860",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "161d12ee-9f5e-455e-b663-f758e6d2ba3b"
        },
        "item": {
          "id": "f6c5d014-0321-466e-8451-4951c3405dc0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2af3567c-57e5-49a7-a3df-368b7b00ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913b99ee-75fc-4885-85f7-a45b5c47d001",
        "cursor": {
          "ref": "f2f588f3-5ce9-4129-a1a6-f3cf79df41d0",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ccf44534-ec70-47a5-99e8-ccffa9ebe65b"
        },
        "item": {
          "id": "913b99ee-75fc-4885-85f7-a45b5c47d001",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7604493d-79f9-4f5c-b566-a2d10f6354a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e037bd-3f4f-425c-9ff7-da9357ba4906",
        "cursor": {
          "ref": "e11a88ce-0fcd-45fb-83c7-44e781a12d6f",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ca2df6c-feea-4409-b88a-5cc2bfa15909"
        },
        "item": {
          "id": "c2e037bd-3f4f-425c-9ff7-da9357ba4906",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2e71a51b-45f6-43ee-b453-7c08c67a4dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc142e54-57e9-4594-875a-a7873fe69fc4",
        "cursor": {
          "ref": "81d7e3c6-1555-4f62-97e2-07219aa13aa6",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ffd4e69b-81f0-45d5-9a06-93417b39da7c"
        },
        "item": {
          "id": "fc142e54-57e9-4594-875a-a7873fe69fc4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4132817b-4ca4-42e3-aa41-afb6d9547532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a997419d-6390-40e0-9f66-6c46d086161c",
        "cursor": {
          "ref": "b9af3987-e83a-475e-96b5-10b17262dfc3",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "50462f78-7154-4fd1-9e56-8096679c26cd"
        },
        "item": {
          "id": "a997419d-6390-40e0-9f66-6c46d086161c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a0d938f5-8c5a-49f2-8e84-eb0fadf6dacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab342ed4-9d25-43f8-bc04-426265dc463a",
        "cursor": {
          "ref": "c9c9e4ba-13bd-42f0-ba90-62175817d138",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "be63f2ba-59b5-4564-8205-af5a4064a379"
        },
        "item": {
          "id": "ab342ed4-9d25-43f8-bc04-426265dc463a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "eff2433b-a472-491b-b4b6-70206a8d9d0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc70a9d-023d-4e9b-baae-9cc70c8d63af",
        "cursor": {
          "ref": "b240ca1f-d140-4669-9305-3677b5fbf703",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "387a11d5-6a29-4028-adee-fb54779aa651"
        },
        "item": {
          "id": "9bc70a9d-023d-4e9b-baae-9cc70c8d63af",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2c690bc7-225a-4d56-a6a0-9b1481975b58",
          "status": "Created",
          "code": 201,
          "responseTime": 5737,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c75767-c91a-4f0b-8b66-d80e538e6802",
        "cursor": {
          "ref": "bfa41576-1d81-4252-bd05-e8be26b8f2d2",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ed8ee3ac-be97-40fb-82f1-1dd93840bfe3"
        },
        "item": {
          "id": "32c75767-c91a-4f0b-8b66-d80e538e6802",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a1c1406a-f20e-4b53-bbe3-3141c490c5d1",
          "status": "Created",
          "code": 201,
          "responseTime": 6000,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c475a5-ffd2-45c1-b6d6-22d3a6e977c1",
        "cursor": {
          "ref": "80711fcf-9f53-4591-8c93-cc5168f54713",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "16ed53bb-4d90-4ce4-a55f-6d1eb6f00015"
        },
        "item": {
          "id": "58c475a5-ffd2-45c1-b6d6-22d3a6e977c1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a88032d-a82d-4297-9448-5418b6639d64",
          "status": "Created",
          "code": 201,
          "responseTime": 4982,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c226b7e3-5b9f-4b29-88aa-56da50b213ed",
        "cursor": {
          "ref": "ec02a07d-0b56-43b8-9722-b9ac49570b34",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a25a1a8d-96cf-437d-b60c-29f460985610"
        },
        "item": {
          "id": "c226b7e3-5b9f-4b29-88aa-56da50b213ed",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a9a93499-6436-4e30-9c1e-e9560744574a",
          "status": "Created",
          "code": 201,
          "responseTime": 6368,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1b9940-2800-4dcb-8fd8-aff9615ad75e",
        "cursor": {
          "ref": "acc3e2ac-f5e6-4aef-9408-616a01ed1e4f",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b595e104-97d0-42c0-bf06-74501123b132"
        },
        "item": {
          "id": "fa1b9940-2800-4dcb-8fd8-aff9615ad75e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "77eec2a4-8501-4ad1-9f38-6cb30eac1cb3",
          "status": "Created",
          "code": 201,
          "responseTime": 5839,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0fff28-bc94-4b65-aab9-f16bf59876a0",
        "cursor": {
          "ref": "9b6bf38c-5888-4c84-9ec1-a2108ebc5190",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "db70b869-9a23-4596-bba1-c980f2b40c6b"
        },
        "item": {
          "id": "5c0fff28-bc94-4b65-aab9-f16bf59876a0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "30d12bfc-0330-483e-b883-09dee13e4897",
          "status": "Created",
          "code": 201,
          "responseTime": 7618,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b015a15-177d-4ac7-9921-fd7445f2c266",
        "cursor": {
          "ref": "302e68cc-2e33-4927-a302-3870e6d1b118",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "06cff91a-e1b0-45ba-8548-d8267b789ef7"
        },
        "item": {
          "id": "6b015a15-177d-4ac7-9921-fd7445f2c266",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ec24daa9-a0ca-433d-8351-11791f5f764f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f7095f-7b46-4055-82ee-668156e33fc4",
        "cursor": {
          "ref": "6890c815-9d08-466a-9996-e9b2d89ed842",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "395e5b73-1dd2-44d3-aca7-6ed9878e654d"
        },
        "item": {
          "id": "b8f7095f-7b46-4055-82ee-668156e33fc4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "240a6f71-1c83-4468-a421-a485effd7efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914122d0-ef09-4ff0-a4c9-70e78ce3bff6",
        "cursor": {
          "ref": "79838329-28f4-41f0-9181-0639ae783c49",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c5a297ce-e7b6-4cf8-86ac-594e463abafa"
        },
        "item": {
          "id": "914122d0-ef09-4ff0-a4c9-70e78ce3bff6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "99d932df-af15-40c5-b3be-0e294b5fa1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f56316-4b2b-4745-9358-ebcee54d999c",
        "cursor": {
          "ref": "690aca27-15cf-48e2-b767-c0c704f519af",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7f7ae87f-cebf-418e-acb5-a04320be1f91"
        },
        "item": {
          "id": "69f56316-4b2b-4745-9358-ebcee54d999c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b5d8b74-0c2e-4211-976a-d36660fdd67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556d14a9-8185-4494-a9a1-548ee4c8a56a",
        "cursor": {
          "ref": "6e91d9a8-03a9-41a9-9218-c5e126432423",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c8237579-19d6-434c-8c87-03318f45abef"
        },
        "item": {
          "id": "556d14a9-8185-4494-a9a1-548ee4c8a56a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "10aeae0b-0c8c-4351-813c-4fd97aeaca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15f4e4b-9d27-4a69-86cd-865802832e1c",
        "cursor": {
          "ref": "b30a59cd-2f4a-4948-b802-b6d4b68bc9d2",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "009a24af-07eb-4e93-b848-a9dd4fc55c4c"
        },
        "item": {
          "id": "f15f4e4b-9d27-4a69-86cd-865802832e1c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e52c1b8f-6ef3-4146-8eaa-735f72e5879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd08111f-e4e9-4ccc-bbaa-52292c6108cf",
        "cursor": {
          "ref": "87d1bd75-de6d-4ba4-a0d6-bc1d2e101577",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ced4e5cd-6444-40b2-a6f4-39d236bfb910"
        },
        "item": {
          "id": "bd08111f-e4e9-4ccc-bbaa-52292c6108cf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e38948b7-221a-4835-b14d-6f021a7914aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1d8e87-5d15-4da4-b6b1-273fb260d760",
        "cursor": {
          "ref": "70a62112-762e-49f8-a619-a43363c6e19e",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "61fd59bf-f9b8-4a97-8911-b3359c1be402"
        },
        "item": {
          "id": "ed1d8e87-5d15-4da4-b6b1-273fb260d760",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7275608c-1de8-42ae-b456-3dfaabca9f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58d3888-16d6-4c56-8cec-f791de69fa76",
        "cursor": {
          "ref": "e55e7390-2475-4d65-a3ab-02b626a6eebd",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1e43b374-8c40-4bc7-a716-ce41150a53aa"
        },
        "item": {
          "id": "b58d3888-16d6-4c56-8cec-f791de69fa76",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2594c7f3-18f4-4763-a539-21ab1360adc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a88bde-faaf-4f83-936f-4c78c3a51b66",
        "cursor": {
          "ref": "8411985e-63ec-4f67-aa60-9e6b0c3cb62a",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "77dc7f38-5ede-4977-91a7-2314c93ac4a7"
        },
        "item": {
          "id": "d3a88bde-faaf-4f83-936f-4c78c3a51b66",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2a745d1f-f27c-4ec3-9a3e-66f651f5c350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb04fb5-137f-4be8-b103-52ca13a80e86",
        "cursor": {
          "ref": "083e6de1-c994-4a1f-878d-04ca84e84be8",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c0918825-0692-412c-aef3-cf7ce8a46ffd"
        },
        "item": {
          "id": "3eb04fb5-137f-4be8-b103-52ca13a80e86",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0da7c425-8b32-4a41-bbd4-0ed63886bd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edee4774-e375-4a3f-9bc6-274ffdd6946c",
        "cursor": {
          "ref": "21dc4747-3864-4f75-82eb-57ac197e0209",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1244e0e4-2add-4377-b33a-5bae7be57b51"
        },
        "item": {
          "id": "edee4774-e375-4a3f-9bc6-274ffdd6946c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f1f13592-ca43-4b13-9c9c-f1bcbcc1b985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ef3edc-2cd0-4a91-b6fd-e1bbc4f7138c",
        "cursor": {
          "ref": "97f37d0f-4cd5-449f-a490-5172894e18e6",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e77e1643-5b6d-4ef1-a5b0-4ba0605e64fc"
        },
        "item": {
          "id": "25ef3edc-2cd0-4a91-b6fd-e1bbc4f7138c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3c1ab0d1-64f2-4e3d-be63-3146c0ed37d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76848aea-fbe7-4d8a-bac4-88ebf57a8376",
        "cursor": {
          "ref": "b2cab22a-d5e5-4459-8f55-a4b48309a37b",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c4fd9543-dcd2-4b9a-8e76-b08f8e6a94c3"
        },
        "item": {
          "id": "76848aea-fbe7-4d8a-bac4-88ebf57a8376",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7bbc860-16dc-4e42-a7f3-89bda49cbe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e16ac2-04fc-4ee0-8247-c9589b546f52",
        "cursor": {
          "ref": "8142ea59-40bd-47ce-be78-7ac91a34b443",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e736e183-de83-416d-b486-4b7d6080b213"
        },
        "item": {
          "id": "22e16ac2-04fc-4ee0-8247-c9589b546f52",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "39c29772-88f7-4902-9877-cb01b7dfcee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80f225e-ef22-41da-abc5-8b90e15bac40",
        "cursor": {
          "ref": "6b988f41-cf73-467f-aa97-4b7bad22ed84",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d770a199-4aa1-4230-af99-f81750bc7f2a"
        },
        "item": {
          "id": "f80f225e-ef22-41da-abc5-8b90e15bac40",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e21c67b-a51c-4278-9871-0f6e5c65bfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2c16d2-7ecd-421c-9f72-20de206ddbec",
        "cursor": {
          "ref": "7a1cc73e-665a-45ce-b367-f905240ddc56",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e665c6b2-53fe-48af-b3ab-c80aa657ca5a"
        },
        "item": {
          "id": "5f2c16d2-7ecd-421c-9f72-20de206ddbec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb6f453e-e64b-4099-b5b6-5862588ad312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81948a95-e433-403e-bb62-41fe5533ee51",
        "cursor": {
          "ref": "13ce1b62-b335-4ff8-a36f-0608adfd6f13",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "64df0bbf-5a8e-46b4-b4a4-7c51125cfe6a"
        },
        "item": {
          "id": "81948a95-e433-403e-bb62-41fe5533ee51",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "44546f63-9bed-4442-80ed-8de171e7024f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a39fe3-874e-4187-b8b7-4c0599a6a518",
        "cursor": {
          "ref": "0e2a8966-822c-48e0-9554-c5d807867fcb",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1d499d9e-f229-4f39-9586-fc909264d364"
        },
        "item": {
          "id": "f6a39fe3-874e-4187-b8b7-4c0599a6a518",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "952d9f2c-ef8e-4b98-a848-3e0eeaa1331f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83565789-a0cf-4abd-9e6e-a31dfd44c2c0",
        "cursor": {
          "ref": "023fb50d-8e8f-4a8d-975e-db26be8c3ce7",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "019e03a4-d093-4713-9a1d-35d3d6fe0e1a"
        },
        "item": {
          "id": "83565789-a0cf-4abd-9e6e-a31dfd44c2c0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ea00730-18f4-4df4-b3e8-adbfb039628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3290e37f-f075-46d2-871d-928291af39a4",
        "cursor": {
          "ref": "8df28a98-a4f1-4e2f-bc96-09e1836e5c42",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b815d89c-5b3a-4544-ae25-c48771b19b0e"
        },
        "item": {
          "id": "3290e37f-f075-46d2-871d-928291af39a4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "952b9e7c-7c33-448d-bc7d-833af27166ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a57c19-9ef2-4d41-952b-b546dae08504",
        "cursor": {
          "ref": "7f4779c2-c9fc-4c4b-9ba2-5a32f6a37c83",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b5433010-cb62-448e-90ca-d9b0958cd16c"
        },
        "item": {
          "id": "51a57c19-9ef2-4d41-952b-b546dae08504",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5fbcdefd-6122-4eae-aabe-5f05b4d17b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7534a4-92b2-4d85-9dac-33ec306f1db2",
        "cursor": {
          "ref": "849119d0-be60-457b-a4c4-beb20107df72",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f23c581d-79a4-422e-ada2-5285b8ef6dbe"
        },
        "item": {
          "id": "ba7534a4-92b2-4d85-9dac-33ec306f1db2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3089b0cc-10e5-403f-91a7-20776b339bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eced5d-1bc0-4efc-b559-f46e175b3187",
        "cursor": {
          "ref": "acabeda8-50fc-4f55-8a60-838f5f4c90a1",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fa33fbad-6b53-496b-81cf-cc884c01d37a"
        },
        "item": {
          "id": "b5eced5d-1bc0-4efc-b559-f46e175b3187",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "83ee436b-ece1-4d73-a4e2-44ffec9a44c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961bf500-c010-4f89-a300-934d7951fd0f",
        "cursor": {
          "ref": "3f5419dd-2730-44e1-81e2-52a4e533f14c",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6b572e63-c45b-4c59-b44a-5d8097a70764"
        },
        "item": {
          "id": "961bf500-c010-4f89-a300-934d7951fd0f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ccef133b-efaa-45c7-b0db-3756e6f53ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6c968c-e13d-48fd-8431-13e858669267",
        "cursor": {
          "ref": "d5c05ee2-08c1-46c5-a3ee-e7bd92bfd109",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ba269460-1e99-48f9-a72b-29f25562adb7"
        },
        "item": {
          "id": "4d6c968c-e13d-48fd-8431-13e858669267",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a694a984-fd93-4fd6-b4d8-1d3cfad9ca4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec73e16-3fd6-4e3c-9c3f-98c0c54fe7bc",
        "cursor": {
          "ref": "6b23b974-1d21-4af2-baae-47f53d3ca0da",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9d28b67f-ddbc-46c8-9aae-484222f418a9"
        },
        "item": {
          "id": "2ec73e16-3fd6-4e3c-9c3f-98c0c54fe7bc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1c7464a6-2bf4-48be-9044-d5aa64ef607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b47b2-4faa-4052-b375-8376f474ee6a",
        "cursor": {
          "ref": "a89f897b-20b7-472d-b107-21c4b90094ff",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bb9a9d6a-6310-40f0-aa8b-50b76579a710"
        },
        "item": {
          "id": "441b47b2-4faa-4052-b375-8376f474ee6a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c8df5b73-b3a8-4647-b0cb-3dd34286db31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a329c2ee-a971-4b79-a8e9-43fc8ad7ff00",
        "cursor": {
          "ref": "6f9b0960-cb22-47cf-8ecd-79145fdf1a87",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5e7c1c16-8a98-4db2-a6c6-c5cab30f59d2"
        },
        "item": {
          "id": "a329c2ee-a971-4b79-a8e9-43fc8ad7ff00",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1cd15821-4506-4dc4-aa73-50c0f29a5339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d228f4-39b1-4c61-8c83-366cbf8c050b",
        "cursor": {
          "ref": "bdc5d3e8-4e83-40e0-95e0-cc37e9b8148a",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "89ce8089-cc10-47c6-b341-231b370f435a"
        },
        "item": {
          "id": "d7d228f4-39b1-4c61-8c83-366cbf8c050b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4a37a053-a79f-4022-b2e7-f6b94bcc81b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8d3d94-80ab-4d39-8b2b-aea3efa18232",
        "cursor": {
          "ref": "c1be32d7-9f3e-4246-84b8-5b777e93a92b",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0eafdee2-eafa-4c71-9efc-91dbf3db39f5"
        },
        "item": {
          "id": "6a8d3d94-80ab-4d39-8b2b-aea3efa18232",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a8417472-d2fb-4ee7-abbc-66b0c7905279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bfd42e-8894-443d-bdeb-c41fb4f64938",
        "cursor": {
          "ref": "fa382cd0-69be-473b-9cf4-17bd89a1ecda",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b8ed8bc1-c46d-4140-8650-08cae1f27e27"
        },
        "item": {
          "id": "67bfd42e-8894-443d-bdeb-c41fb4f64938",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "702ac553-c9d2-4b80-a2df-d7a14206e6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3441e2-5c03-4216-8ac7-9664416a0d1d",
        "cursor": {
          "ref": "7d7fd58c-a8fb-45d7-aa01-8115c847eac8",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "95a9b019-2347-46c9-a449-2c44a5079e29"
        },
        "item": {
          "id": "9f3441e2-5c03-4216-8ac7-9664416a0d1d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bab61b28-4c2d-41e4-b233-8c6554154c46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dec724d-05d8-4bd1-9c8b-868977f57570",
        "cursor": {
          "ref": "f8d51cb2-efc8-4094-a71b-b4cd1a83928f",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8246d65e-1e58-4922-92ae-4227e1d026ca"
        },
        "item": {
          "id": "1dec724d-05d8-4bd1-9c8b-868977f57570",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d1e3ea88-4dab-447f-9994-24127dffcb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989ff08c-da6f-45c2-87f7-292f7e7fee92",
        "cursor": {
          "ref": "148a6cc5-700c-4ae1-a336-ad6331b2a5c0",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "93c9d8eb-a054-4f9f-8971-0d891c23fbf2"
        },
        "item": {
          "id": "989ff08c-da6f-45c2-87f7-292f7e7fee92",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d265a801-d3ed-4a21-9d95-cf3fd9bc9b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02d282c-147c-47e7-8971-8390990af108",
        "cursor": {
          "ref": "469a2f02-ef38-4878-a0b1-06f6fd4819ca",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4dfea264-f967-4f03-bd4e-1a92f1db8c6d"
        },
        "item": {
          "id": "e02d282c-147c-47e7-8971-8390990af108",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b9acb123-1553-4abd-aeb8-c79ed2b2901c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb750674-df23-40ea-a937-d84383359c78",
        "cursor": {
          "ref": "f70b51d8-a2b2-4b68-89de-730fdfa1dd6a",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "34d3a2dd-1af8-4f6b-be32-1ee5c355d196"
        },
        "item": {
          "id": "eb750674-df23-40ea-a937-d84383359c78",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "68f5714a-3ddb-42aa-b7ab-18747ac42cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee69ebe2-0d38-41a8-bec3-455019f15f60",
        "cursor": {
          "ref": "d8c4177a-215e-4ec9-b3ba-b0e3084b4602",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e4632b1b-250d-4b5a-8532-cefec01fca2c"
        },
        "item": {
          "id": "ee69ebe2-0d38-41a8-bec3-455019f15f60",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "22b900b1-c599-4ab9-ad5c-91d73642a27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c9034a-d964-4ab7-bcef-a60708a958fe",
        "cursor": {
          "ref": "998e095a-263a-43bf-9df1-a8977b1b59d7",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9a06adce-0d7a-48a0-bc90-1edb80092e44"
        },
        "item": {
          "id": "42c9034a-d964-4ab7-bcef-a60708a958fe",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9a3a8afb-aec0-4322-b4da-3e3c69dbfc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea507d3-c629-44e5-bd16-163531712fe7",
        "cursor": {
          "ref": "f0990c1c-7ee7-4264-bb7d-4520fa285ca8",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0e5b8d02-671f-451b-87bf-44d4d722a078"
        },
        "item": {
          "id": "cea507d3-c629-44e5-bd16-163531712fe7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5de7107f-adf9-4916-b5c3-06a9286a5d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37818a4-ccee-4b3d-b327-b552eb19df28",
        "cursor": {
          "ref": "8b009482-aeed-4cb8-8d3f-73c339b234c7",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "05b33d17-f744-489a-9ae8-284af31810c3"
        },
        "item": {
          "id": "e37818a4-ccee-4b3d-b327-b552eb19df28",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6038e3e6-cfb8-4b81-9f04-c063f0d10e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90541035-f90a-4dfb-b1f2-ba09042a07d2",
        "cursor": {
          "ref": "83c9961d-e2c8-4b76-9f75-0a16a85128cd",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6219acc6-a8a2-41c4-9df3-70397e3ac455"
        },
        "item": {
          "id": "90541035-f90a-4dfb-b1f2-ba09042a07d2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7b13468b-4e8a-4af3-aa6d-5a8b19ddb0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9e8281-bbc4-4a57-ac85-036307904622",
        "cursor": {
          "ref": "49e546b0-97b3-4126-97fe-79a5a4b75647",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "96442629-85a6-4396-8eab-f8784114b69e"
        },
        "item": {
          "id": "5b9e8281-bbc4-4a57-ac85-036307904622",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fd2dba19-5a69-4e1c-8135-69309c8fb3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d444c24-7371-4c5c-947c-c0d8b0ef2ba0",
        "cursor": {
          "ref": "bc0b9fb7-cefb-4585-9e32-79d0a9db3f5c",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cbf20c0c-849b-4ae9-834b-cb0d0304fe46"
        },
        "item": {
          "id": "2d444c24-7371-4c5c-947c-c0d8b0ef2ba0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3a94abb8-499d-4e70-8d15-740e81398a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b30a032-ed5a-4c1e-9151-72b074d19c7e",
        "cursor": {
          "ref": "c23e0663-c4a3-4800-81aa-2fbcfd1b69a1",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7845ed34-aa38-4f95-a132-49c1cc19cbfb"
        },
        "item": {
          "id": "3b30a032-ed5a-4c1e-9151-72b074d19c7e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "42127fb4-c1b5-433c-bee1-346ff014baf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f907a58d-ec7c-42c6-b2d4-aed26039fb38",
        "cursor": {
          "ref": "3ed76625-89fd-4a8e-966f-6e805c65bdc6",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bdcda13d-e196-49a5-ae74-dc064424b204"
        },
        "item": {
          "id": "f907a58d-ec7c-42c6-b2d4-aed26039fb38",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8dc4f151-680e-4610-a716-83112488dd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3487e294-932e-4bdc-b6d4-ddceed75cb2d",
        "cursor": {
          "ref": "8b75b878-a0e7-4aec-988b-b00fac5de89f",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5102cda9-b4c0-40b9-9627-b064e7ebdaee"
        },
        "item": {
          "id": "3487e294-932e-4bdc-b6d4-ddceed75cb2d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "908be24c-4485-4e17-9ac0-a72c6c54dafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda4a046-ffd6-49a8-a4ac-7c2955d7f036",
        "cursor": {
          "ref": "30a65fef-efb8-4dfd-9df5-aec4feb15096",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b8508cad-8514-485a-9ed7-a2d93ac57fa7"
        },
        "item": {
          "id": "dda4a046-ffd6-49a8-a4ac-7c2955d7f036",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "07909ee9-1b0d-4d5d-951b-0ffabf2feae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6829fe4-4aae-4581-8e90-0e672378dceb",
        "cursor": {
          "ref": "b14dc98f-baf0-45b5-8c04-f68d93f4f59a",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ef9d7f82-d661-416f-9620-444300043119"
        },
        "item": {
          "id": "d6829fe4-4aae-4581-8e90-0e672378dceb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5da1cd05-5b69-4878-b53e-262ae983fdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3399d043-c5be-40ef-a160-39fb789efcd8",
        "cursor": {
          "ref": "3fe83d54-af3a-4f84-9a49-b732d178eb02",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6d14e943-a88e-42a3-acb6-1069163b86e1"
        },
        "item": {
          "id": "3399d043-c5be-40ef-a160-39fb789efcd8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1aa15c86-00cd-432d-adde-b9a1328ed7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae458930-0b6c-4aef-9890-50cbbc337d22",
        "cursor": {
          "ref": "737f032f-a46a-4e71-900d-364c8c022ed1",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7b05660f-b0c5-4019-b41b-4983e942b3f1"
        },
        "item": {
          "id": "ae458930-0b6c-4aef-9890-50cbbc337d22",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "22e6ec89-350e-4215-b44e-2244cf5badbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71765342-42cd-47ef-a34c-9c696df99ebe",
        "cursor": {
          "ref": "fcc0c53f-e7ae-4aa8-b9dd-b7be743fa806",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "89d69a7e-16a6-4a8b-9260-75b4f4913aa2"
        },
        "item": {
          "id": "71765342-42cd-47ef-a34c-9c696df99ebe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c7086fc5-5717-4daf-b26b-5bfb22386c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a498737f-1bb5-4db5-8107-fd247559511f",
        "cursor": {
          "ref": "7e488b09-125d-4113-9fbd-f086ae36aa29",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4175e2fc-d8be-4f81-bad5-2d87a0e6f73c"
        },
        "item": {
          "id": "a498737f-1bb5-4db5-8107-fd247559511f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a34f82bc-2fd2-46b2-b1e4-c950579fd50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec018de-c97e-4c3f-bc67-cb1a7adbd4c3",
        "cursor": {
          "ref": "24854ffe-7495-417e-be14-fea20bb97d7b",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b57fde27-a9c9-4179-9742-956d7f355d84"
        },
        "item": {
          "id": "bec018de-c97e-4c3f-bc67-cb1a7adbd4c3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e76060b0-3480-4c21-accd-1ddbc5b9db9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c6e379-66fd-4bde-a790-9da2c3c54333",
        "cursor": {
          "ref": "2b40a72b-3a56-4d07-8e46-3a242eac506e",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "889a59fc-f5b3-4744-91ca-f226b8834ce2"
        },
        "item": {
          "id": "a3c6e379-66fd-4bde-a790-9da2c3c54333",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6be5a705-72a1-4af9-b3d8-815375ae98e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f8afed-ce12-4980-a1dc-be765790dc72",
        "cursor": {
          "ref": "6527c9e6-4f44-43c3-97da-591cb2b2886e",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d2103a6b-3810-4a9f-b388-184451ca4e2b"
        },
        "item": {
          "id": "31f8afed-ce12-4980-a1dc-be765790dc72",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1d9a16d2-0d6a-4411-ac4d-37f6047bd2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c907d701-084e-4d37-acd9-213dfbaab468",
        "cursor": {
          "ref": "a09f4d41-d0b7-49d2-a054-e0f801c5c3fd",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2d06f2f8-c0bb-4377-bb4d-86a95367b617"
        },
        "item": {
          "id": "c907d701-084e-4d37-acd9-213dfbaab468",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "668fae2d-3a67-4fc7-8c2e-900b1670174f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1afb63-1504-481e-a477-912308fe9ea7",
        "cursor": {
          "ref": "0dc245ca-98ad-4b0c-ba7a-267dfca82f4d",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "77dde8c9-92f4-43a9-9c4f-996d3b9f6483"
        },
        "item": {
          "id": "ad1afb63-1504-481e-a477-912308fe9ea7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "37d25a27-1f84-4c59-bce4-d7531972dddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9950d4cc-6820-4015-aa4d-0bbb4f714931",
        "cursor": {
          "ref": "d0480346-1b07-4141-ace7-4c1410eee196",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e802162a-a172-4eab-a59d-7e7b439f1788"
        },
        "item": {
          "id": "9950d4cc-6820-4015-aa4d-0bbb4f714931",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aeb2275a-0daa-4c15-be7e-b6322aab2f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39490a48-a0b3-45de-ae7f-e2cca9c8cf99",
        "cursor": {
          "ref": "a3ffa37f-4ff4-4a4d-821b-f4ff5a3f15ec",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a19c753a-a1dd-4e3b-8fd1-7c6355dd31af"
        },
        "item": {
          "id": "39490a48-a0b3-45de-ae7f-e2cca9c8cf99",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ac1cca62-2b6b-4f03-a2b0-93c0309e0c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738d2108-05b4-44ed-b650-60ceb2de3372",
        "cursor": {
          "ref": "f34427d9-c480-4b6f-b288-6e3dc115a7af",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "41ee5d7e-a788-4ec7-96b8-9c4012359222"
        },
        "item": {
          "id": "738d2108-05b4-44ed-b650-60ceb2de3372",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "737969c7-6d95-4e80-9594-cf0e95be1201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d0cdea-1cad-49c7-9449-1e2694bb21f6",
        "cursor": {
          "ref": "2b626ea2-7b3f-4170-b9ff-3e29c5f0545c",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0eb3fde-7b4c-4002-8c79-72e4dbf1014f"
        },
        "item": {
          "id": "02d0cdea-1cad-49c7-9449-1e2694bb21f6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a9dc4e5c-1f80-4523-a533-d3c2ba1f1090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7460a810-41aa-456a-ad7b-a31959f18328",
        "cursor": {
          "ref": "227a3706-f64c-4cd4-b3d2-807c2c9cffc7",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "add006d9-a0f3-4f2e-9412-8e555fad4c01"
        },
        "item": {
          "id": "7460a810-41aa-456a-ad7b-a31959f18328",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "51d58d01-6d22-466a-b391-6b1075991811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc812f73-aec3-4ee3-83ea-7ed32bff7b05",
        "cursor": {
          "ref": "12232b19-512e-4909-93fb-f41896704bed",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b64bd020-9542-4cd1-80fc-f66b875dcc4d"
        },
        "item": {
          "id": "cc812f73-aec3-4ee3-83ea-7ed32bff7b05",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d103df34-357c-4f83-b44d-25487c310f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91fb023-5ee0-44dc-a9c2-4c07a8c5818e",
        "cursor": {
          "ref": "df254007-5b61-4d9b-9f1a-3fd446de1f4a",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "863d4c91-f0db-4ccd-962b-5aa92cbdb5bf"
        },
        "item": {
          "id": "a91fb023-5ee0-44dc-a9c2-4c07a8c5818e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "837088d2-ea73-4e82-ae0d-a6307b11bdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8046ecea-e1a1-43c1-891d-541392169f2a",
        "cursor": {
          "ref": "3a72790f-5dad-43fa-b9bd-3b6eb7d249cb",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7f39116e-833e-4878-afa7-94995953adae"
        },
        "item": {
          "id": "8046ecea-e1a1-43c1-891d-541392169f2a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a4fc1794-de8b-40e5-82d4-0b130d31ee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b47935f-94cd-412b-8054-c2f9341e1dcd",
        "cursor": {
          "ref": "33263b7c-9765-498b-9122-bc92492c772e",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d5444e7f-5da5-443e-8612-209ee6c943eb"
        },
        "item": {
          "id": "8b47935f-94cd-412b-8054-c2f9341e1dcd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bb9036b1-bd47-4d52-9441-2fd01d40eef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305557aa-3953-45dd-82c0-5ffd65489cdf",
        "cursor": {
          "ref": "521aa262-e75b-47a1-b876-443d15813bed",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4f69ea8a-96c8-45bb-8c39-e0429bd53ca2"
        },
        "item": {
          "id": "305557aa-3953-45dd-82c0-5ffd65489cdf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "374dc228-76d0-41fa-8f71-af1b5eeaf4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ba2f4b-d274-45ec-a01f-2c4a6b57d1a9",
        "cursor": {
          "ref": "b5a494db-dbe5-4eef-b0bc-9ba8224ae1ae",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4d12cd1e-1608-4da5-8a0f-7fa8d852c6ec"
        },
        "item": {
          "id": "a9ba2f4b-d274-45ec-a01f-2c4a6b57d1a9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7842ec58-5918-4b07-a6d2-6fd94354f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66346bc1-b037-473b-b5da-007939f55e9f",
        "cursor": {
          "ref": "c5fb4fac-8c3e-411f-a08e-acc9ce80009a",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02459f20-4324-4eaa-82b0-429f4374c22a"
        },
        "item": {
          "id": "66346bc1-b037-473b-b5da-007939f55e9f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1b08c3f0-8448-4442-ae6e-37ba894d7fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970325f-bf11-4b97-875f-c7cebedb3d49",
        "cursor": {
          "ref": "da61c32e-d2d2-40ff-86a9-9611adbad4e4",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a75a4201-d7e4-4e78-a8c6-b22dffa97260"
        },
        "item": {
          "id": "d970325f-bf11-4b97-875f-c7cebedb3d49",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "100d1bef-7a84-48c1-b8b7-d53ccddece54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4393ebb2-d71e-4968-83c3-2c1e3b56ddee",
        "cursor": {
          "ref": "11a708b9-72a5-4c97-b54d-8cdda4d46952",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "15116115-2984-48a3-87de-dfe81263d3ef"
        },
        "item": {
          "id": "4393ebb2-d71e-4968-83c3-2c1e3b56ddee",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5fba2c05-21ea-4202-ae47-dda76e8184d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f3c256-0c72-4624-8c7f-386f5cfc2652",
        "cursor": {
          "ref": "ae46eced-18ef-4cf1-bbe1-bdb2978e9813",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cfdf4e0d-90a0-413a-8b34-6e53de04771f"
        },
        "item": {
          "id": "59f3c256-0c72-4624-8c7f-386f5cfc2652",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d93bebbc-5848-4930-a274-14f299aedd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc15e7c7-f63e-425e-8fa4-dba600e5feab",
        "cursor": {
          "ref": "16d16303-0105-4fcc-a863-61aeb9dc4fe9",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5b97044e-aa6d-40f0-83de-55f4d738d957"
        },
        "item": {
          "id": "dc15e7c7-f63e-425e-8fa4-dba600e5feab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "99de0014-2c50-46e3-9ca1-7662b751f68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9517c3-a1b3-4f7a-80b1-76d4155fe070",
        "cursor": {
          "ref": "8086d8cb-eadf-413d-8f99-33864ef79062",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "afb44532-b9fb-4236-9d07-d0391788d3b1"
        },
        "item": {
          "id": "cd9517c3-a1b3-4f7a-80b1-76d4155fe070",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "466d0cf6-1a52-4e09-8ab9-399a406fcab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23d3181-eedd-4b00-b897-ef22bc88d16d",
        "cursor": {
          "ref": "7383be84-4dba-4ce1-a808-811dd832d85c",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c246d463-443d-4cb9-bd55-493f883cb9a1"
        },
        "item": {
          "id": "a23d3181-eedd-4b00-b897-ef22bc88d16d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3c2b1181-8aba-446e-881c-be225153357c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cea5b5-cce7-4ad1-853e-bd1d94b25c51",
        "cursor": {
          "ref": "4c385567-df7c-4f4d-a1ba-5b9f1532a2a5",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "72396ab1-d5b4-41d6-8391-d443dfa18bba"
        },
        "item": {
          "id": "64cea5b5-cce7-4ad1-853e-bd1d94b25c51",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bc5527c5-d6c4-43a8-95e4-efa652dab34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3a86b7-d63b-450c-8315-14d9867bd376",
        "cursor": {
          "ref": "b5290f43-fe5d-47b0-8842-5650d3ca245d",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "532541ed-9194-4211-8eb7-4d341ce6f96e"
        },
        "item": {
          "id": "ae3a86b7-d63b-450c-8315-14d9867bd376",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2df0ac99-dcc7-4e11-b07d-a6d5b003b989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e48ba9-c14f-4e00-97fe-ef8f91babf49",
        "cursor": {
          "ref": "34c2804f-4781-46da-bdb9-62b8af75f867",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "81b90659-dd80-4833-aa35-3527c31cddf5"
        },
        "item": {
          "id": "d1e48ba9-c14f-4e00-97fe-ef8f91babf49",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c8095ac2-eadc-44db-805f-df14e3717c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aee44f-26bb-493b-8b47-8f9954d24e5d",
        "cursor": {
          "ref": "1ebec3d8-eaa3-498a-9be3-d8c984a2c9a5",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b50cde5e-b594-4626-a448-a0b8b234577c"
        },
        "item": {
          "id": "e3aee44f-26bb-493b-8b47-8f9954d24e5d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4da9bf76-5f52-400b-ad55-8a6b349c95cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7816b9-57da-460f-8145-1c581b8a1162",
        "cursor": {
          "ref": "a7a77de5-3aaa-497c-961e-c07045ddc39d",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9a3f2217-6d35-4e62-a7b0-5313f2745dce"
        },
        "item": {
          "id": "9a7816b9-57da-460f-8145-1c581b8a1162",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a017c986-e767-4a2f-b1df-048076c0a20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5b411e-f996-45dc-917a-67135e9ddbbf",
        "cursor": {
          "ref": "44634c36-3cef-4700-9a2f-10bff46adcf1",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2480b2d5-cc05-4209-9183-240072080857"
        },
        "item": {
          "id": "0b5b411e-f996-45dc-917a-67135e9ddbbf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "18156d0d-6ce1-4e89-b3e8-e343c335c0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591a5378-e656-42d4-a83e-93b3c32484be",
        "cursor": {
          "ref": "f74f0122-0ffe-46eb-b49c-ad9f479cf5fa",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b846d677-4ee1-4cad-be3e-13f6f182b2de"
        },
        "item": {
          "id": "591a5378-e656-42d4-a83e-93b3c32484be",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a3fe9de6-8eef-42f6-b4e3-95ee00d64d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468bf00d-0a8a-4eba-b047-a77177479261",
        "cursor": {
          "ref": "4b811491-9b09-45ec-a5d3-f2137cf5388a",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "20280102-7c97-4c3d-bf7c-3fdb23afcb3e"
        },
        "item": {
          "id": "468bf00d-0a8a-4eba-b047-a77177479261",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "656eb780-9bc1-4eff-8583-fcf683a93925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86184cb9-5119-46e1-b69c-a7708ab3f9bb",
        "cursor": {
          "ref": "2af54ccd-9379-4131-8c9b-d8984ee3a641",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0bff790d-35f2-4a04-b6b0-54c39e190fb7"
        },
        "item": {
          "id": "86184cb9-5119-46e1-b69c-a7708ab3f9bb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "21c4475a-384b-4f8a-91e4-dc8ef31c3bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd3202f-c62b-4376-b8fe-847e146548af",
        "cursor": {
          "ref": "a54f9912-681a-4918-bf49-12c1b7d11e58",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3600455d-38d9-4172-b0f7-39a06e1e5b2f"
        },
        "item": {
          "id": "5fd3202f-c62b-4376-b8fe-847e146548af",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "380a8ffe-15d6-4b6e-acb3-e6695d59f8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0913f31f-3fbe-471e-a62e-061b3982a5e7",
        "cursor": {
          "ref": "dd7645bf-8ed8-4abc-9413-d21588f5fca0",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1d5d2d7a-0894-40ee-8c0c-c3a5d5e160b1"
        },
        "item": {
          "id": "0913f31f-3fbe-471e-a62e-061b3982a5e7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ee44a4f1-e9c5-406c-b97c-ef79af6976e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16a2560-3842-466f-bb6e-92fed711d4ca",
        "cursor": {
          "ref": "db77eb4a-80c3-4e26-b1f8-123df59fadfa",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "13966cb5-774f-484f-b873-bc067ae4bea4"
        },
        "item": {
          "id": "c16a2560-3842-466f-bb6e-92fed711d4ca",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a0d666e9-513d-4aea-be6d-551afe5e2232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58b3e86-3729-4474-b8e9-dbf876410353",
        "cursor": {
          "ref": "2c4bb9ed-fcba-4296-938e-7d612c801902",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dc39670e-ea32-46d2-87ad-bc625cfc1100"
        },
        "item": {
          "id": "f58b3e86-3729-4474-b8e9-dbf876410353",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "014be90a-f7ee-4c10-95a5-cbb88474b14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c202eb9-8618-4ae7-9476-c736c048e3a0",
        "cursor": {
          "ref": "07d9b33e-35e5-4830-9578-14c8085324df",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "803ff01b-08f3-4824-b78d-642b89eb8353"
        },
        "item": {
          "id": "6c202eb9-8618-4ae7-9476-c736c048e3a0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9599b03b-a991-4018-baf7-bf72cc0f2727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926b7cb2-dc32-47c9-b366-18f8cf538e9c",
        "cursor": {
          "ref": "83ea2a82-4782-4a3f-a6e0-132262b97b2d",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c4d76a6-e828-4f97-8302-0005d7a5234e"
        },
        "item": {
          "id": "926b7cb2-dc32-47c9-b366-18f8cf538e9c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4f58330b-aff3-4cbf-9b43-8ccb09554855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4490b3-4577-4e30-a1ef-8c99a38094f0",
        "cursor": {
          "ref": "a7789662-975a-4efe-b2d1-77267a8bb8e6",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1994c376-04f0-46db-b5b7-b5975bff8871"
        },
        "item": {
          "id": "9c4490b3-4577-4e30-a1ef-8c99a38094f0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1cb96c24-be67-4696-b145-aee254e05df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2956a6-d941-493d-bb67-7eb12d2b98c2",
        "cursor": {
          "ref": "4366cb55-032f-4d3f-b7c1-fb436822d306",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "461dd213-8429-4e3a-993a-cd278aa9db40"
        },
        "item": {
          "id": "cf2956a6-d941-493d-bb67-7eb12d2b98c2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "414811fc-0dbf-41dc-a72e-949df771419c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6f61f6-1633-4cf3-9202-e449fe70165c",
        "cursor": {
          "ref": "11b9ebbb-e313-4f5c-b538-92dde02b1d8a",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "686dca89-e83c-4676-b54d-340e29cfeaa5"
        },
        "item": {
          "id": "4a6f61f6-1633-4cf3-9202-e449fe70165c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cbffcebd-4df6-4b18-a538-db7b2ddbe501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da149b3b-3794-4259-a1dc-0459ef5c3bde",
        "cursor": {
          "ref": "cea7aa49-1e47-4d97-8194-9a31cd3288c4",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0f372914-b127-4a21-9290-1ef08b40ecd0"
        },
        "item": {
          "id": "da149b3b-3794-4259-a1dc-0459ef5c3bde",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "05260bad-c17f-4814-90c4-7607c540584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4591c2cb-5f52-4502-9105-f59305f50057",
        "cursor": {
          "ref": "72bc5d39-403f-4276-932c-3b67e8499c91",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a9e75b8f-26f6-430c-99a6-bddb56781d51"
        },
        "item": {
          "id": "4591c2cb-5f52-4502-9105-f59305f50057",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "37333a36-5f09-4671-be54-2d45e8702485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5347b0bd-fb75-4130-b76a-4e142b66a4c2",
        "cursor": {
          "ref": "6f91f626-730d-417d-9c03-8166e2c3e7d9",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ddec15bc-4a15-4596-862d-664681437801"
        },
        "item": {
          "id": "5347b0bd-fb75-4130-b76a-4e142b66a4c2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1940b951-12fb-4a8f-98f5-9cc16682ef70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb0a8da-3829-438a-99ac-79341b277375",
        "cursor": {
          "ref": "3af821fe-e4ac-442d-9c74-2de3b926a5cc",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f42cda9b-dac2-4ea9-b8fd-43fc47185a21"
        },
        "item": {
          "id": "eeb0a8da-3829-438a-99ac-79341b277375",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "589da68f-0955-4a71-99f6-37c28b9de2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dea7fa-d106-4d4a-8d05-687d8716ab57",
        "cursor": {
          "ref": "d8172691-949f-4f15-b84c-17bd7a8d9872",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4353fda2-b104-49aa-97ed-c94d735bf401"
        },
        "item": {
          "id": "f5dea7fa-d106-4d4a-8d05-687d8716ab57",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ad10f18d-7097-4ce9-9d03-332b55e0edfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31cc9ee-a248-4b9c-93ce-30c0dad84e79",
        "cursor": {
          "ref": "2813845a-1b72-47d8-93be-36ae48bd6a03",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "711b571a-17bd-4017-8658-41ec249ca7d8"
        },
        "item": {
          "id": "b31cc9ee-a248-4b9c-93ce-30c0dad84e79",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e75bb4b5-1ce6-4eea-a5c6-57005fe6a8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6b8d52-e40d-419e-82a8-e12fe3276c74",
        "cursor": {
          "ref": "17d2d677-033a-4fa4-8efe-ad0d96725bae",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "73c8ca49-dd1f-48d1-aaeb-917d5ee6f589"
        },
        "item": {
          "id": "ca6b8d52-e40d-419e-82a8-e12fe3276c74",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "423dfd53-5692-420d-9e0d-6f222e106af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be5d25d-8f46-410d-91d9-b22bdabd9ab8",
        "cursor": {
          "ref": "9bff17f4-bbb1-48bb-a653-5a4ed924924f",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "28387559-9de1-44b1-9693-6af40102ffc2"
        },
        "item": {
          "id": "9be5d25d-8f46-410d-91d9-b22bdabd9ab8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e6f1f224-548a-4679-89a0-2d9fb30439ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10909085-64ab-41bb-9b6a-9a1dd443b768",
        "cursor": {
          "ref": "d7c5befc-a3f0-444c-859c-a83ac4ac7b74",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "16fb5820-526b-4ada-b3c5-84902c55fb31"
        },
        "item": {
          "id": "10909085-64ab-41bb-9b6a-9a1dd443b768",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3e7d6cf5-09ac-46e3-9841-b076a4a4b2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67aec006-8ded-459a-b709-f7d051ceb3b1",
        "cursor": {
          "ref": "2f11a170-124a-4e12-a684-d63cc9836d57",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c966faca-894b-4d20-b1bd-3af32ecf3c2b"
        },
        "item": {
          "id": "67aec006-8ded-459a-b709-f7d051ceb3b1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b3f50da2-2057-4bee-97f1-954cd30f765a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2067e13b-c95e-4267-a573-98c96b5b74d8",
        "cursor": {
          "ref": "226fce6f-b13f-4c45-8ac9-2900af0f42e6",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2da19564-3db2-4806-a199-4d2fda047dd0"
        },
        "item": {
          "id": "2067e13b-c95e-4267-a573-98c96b5b74d8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f997e62f-4cb7-4859-91fb-d450b1e9b05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0144f8-c6ae-44d9-b10d-b523d1d39c63",
        "cursor": {
          "ref": "20cf0e42-5d82-4277-9d14-af579919a5ae",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "407b4bc1-0a1d-4d6a-8fd0-dc0b536ec8e0"
        },
        "item": {
          "id": "7e0144f8-c6ae-44d9-b10d-b523d1d39c63",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "73a12992-032f-4794-bb20-0d1e0cc1cb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971295d0-9f0a-47e2-b865-a7354ecb93dd",
        "cursor": {
          "ref": "db93c82f-4633-4589-8a11-8de8d190e306",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c542371b-6f95-411e-9206-b3f444198eec"
        },
        "item": {
          "id": "971295d0-9f0a-47e2-b865-a7354ecb93dd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3c3a1312-85aa-4ad9-971b-191fe7509261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a38036-e184-41b3-9ae0-4b73e047de44",
        "cursor": {
          "ref": "e7d91e56-b9ec-4669-9f4e-9e1e7a337d12",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a1291a27-3f3b-49c6-9826-715ccfd37194"
        },
        "item": {
          "id": "17a38036-e184-41b3-9ae0-4b73e047de44",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fe2f766f-730a-45e3-8461-4cac1bc11534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8f58fc-8154-489f-83ff-734a23ebba69",
        "cursor": {
          "ref": "e101afae-7c43-4b33-82df-c61e49cb318d",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "67cd4f33-10cc-4d0f-9909-48dc3398f3ac"
        },
        "item": {
          "id": "af8f58fc-8154-489f-83ff-734a23ebba69",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "81ca13bf-9576-40da-91db-6a8002be0b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01214cc3-e40a-46c0-8511-ed48cc4c28af",
        "cursor": {
          "ref": "eabb0e4c-6f42-4c56-b3af-8050415c93eb",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "05d563a5-a654-4def-8e62-1262093c0deb"
        },
        "item": {
          "id": "01214cc3-e40a-46c0-8511-ed48cc4c28af",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f89a2375-283c-4dae-ac53-6ca92dd8d609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffa023e-c562-472a-b69d-3cbb156474dd",
        "cursor": {
          "ref": "3a0f221d-1ce0-40af-bba7-99733d43f9da",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e97589ce-4de0-4dd9-8445-db74cd350757"
        },
        "item": {
          "id": "4ffa023e-c562-472a-b69d-3cbb156474dd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "314e0bef-cb51-4f4e-b7e6-379360e2be1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f3da50-cdd9-44f0-90cb-2327ebcfa61f",
        "cursor": {
          "ref": "deda154c-58dd-43a9-996c-82328307f84a",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ca9ad11d-4351-45fe-9b93-d30a52056dfc"
        },
        "item": {
          "id": "82f3da50-cdd9-44f0-90cb-2327ebcfa61f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0179e545-f74c-4be8-bb35-20c118c856fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5d5f4e-4114-4b90-a35a-08947f693eff",
        "cursor": {
          "ref": "4c932b62-865c-4855-9ce6-92253c523374",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ece99f8e-5934-4d1d-9b37-36caf5957439"
        },
        "item": {
          "id": "cb5d5f4e-4114-4b90-a35a-08947f693eff",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d0fb2564-3c6b-478f-923f-ef5bb98c7030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d4a83f-7f66-4013-980d-e62b74e43de4",
        "cursor": {
          "ref": "3488d216-baa0-4e85-97b1-1142afe87c91",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fe9bf0ee-f5dc-4e73-8bc5-69858d92c4dd"
        },
        "item": {
          "id": "50d4a83f-7f66-4013-980d-e62b74e43de4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "27a36420-2125-4712-92c3-ef1e1ff3fe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e3b43b-a18d-4fb7-94ca-e224b7dc3898",
        "cursor": {
          "ref": "4fb115be-12a0-4b6a-99ac-e1683ec285da",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ceab69e5-a8ed-413f-b3e9-dadb5f85ff75"
        },
        "item": {
          "id": "f1e3b43b-a18d-4fb7-94ca-e224b7dc3898",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "228bb2fa-dff1-40ee-a836-4ce1bc2624cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aed35f-32aa-4b10-897b-ef1512677499",
        "cursor": {
          "ref": "b281f44f-ef8c-41a4-b229-7cfe1ed29758",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "15e690c3-5f8e-442d-a4e3-149fff87f85d"
        },
        "item": {
          "id": "70aed35f-32aa-4b10-897b-ef1512677499",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "12c352cf-70ef-48fd-8360-45e4bc06144f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5651fa4f-5651-4936-ab0e-59d1de241309",
        "cursor": {
          "ref": "bbbe74e3-8381-45d6-bfa9-1c50db79c456",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6ce67d30-1a24-48e2-b897-8f3fddf1efe7"
        },
        "item": {
          "id": "5651fa4f-5651-4936-ab0e-59d1de241309",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0b7af30d-f128-45be-b934-c80c4bd28709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282103d6-f223-4a4d-ba00-865b5c31d91d",
        "cursor": {
          "ref": "fdd7b044-4897-4464-8fc7-cbdcb4beac13",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d0dbc0d2-f9d1-4ba9-a119-56875a501fd1"
        },
        "item": {
          "id": "282103d6-f223-4a4d-ba00-865b5c31d91d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "92ce2981-1cdc-43a8-826b-a0380411cc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415df9f8-f01e-445d-a5e0-5b7fea3a9515",
        "cursor": {
          "ref": "9ea6746a-2d58-456c-b0ff-f625b1433288",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3e734a85-684a-45a9-9291-046f9bce1536"
        },
        "item": {
          "id": "415df9f8-f01e-445d-a5e0-5b7fea3a9515",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4216b995-e4b6-48b2-926d-035191742a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b04ca0f-b210-494e-aae9-de7132162eb9",
        "cursor": {
          "ref": "3a9e6485-350a-4689-8e5f-1fb3c3576bb3",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "980bf0e8-e51f-40ba-9d86-60bc6e84cf16"
        },
        "item": {
          "id": "7b04ca0f-b210-494e-aae9-de7132162eb9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ca3f36c1-bdb1-42d3-a169-204bd01dae47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda6bd93-0211-46ee-941f-1845ed82780e",
        "cursor": {
          "ref": "3692b8b8-7dd7-4b85-bd59-81e62d9ae226",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "435eca83-6b0f-458e-b674-b10a00756de9"
        },
        "item": {
          "id": "fda6bd93-0211-46ee-941f-1845ed82780e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e33df87-9301-44ab-86ad-0d2cfae711e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230301e0-69e3-4185-b58d-46dfcb595505",
        "cursor": {
          "ref": "7107f219-74ef-4ab8-9b4c-8625900edda8",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bb5a4feb-7b0f-4d18-af68-39449cc379a9"
        },
        "item": {
          "id": "230301e0-69e3-4185-b58d-46dfcb595505",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ba909d23-06dd-422a-b61e-117e9b7b5686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b37f99d-1cab-4615-9917-026fa5e4cc2d",
        "cursor": {
          "ref": "aec32a4e-da8d-44f1-9b49-48e52ed04488",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ecb0c5fc-171e-4b6d-95b8-832b62f2ca4b"
        },
        "item": {
          "id": "4b37f99d-1cab-4615-9917-026fa5e4cc2d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ea342ea8-da80-4213-afd3-6fa274d46134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48339b4-d78b-4ba9-aa28-5c29d6d7c0a0",
        "cursor": {
          "ref": "258415e6-73e5-448a-8a5e-670701bcf506",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1aaec902-3c29-4dca-8832-df1f78852a0d"
        },
        "item": {
          "id": "a48339b4-d78b-4ba9-aa28-5c29d6d7c0a0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1939be24-c186-4799-afb3-81543cf30ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5583b414-76db-4f8a-bb8a-56abd8984e45",
        "cursor": {
          "ref": "ec3f2c6a-c4e6-4c92-a827-e07c1e4b9f18",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "361f4c8a-ca60-4e60-9b05-bddda5dcda01"
        },
        "item": {
          "id": "5583b414-76db-4f8a-bb8a-56abd8984e45",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "49b6208f-b90f-4f5d-b60d-2af1cd9697b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d259e5c-7478-4533-a5fb-2c38f7bebe67",
        "cursor": {
          "ref": "6d1066cd-a0f7-4b1c-ad48-3af130ee2e46",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "67714b18-fb14-4b92-b46d-9bae59980431"
        },
        "item": {
          "id": "8d259e5c-7478-4533-a5fb-2c38f7bebe67",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a96e06dc-bd46-42fc-88de-5318e8626388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e9a8fe-8644-4d0d-a801-08303523c474",
        "cursor": {
          "ref": "30fe7804-96bb-4966-b91d-08b179cb7caf",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "16a46e47-74f1-4b86-9c94-cddc22b017f0"
        },
        "item": {
          "id": "41e9a8fe-8644-4d0d-a801-08303523c474",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4aa4d2f8-afaf-4a1d-910d-7d273a6ef365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc239f80-8f36-4fed-aa92-97fe648b1b63",
        "cursor": {
          "ref": "d486be71-8d35-42dc-9e2b-9d398b94baab",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e4edad68-80cb-413f-a6b5-6609efbae3a3"
        },
        "item": {
          "id": "bc239f80-8f36-4fed-aa92-97fe648b1b63",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2178d641-fc0b-4211-9217-ec1d87a7ae99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1add900-9dd3-4150-ba96-460c08cfec5c",
        "cursor": {
          "ref": "7206f763-8f58-4af6-b4a5-a5bc79bcbb30",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c0c9094-b481-4cb2-8da9-6ea58a5edcb4"
        },
        "item": {
          "id": "d1add900-9dd3-4150-ba96-460c08cfec5c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "db6e62d9-5d13-4382-a4fc-333e1bd40057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90557b05-085f-4633-a19d-6e46b84fa48c",
        "cursor": {
          "ref": "6d52d446-cb94-4673-95bf-cb9389aefc3f",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "902cd3e5-fe55-4386-bb90-466e940e377b"
        },
        "item": {
          "id": "90557b05-085f-4633-a19d-6e46b84fa48c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "600f5629-4f51-44c3-9e42-26131599563e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0effcbc5-6c8b-4f93-b069-c55c3aa351c9",
        "cursor": {
          "ref": "3ed2e63c-d9a7-4849-bc20-9fea1a8cc846",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c921e761-9583-49d8-8f69-fbfe9638da24"
        },
        "item": {
          "id": "0effcbc5-6c8b-4f93-b069-c55c3aa351c9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e13f677f-4dc9-4d37-aab4-eecc17dcadc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa05974a-7294-496d-b4a5-ce05a8d6e556",
        "cursor": {
          "ref": "0911b83c-3a3d-42a7-b6eb-3f498e9d7eef",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "34eb5d8d-0a31-4462-a496-8ad4d4b5e7a9"
        },
        "item": {
          "id": "aa05974a-7294-496d-b4a5-ce05a8d6e556",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3746b522-d2b9-401e-b69e-07e332779990",
          "status": "OK",
          "code": 200,
          "responseTime": 592,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b067845-d10c-447f-91d9-6f1f58565643",
        "cursor": {
          "ref": "d3186e5c-ff78-4fd7-901a-0a7c40df49e5",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a19f6908-72fb-4ab2-a2dc-62a2d8c7d5a4"
        },
        "item": {
          "id": "7b067845-d10c-447f-91d9-6f1f58565643",
          "name": "credentials_verify"
        },
        "response": {
          "id": "745a3710-a148-467c-9cfc-e4e1bbc8085b",
          "status": "OK",
          "code": 200,
          "responseTime": 1881,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d379e2e7-a357-40d2-a8c6-c5c616816229",
        "cursor": {
          "ref": "e9a7390d-0661-4d25-b343-2490e57a1cb7",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d60eccf9-51c4-446f-8c51-605548fa3829"
        },
        "item": {
          "id": "d379e2e7-a357-40d2-a8c6-c5c616816229",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1df1d45e-9385-4103-b8e2-77da8fa25382",
          "status": "OK",
          "code": 200,
          "responseTime": 2007,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b8211-06b1-4f9c-b1f1-ec3ea3f28d8f",
        "cursor": {
          "ref": "6037a4f8-40bd-4d9d-9a41-783b086d9282",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c3249a1b-2378-4563-940b-689b00427d10"
        },
        "item": {
          "id": "f89b8211-06b1-4f9c-b1f1-ec3ea3f28d8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2106245c-8494-4964-88e3-9c8da2373975",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b8211-06b1-4f9c-b1f1-ec3ea3f28d8f",
        "cursor": {
          "ref": "6037a4f8-40bd-4d9d-9a41-783b086d9282",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c3249a1b-2378-4563-940b-689b00427d10"
        },
        "item": {
          "id": "f89b8211-06b1-4f9c-b1f1-ec3ea3f28d8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2106245c-8494-4964-88e3-9c8da2373975",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9d0e71-0b10-4b15-a8b8-d2fe671e0d94",
        "cursor": {
          "ref": "e3edaaf0-5c23-4b50-ba57-ee5ac1d1c426",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7fe42845-b981-4e7f-9099-c59a79699c4e"
        },
        "item": {
          "id": "4f9d0e71-0b10-4b15-a8b8-d2fe671e0d94",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4b788bf8-2276-4128-b208-b59cd258d2a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b504aa-d26c-45cd-843a-a426bc4de97f",
        "cursor": {
          "ref": "8477ace3-6e83-4a71-be0b-f83d6ce48018",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a9fc3b6c-6c8c-4d73-be6d-5c8116a7d33b"
        },
        "item": {
          "id": "96b504aa-d26c-45cd-843a-a426bc4de97f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b906a8f8-2a06-480c-9a6a-cdd3bf7146ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}