{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2f4a2533-dcad-4d03-82db-31609b6390b6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f3c1f40c-bb79-4897-bf18-bf27568f4c59",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e73b7590-3352-4f7c-8485-ccd531f7a244",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4c0507b8-6e84-4eb3-a307-1bf0b5604938"
                }
              }
            ]
          },
          {
            "id": "97152174-f349-47f5-90fb-ac9cc6604fa8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0fdd49f-ee94-40ae-9061-23f502c75e15",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fde5ec24-081d-42f3-ad75-d0b2afd525b8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "04fc6fbf-486c-491c-9540-966d92e3b791",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "be79f5ea-1a50-4b6b-a74c-5eb4856bebe3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6d86c5c-7418-4691-a6e3-d7288f8fb913",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fb2f771-af70-48f4-b072-76f498e41615",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7a36769-501f-459d-8e02-1c12d09eae28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce787ff9-5426-4bf5-8c26-ad289c90a05d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e368d4d-c335-4175-836d-690b11d4af03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd4d128b-f7be-4281-acd5-672a7c0c2809",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfd555ac-f107-4efa-bdda-7912085505ec"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a855213-4410-4068-b1e1-004e698e31f6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "56af5893-36af-4558-bff8-b0a5bbf63aaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1755477a-5785-4d9e-8802-29d4a80b93f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e952d68d-88a4-4af8-a206-473380446ad8"
            }
          }
        ]
      },
      {
        "id": "edbde7c6-3ecb-4a2e-8170-a0204373c199",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9d960a55-8477-4116-8dfa-cb9e9f77c3f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe69e004-9d6c-4bea-a133-4cfbb045d1b8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73828285-1122-4b98-9873-466d595b62c6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25929f58-fdf1-4d0c-b40c-9aec3b3b6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ec47b24-6e11-4c7c-9e2e-2ded643209b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e996c3-c834-4200-962e-ce665a1d978b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cf9793-3780-439a-8b49-915e1477477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5d800ce-99ae-42f9-a19c-81027b3cb2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdb1eb8-5f06-438e-ad4d-4ae858e913e6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35813c84-1bed-4929-9966-0d115800ecd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d3becb4-250c-4942-b340-54cd6369eac2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20ead64d-e4c0-43b2-9022-b2036d11226b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "522536d3-096a-4984-bc87-ff122ca2f748",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1ef97d-e26b-4d8b-bde7-e6458a505286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04cd6c9c-71fe-4e38-8fe0-8426f156295b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21768b6-0e09-42e9-9bd6-9b4a5b8df2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49904131-5e50-4002-85e1-cc0a9493e353"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a7bcab14-25f5-4d72-a083-a9ffb571c96b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8113ebb3-b354-44d7-8475-017013167f94",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d292bc1-a21e-4ebe-aa46-70d29b708258",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c135bb70-0319-4619-919a-9af9fca58407"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dde7ce65-ceb5-46c1-bcdf-e45185803986",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3a880e97-de39-4ad1-acbc-f79b45bd7c25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a560556-e2c6-48d4-b17b-8632600471e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c34d76cb-aa73-4c22-8a3c-2df51fa27c71"
            }
          }
        ]
      },
      {
        "id": "ff07de76-30af-4a93-ba39-a152e9a3c8b1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "355be7d3-eb17-4dfb-9ff9-53091b667796",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3244e98d-7cfe-4a36-9dec-ab70feda9bf0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "12e53dd0-48f2-48bf-938c-352798520066",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd09cad-4e89-4ed1-a422-db395ea25e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c548d4e1-562b-4e20-85d9-875702e0c67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e32fdd-04dd-4c5f-b58c-6df510ad76a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "482b24c1-6b97-4a69-8509-a23e17046ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4b7779-cd70-4b8d-8b93-20dc8f64254d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2332e17c-2967-4eba-9dc7-2246965527af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96dd5de9-aba6-4646-9665-3da07754f1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7e381f-bcb6-4e76-96f5-7798263acccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "129d20f7-d2bb-4cd9-90dc-54413fc33328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88906fb-ec67-4c6c-af54-792dc31c071d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396a2b5e-650f-47f6-abbf-eb3c355894d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90dc508-c0e2-4aae-929b-f4541e8ee8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6fe69b-6ff0-4572-bcb2-d7cf2eecfc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "194f2dff-8ae8-4183-a131-46d8d4c24b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dee3a0-1c97-41f7-8229-aad4d2262603",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec47dcd-ad29-407a-ac78-6b1f48c93e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639e0500-f5b3-4239-bb5a-b21210c5d761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dda744-cee5-48e4-b734-e0628dee6e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "839e6bc0-c9d9-4ed1-8baa-5f32009ccc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c725a6d-d1e8-41c3-870e-45cbfb28b7f0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e16f80f-2aa9-4551-a847-1684277b5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb8995d-856d-4755-8686-2f3f1d663ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f24fc74-4b14-4f35-a696-3e79629535c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3083fe88-ac38-47fc-be8f-a2d8c98e7feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc71abe0-f59e-4799-8d2c-47d85708e7dd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55121fab-8ce9-4210-b6e1-ae3e2944b8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f16dd85-ebb2-4358-a4d0-8673a0d37d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9ba44d-e35b-4f7b-810b-11769758285c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc46c5a9-5907-4912-a6d2-7662eb7cf61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2de066-8fe0-4ea1-8b3d-ba9033066967",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca84dc21-fffb-44b6-9283-f774f4b77ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d9b0f8-2f94-4950-8a2e-88925fc36376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ab456e-4ae2-4d5c-b66b-2eb99b9ba831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5795041a-a8de-472b-ba68-7cdc7eddbf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb38474-c12c-4315-a878-85860bb62d17",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12226c6-fb33-4db6-9245-294b5df7fcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf269949-b8ac-41de-b12f-625beaf3dc4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b65281-eb24-4f3f-9a2a-ce58bfd18a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95eedd81-ddce-4b6c-b48f-7e9ca7807f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0fafed-1d64-4605-aebc-defb3052feb4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde9551b-6e49-47bd-aea3-6ed6cebf257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e651aa-c6b1-42fc-8e84-831801444bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7f42ca-f87f-41d3-ac10-0a7cc86d15b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00865470-571e-48d3-bc8b-f44155629436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4faa5f-8107-45fa-bbc7-b18c41baf5f2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f07868-d7c4-48fe-910c-cefbbf5e8b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1e2aa0-95ea-48ee-982f-d8fbc5d4700f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb635dc-83b2-429e-8f41-b7ba693061f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "392f6c91-ac26-4fc8-a546-c7e895a41a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f0bf8b-68ea-449f-9be0-56fe100545fe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0877d7a6-bbc7-448d-8a47-9394db12bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec6aad9-decd-4ad8-8b76-06bc174597de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6866d4-9c2e-431b-81d7-09d9aebbab17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97af0fc8-0e15-4622-9435-a3fe54715222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f24f5b-3d1a-4892-b5f3-0ef8e2146471",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0500fc-e865-49d6-a490-69e15c1b794f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b642efd-e824-4aae-817f-af0ff1d96d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a4c418-2cb5-4814-94f4-5825b11fef8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fe1ab5a-1621-44ce-a1f4-ccb84911bb80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495ae044-4d2e-4ce2-a385-a903c7d204fa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72c3007-05cd-49f1-b921-b904b33316ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f668f03-c742-4c88-a267-fadaf4b6cc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b3e33c-b000-47d5-8e71-8790071f701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84559097-06bc-415c-8c91-f9ab0fcc52fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90653096-059c-4ef9-88f6-2996ff4564f8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3a1556-3555-4a57-8b3c-18aa6df9c523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085b21ce-9623-4d23-b879-4be57d6b338e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57b5527-492c-4329-8488-5a39c71edc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30cc3ff3-1eac-4caf-ab2c-7a2a38881812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab8e994-3f60-438f-88b5-98c65104b48e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713be7b4-de98-4617-af54-7a9671c46281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59abc2ce-4f2b-41a1-bcfa-33f596a9fa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56a227b-199f-48af-956e-7e8c6e9c9722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f372df4-1239-4be9-9d67-9f4ad64e4483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8f2650-63b5-484f-899f-834b3388d764",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c3e10e-0d12-496e-9425-72183bf30a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a53ca02-8a71-4510-95b0-c1dd36dfd34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb94b22-bf4d-4ac4-aba5-7620f339db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bf51db1-2054-4a65-bbab-429620c8fc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a202206c-01db-4d00-a3a4-8119b976c6c4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaa9050-473f-4aee-9e6c-c274f3a0857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b25c457-2a9a-48cb-b19a-a40b4cd18d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5a33b3-35fb-4f12-a609-12733559a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51965632-d5cf-41f1-aa64-3f2df7a950d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420008aa-9165-4095-89f9-a244ea1cb9c4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc23908-9c84-4318-a1c4-5c582ea0962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c2681b-9d5f-461d-b81f-7cd141914993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e517141f-bd9c-42b6-aa03-1ec966395dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "495a79b9-ec71-459f-bc12-dc09ec9bb448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3ef586-2424-4a6c-992a-1c1473c1fa03",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33193acb-6561-4bef-a9e5-b92b6b5ea22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf4e407-bcc2-4b48-a9b3-ec87b69fcff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4172a919-f740-4e4f-a83d-c19f7f7a4c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e011d583-aae0-4008-affc-c8a599d343ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b483702-e70c-4348-9abf-9285683bf57c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728cec79-6d1e-46c5-9965-5e4d8ecc33b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4b9257-e009-4d62-b911-28c9c8c387a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaedd7c-deac-4638-8cf3-d18dbb390ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92351493-1b70-4386-837c-6c0afa2cc39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3455a1-2c63-476f-827f-bdebecc99347",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787981bf-1425-49a5-84fd-0556bf7e90b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016a0f83-deb3-4f71-8dff-2f7e45dbdee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9d4229-8d13-40c1-bf74-287879a25edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eaec3a0-ea51-49db-82d0-541f37986a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876bec79-21f4-4328-bf86-7efdc5c9c411",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16a2297-7f95-4931-9c34-9c5986e3e5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e10ff2-7b98-45f6-bdcd-2b3187b7ce1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66114ae0-1d9f-497e-8869-e0b040e086d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c8d002-1410-49a7-a99f-d3b545f927c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65efca15-9d39-4fe1-b174-9b04f522f911",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f6e8e4-857c-4d2f-9839-7984c38bb1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c702d53a-03cd-4fdb-bbb8-47f74bd41000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457e1053-2613-4991-8600-b56b70cfc906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a34202b-1045-4c29-b5ee-bbb4000c521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229d9445-3240-407b-bd19-67976356bd04",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9e7adf-5d04-463b-8dcc-d3cc4278f945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7de563c-ac35-484a-8e12-f4dfdad50373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277af80d-3371-473a-9864-7b086afd3dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb9a49d-ba50-4ec8-91d6-34b10c1e24a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a286df-ff49-427a-a16c-27fc793316fc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e7c0c8-f888-4414-84be-3014f689dcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d40b1ae-821d-4ff0-ba63-41713947169a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3287060-d088-4399-b223-ed9cbc13b06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c1a14aa-1b58-45a8-a2df-431a5ecdb9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de829a37-d07c-4ba6-9adf-2d40b3c43894",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c12757d-226a-41db-815c-f93bd7aec915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3534bcd-730f-474e-83d3-f064d5ec15c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a4ebb5-0c58-4df1-93b4-ed0f299cfd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "420a9f78-c78e-46fb-8579-e2de150b9389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f3b4eb-9119-48c4-a723-564cabfe9ca9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d982d82-0038-441e-84c9-ee398f399535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84abc2c9-84a0-4388-b8f9-76934a1ed5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df07a9e4-d523-4119-841f-b24c0449e075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "763df234-55d2-4dae-bf23-db52d460f87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ca0d07-866d-4b68-8f73-75c9e7a4d0bb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60550380-4d92-44ae-a078-ed44477071e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937fe806-4e68-48e0-8bf1-3eaf2a376772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c3f883-9610-4120-b51d-ff6a078635fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9fab9d-98c3-4dc4-baae-c3878f0a56c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88da8c2e-75dd-4b7b-9e5a-206e7bd50fdb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82afc66-8f33-4b20-ad41-d13b0123e9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34a9210-0dc3-44a8-897b-90ab7c880f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bc7609-7dc6-42fa-826b-57a15ff36c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e1e863-baaf-47df-82ee-1ce888cb5c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6692d586-02cb-4cbc-9c1c-b164db4ebe44",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df03aa0c-f2f3-40ee-a688-d009f33783cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99076e24-6f6a-4416-9da1-1da0ef449a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f34872-db45-43c7-bcc8-9bb12c1366ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7c06dc-23f8-48c8-8f4d-4f0a8d0f6c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687d48b8-2ba2-439c-a7fa-65ae9e8f2d88",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8766d98-834d-4f45-be72-00cdba048c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a976ed-9559-4dbf-bc79-747550707ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3432ddfc-acc6-4d58-b3f3-4e1c18085fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8830e978-87b2-40dd-a133-9352015cbe95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db2400e-84b3-4634-aa5d-b18e9534c1cc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3863b0-94dc-4683-984b-51f0606b222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d121714c-24d9-44c8-a05b-47ee420566b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3169400-e6be-4772-9e54-6393c19cde9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c271bfc-e810-4ef3-bfd7-4c8f5a988f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d02ca88-a2ac-4f65-8b4a-3c7e9e961bbd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "412a4daa-d6c6-426c-a3f1-75c9cd1f442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb44aa00-7b9d-4f02-82f6-132d4c278dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eb5355-1250-428a-9a58-12fcd2cb2135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a0bbfd-40a4-4498-b12b-040703d65fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28333e4b-eb38-4a1f-badf-58db6fa97f95",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b657a68a-deb1-448c-b2f0-47ea17d8f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7cde37-d063-4066-a342-e3419c75e5e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df60884c-769f-41b1-9ff3-374585f2fae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0174aab-f408-4fb4-bad1-c9682b7897eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf7338a-71a9-4c92-8458-bcf0934025c9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84374f7d-66d7-4307-ad22-a05cbfbceb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1e765f-5ca1-463c-89dd-ed05f88b5d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcbc87a-aca0-44cc-93b4-0c22a6f59493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a89cfd36-6d4f-4147-abd1-3fafa205d4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856a95e0-b6c7-43f1-9478-a9a9f65990bb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d24f5a-2eda-46ed-9d5d-4fb574f3b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb5e55a0-fb88-449a-ba11-67695a6fc4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda5071f-fe20-4541-976b-ec340b36f2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e76357f-efef-4aa5-b8b4-6ffd449f9e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28cb855-a116-468c-bc76-62019f121afa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05768ed-c82d-41fd-b065-eb773e4a3ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b285897-2c4c-4df4-a1d2-48fcd221a977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f54d91-38d8-4127-b737-0e7596a272d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d888403-74e6-4072-aa76-8b7362d4c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9368de2d-ff90-414e-9bcc-6da1ba135ea3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0847b5-6e46-4995-bf96-dea4b36c2b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0805d975-710c-4987-8544-7a5e66fbb8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67349356-063d-42b3-aa08-fdd25466d307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0156b45-e832-4ec1-ab79-516858e735cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5c8b3d-fd21-4521-8982-79617fad716b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f22bbe7-7020-48cc-8a53-c5fe80c1cd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970b39b8-9a58-41dd-9915-ce6cf81078ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f482ea-cec2-4b78-9e29-ec2a36a83403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7956c43-5310-4135-bc1e-a3d6eff0d307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efabedb-75fe-4309-a65e-20c4b6948e2d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51845fe7-f3f3-49f5-b773-5f319056d351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1fe581-05e3-4f67-810a-5fc739dd5da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b54f86-5347-452c-a8e7-8ec6a430b9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73645e19-4db7-4e32-85c4-981263d23bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e0de24-c94e-446b-bad9-969dea9c30fe",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5e08b2-0c07-442f-925f-e0a8eb0db784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2a4d5c-cde9-4135-a3ab-d554eebfe509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbec947-e5de-4c58-a443-822fb4b831dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "94b794b2-f914-4587-b183-4581890f1c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1342b4-58d2-430b-bb4b-86e1a02c35c0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de879092-2823-4d36-9932-ddf214254e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef283d0-5a11-4497-8577-8a87620adda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4a83cd-e921-4a92-8167-4a4ce6b2cf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3dddea78-8a4f-4ac9-97a7-cf5ac5ccad6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb96419-a115-4852-bad5-b8a7257989c5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51f3325-f8ae-4f6b-9bcf-9ae9af5305f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6acc3d-084c-4478-94ac-61fbd968b50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8269ad-a2e9-4918-bb45-3dd071ab1eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a10a15b4-999e-4697-b64f-4283734d20fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9a16c3-a583-4054-9402-cb791f6c15eb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16762b53-1c21-4acd-9ae9-ded339909769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2470535-9f2f-4b3e-8398-7b048a149128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e92516-3dbf-422f-84d5-8bf313556d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c433505c-4e24-41e0-8c80-ea8771753e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f76eff2-3a81-4f2b-8c3e-5f7a0ac6e6fa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39446d2a-0de4-49b4-a7d6-f7cc11b00711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6171ec8d-a48e-4a42-aa69-d2dc0814a78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bdaaab-2059-4c6c-9541-5b7a59964bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a62a2c4-e0e1-4b45-9006-21a0e65e54ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195ca3e4-4c92-4348-bc81-cfb9550f9679",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e68caa-a8fe-450d-9f6a-3bde3f3d4eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f65f8cc-4ec1-4095-ad7e-c34cc0b06c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71879b6a-612e-476d-853b-d0f899c760a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3385aa6-3061-4c17-96c9-3e860504a1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873dd179-1155-4b2a-9182-4c82d0bc6728",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a878545-0cbb-48bc-929c-87539540ac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae6dd51-9c8f-4e88-a82b-93fa8e5ec900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca750b52-6a7c-4a0b-bc4e-e59316b34816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9005f0-5f06-4322-92dd-b9e91c1ede45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2055af4-998b-4d8a-864f-3bcacc2efce7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f742605d-40ce-462b-bc8a-81802c7f3053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2931e28e-1b66-4e37-9eaf-df60cb7cc372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b251a9a-7cc1-4d86-bedc-65c1aead1927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47d5ecb-9b57-4546-8324-03cd42b52bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853981ba-4ad6-48c1-891f-4bb010bc40ef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2f6ef8-8c97-417a-a613-3ab841ba64d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c7129f-a2d0-493b-8f54-6a6a04d98d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12df4987-a5db-4724-a885-a388df59fca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5980ccf4-decd-43d4-af65-56fabb89295d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39130ddb-c8d4-4e9c-915e-ed1cf31d3dda",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c6cd40-267a-41e7-857f-db80b5a38492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c701d5c2-38e8-4b0e-b62e-eecb6d09c43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e704e514-5f06-4fdd-8c2e-7fb80186dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adf8f8f6-2d55-4419-8139-1199e80289bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bfe0af-4932-4688-a181-997b7a0911da",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fc1752-5cf7-4ef6-b62c-4c520fa7817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc290d65-376a-4cd7-92e5-bb744ead3c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1ee8b6-bf61-437d-adc8-9c8388b362b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33ef3dc-cc36-478d-a32d-f5b9e667ca02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b41f872-9456-4c9e-9376-c292e66be8b3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a0c90b-e0da-49a9-8e21-d2d94ea5a39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc55527-e2b0-44f7-ac0b-e39f6f8286e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b35027-ad1d-45a6-8b5e-5021f768575b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8434179f-66c5-4685-a391-fd666fac73d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df913e79-905f-4f37-900b-c3a8fa4efdb8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af49218e-f828-4d23-9452-5686212c2618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714ed43e-66df-437f-8c7c-ed519ed41c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54aa52e-8612-4b52-923f-c1ca1ff2e1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e931597c-d8d6-4248-8557-ea0c30e53814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec265c3-1783-4306-b390-8b593fac4311",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bdc865-0f0a-4931-b661-bead2e3a202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5de1a36-12e2-4923-a1f9-cc51ed66d3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b076425f-1a22-492f-bbc4-c43723e440d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "802ad934-bfe8-405d-8721-f2fd2b052a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e06c876-731c-442c-b372-47a1776adffc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e29ca23-3409-4c67-a622-0fd1e0cd1d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be763e5-5be2-45d0-b929-6b54e85b6abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbead8e7-3711-4333-bfbf-08ee3dc4258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0d7fb8-b0cb-4fa5-aaaa-ffc58b5b7eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f87a4-dfc7-42c5-9896-41bb771cc3e7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c055e4-758a-42e8-b0b2-38445a5eb8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383de0f9-114e-4f32-9214-ae02e210da62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62ae741-67ae-4752-88aa-f92d3a7cb867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c84d8786-eef8-4392-8644-93d414b9e535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb4c98-14ef-4d52-a0e7-b7c246ef499a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801cd99d-3e21-40be-aae3-a34fc521edb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b51f0b-afe8-4c24-bd98-e6923628e148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c212d7-a9c3-482d-9478-2b573b59e4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "757cf124-3633-405e-8a0e-7ab861e3526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eacf68c-5d46-4707-a45a-61fe51ebc5ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36457cdf-eba8-42c4-abc6-0723dbd0d551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24b54f4-0466-4056-accc-d6388b540623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860b94b5-81a8-408b-b6d5-4dec7882b7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6164fc-75e8-48b5-9c58-015a3696cb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5c809a-239b-42e5-a58e-7100d120c308",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24eb36f-1820-45b1-a665-b5394c1de540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc69f00-1a29-4422-b5ca-333337561777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ae8fd5-265d-49b8-baec-5d58d9b024ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64a38c12-7d1d-4ab6-ae8d-d69063610267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abfb2c9-41f4-4d07-b705-9706051dac29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b045185-6e54-4b92-aa9c-f176a37be335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be212e0-662c-4bd1-bf6b-bbcf69dfea7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa003d8-5f79-4c92-a3ca-c99679241152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd64da1-b413-49df-82ed-d3bcc59d1f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40592c20-e9c4-4411-87ce-4dccb9a3a12d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cea619-3ff8-465b-b7ab-bbcf6f815099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda50788-56df-455c-8e87-2b48927f7724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b922e87a-27ed-42c9-a999-5d53b64717ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f450c50-523b-4b88-87fc-d04cbd49bccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c2afdb-5840-4a2b-9fbe-f051378d1e04",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4b1412-826a-4f52-8acf-3b6cdad84eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9402745-d874-4be5-81fc-fa408cd4b72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e8c7d1-67ac-4861-8618-1242a38f3ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b38d2b0-7384-46b9-901a-a9ebe9f67469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a636b9-32af-40a1-b3be-867483eb0c9d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c98868-d645-4494-a80e-c7eef06a7fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c404d30-231e-40c9-bb7f-6a5444c79a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a809e301-2257-4351-9ec8-d10d5d117b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c13021b4-7a83-44cb-9faf-4fb6c9c80ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1273e1a-b84e-4201-8240-7fc0131dd353",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b78c92e-bf5e-4723-96e7-18492039f1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b2fb70-da81-4e00-bd12-5f152e5be3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3439154a-67d8-452e-a803-acfb709e24fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f92a181-9ea9-4db7-8d4a-21abfd6923e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3fa3d7-a993-4f0f-ad5e-ccfc612cc68c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d172bca-a110-4f2f-9992-ff7ee2486647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7fd18d-59c9-482c-827e-8eec6b142423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac045a4-51b3-48e1-baa9-8e50a61c89d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65cee27c-c03e-41c7-a6a2-56f0bdb794dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081bcc66-c05f-4087-abfa-b0ba2799a4fe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc0c38b-c0a3-4fc3-9946-d02e4ea432b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe93edd-058c-4268-9649-bde8d3ae2959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d60dc45-1cf3-4f70-852c-1f5954a74a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f64d962-777a-41cf-9d79-448e1882d94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5844bac-0a93-483a-8edc-e87bf4b573cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059f4461-d76d-4b9a-bd21-12f3b6e101fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6187c37e-7314-44f5-8e3a-b22fb7bbf811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8db6891-3352-4354-911e-d0e5d5846c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db400546-397f-443b-a60d-72b6f9e4437c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2110be2b-c82b-4689-8a76-8f93aecbcb28",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b5fd53-a5ac-493f-bc87-0741c285ffd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7797662-a415-49a3-bcb5-6e8b4e137d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b0e97b-b91d-481f-b208-4656ec3691a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d12c3342-fc88-49f2-a584-fb759537bbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25853f9-c96e-4705-9bc6-1bd7560d0cc7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84278c60-e71d-41eb-99fa-bc47f1d4e298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d390d0-aac3-44d7-87e8-bf8e6c7b4102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dda68d-3843-413a-a7ce-d94f08420436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca44637-f4d9-4569-b2e0-f70798c4830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084e2ae6-e309-47b6-b9fb-f2f233e296d1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feebe8f7-265f-4c46-a42d-b97be382c6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaea63e2-ffa1-4ca2-9b97-d2d6216cb3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a761352c-5e87-4d02-ab0b-fe6974fe3f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0376b4fa-4ca3-4c13-b2ac-d679957a5604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b9b9ba-a420-476b-93b5-ae81818d8724",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3befc762-1dc0-48d5-9d28-70c16623844a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90358ca2-1c0b-490e-bb85-0a4701d5add2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3670d952-4342-4d96-a4c3-3e4977f1cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "450d8aec-352e-42e5-b901-060b19e7796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21712447-6837-4b54-b326-5d8d0b41da6d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ae11af-7650-4ad0-89a7-694cc467ec20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc2f750-2999-4f86-9fed-a92fc51b7da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712f79b7-ac34-477d-ba1a-da4c365907ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcb2ee6-e626-49f9-94c2-622c6b2f78fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9924e68f-c800-46f1-844a-af0195199999",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a08a965-f39b-4283-8820-e5d352532052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e202f63d-2e46-4bc6-adad-9b81d5c3eb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44e26e-4bba-4a0a-a2d9-eb7557b3f0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd19d07-2a9f-4d61-b20a-d46c97e8818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8632239-5eae-4df4-b5e8-0dcba4bc49de",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e573f4-5125-4ab3-b7ea-3afb025f620d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2498e9c-1099-4198-b161-db163bf43265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda8fa1a-8f1f-473e-b197-292bc873577f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa715ab1-7bff-404e-9398-7b17ff2e6bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3728a40-1510-4f11-9c14-b47e2271ab3a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d2cc2a-9da2-429a-a463-e6f4ad8d6770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157bcd4c-80b7-495f-a02e-98c224720603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3af7b4e-8eca-436e-8a9f-e234f61808cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40548593-25d0-4ccc-a9ed-c1d30592b1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637f346a-0a34-4ec4-a22c-6c443ba073bc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87477108-45d0-40eb-8a4d-0fffbab82143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bf9a92-b526-4d31-8b33-59d10e3a75e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20460197-9954-41dc-8029-96696e1b6085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f892495a-e108-4a59-bfab-2948a5472afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076d4b06-63bf-47b6-99d0-240faed0d278",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df764e2c-fb0b-4f07-83d8-0d5f6876114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d420873-d6d2-4a2d-8b0d-1340e56eaa6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8579b1-29c4-4a32-98a5-730a0e6be0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c683be24-2530-4041-9f7f-ac7778617eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1268c56-245d-40b0-afc6-5add158e7025",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd94c88-8818-4492-8136-4968c9a09551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbedce7-a73b-48e2-83dd-fca25607f65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a55a6-d07f-4bc8-8586-33c290fdc7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9e1301-25d7-4e2c-8e58-8ff6efdc26e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54706780-9d9d-4a7c-8693-be4386ce5305",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae7d8a8-1934-459a-9d0f-0b8eb0db4cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1b44ce-0c81-4d11-8828-9bd2d1c3854d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bbfb48-6eb2-49c9-b5bf-7d97b28ca01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42a8f56d-5bd4-4b59-a26e-7c6b029b4743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09149b8b-f1c3-470f-b688-3ba9eedd6138",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daccaaf7-0adb-41da-b5bc-43e898d0775b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e20e97-5a97-43b0-80c7-eb1691387595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d86234-5c5b-4614-9d95-909a6352df37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "947d4984-662a-40cd-9e0e-8f3279edca8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390d8546-5b81-4133-b87a-c4b4ea6c62bf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87ad297-07eb-42f0-aa02-1ac28a09cd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a198ae-10ca-4e3e-8111-b3428f3ff32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0cc8b6-bbb0-407f-b7c2-53ac78df0b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc6f475-0304-4a6f-91b0-4ae1bb85d882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5210be28-3a65-4745-b522-e5347a0ac163",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd61cb18-92f3-4e02-b753-b375a3991ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8d3fd1-38df-4fce-bfdc-1339b358a895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea04ec-0453-41dc-8548-bc7b70d0348a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46486660-336a-4162-8737-a0d958e19bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7510ad-a7c1-42fc-8ed1-40d2c5feb807",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92b5b13-bd8c-4065-9330-0a3f6e7f0797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28a3bcf-f13b-442f-adce-590ef3a30583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8750281-4c8b-45d2-82e3-1409216743f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1325a2-08d6-4a5b-8342-8954a81025dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62d3cbb-5aa7-436c-ae8c-f14314c0c70b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39d11db-d444-41e4-9432-2be69e4829bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2d8792-fe4b-433e-8449-e4c120a9c59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b51ced-8c36-4858-80c8-4821288d58e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b13bb9c-2062-43b6-a658-7de1907861ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82ba478-b972-4b2a-9699-f91aae8f39dc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e8ef5b-184e-4305-8dae-e51a5d0216fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4960fb5b-6fbe-4667-9428-9ddab2fbb830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d78b315-e5e5-4e28-a237-e11ca956a40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "296ac398-5559-4c5e-bb46-463a0a78a4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bac809-e69d-440b-b4bd-4b098f5f9856",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6593ba0-8380-4d5c-ba82-42457b06012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbb514e-90c8-4b69-bcdb-cd53d41b028b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec97db8b-63c1-4583-a113-b31c4529de02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "396bc487-f88d-48ca-8441-8e2863c54615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a490af62-af80-404b-bbfd-8150c2ff4ed0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88e5be3-d9d4-40f2-96c9-9b65abd77b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93e0353-eec2-488d-8179-abafd67b5173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29b64f9-751c-408b-9983-ffdd9dd91889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "88f3c526-2b10-4455-955c-0dcc2ffac8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996adf0-9a37-47fd-9cba-f41575f7820e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b69c14-784d-447a-92bf-cab83e392673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6fa97e-0969-44ee-ac32-7c237f9f833d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830e6b7f-9833-4c77-bc66-b03f05b98645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "338a037b-c9a2-43bf-92b9-dc2bb774319b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b96dca-312d-4144-b2d6-f7432fcfaaed",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15cae70-4f22-4ece-b5e0-2744834f6a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931ef607-de7e-435f-a04e-c9d2cfb2fb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e8da78-26f4-4055-a871-fa7d2530aba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1254ca21-6ff8-4753-832e-a997559bb740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65939e2-48d9-48ac-99ec-32bf03392ccc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d8d5ff-02e6-47ae-a04b-7794c1026c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5559741a-2106-4e42-b7ad-25b9d22ee704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a65441c-da7e-4cf8-a26f-a1c050d6636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a94a8cf8-99ae-4cbf-938b-9fd88bbbcc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5dfa9d-9bac-4b5c-b17c-2332f5c9490b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc8bf1d-2d49-41c3-abba-5a4100e7f192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9122316b-0eac-4883-8d3e-74da6e073a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c595e-205f-4f7a-bed4-f59af227d782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "536668cb-532e-4d1e-8960-ed035c878016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d61292-ded3-48ae-aeb6-43ce5ae0a4b2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401e16ac-32e2-4d60-b3e6-4bae09a2fbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ec0431b-d129-459f-9c79-306bf9c1a0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010bc714-b1ab-48c3-8ff9-3c9cef3a1bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd482e05-d911-4bdd-9d11-24a6bd6bf538"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de7609e3-fecb-46ef-b0a1-7205e4c990c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d12f1df-4ddc-4a91-9b30-f6b05d22cb7d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878b0023-1367-42f3-8107-fe6163020259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd6ed909-2133-410e-995a-f07365efa7e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f662007d-b1af-4e9c-adc9-fd34ccf910bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd56cda-4ceb-4e7b-924b-06721cc41305"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a7a5b98-9824-418f-bbdc-278b5e991172",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf54d3c1-6d64-4f08-b2f1-0663a92c6e78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "222d3894-d947-4d0a-85f6-7788a58f913c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "062930c3-ef5f-4e74-9fa2-4d63999b2547"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "924ef0b2-3329-4528-a4cb-1bf2fb13e3fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b9a84db-6e00-4bf3-94ec-4d71aaf94aa9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0365c84-69bb-40ec-9446-15dd943a8b2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c0525df-5856-4626-8188-35c6d82fc1e2"
                }
              }
            ]
          },
          {
            "id": "395da16e-e34f-4439-9590-9a1fcdb82510",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1bd8c59-0c77-4922-af8a-5fd5a245934f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb3f2af7-b7cd-4044-b4ff-ba10f459e445",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a10a849-c16f-4f74-9a41-7bc17d2c3b19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86441be9-d6e5-4f80-a704-64b64d2a12e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a10b7cf9-3cba-417f-81b7-7e33e0b538d6"
                    }
                  }
                ]
              },
              {
                "id": "96a83a42-0e12-4633-af60-c4919a22f21f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d1889a4-8438-4b6a-b72b-5203b82346de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95045d07-0a35-4e16-9554-150f9997ef63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "100ff495-a680-4c06-a14f-9cefb16ff95c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6c7eafd-5130-43a5-96da-b01955588c06"
                    }
                  }
                ]
              },
              {
                "id": "89dd2fd1-33bc-48a6-9886-c01cdfbe4564",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fb29b1f-398c-4c1f-ba95-b36bd0a16b76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b1eb32a-447c-41a0-aacb-b9785ea36233"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7e1c00a-36a2-4db8-96ae-8128e4891f2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab56ed4d-fbf2-4fe1-b756-742548685600"
                    }
                  }
                ]
              },
              {
                "id": "a77ea6d9-2c01-4122-9e77-d173ce4faa06",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c9f09b-892f-4a49-a411-b0e0a0c10a51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "daa8fdf8-0b37-4046-ba87-e194d29300f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d9a8be6-c22f-4845-b8f0-1bba66410078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6aee83ae-627b-4f80-afb5-4063ebecfe7e"
                    }
                  }
                ]
              },
              {
                "id": "e736cfa9-f002-4f40-9563-6dab7fb22b3b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4831d8d7-fd70-4bed-9a6c-a269e00c3c66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0acbba3-74bc-4f66-9131-086c29d1a12e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10f271a1-ccbf-42c8-8c4d-822c45e6cf26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3f772af4-1f21-477e-aace-065bb3412475"
                    }
                  }
                ]
              },
              {
                "id": "629be3a2-a640-4d6c-ba79-eae6d13233ff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc1c0dff-52e5-4929-b679-6f84cb04478f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95b91745-40cd-49e6-979b-b6f7bb56f7de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fea4ab0-e4f7-4ec0-a3c2-5136ae8bb706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6fd86c4f-e1ae-4feb-8191-5a36ab8e1ea0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b9faac6-b7e1-4f32-bbc6-672a850575e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "310d0e11-9041-40d0-959c-bf603174572c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eeb7ec85-25a3-4384-aaf2-e816586d25d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35242882-4e75-4047-bae6-38c9dc585397"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "227a46c2-5021-438b-a7ac-b1369a636c38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "929aa163-2ea2-492d-ae71-d488d72e1f2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1c7e74d-4f02-4538-9e2f-762c73251b6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "497c1a61-49b7-4988-88e6-c8589cd67b4e"
            }
          }
        ]
      },
      {
        "id": "2645ec06-7bd2-4945-9a7e-54f1383441eb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e5e854e2-b951-4163-9d63-2cdcf5e3fd1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2690daea-e35d-47a7-953b-f09ea63fe918",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfd25b50-0dfa-4987-990f-f437bac02a20",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eee74b1-fc5e-4808-b1b8-1a49710a89d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c07ba9-f4df-4868-8181-e3f1546576bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024ca676-6162-47ff-b955-dc38ca6b5b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "44230abf-c122-4424-b1e1-26b0a2e99b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57d911a-5763-474f-9a28-238fe1766acc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214a65da-1a3b-4de6-8c66-b838d8629a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f987f180-5b52-4e38-87dd-0b219c160a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632b07cd-f26c-45d6-8aeb-6a9cc5656196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9351a7e-625c-4da6-8c19-67d6ae54cf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a73af4-8cd6-41aa-9795-8248ae06fb67",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d95df7-15b9-4be8-b38f-2b269dacb2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c29cdd-590e-40ce-a412-b3dd8d41697d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ba0b2d-3825-452a-bcc1-eb74aa948983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61183ae2-7fac-42f4-afa1-a50c98a8f96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ff7a59-b8be-4fc2-abf7-18d13009cd98",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980773e7-7a3f-439f-848d-6acbe51c302f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa281254-1639-4c4d-93df-f2fc2a1f265a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e15585a-682d-41d7-926f-9e5ca2ce0450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28da3ac9-cebd-40ec-8a1c-6b3519732435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6048dee2-8957-4c26-8cfc-c17efbb73178",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0627a75d-08c3-48e3-9cd4-50ca562013c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6ad591-825b-4179-a2b2-82316fc2bc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37c0484-cb85-4f0f-a3fd-2321f2a5f2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df77f2de-66ec-431c-b18f-8990d3aeb61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82bb1d7-1df9-43a5-b022-002df914c12c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f14a7-e0d2-4770-aac8-debc824a8732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4be3b4-70e2-4b3b-b9eb-8ea5da3709ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36143ff2-6bc4-4ce6-9524-a61258afe7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9944c3-182c-44be-9d56-db2b425a499b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a0b8f9-688e-4a57-b8fd-5c335d7436ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8659ff26-e31c-46c8-9191-c095fb22a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389bcd58-6535-4476-ae30-2c4b4d6ddc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25560219-d10e-41ee-acc7-df439b31f8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d039a863-b2fc-42eb-8834-e6bf6d817dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7781fc99-6200-488c-a54b-68cd0e9865ba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a91895-3fe7-4dfd-bd80-3031015c9167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d20026-e43a-4f03-95db-ce7b4b9dc282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc453d9-5f3c-48ca-a573-4a365e6644c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7e2210-f58a-43e6-bb49-e60d67feaa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2b5f54-ed89-4279-9bc6-0c00fc7da8c9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84310287-a7f3-431a-975f-c9b4fba17519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c8a307-20fe-4164-8491-598094cc6c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e4e320-70a0-486c-8fc7-a252eab91137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd61318d-eee9-41a5-a912-2a9aaeedef1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacb0620-3682-4cf8-9083-867c7ecababd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa06946-f16f-41a6-a407-3c746aa8b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee28471-b758-4160-a455-ec250d0d59ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86db414-c106-4372-a26f-a14549e7bb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad464ab1-3cae-4f25-b1d9-a178ab6c94de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f715fcab-b143-462b-b0aa-e4461d8adcc9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe5d882-5c1f-460d-84ca-2f3f65203891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b787a5-1db0-45bc-9101-c70fb1efef33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6998515a-6ad9-4aa8-8cd2-897b267a5500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04bdcf62-2b40-4beb-aa3a-b3b651aede93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81e3701-a26f-4d0b-a8e6-60169a0ce312",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d86611-e7e0-45ec-b5f0-e505befda255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ab6b55-043a-4187-91c3-e3ec213845e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc33e6b3-49c9-450c-b9c1-024e35e991f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96381cc3-f828-49e2-ab4a-ec42ac07e499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ca5338-3827-4135-a700-9628fc5039d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265d17e1-9d94-4c7f-8b29-657ca6abd990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23afb81-8ad6-4c0e-8772-4cd407540566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821b3bc2-5041-4122-9d94-e0a10f558c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "606f0dda-6500-40b9-8b41-bebcd35c4699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a378b7a0-d65d-4edd-a242-095bd2e6eb15",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4904f7fd-31ad-4780-9399-695b2dc7bcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9044d082-b119-469e-ba2b-1715e81a539f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87314d0-cdec-406e-9474-c4211e2a5dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "143385ef-1983-4510-b7e0-0b3fa59753de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc01456-aaeb-45a3-9338-b82d2c86c388",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fe0b05-d4b4-4663-894f-e6bbaf2181c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0da875-a674-43ab-a300-0f893284b2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a4fead-6fec-4d3e-af80-40c31b1d4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ce878a-9573-4664-a2b3-e1d609d7d547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270edc24-5228-4c41-98c6-60d66a88f9d0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1563118-857b-433a-b7ee-83494a10507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e69efe-0f2f-404d-a791-07261b63cc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb1feda-007e-489b-9744-4549e172afdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4af71b-77a7-4ff8-b38c-863dbbc9fab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb896ae-2735-4b25-bf47-72b0ecf32ffe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b167a62b-fc65-464b-9000-6c65a471ba3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8b4974-f6f3-446c-8f1e-4be11dd5e65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406bacf5-18cf-48ae-aac2-32e0ba26dfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b5740f-f2cd-4b44-82d2-ab0a78105201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a79ebd-1f68-46d0-bbfa-3e12c78b8a41",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9c49cb-b17d-412e-b84f-7af122a9b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2feb3d60-d1d8-4f2b-a3d3-9a2c8c2e75d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8b47e1-9345-496f-99b2-9d999e1b9fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f65d4de3-477b-4d99-a46b-fce2a8c4d3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5459a678-edcf-4c84-8350-e8c145344ce4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f180f3-5539-4f8b-9a73-d811f7c2ad31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d445f6d-7bdb-43af-88cb-c2810508c9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed646966-00e6-4600-b111-c65f5c2bb5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b2dc98-4610-4d42-868f-1db3a624a000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da27e3dc-2600-4171-b3bc-d0e828722784",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2780467-1e31-4742-816e-2249a2e9c701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62756b7-71a0-4c33-8c0d-851f5082b9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda2e6d1-8d14-4374-9b5b-5d9fa02eb8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc80386-b6c6-4896-a66b-21822f2a588c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea3f635-d03d-41b5-a68d-aebb7c62f9e8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e3f089-22d0-4340-8855-90d864237fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6487bc-15e2-4206-a05d-eb9f00e557c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941ec9d9-00a5-4877-930f-14b2e6da19bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90350d8a-8368-426e-983c-f6ce568d3d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09121132-445a-4e07-addd-71aa4b4dee62",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fe2369-c126-4ccc-8c8f-c672f48134d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e41750-c394-4769-a5e6-a69e503ee28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d6878c-0b7e-4cbd-a441-7ef73f065687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13289898-e990-4cbe-9367-f29c7be09a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0505bf-df5e-4e59-9349-aaeec7a3e048",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3d870a-8cc2-4d88-ad70-d71223e6c889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4ddf39-340b-4906-81c1-c481352cfb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba47a57-18cf-418d-91e7-1e39903a94e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb684533-a5ad-49d0-b34c-e7cec4604707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77abd5a6-cf70-450d-a732-c417b4d0792e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea7437e-6641-489e-ab03-103d3f292e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc90aae-781a-483e-b7b8-9f1893a84604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee2ac24-7112-4ee3-8c30-672a89c86305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ab5d27-22bd-4a42-88ea-5cf1786601a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd78dac5-7db0-43d0-87a8-37a054b58c89",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9548588-3a40-497e-af7f-89d8cf9f807f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314a10ec-8f11-453c-94af-3eca226b109d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7e973f-96d5-45de-9f11-3194276815e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e58e56ad-13d8-470b-b2d6-238dd8a81fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63de4ae9-5b98-46f2-8fa9-0533ce79af2f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890a3a9d-e534-4833-8d4a-af6a56fe66b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cb67f4-d542-47ec-9dcb-9b0df5ab96dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45d1e38-e055-4787-9623-95983a406de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "408576e5-7635-4308-8582-d15dc7096b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2cead0-ad14-4493-8efa-cf1294805aff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ed09c3-ed00-48a1-972a-9113c6be6399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7245f9f-cef2-41b7-9d35-009d47b8304e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88500376-77e9-4dfb-9890-778eb13ab7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "961a2ef9-1eea-4a43-8be6-2bd7983271fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbf497d-623a-4780-9414-d5648f29f92a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db61f9af-0a79-4556-8e39-a8798b88a78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694d96dc-9228-4dfd-9cd3-32023acdf0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3a1fb5-2823-4ebe-8e77-c2987c9674f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8c54a4-d6f0-4a22-8105-b55979779318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5666f1-c9c3-4526-8407-da13b30b5270",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37536bd3-2124-4048-878f-65c4e1ec4bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bcd238-cb07-421f-ad77-4638d21231f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d465c7-3a25-4227-8e25-6e720a39229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b700aeef-44b7-4159-bdbd-ad4c22d5a9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f28289c-801c-49f9-abfa-54452cc7358f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3aa37dc-064f-4d80-9cb3-1614fbeac666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95ed28b-aa24-4d86-8ab8-4c12a4980f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f61ae38-fdc0-423c-b735-184fcbf24282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3a8f1f-4e24-4ca9-9820-be57d3781130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ffd81a-211b-44b3-a416-82506fa3422c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4eabcf-3a77-4806-b9f4-eb0c893c3998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67869c6-fc95-4844-9cb9-9eb7e603bebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4dba94-09d8-49a7-bac8-d7afae558f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00d15c3a-e64f-4c47-8403-51546901c77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75914a28-54a2-4071-a659-1f27bd4aa7c3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e148a6-87fa-49e5-bd49-e2655682a0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f2749d-2b11-4b59-b5aa-f4a6c662da5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602a40b5-5b87-42e3-98dc-4f029e5384a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20386316-2e03-43e2-a7c9-e3f9b9bd8fa1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ba0cc94-54ac-4252-a174-b0b4be15fa2b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7a0e55d-a68b-40bc-8229-fbab39a88b90",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30965f46-efc2-49b7-8478-62337367d589",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6e836a04-979a-4e6a-b72d-63114e1d956a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a11dd6-8e22-4832-8563-f9947a735fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "817faaee-00dd-422a-89a5-f7685e541493"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73ac5918-e1f3-4948-8d3b-9b064e94ade6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bec1f3b1-1e41-47a0-aa74-65873eb60498"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbace094-13a3-43fd-9d6a-de66beb2e748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07e0470-c207-42f1-a451-d9a35c2df5b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dda51e50-972d-4b80-b01c-2612d8bbd540",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "408aabb3-ecd8-4ecd-aac3-9f0c40ce3180"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a84dade-9c48-460a-baf3-3f1780768c1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77b4e5c3-d828-4065-8177-3cbfead7c91c"
            }
          }
        ]
      },
      {
        "id": "7c6ee75a-3425-4273-bc51-de9c768f77cd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "319228a4-541f-44c4-aca6-8156e3c9ed32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e31c05ad-2da1-4d1b-9962-9a6f85745757",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67b61182-8deb-4450-88b4-a643160bcbac",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c8b96c-b8e2-419a-8779-f71ed09e2710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecffba9-5018-471e-a5ba-ca900d5f3afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866ced8a-f5b3-41f9-838f-3fda58fe1597",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4183fc-1888-415e-b1e0-24cd82a0c787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104dc57a-e859-4e2a-ba26-2d9519c219dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270a2b92-8acb-47d4-8366-5b25145a3b66",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4403b026-54fb-4b0a-806b-25ea8c3a6440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f575ae-d3e1-4dd3-b1ff-2da7e5ef9ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1669841d-6fc1-4cfb-bd34-f3e1bc997b5a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0155ccfe-3c32-438a-a721-3cdb3042ab14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fb20e8-0903-4b0f-b99c-436fe8c088f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586b28c2-7ff2-4992-b727-fcbb6b0e1a12",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e288fd-2a41-4786-b2de-a7db5f966015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c842bb-812d-4f72-973b-7b7e26ca383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9434d8-251e-4bad-834c-42c761419ad2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c3d280-32bb-4743-9e26-9bddbdf46fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88983ee6-5dca-4d8c-8ffd-fc836a9d6e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b61d119-4359-4905-80f3-30c466ffbdaa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad62853c-6a8c-47eb-968d-4fc46c597ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e44227-41ee-498d-afda-1cfb0d8e60ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03fbaeb-9ee3-449d-b532-0b6369f43db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc47933f-8e32-4d08-a5d0-7046fa3d3d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8387b374-01d2-4c4d-99c6-5bbc34609544",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e70b4e-4272-420b-a753-eb206ed8d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6948294-451e-4a8e-afad-4b8f9dcfd3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200e496a-886e-4885-ab59-84d7bf143b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9ec795-f938-4af3-9834-90de974200c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870bae9c-ae43-4ed7-ac56-a0234589fdfe",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1979090-2909-4541-b04d-e7cc906d5041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df3872d-0504-43da-b225-1729cc316f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a591a4ce-2de5-4852-9e6c-a0e3673f1446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9842fd0e-323c-44d0-aa42-3878edd4b843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0ec01f-88f8-4919-af3b-49dffade4843",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f71c59-ca88-465c-8d3e-474a0dcb10de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96700d4-4545-411e-b7a3-ecae684c813d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d655e85-a8b2-4245-bf13-3d2ecb1c0503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2106d1-5be6-4dd1-be90-be55193a9c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d827184-1797-4d2f-ad3d-0a676979a2d0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2638e96-5435-4fe6-9a01-bf8361268275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931937d5-2892-4655-a53e-b098de3fed1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542a5f9c-0c7b-4f8c-aa27-72e0922d88bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d52c494-182c-45be-931d-5b07ad46a31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aa6e5a-10f3-4ded-9fc3-ad7e9d60d0b9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6360998f-750f-42fa-a05b-0c135d776eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a46cd35-289b-44ba-9b6a-220e0e153e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8de1fab-4728-401c-9136-057d0e84a921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc03bbd8-9f9f-498a-a448-03a0abd67e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446e828d-4317-4170-a2c2-756e6a4ba9a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3501d080-00c9-408f-b476-b1e42e1cc475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd231d7-b104-4ac2-a02c-5536e7be739d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f950d08a-7f50-404b-838f-b594863d037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcd5d0c-16e0-4ab6-9e71-18864e115ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcca534-1664-4015-add5-0b4b4cd25305",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea8bb01-7aa9-4b14-99df-7b3e34c90bd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f234857b-4b17-4de3-8049-2006e96e3a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a79214-d9a8-499c-b2d4-c396de4d2398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa382df-503b-42e3-af8a-66bcddd5541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158bc9f9-37f8-4dc5-9311-4405db2817ad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b9fb40-e6d2-4d36-93db-a0d2e5373cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e52ea9e-7f5e-4eab-83bd-2a3dd290ba8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4695956b-de54-4729-a05b-c526c0011323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e9c708-c452-46dc-b430-c31e769102e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb43950-4e5c-4da7-b886-cf5f0163be9b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92878fe1-8386-443b-9e26-ebdb1eb18694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa93730f-cefa-43eb-9799-61dcc2fee218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7968149e-2d2a-4c95-b8a5-2c6bc22e4189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3849fbe4-0ba0-46cb-af74-cbbd750c44bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ac76fe-fc5e-480a-a9dd-5dd74a8c1fc4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b37943d-0e45-4352-8645-f1b5f84fac02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cd4e8e-4a13-45c6-8d8a-5eb07b0f6fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4548f1c-3160-48a3-b7ba-d0445464b698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84bf6d7-cdfb-4ef9-950a-682b94db8aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd948c0d-04c7-4492-8be5-430445b7ead4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415d5fc7-5b10-4cbe-b0fb-40f6afa43fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eca7b03-9d32-4ca8-9ade-81542b4ba213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb62fb71-b755-4359-aa82-4cc442b8cc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382115be-caab-4375-b504-6b3bb58c4dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9255c897-7d67-4808-acf5-e2116755a605",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21f2398-512c-41ca-acea-ced6d449e421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e38936-6c16-4a88-b00e-e94cbe16ef27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1745af7-3e88-4b82-9802-e1f82224b1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8d977b-ae49-4f3e-8753-ddcc0ab82e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334d99bd-926f-4a1b-96e4-3619735ac0e0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bb02f2-5b51-4330-b5fa-899650cc9735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9068837-d0ea-4b5d-9063-5548c6b78a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f2a769-0427-44bb-812a-7f6b8dc79f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b9ac2f-615b-43be-9826-078a0e55ec2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d398c5-10b8-4920-9deb-a994fb0ede47",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64712ee1-e239-49e9-aba1-c988dd7e2d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf8daef-6c44-42f6-92b8-6a7a6893a0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8330b7d4-bba4-4747-bdc2-b63dccecac4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0298dd95-6e19-470f-929c-09ceb8050a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504661e6-37be-4fb1-b4c0-0089364a267f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ad1378-9926-4186-8f9a-e4aa8b65dfad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2821d11c-b13d-467b-a75e-c54098a299da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa3d228-773a-4dd5-a227-8248b90f7e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a3aca6-7cd3-4c71-8ce5-38a3ab6817d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b5e71f-8b18-4ae3-bc46-e4c6de7f5c15",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980beb4-f738-4f24-96ff-71f17db3b0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008aa72d-55c1-4eab-a622-691eb457ea05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c168e05-7be2-425d-9f0a-1e0fb7e19771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccda4ad6-92d7-4cf8-921e-5a051d516038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f7c7c4-c1ef-45d9-8fe1-d14ec6b81f32",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb6f9e8-c2d6-4956-ac15-5244ef59b380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d160d6-7f0d-4554-9220-18c8acc6a29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdab2eb-5993-4f6b-8f55-5e08e71e131d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7427a629-ba35-4102-b444-58c388901cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c3142e-9c02-427c-be0e-a0db71c8441d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f6f88f-2a55-46e4-ab65-72f3965d8e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79b0f1b-820b-4f24-a8ea-5fe964721b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2393253-07ea-42bd-8907-0f20a8a567cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0de026a-3454-4a80-987f-de30d83d0cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e075ec04-4d88-41a7-a086-99a7f5ce5601",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2175277-d160-453f-b1d4-078f16f73af6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2175e47a-a6d1-42d1-9820-2c9eba8b425c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bc6d83-e439-4f00-814a-c5388d5f5c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3bc91a-2a70-408e-b5db-f1ee354efa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638db184-311d-4886-9352-8115b7255a85",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277fb8fe-8aa2-4450-a722-175f48a7c5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf3c848-5173-4dff-82e9-da1c0c5e28a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e94068-4195-403f-b1ed-99747eff13c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d88a449-e537-4b38-85cf-44cd6d490a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195afcac-98d0-4025-a0c4-425b4cfd336c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dc62b4-3598-443d-8dc1-81f0b7e4b579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6328dc9b-d8ed-468e-8ab1-cd1678cc9e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f2adc0-5f68-473a-bbfe-c2b48732418c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16d4a11d-0236-4053-b760-267e2bcdcd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742988c8-31cc-4886-8829-72f16c6d1af2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bd7d55-7bd0-4c0b-b31e-6f4a936cca8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e30fc3-7b18-412f-84a6-c27a3192aebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5582571c-0399-4925-a2cc-f5c613db9a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7333fbf9-3231-4c2f-a5ec-c4a5af5da6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcaa8be-c57f-4412-9787-dc42f5fdcfd5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df5a9a5-d453-49e3-8274-4f643721dfbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ea17b57-6e9e-4532-befa-44c28a739a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747aef43-6995-4c75-9f74-912912ff4e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772e7c26-d516-41ee-bed2-b9aff6379dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f30ab1-11e6-47f4-bf37-e27c61f4d7bd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1818c5-34cd-4dc6-a699-c9c67be8fd7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6f43ef-140f-45d6-bf12-126addd95b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b755fe-7cc7-47eb-be5e-ffed8562cdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5388c93-e303-45ca-b55b-673436b555ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdf8d2c-a3f9-498d-bcd6-cc7f552f2837",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb738493-8025-4cb1-9261-0983298f664c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75776fff-7740-4fe8-a753-718c5270da37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa43214-e86f-44af-813f-2fe4879df15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09a0b74-3301-43c1-b644-02d9660992ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6b72f1-5724-449c-bd4b-201cd86202d8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9679e343-b05e-4b0b-964a-946bae593856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de2982c-1350-4bc4-a2e1-d6c34ea3079f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b76e15-f0f7-4e1b-a0dd-0bba096b07b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e951b3ae-97b0-4e8f-8182-99b5cbd5f2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447483b6-645d-400f-901f-68ae637c6ae3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2007672b-c5e5-4a4e-bee6-879603680aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b032cc-58c9-4e39-9dfd-766a58e08c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dfd839-1b1f-4551-9071-a13dc38df631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f18988-0699-4416-bfa1-b8ddce3618f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e6298b-ebe2-4592-b221-4dea7f7adce1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2aa259a-093f-4d71-b931-146b1cab15d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569205d0-1ebf-499b-b99d-6e152251d6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e795b6fc-3217-4a9d-92a7-79dddd6cd777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22cbf69-8aeb-4750-a33b-b401b218d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3c6117-56f1-4a07-82e9-b0fec6e01389",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf7e120-940c-46f2-a11b-dd9dcf2dd9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bb1b52-b555-4d5c-8338-1fb632383050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b22efa8-0383-400a-9b0a-c2aec7cfabaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c5ddee-2b6e-4874-8350-5b7e22e8c027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357bbcd8-521d-4cc7-af4f-d14df50a68e1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59ac6d0-8bee-4590-90bf-992d2329d85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f548baf2-479f-44a0-90ec-0ef6b8d2f437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cbd698-9888-4ad4-b351-1f492d48e08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c217f6-aabb-4787-8a86-205390ed0d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd12d072-8040-4598-b692-e9f699cb9aa0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41563112-ce0b-40fb-8985-b3ee5608a8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f64768d-c1f3-4143-a1a2-4b5afa3b0b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4476d9a-7337-4147-ae54-b199b1460df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d547d6d-363e-49b6-8e35-257529dde39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3457afb6-581d-44be-8c69-03c1075a6968",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d9ddfe-3a47-480d-b4be-d3f73c1be964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19644c3d-658e-4db7-a52d-64d041917e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7683b3-ccdc-419f-93a0-e19452982884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959be7c6-8a67-470b-9054-bc5d21dea7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b849743-0345-494a-b3a0-b3825785cf10",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4cdc4b-cc5c-47ab-a8f7-52ab2ff7b649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83293194-5f6a-4cfb-b579-3538fe4442d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6555ce-1161-4acc-bb3d-fd4a3f3f69ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243c7592-fd58-4b2f-aced-e87f287b590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ab7c9d-31fe-44c2-a72b-2607699d1ac4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69f7c21-5b11-4643-a349-fbfa86677b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27112163-e53a-4039-87c3-bc8fc07b0f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211d57cf-f2f5-4a43-9eab-9b7a208f2ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e872084-4c6e-43bc-a663-a2cff7637a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4003c8-2495-4f15-974f-35c7bac99c5b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b825bba1-fbac-4a8d-8d68-99672c9dbd5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf959d90-5c55-4e14-853f-846895967092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a0ff8d-46cd-4175-a571-6062f92a6fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ce5667-0783-4004-8ed3-d05a016ccc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffcb7c9-709f-4d37-b664-ae69c9749559",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e52f4d-cc91-47d4-8fcd-7afc368d4bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c88cee1-bbec-4c12-9ff6-05fbe6bcc0f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635a0d29-343c-4093-a3d7-564c804e4faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffab698-c1f0-4649-b210-ed5004cd3d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3f6dcc-28cd-4a89-9612-aedd8f8d9c09",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f0ac1a-114a-4547-9c3c-bac854c79923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f12123-40cc-402a-9b03-5a416f4b36e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b31dfa9-64b4-407e-8da2-1f93333d052b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dc8737-f211-4f6d-a8ff-24a8d5820ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f6af7e-8c88-4ae2-8903-e9f0d1098cf2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9685c1-900b-40fe-9735-0f77a80fa7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5e3f5b-3684-484a-ba31-59c63600cbdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0258ff3-897f-479a-a07f-c0fbc7928665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182639eb-fd45-4403-8696-6914cdc741f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3928f3b1-21ca-40d8-950d-391a5674086a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867def80-2388-4cac-a8f7-ff0454131638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19a15f7-28f2-4f2d-b8d2-824c1293001a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c115b8-1eca-4fd5-899a-6a3d826d73a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa89b4c1-6b26-41a2-8be8-d1b7d3832a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06baa1d8-8866-4ac9-8d62-58834e760f8a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7ba0a2-497b-4741-a2ed-20b0183cc117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef6b25-08f2-428a-b645-5a05fddc47fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390674ad-c0ec-4665-9036-dc3fdc2e7c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e20d58-ce6e-4e14-a8fa-af46172eecdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe85e62-e0b5-48bb-8bc5-21f696c6fb69",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f286a768-834e-4e9a-b0cf-30c8275b6df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994b88e2-32dc-4a58-b8f8-b9867b4394c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9dbf090-3b37-44ea-92af-5af3c585df7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfb4e3a-1896-4318-becf-54e9f7665b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1438e81-545c-4951-9d8a-35b159e9920d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7a7be4-c95d-474b-a8c8-b022573f91e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fad13f-e4c1-4ceb-aa4b-24d93e3987df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a0a6c3-00fb-4982-852c-8c8caecb2108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25882ea0-248b-4702-b1b3-0a76a7d9fc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aff56a4-69f8-4c6c-9c9c-3089977625fb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7922ff4-abd6-431a-b782-a21252ffdf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f8c48d-b725-4d52-b152-7863048470a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65b8448-8c8e-454c-919b-daa114521f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981c9165-a18b-407c-9402-ee5447646cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772170dc-77bc-4eec-9605-70f368927698",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238d74d9-a754-4ad5-b1f5-a9c8fcf5f8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3a2747-2b96-43aa-94b2-bf5783dadfeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb4fbee-9c49-43f7-a748-6fa450002dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cc4c75-d08a-4cf3-b1e4-6d6dc39da366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994d4c2e-1402-4efa-b743-7f38715386a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba49947a-e443-4519-b933-a5075ae44b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5389ded2-88eb-411e-b50b-606fb4ee631a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f807265-6e50-4efa-b1cc-6e2e426d5d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e457bc9a-7d50-490b-bcac-72aefdd1d3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9135b3-5553-476b-bfd8-17316a5f3276",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547aba9d-8c1d-4829-b10f-117b393e8499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dee4b1-9d40-4f7f-bfdd-1eb33cd680c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b8417a-8bd9-4e20-a0c3-eb030aa31971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc7c89f-ca28-49c5-88ec-ac070382d963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e096536b-ba30-4782-ac6a-05d04e058910",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb9c99c-4765-49ba-a1c0-c3f97b393b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1597fed5-f118-492c-9c95-0322384acb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ca5053-d9b5-4eed-bdd2-cccc59f4439a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7c538d-58b2-4157-a67e-8f8b6661c120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2dd83e-fa1a-41dc-b35e-890c98577ab2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df33530-591d-4db0-8d6b-6a3501ac372a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d647da-b259-4955-9576-298d720c34f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e932fe77-aaf5-485b-9dec-3a7d40eb945b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d99fb707-e2ca-4537-bb02-24ed2185c015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dd1ac1-8a8d-4802-b731-a582cb4d7e8c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcbc1d4-7156-4e04-9eab-aa89ba6d610e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbfff70-e29f-4b34-869c-88c1a16c12a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88e644-c174-4a71-9d32-c1ba56e3fb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9c65ba-b944-4209-9cec-ad7b3aed1a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d6f6fe-853a-4570-90b3-105b9facab22",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eff6af-22e2-47da-8060-f620a15c9218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd89415-f024-42d7-ba19-1b819791e9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdd8045-3a0e-461c-8741-743f75549096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821718a5-5e05-45b4-a631-6d8452aac1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d01edf-92cf-4f42-98c9-fb2ef96c3889",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f40de5-177e-4db1-93b7-8b7346a4c095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb1c1dc-5b2f-4d6b-b64d-218ceb557e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "076feb67-23d8-4011-9603-6f1ef6250ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30bdb96-01ff-4a23-8f11-f4dc67a3d52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986807be-2b52-4a67-9cc7-3d33f9e8e9c6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2725940f-75dc-46d0-b1c0-7d9f4f5b20ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb2ccb8-4b77-468e-92df-7e215fa161b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d30b68-072a-4333-9b7f-030e2584f61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf6ff47-daf3-446b-bfd7-8397c270bf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da962b7-2a36-4bc7-a1ef-17f23027d1c9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f99ce3-463e-4474-91ba-2ad1c2b62574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca98693-15d7-4c0f-be72-142cc641d1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b359a1ce-9518-4a71-bca3-1f1e2f295abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcfb8190-0e13-4370-8e93-fde7df6409d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c90a40e-70ab-4234-9474-d9a4e2d52a0a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b732df9-8770-443e-b3c3-adfc12a043c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac53a24-9b45-413a-8a69-06f0c115af2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214323d6-4179-4aba-bbcf-03d948e98bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5045e1d8-3160-4a3e-a632-d0b9c7e5b9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482e041f-bdde-4429-bb5d-06f98616521a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2387afe-7d7a-43e6-8f5f-49b9892b123f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "defa6e3b-98e1-434c-8226-f6c972a94cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b342e8d3-c06e-4119-9330-26b084c69f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68aa50d7-d94e-434e-9dc9-a6a52cea9987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c43b888-1af6-42c2-ad48-dabc9d0725cf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccde805-177e-4fa1-a858-6ebc84f8448a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ae0dae-8f1e-47f2-b94c-0e562494ae88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdf7376-5c99-483e-88e7-20263f2b5863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5eec49-7b99-4e1c-aa37-f2ded0bb8c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417da8d9-f727-4236-bf58-679a423832a5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5de01f1-df3c-4b33-8620-b95ed28cf2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c143440-7dc0-46b5-9c51-8e2baed62e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504f767-f1ef-448a-a173-187a36c38b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f7b139-bb0f-48e1-ba9e-c1982f8e99b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c141c0-e3cc-4c3e-b011-6bc5dc8604d1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2571ae-646a-491a-a7df-c19a0edc8e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1a28d0-5651-49c6-9e6b-004d14c098ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd458a52-67f7-4821-b042-369a0575940d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d614c4-7e48-4b13-970e-a7e244c98f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f6067d-2b43-4ae8-8542-524d665d2a4e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7fa586-1f49-48bb-98f3-6c5dd46ccf21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dbace9e-5077-4eb5-bf31-27fdd3513d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfd0289-4f02-40e5-9c0d-8fc8dd9298a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4be66c-a6d0-40ff-b448-f17f4c21c0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8fa5e0-05dd-45fa-a550-a10323d2f137",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0bb8d8-dc65-40b3-9d3d-0b435ebcec82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb332ca-f32f-45dd-9d1f-c9357e09c9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fd5975-98b9-493f-b9bf-3f1afebc1ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355acd04-cf2d-4b53-b01c-76445550289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a3fcee-c6ea-4f9c-a1a6-1c8fabc83311",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475c3bb9-ab46-4e82-a823-555a3b63b308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6f5571-cf50-49ff-be13-f7b19a9dd015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff841976-cead-47fb-8fad-c13fbb40a273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83c2da8-bcc9-4be1-87c1-676c3db8b192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e71f4c-55a3-460d-bcc7-6c1a2d77b862",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bbef05-f13e-4ae7-9a78-7ba9bf6ba672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b22f98bc-f4e7-4ea1-a764-47aef0b95f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acfac88-cbc6-45fa-93bb-098eaa3e5f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d1ff20-dcee-4ef9-8f6a-727fb76f3038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a71bb76-7805-4a0f-8a75-92afd8f2d53f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a771c4e1-0d8d-4701-8a36-fa3c166f93b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc7fbd9f-e1b6-48f8-81d8-21b32c982d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad19c96-fb1b-495e-9ed0-302869fb56d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35203dbe-2156-414a-b64a-0df4e05a51f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bc91bd-2776-4b38-8032-c8952c21815e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5defc44-fd45-4501-8145-7da71ee76c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b58c385c-cff6-4b1d-97c7-76d7fbc0defa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5675541-e83c-41ba-99d7-4ced7f505d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba324b6-d5a7-4a8d-91ca-8fff58379149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259bbcc1-7df6-46ca-88bb-094fd4e6d994",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54e7c5f-8163-4899-bfa6-c3dc762cd63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223d6848-4ead-40c0-8daa-edf6a59ccf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb702fb-9f7d-4a8e-a9c8-0540b8833653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0336ec0f-5e7c-430b-9e3c-b4ccdf5133e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00a2095-ceb2-4177-bf86-257400a64b4a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d180ad-b5c7-4d93-95ed-2be62a96d8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379e9da7-d451-4658-8313-cb1384f35e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c5b90f-7fc9-4b20-916c-aed0a50473cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c433e2f-2a31-4ace-829e-9e3fb0069020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98835974-cc01-4067-b3b6-dbc32b10b0f2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26602453-6887-4024-b67f-3047212919da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80848b85-ef0d-4f11-b421-e6120261389a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787a4c76-ebb2-4335-958d-35326b5ffebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6d3699-ca8a-4eba-ba60-0ae48a0798e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e6b877-c39c-4176-9a1b-248edfcaa815",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46bf6f4-cd27-488a-8c84-cde055514487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3b6b50-04d0-48b3-9d66-7570b31a5032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b74653a-b49d-433f-809a-81c4961caf05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f1ff37-da9f-4e72-8d7b-4bafc578de8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d852f980-c525-4480-958c-1d6aafa19c8f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a8649a-0703-4c39-b68e-9b6f0a4f6348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2099b1d-27e5-44c2-8b82-1f4eb64e7d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122334c9-1e2e-4ce0-bfa5-9dbb3143b8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec7a705-a411-4fa6-b779-895bb6cacb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84460de1-25bf-4737-abe9-2e53fb501638",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7e51a0-58a1-4534-821c-1c8ba7751077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288c2e47-a181-473c-a60e-20e47ca2aeaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883564f3-2c7e-408c-bfe6-61c048c07b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd54f8f-bc2d-485a-8441-b8f90cbc1266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e17f8ae-c921-46be-a6eb-5e466dc754f6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612e56b3-dd29-46d3-b6d2-7b50def1a1fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba54b41-93f1-4327-b6b5-3250cdd0ddda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5627ea-aaaf-4669-b4b5-d3ee6a4ba699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6747f21-a05e-4d30-8798-8c8806342097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fae6401-548f-474b-a7f0-8a4876f3eb2f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846177de-fd81-4f63-ae67-13a6695f71bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5517334-c529-4609-92b3-d67fba2c552a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b0196f-01e5-4800-abc3-779be068806f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d52f9a-ade8-4a86-a461-c0c249119fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad602cca-edcd-477e-a562-d6892d246a83",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8642c323-2555-4e62-8a9e-db30008bfdd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "739a7dca-5471-4bf5-9b95-1c3be7b9bcb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bd5126-3455-40e5-be2c-cc4b50069e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5c08cd-7fc4-4141-a07b-2bac6fddf5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a10e631-7503-49a1-93e8-0a64ad81cd79",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bc4907-184c-4250-99a3-d1f6ce7921db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0be5940-49df-40c9-a462-bdbe64dbd180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c528fb-b986-4a28-9798-f6cfcb1cc988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae522888-c131-406f-9d5f-4ff58efb7167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba43bd4-d621-4530-86d7-29820784acb4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3026c76-145e-48d1-bf09-2a721252ea31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e20f88e-b758-475b-9ffd-7a89cd5790b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a44672a-b929-47e5-bab8-bf6e942f477e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa79ef18-bb4c-4959-9cbc-979784d2c80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7aa0a42-0f65-4747-ab2d-b5f6227c1cca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ff9286-dcf9-4378-8bfd-42b354c6fa35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12eea3da-6417-4625-961d-e94c7a612bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47529a35-0631-4597-a2c3-00218eb9068a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dba5070-c9da-46c2-a770-87082d065eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92509be3-6500-48e8-9a20-f0df209dfc78",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac0a3f5-f09a-4dda-b6d9-a94ddb2d8873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7075f6f-602d-441d-bbba-554095e604fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e2dcad-18d9-4813-9e13-24af9e1701fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a1243a-d79d-4f2d-b8d7-a82c073cd2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727c59b8-68a9-4b0a-921d-1ac9eba8e6be",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817dcd07-1c9b-4daf-81b2-7171a7814bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42f97e9-f931-48b8-9650-c994e776c976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe4880e-81c0-4ea1-8d38-17d840dd91da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d871087c-b10c-4c76-a4e2-3a6f5cf0c1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a2f246-bcd4-4a56-aeb7-890beb79bc2c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d51c2ca-d7b6-41f3-aaf6-ab1fdad64e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "871d8bda-7ccc-4fe3-b0f5-2f2146d679a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5417bc1b-da38-462d-9d23-a827d13b1374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68f7ee9-f2b7-4a60-8401-0cee0c5d8666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d97094-c43e-4734-9de5-dc98ef34d97d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684c61d3-621d-47b0-939c-2529c097b063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935e02fd-28ea-450b-b6ea-0da184637bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dad626-3abc-420d-b0d7-bf31087ad00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7e4807-2457-420a-a5cb-aa1164767b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130a0800-328b-4f37-9b8b-879cce425409",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9ab07d-4711-47fc-99d4-753c44a44a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98c1878-9284-4773-93f4-04951b8663ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe77af0d-f7f6-471d-89c6-9f9f700a1e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9969166-a034-4b59-9e99-591a7d5a28dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f28863-e0c2-4082-b120-eac0364db5e2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b0ad20-9db3-44cd-a61d-27c2aa094240",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8a6bba-61c1-4c0a-b810-7693b7c3f6a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44f13cb-b07f-4d1c-8d6e-74446e53eff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cfea82-cd5a-447b-a762-e7e47bb598ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9634f21-f7f9-425b-bb8a-4aab25a814f1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b41b216-86a9-4931-a679-e1e5841393a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c41089c-3c5a-4e7f-ae20-a5da8c48b5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8676481b-8664-44ab-be36-8f605adec0db",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ced519-39e6-448c-a01a-be1b985f9e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce13d713-3c78-414b-bf08-a1230f220c6a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7166202-020c-4e0a-aa65-ce9cdfd69e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41ea8ab-9e00-4211-9a34-2a1d45dd7cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a660a089-eea5-442d-bedf-0ae4875ab799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c1fca6-b572-4fa7-94ff-57529c52e27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647c25e7-bcd8-4872-a075-b62a6b81b455",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ed5f09-57c3-4e32-91e8-ffcf916fd968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb827923-e154-4c9f-9052-ac5aeb8f3ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d54274-0647-4164-985c-ee98b1bb7370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6af3d57-78c5-4d7e-9f55-40d0064a8233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc92532-d307-4987-abbb-9e8997dc3536",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d5cb6d-5c36-4894-b9ff-34a52980863a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13271a1a-74a5-4e32-b94b-4a235e6ff316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62469994-9e55-486b-aede-9381a57da113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b9affe-6d28-4bac-9c51-35d956f2f9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea9d5f3-1c6a-4726-9bcd-b71aca1d19d4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01295bbe-c4c3-476d-a796-2cced773fc7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff5f6dea-7686-4e5d-897c-0ea8d7957535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfeeeb7-2ee6-4eff-85e0-2ac7ba1555fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2023896-ed6a-414d-b7e5-139a6770985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7395932-dcc9-449b-8417-f64aacdc01b4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e47637a-9559-4e90-a044-3682d7bac841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7260f04a-e034-4ab3-9a99-584472d38880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337b9f63-e0c5-4ef8-af4e-dccadddcee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54e0954-031b-4bed-b4a9-497a0459b139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52d3373-c9e4-40dc-b963-3e8e1146f3d7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f61cbc8-6eac-4cdf-99b8-fe6101722365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542fb60e-cd9e-4dd4-a7a6-0d552e0d265a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10da3ccf-40b6-4500-aa71-812128afdef7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcc9c7f-3588-4534-baea-f6fa73d4ce0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aa2eac-43d6-4db9-a499-226c1fdcf7cb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98fe0eb-5c98-41fe-9fcc-b9ef87895aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6233b0b-5eeb-49cc-9891-c3b1fc038d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c835caa4-125d-447e-8fb6-de526dda2d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e7997c-e2ef-4805-9fc4-3a18a00ff8d6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c56eb5b-c661-4954-8125-2731faf0177c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bea8ac76-6d69-465e-8abf-9fe464944b1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e41c8877-44d4-4f82-8b39-ad267100fc5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62924d6a-3407-499c-9dbf-4876a591aa3b"
                    }
                  }
                ]
              },
              {
                "id": "5f76939c-bb21-41ad-a20a-8c95032c0f0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3237069-9035-406f-b900-ad784d53c378",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8d7180-19f5-4087-b402-c52304e0cc40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a2bba061-7d87-4112-b01e-167e050782f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb081a8-955a-4f33-80d3-e0935a80fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2498947-409a-4727-9862-3c1d16fdacde"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "836c7bef-7e73-4d33-b0fa-4558a877f562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db164ea7-cacf-4b9d-82ec-70cef53ca8a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e0dabea-b376-4a57-86ea-027e3a95f61c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c750cc3f-4ab6-4f49-a82d-b102de946793"
                    }
                  }
                ]
              },
              {
                "id": "84aab1d7-5af0-4d1c-affc-c20bd2d7a593",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "79a6c4fe-0b24-4071-af92-bc36640f5d51",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8357d7c5-a0e9-4e7b-970b-ba32d7c233e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ce8264c2-3c41-4fd5-bbed-0e357ca2f319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc944390-1591-4dbd-bef0-51173aa7d659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ec6729-7101-4a98-8c56-f07537f8b424"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b91a4d02-23f4-4617-a432-f8851eef9bc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e13f0ef-0b32-4e4b-a8b8-ede9d34cdb98",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d12ef56-bcfa-4e29-9537-8ea957f8412b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9074af6-f7df-4f44-8f07-f8f4c8d8bea8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2961c6aa-4737-48ef-b1d6-cc62254a928b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efed49ef-0f1d-4251-b6b8-6e9abced6548"
                    }
                  }
                ]
              },
              {
                "id": "1e8d40ce-7d05-4874-b338-e10ba12820fe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a40c61d-8712-4a59-abad-863652cc6efe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9269bba7-5512-44db-98b6-1704bb9b654b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fe9d773-c55f-4d1b-8a21-a761d24a7cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82027351-f4bf-4ab6-8517-c09bd819b7b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed298469-68ed-4090-8868-08734f9da9b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "af582aab-e060-4924-889b-b966d2efb172"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a291741e-68d1-4b26-8946-c1b33af706cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eba44c6d-ec04-46be-9c0d-bb4435d779ae"
            }
          }
        ]
      },
      {
        "id": "8eaba9a2-3c72-46e6-ac03-5dbd592749a5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a3461cfc-e83c-40d9-b032-b0b04b4beea4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95240078-dc46-424b-8a65-8c4fa7ded812",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "294677fb-8635-45cf-82ad-6ce54294db34",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aca1e9e-5d61-4be5-a1a7-7db6c98e3f01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4cc8ae05-3efd-4e33-89f8-04f0aa980da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0867f97f-6fd7-461f-933e-1fd1ae833e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87b758ab-32c3-4cf7-8277-16e0279dd74d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d60690a-8664-4e77-a464-9bc8f0c6afe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ec01d6b-1e76-4cba-8a06-0cc4307a681c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f280647-a1c2-45b6-9e17-faa1c58fb48b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "451ca004-48aa-4720-8096-f7c3119c5090"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44bdc35e-7b2e-408c-81d3-cec6f6cafd8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f1f222c1-d6c3-45d5-bf36-8872600aeaea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "addaac7b-d0f2-46ca-bb5d-e6fb723bf081",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a106000e-65fb-4285-8878-51e73130dfc7"
            }
          }
        ]
      },
      {
        "id": "9ded1022-18a1-4795-84e5-576dbb1c315f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b5f123a6-667e-41f5-98d6-bad6fab753b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b3e6def-cb99-4d25-83d4-00384c94bcc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a14bdc24-85a4-47ed-a58f-2cab78aab155",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be713433-29b0-4d1e-ae8d-55d3df79e930",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65264895-f70d-4150-ba1c-1bb38eb44633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e429c5d0-aeb9-4917-a83a-735447c5ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c02628ae-fe25-4cc6-90c4-22b9fd1dfb41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25b6b119-59ae-4c65-86cc-a91008fe009b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b37ae2b1-06cc-4592-bd14-07f6fa332e47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed4a66e6-2c87-4ba4-9722-e2fb87fa5b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8abc8b4d-898b-499a-b1a4-76dec853a4af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8edf28e-2042-4024-98b9-51f4265e40b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e024ccd9-822a-4ba5-b59c-6bcc538c00ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3eb27297-6c24-4b07-929d-3ff4e076399c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e996536f-4fd9-4e43-9995-b630799385ad"
            }
          }
        ]
      },
      {
        "id": "fae87d27-ff45-44e8-a140-89a67c8b1ade",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "87f21c28-d4a2-4107-b249-37762ac544b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe5dbb0b-16a1-4687-a722-de9bbe5dd107",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b910cded-ea57-4979-8b8e-746cbd569e88",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bce8eff-d255-49ba-b537-a85842e324a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24554e42-0522-48d9-89b1-6da4bdd4e149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b142d94-5a42-4d0e-be17-4660c37f301f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "491c0156-d7d2-4152-b60b-1f0ccaf19ff1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1365cc1f-31c0-4948-af2d-f9c2c026a06a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "467c8e8c-d01c-427e-b1bf-288937e56d73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b933948b-1551-4547-9110-8053e30fd711",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "255a7786-ddf0-4e3c-a88c-bfe9f35f841b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fddb1339-587f-42a2-93f2-35b37d2385a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f037b0a-33d8-47a4-8c4d-96ab6a9ab403"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3277b27-0cd7-4722-b069-553da3b6a282",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24215374-0f26-427d-8998-9c23db50dad4"
            }
          }
        ]
      },
      {
        "id": "aea85fb2-aa22-4e5c-83b8-e84e0b7c3b2a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e122d88b-0d43-4da1-9d91-6bbb1084e933",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86286fe8-dc0d-4f18-88f4-30551feeb56e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aa77dee1-7b3b-4581-846c-cd38b1875729",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5dece0c-1628-4937-9f4b-7b374542c39b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83aa81fc-78d4-40ae-92e0-779194e708fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 45.74390243902438,
      "responseMin": 15,
      "responseMax": 297,
      "responseSd": 26.40913751186445,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686530690193,
      "completed": 1686530714370
    },
    "executions": [
      {
        "id": "f3c1f40c-bb79-4897-bf18-bf27568f4c59",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "54e77f12-f2da-4a8f-9249-497b8e01d53c",
          "httpRequestId": "18b567eb-c36d-4728-a04d-6196137923b1"
        },
        "item": {
          "id": "f3c1f40c-bb79-4897-bf18-bf27568f4c59",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fb540e31-b182-411c-8adc-ca3583ac8ef4",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "97152174-f349-47f5-90fb-ac9cc6604fa8",
        "cursor": {
          "ref": "bdb8fc44-dc85-4cbe-b845-a9ba3435b100",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1363c1a8-4001-4bc7-87b0-7af9a06b930d"
        },
        "item": {
          "id": "97152174-f349-47f5-90fb-ac9cc6604fa8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1ad1dba4-12af-4fab-bc3a-72608830fe21",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "f6d86c5c-7418-4691-a6e3-d7288f8fb913",
        "cursor": {
          "ref": "ec60229c-cd60-49c0-a535-af6744dbc168",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "544ffa67-5ac6-4c35-8112-321e2d82af9f"
        },
        "item": {
          "id": "f6d86c5c-7418-4691-a6e3-d7288f8fb913",
          "name": "did_json"
        },
        "response": {
          "id": "127a1a1e-719e-4dba-9da4-2b446bed8e10",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73828285-1122-4b98-9873-466d595b62c6",
        "cursor": {
          "ref": "5803ed10-a8d3-4254-b2fe-000ba62e6df2",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66e888dd-c041-404a-89d2-db37d1f288e4"
        },
        "item": {
          "id": "73828285-1122-4b98-9873-466d595b62c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c30df2c-a874-4cd0-8a8a-298cd4634619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73828285-1122-4b98-9873-466d595b62c6",
        "cursor": {
          "ref": "5803ed10-a8d3-4254-b2fe-000ba62e6df2",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "66e888dd-c041-404a-89d2-db37d1f288e4"
        },
        "item": {
          "id": "73828285-1122-4b98-9873-466d595b62c6",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c30df2c-a874-4cd0-8a8a-298cd4634619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e996c3-c834-4200-962e-ce665a1d978b",
        "cursor": {
          "ref": "b0256bf0-c259-4278-a3da-11a6743feddb",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5aab8751-4430-4350-afbf-733c13a441b4"
        },
        "item": {
          "id": "97e996c3-c834-4200-962e-ce665a1d978b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5c48cf13-35be-4e36-bf38-149cd1b7e142",
          "status": "Not Found",
          "code": 404,
          "responseTime": 147,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdb1eb8-5f06-438e-ad4d-4ae858e913e6",
        "cursor": {
          "ref": "17ff336c-c62f-4b71-8945-561bc24e75f1",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "34fbfe4f-c5c1-4b9a-a0cf-c0cae8a1ca4f"
        },
        "item": {
          "id": "9fdb1eb8-5f06-438e-ad4d-4ae858e913e6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "129e32b3-5688-41cd-b8b1-548738832a56",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522536d3-096a-4984-bc87-ff122ca2f748",
        "cursor": {
          "ref": "856ccfc2-3d72-4074-91be-18cface5194c",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "36024ec5-65bb-4783-a4d6-56575eacbd89"
        },
        "item": {
          "id": "522536d3-096a-4984-bc87-ff122ca2f748",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "75416849-6b88-41db-acba-d55fbfa5498c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8113ebb3-b354-44d7-8475-017013167f94",
        "cursor": {
          "ref": "d9fc5adb-5976-48ab-b326-c3c6f1e09892",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0fb679fc-0a55-4bfb-bd95-8ec6a7c96c34"
        },
        "item": {
          "id": "8113ebb3-b354-44d7-8475-017013167f94",
          "name": "identifiers"
        },
        "response": {
          "id": "41d6d629-171b-4d8b-999f-0f7a2e8d3963",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e53dd0-48f2-48bf-938c-352798520066",
        "cursor": {
          "ref": "ea8615bb-c17e-421a-ae43-a2f5fc517929",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4127e93a-a61f-4ea4-b7ff-ecc4a7daa9e7"
        },
        "item": {
          "id": "12e53dd0-48f2-48bf-938c-352798520066",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f0dbf957-d7dd-4ebf-9d31-37aa0a918d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4b7779-cd70-4b8d-8b93-20dc8f64254d",
        "cursor": {
          "ref": "3f89f8b3-6baa-4698-a0b4-4a292f2e0ebb",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ce2a512c-e629-49bc-86d0-97947b5e0efd"
        },
        "item": {
          "id": "5e4b7779-cd70-4b8d-8b93-20dc8f64254d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "08419155-1956-4337-985f-b2bc6ae833b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88906fb-ec67-4c6c-af54-792dc31c071d",
        "cursor": {
          "ref": "1fa1f158-a41e-427f-b7d5-5403ad25ba61",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8c72f961-2112-4a62-8432-fca4a6ef96e7"
        },
        "item": {
          "id": "a88906fb-ec67-4c6c-af54-792dc31c071d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ca14c153-bcdd-47d9-b052-481b09e96594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dee3a0-1c97-41f7-8229-aad4d2262603",
        "cursor": {
          "ref": "e81a5d25-f85a-4010-9550-fe0c0499f55e",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0d594551-b1e9-4497-b761-65941cb47ef8"
        },
        "item": {
          "id": "92dee3a0-1c97-41f7-8229-aad4d2262603",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ed0baaf4-5b1c-43d1-82f4-805c9a3c32d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c725a6d-d1e8-41c3-870e-45cbfb28b7f0",
        "cursor": {
          "ref": "d96133d2-3828-4dfc-a2b0-436bcb9610da",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d2df72fa-455a-4414-8f2e-e70c00d7711b"
        },
        "item": {
          "id": "4c725a6d-d1e8-41c3-870e-45cbfb28b7f0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3142e352-6952-48cf-ab90-22fc352c3095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc71abe0-f59e-4799-8d2c-47d85708e7dd",
        "cursor": {
          "ref": "e0e55671-267c-4c18-af2c-eb4d2d7fb244",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "77ef04ea-bcc9-4365-a392-17bd00ea841f"
        },
        "item": {
          "id": "dc71abe0-f59e-4799-8d2c-47d85708e7dd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ee02e7e2-e096-4472-ac4b-351645c2eaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2de066-8fe0-4ea1-8b3d-ba9033066967",
        "cursor": {
          "ref": "f848029e-904a-423c-8f30-33a50d93133a",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ad58a85d-220b-49aa-9c9c-7baa49f736c4"
        },
        "item": {
          "id": "7d2de066-8fe0-4ea1-8b3d-ba9033066967",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1198edb8-81d3-4363-bb75-9f282e8374ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb38474-c12c-4315-a878-85860bb62d17",
        "cursor": {
          "ref": "f8385287-6d0e-459e-88ec-5c098c8c9ab3",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8960d67e-230f-4935-9548-73e298383010"
        },
        "item": {
          "id": "8eb38474-c12c-4315-a878-85860bb62d17",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5fc8b2de-594f-43ce-a122-2b77cfd56200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0fafed-1d64-4605-aebc-defb3052feb4",
        "cursor": {
          "ref": "7122157a-5fef-4ed8-b11f-9ccd55d5bce0",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a887b8ea-28a9-4d91-aa2c-7f79cc7a2a03"
        },
        "item": {
          "id": "ef0fafed-1d64-4605-aebc-defb3052feb4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "337892e5-ce46-4e75-b179-b31878e32ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4faa5f-8107-45fa-bbc7-b18c41baf5f2",
        "cursor": {
          "ref": "71c83abe-5778-43d3-9dc2-97039beeac76",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7e1daeb5-84d3-4a96-8003-e9d225265390"
        },
        "item": {
          "id": "4b4faa5f-8107-45fa-bbc7-b18c41baf5f2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a81f0867-38d7-4a3f-8b71-8d3a9c1fdf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f0bf8b-68ea-449f-9be0-56fe100545fe",
        "cursor": {
          "ref": "2b5e7a7d-6a96-4c6e-9c3c-ae459d06cf4e",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2f130857-2c4e-4b58-9e18-e6050bb661a9"
        },
        "item": {
          "id": "d4f0bf8b-68ea-449f-9be0-56fe100545fe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fe06fa98-7631-4183-b533-d0ea6fafbb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f24f5b-3d1a-4892-b5f3-0ef8e2146471",
        "cursor": {
          "ref": "8d3141b5-be7f-4c05-a322-70d98a1f58dd",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b3195be1-db52-4d3e-b702-c5e47b603c72"
        },
        "item": {
          "id": "06f24f5b-3d1a-4892-b5f3-0ef8e2146471",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1e68eed9-6545-40d8-bf88-ba3373acfa30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495ae044-4d2e-4ce2-a385-a903c7d204fa",
        "cursor": {
          "ref": "fcea46bf-b4dc-4ca0-a8d7-a1826c787c9e",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e16b7257-91a2-429e-897a-cff4502f9576"
        },
        "item": {
          "id": "495ae044-4d2e-4ce2-a385-a903c7d204fa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "12422de7-6937-444d-bf39-dc6f40b3a667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90653096-059c-4ef9-88f6-2996ff4564f8",
        "cursor": {
          "ref": "12f2bad2-83bb-4b50-9e3e-61c8302eec8e",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ad4cac70-a525-4543-8bb3-aac4d15de729"
        },
        "item": {
          "id": "90653096-059c-4ef9-88f6-2996ff4564f8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e7e63177-29af-4e7a-8c68-2a1b36f8c0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab8e994-3f60-438f-88b5-98c65104b48e",
        "cursor": {
          "ref": "e7dad030-49fe-4a7f-aa6f-78ec32af728e",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f47fd4dc-2f07-4fec-964b-d675b60d85a8"
        },
        "item": {
          "id": "dab8e994-3f60-438f-88b5-98c65104b48e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3644a99d-6a53-4b2d-b92c-25b88057f912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8f2650-63b5-484f-899f-834b3388d764",
        "cursor": {
          "ref": "556d2643-89c2-42f4-b152-649529bf26e2",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a76b2dd8-c394-4587-8e3a-5eabe865a39b"
        },
        "item": {
          "id": "2b8f2650-63b5-484f-899f-834b3388d764",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d62c71fd-d33a-42a6-8590-b03af19c576a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a202206c-01db-4d00-a3a4-8119b976c6c4",
        "cursor": {
          "ref": "65bc630f-d41d-4c10-b166-9e5f744594a0",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "68d3790d-fcf7-4feb-98ca-be915f1e7c88"
        },
        "item": {
          "id": "a202206c-01db-4d00-a3a4-8119b976c6c4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ee27d93f-4991-422e-8408-c2636792bdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420008aa-9165-4095-89f9-a244ea1cb9c4",
        "cursor": {
          "ref": "91e04f0e-7c6b-457e-8c0d-20da013f1724",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "05fbe238-acae-4756-aa52-2700cacd6bff"
        },
        "item": {
          "id": "420008aa-9165-4095-89f9-a244ea1cb9c4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f0eec37-5cbb-4e8c-9962-d71ad3ae4538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3ef586-2424-4a6c-992a-1c1473c1fa03",
        "cursor": {
          "ref": "ffc363c2-7519-4dd2-b936-68c388d3b044",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0f302620-9ea4-4d67-b57a-e0becf4468b3"
        },
        "item": {
          "id": "2b3ef586-2424-4a6c-992a-1c1473c1fa03",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ef8a6cef-d3c9-4086-955b-653886a318ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b483702-e70c-4348-9abf-9285683bf57c",
        "cursor": {
          "ref": "ee2ea590-7350-4279-9902-68ffc29c3735",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cde3a9f5-0351-4417-8e58-347345f20586"
        },
        "item": {
          "id": "4b483702-e70c-4348-9abf-9285683bf57c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ae5895ba-f54a-425e-9510-c6217a0c60fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3455a1-2c63-476f-827f-bdebecc99347",
        "cursor": {
          "ref": "aa46c7fc-32c4-4251-b0a2-32c47b9d550f",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0ce13d8d-358c-4d63-b1e6-272d646462b7"
        },
        "item": {
          "id": "3b3455a1-2c63-476f-827f-bdebecc99347",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "05b74b69-b821-4bcb-8bb8-aed1d3a3e1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876bec79-21f4-4328-bf86-7efdc5c9c411",
        "cursor": {
          "ref": "07b905bd-139a-435e-a809-6289b4a79f94",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2b5b8efe-0f67-450f-b13c-ba19c2d07d44"
        },
        "item": {
          "id": "876bec79-21f4-4328-bf86-7efdc5c9c411",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b9c952fc-064b-4980-a97c-58cb185ef386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65efca15-9d39-4fe1-b174-9b04f522f911",
        "cursor": {
          "ref": "d36550f2-4be7-425e-8209-3b7ae376908f",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fcf0588d-6657-4864-ac6f-ea6e6acdb7e7"
        },
        "item": {
          "id": "65efca15-9d39-4fe1-b174-9b04f522f911",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f3a0b97d-f50d-4cf6-babd-c5692fcf6b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229d9445-3240-407b-bd19-67976356bd04",
        "cursor": {
          "ref": "ecf1d223-4246-4aa3-b30a-1dd8e0f5733e",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2270e23c-8ec0-4ec9-9b07-d14b2bf21c24"
        },
        "item": {
          "id": "229d9445-3240-407b-bd19-67976356bd04",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4ceb1da5-3e29-48f2-a8a4-acfa46797cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a286df-ff49-427a-a16c-27fc793316fc",
        "cursor": {
          "ref": "8806c578-b2ba-4c22-9629-5e201e3dab7c",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4432872a-1cbf-4913-903b-d2b48778864c"
        },
        "item": {
          "id": "e3a286df-ff49-427a-a16c-27fc793316fc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "46c24cc7-304d-4c3b-9919-dd4df49f62f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de829a37-d07c-4ba6-9adf-2d40b3c43894",
        "cursor": {
          "ref": "a300af94-8cb1-465b-af09-11740930d83a",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "97c6a363-7dfa-4e28-8687-23f4af1a3c8a"
        },
        "item": {
          "id": "de829a37-d07c-4ba6-9adf-2d40b3c43894",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "64ebeb58-5e55-40a7-8e82-15cd715e03c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f3b4eb-9119-48c4-a723-564cabfe9ca9",
        "cursor": {
          "ref": "9805aa26-d775-45d1-85ab-122fd5b88226",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1f0d8bd9-0f21-4730-b5ff-4e4c6abf66b9"
        },
        "item": {
          "id": "c9f3b4eb-9119-48c4-a723-564cabfe9ca9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6a502859-54de-4221-9cfb-02af8fcbe6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ca0d07-866d-4b68-8f73-75c9e7a4d0bb",
        "cursor": {
          "ref": "12fc41eb-dc2c-4ff4-b94e-0afbef7b3914",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "27bcbafd-c926-468f-817f-0a06bf86bb5c"
        },
        "item": {
          "id": "f7ca0d07-866d-4b68-8f73-75c9e7a4d0bb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0b3d429f-257e-4341-9195-763d7527c52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88da8c2e-75dd-4b7b-9e5a-206e7bd50fdb",
        "cursor": {
          "ref": "806ca7cd-94f6-41ed-91a1-aaa75068c5ef",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4832347d-ccd0-4c32-9cfb-0ccbc8aadd5b"
        },
        "item": {
          "id": "88da8c2e-75dd-4b7b-9e5a-206e7bd50fdb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "48687e84-6c13-4b52-b8cd-57a493a1c591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6692d586-02cb-4cbc-9c1c-b164db4ebe44",
        "cursor": {
          "ref": "d84fd977-f8ca-4d29-90ee-76ea6bb95138",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "64001c66-ab5b-4c89-a999-bedd13bffbb9"
        },
        "item": {
          "id": "6692d586-02cb-4cbc-9c1c-b164db4ebe44",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4ddaa368-5caa-4f25-8181-aaa8ffc7b44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687d48b8-2ba2-439c-a7fa-65ae9e8f2d88",
        "cursor": {
          "ref": "f64f3447-0826-4cc7-a485-c5adbdefd7ab",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "680abbc3-84ff-4845-9667-24309143faea"
        },
        "item": {
          "id": "687d48b8-2ba2-439c-a7fa-65ae9e8f2d88",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ebda454d-bed4-4d5d-a4c8-a5df18c2d73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db2400e-84b3-4634-aa5d-b18e9534c1cc",
        "cursor": {
          "ref": "6b4237f2-b677-41b7-b6b8-b8c1c1178e5b",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6f5fb2b3-a07a-424a-8bbe-6e7f220144e4"
        },
        "item": {
          "id": "8db2400e-84b3-4634-aa5d-b18e9534c1cc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "269d823a-dd78-4376-837d-f4fc5f0f8ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d02ca88-a2ac-4f65-8b4a-3c7e9e961bbd",
        "cursor": {
          "ref": "3707e2c7-0de1-45bc-a584-82bc15faa0fa",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "71085188-a347-4133-a551-80d4b251e83e"
        },
        "item": {
          "id": "9d02ca88-a2ac-4f65-8b4a-3c7e9e961bbd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cc70639c-3832-4b39-a158-ab73d0e7eece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28333e4b-eb38-4a1f-badf-58db6fa97f95",
        "cursor": {
          "ref": "72a06ead-e42f-415e-92c1-711636200158",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "002475dd-ec39-45ea-b3ef-e244aa6850e7"
        },
        "item": {
          "id": "28333e4b-eb38-4a1f-badf-58db6fa97f95",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ab7ca2c0-c3e0-48c3-83ec-71e89ee1924a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf7338a-71a9-4c92-8458-bcf0934025c9",
        "cursor": {
          "ref": "7c88acaf-f833-4fee-8e40-6819b2072280",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a890b3b2-0851-4fef-91db-6d1f4b25a8d6"
        },
        "item": {
          "id": "dbf7338a-71a9-4c92-8458-bcf0934025c9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "13533560-1478-40dd-b3f5-306221f6071c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856a95e0-b6c7-43f1-9478-a9a9f65990bb",
        "cursor": {
          "ref": "1738d604-3083-4efb-af83-b58ade0cf5a0",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c209af3c-99b5-4128-ada4-71ee248305c5"
        },
        "item": {
          "id": "856a95e0-b6c7-43f1-9478-a9a9f65990bb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e3ef20d-99a6-4edb-b613-5794844f7bc3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28cb855-a116-468c-bc76-62019f121afa",
        "cursor": {
          "ref": "d27a1d7c-3bdf-454c-b5bf-64827fcf9c5e",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f983b136-4e08-4062-92e6-295010a1ea58"
        },
        "item": {
          "id": "a28cb855-a116-468c-bc76-62019f121afa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ba4061d8-b4c1-448b-8eb5-f819f33b556d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9368de2d-ff90-414e-9bcc-6da1ba135ea3",
        "cursor": {
          "ref": "ba6d3335-84c6-4edc-b35b-f631696ac55a",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "28d5e612-4c1f-4e49-aa80-95612f74dff8"
        },
        "item": {
          "id": "9368de2d-ff90-414e-9bcc-6da1ba135ea3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "22ac2c34-b051-4045-8d6b-d151a4ec0838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5c8b3d-fd21-4521-8982-79617fad716b",
        "cursor": {
          "ref": "bcfcaefa-b92c-496c-a292-dd0bfb857bc7",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6b79899c-a024-4ee1-9b82-1cf532acd0d7"
        },
        "item": {
          "id": "3c5c8b3d-fd21-4521-8982-79617fad716b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4ad7dad1-4e10-42d2-9d47-3acbb67f4361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efabedb-75fe-4309-a65e-20c4b6948e2d",
        "cursor": {
          "ref": "ff03763a-2d4b-4e1f-aad7-bae50635ff07",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6786a662-aeed-45f4-911d-cf6170030f4e"
        },
        "item": {
          "id": "7efabedb-75fe-4309-a65e-20c4b6948e2d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a64d7bf0-0323-4f5a-acb7-59d3d39dd4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e0de24-c94e-446b-bad9-969dea9c30fe",
        "cursor": {
          "ref": "2f5eef69-0aae-411d-ba8b-69a5f37c42c0",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "08a32b38-bf14-412b-b682-4ee90323a7dd"
        },
        "item": {
          "id": "10e0de24-c94e-446b-bad9-969dea9c30fe",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "301bda90-a2ff-4ca3-bf88-56e628649057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1342b4-58d2-430b-bb4b-86e1a02c35c0",
        "cursor": {
          "ref": "5818a604-a543-4aec-8b98-f8426e881289",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0c63ad3b-861a-4093-9f29-d46e5596ba7f"
        },
        "item": {
          "id": "cf1342b4-58d2-430b-bb4b-86e1a02c35c0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "360e9afd-80cd-4f34-b2df-a6b5d293addc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb96419-a115-4852-bad5-b8a7257989c5",
        "cursor": {
          "ref": "089403a1-47f9-4ca3-ae1e-07ed4fec8f0d",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c74b701b-4c5f-4642-bec4-326c342e4677"
        },
        "item": {
          "id": "8cb96419-a115-4852-bad5-b8a7257989c5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e74e33bd-975f-47f9-a8e7-25304b1a7130",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9a16c3-a583-4054-9402-cb791f6c15eb",
        "cursor": {
          "ref": "20221380-9528-4341-8f7e-9ce8418f0721",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c967d9f9-caf7-40fb-a6e7-a0da165ad42e"
        },
        "item": {
          "id": "3e9a16c3-a583-4054-9402-cb791f6c15eb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c0b377b3-eeff-4528-9f66-e9cbb248ae8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f76eff2-3a81-4f2b-8c3e-5f7a0ac6e6fa",
        "cursor": {
          "ref": "a9530f42-134e-4ad6-b7f6-75ca0312e83e",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c5b2bf50-09f4-475d-b526-9e9938c5ca35"
        },
        "item": {
          "id": "7f76eff2-3a81-4f2b-8c3e-5f7a0ac6e6fa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ec37f277-a155-4ea3-b863-16d0f6b58a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195ca3e4-4c92-4348-bc81-cfb9550f9679",
        "cursor": {
          "ref": "edc6393f-fcd5-448f-b0e4-81bba3314565",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4551a730-ae51-488a-969b-fe569fc79e3b"
        },
        "item": {
          "id": "195ca3e4-4c92-4348-bc81-cfb9550f9679",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "98ce8382-8b41-4ba4-bde1-37fd7af75700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873dd179-1155-4b2a-9182-4c82d0bc6728",
        "cursor": {
          "ref": "f9520f90-f62a-4d3f-a613-368f0753ae3c",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "871c371b-4c7d-4ce4-a7b6-103be6a5b700"
        },
        "item": {
          "id": "873dd179-1155-4b2a-9182-4c82d0bc6728",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "df9c584f-3e9e-4311-aa6e-e839c63c55ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2055af4-998b-4d8a-864f-3bcacc2efce7",
        "cursor": {
          "ref": "bb05afb1-0335-4310-bcf8-823166b4cd39",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d4413270-931b-49fa-8275-983a14134e1c"
        },
        "item": {
          "id": "a2055af4-998b-4d8a-864f-3bcacc2efce7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0fb6a245-fe86-4a63-971e-f1c6592aed40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853981ba-4ad6-48c1-891f-4bb010bc40ef",
        "cursor": {
          "ref": "10dd9aa2-6b41-415d-bc09-e6e5ee245eef",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d7896bd4-6917-4224-a954-ca7d73ccb84f"
        },
        "item": {
          "id": "853981ba-4ad6-48c1-891f-4bb010bc40ef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c80278ef-8aa8-4b51-a4bc-900d996080a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39130ddb-c8d4-4e9c-915e-ed1cf31d3dda",
        "cursor": {
          "ref": "5f9fc602-ea3e-424a-8dbc-7dc22a03ffbf",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b8017d72-b493-44f4-8b33-1d7e55030157"
        },
        "item": {
          "id": "39130ddb-c8d4-4e9c-915e-ed1cf31d3dda",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c69e926b-36d8-4958-a9d2-5c0158609c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bfe0af-4932-4688-a181-997b7a0911da",
        "cursor": {
          "ref": "5284aade-2517-41b8-971c-6b2b73da5c36",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a2bcc373-d05d-430e-89fc-ad6507df586a"
        },
        "item": {
          "id": "c6bfe0af-4932-4688-a181-997b7a0911da",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bcaedf80-8325-4a45-972c-83a1a68003c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b41f872-9456-4c9e-9376-c292e66be8b3",
        "cursor": {
          "ref": "ad75d7e9-15b2-43c0-a9b4-acf13c957e75",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "66717d66-bdb3-4f1d-8597-c085cf54e74a"
        },
        "item": {
          "id": "8b41f872-9456-4c9e-9376-c292e66be8b3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "697bb2ab-c114-4b12-9e13-0ddf4ff707a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df913e79-905f-4f37-900b-c3a8fa4efdb8",
        "cursor": {
          "ref": "f6725c14-5f0d-4355-8a3a-cad5dca2fc6f",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "36964432-b51c-4c13-9ce4-189a9a68a3d1"
        },
        "item": {
          "id": "df913e79-905f-4f37-900b-c3a8fa4efdb8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2aec80d7-2eb9-4fdf-9030-85a225e73bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec265c3-1783-4306-b390-8b593fac4311",
        "cursor": {
          "ref": "a3598b45-cd53-46dc-820b-d7cfbcd63d74",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "03464031-d04e-434a-9c93-48d7e80a6448"
        },
        "item": {
          "id": "fec265c3-1783-4306-b390-8b593fac4311",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d9b3133f-ad73-450f-94c2-e8b77ba9b2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e06c876-731c-442c-b372-47a1776adffc",
        "cursor": {
          "ref": "f192aa15-3646-4978-a285-636d500b8d36",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "74029052-9ca1-4f9e-86e3-c44fe8919d2f"
        },
        "item": {
          "id": "2e06c876-731c-442c-b372-47a1776adffc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "83194b8a-6560-4811-85b1-d796d5a08a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f87a4-dfc7-42c5-9896-41bb771cc3e7",
        "cursor": {
          "ref": "c5279373-7a80-4857-a5d4-af8649c309ce",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3095c70c-f5fb-4f28-8239-d09769a45148"
        },
        "item": {
          "id": "602f87a4-dfc7-42c5-9896-41bb771cc3e7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b360924f-60b5-4704-8660-13499095b627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb4c98-14ef-4d52-a0e7-b7c246ef499a",
        "cursor": {
          "ref": "c22c6c86-1c23-4991-a181-42c2b7a5cd26",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bf9611ab-692e-47ce-89f7-f7893437f2ed"
        },
        "item": {
          "id": "c2eb4c98-14ef-4d52-a0e7-b7c246ef499a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "79a23c5b-9925-4669-924e-b3bdcac441f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eacf68c-5d46-4707-a45a-61fe51ebc5ca",
        "cursor": {
          "ref": "2c0d04cd-7801-4691-929b-5a6abbef7e73",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d264b840-fbf5-4df6-aaae-074f2cb936bb"
        },
        "item": {
          "id": "0eacf68c-5d46-4707-a45a-61fe51ebc5ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "572fba62-f4a6-424e-8f8f-992baf9db092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5c809a-239b-42e5-a58e-7100d120c308",
        "cursor": {
          "ref": "151b8c5d-b936-4e40-bb9f-d7459c114ccb",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7a113309-6958-42be-b580-fbc059d47a7b"
        },
        "item": {
          "id": "1d5c809a-239b-42e5-a58e-7100d120c308",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e0d2c210-c132-4bec-9df9-ba541f4a4ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abfb2c9-41f4-4d07-b705-9706051dac29",
        "cursor": {
          "ref": "ccf3b7a3-8d82-4dc7-a8d0-5683e19016e4",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "46d16b67-08aa-4100-ab89-5549635bfc48"
        },
        "item": {
          "id": "9abfb2c9-41f4-4d07-b705-9706051dac29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "821841df-4df5-4291-8194-652d569139dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40592c20-e9c4-4411-87ce-4dccb9a3a12d",
        "cursor": {
          "ref": "10aaf264-6141-4ed2-a12e-9d6c2a7d2bf6",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4814344d-b10c-4eda-b08e-114f3b2ee5e7"
        },
        "item": {
          "id": "40592c20-e9c4-4411-87ce-4dccb9a3a12d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e117d05c-8f5f-4077-84e9-49a335fabcf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c2afdb-5840-4a2b-9fbe-f051378d1e04",
        "cursor": {
          "ref": "7b38f93a-b605-4302-a34b-5fcf421404ff",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "24be4aef-5133-4ddd-b51b-4fb85db88be7"
        },
        "item": {
          "id": "63c2afdb-5840-4a2b-9fbe-f051378d1e04",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d177c0f3-dd35-405f-8880-c3d72be1e0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a636b9-32af-40a1-b3be-867483eb0c9d",
        "cursor": {
          "ref": "045206ed-ae33-427a-ba34-ae387a5eb731",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8e980b13-dc1a-4ccf-8db9-5d16d580fbcc"
        },
        "item": {
          "id": "10a636b9-32af-40a1-b3be-867483eb0c9d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bf63ac17-7167-4697-9860-d1945319b877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1273e1a-b84e-4201-8240-7fc0131dd353",
        "cursor": {
          "ref": "f0ebfff6-e2d3-4c21-a208-fe25bd2cd260",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b78c639b-ad9e-423c-ac80-0be01ac34ff4"
        },
        "item": {
          "id": "f1273e1a-b84e-4201-8240-7fc0131dd353",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8557319e-9a00-4ce0-8f24-b7a8812f6d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3fa3d7-a993-4f0f-ad5e-ccfc612cc68c",
        "cursor": {
          "ref": "4ce2346a-52f2-452f-93ff-ccaac9b583bc",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "90ea0617-ca27-406b-8b75-a3dd3d0ba025"
        },
        "item": {
          "id": "0b3fa3d7-a993-4f0f-ad5e-ccfc612cc68c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ffd2fd62-52f5-4f68-94c4-43f9a107ba4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081bcc66-c05f-4087-abfa-b0ba2799a4fe",
        "cursor": {
          "ref": "6eefcb9a-df0c-4af9-848f-ac6629271634",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "74f31709-e70e-45d8-8ec5-2980b34dcbe2"
        },
        "item": {
          "id": "081bcc66-c05f-4087-abfa-b0ba2799a4fe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "388e06fc-ced6-43cf-b8c2-b805ae1b6bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5844bac-0a93-483a-8edc-e87bf4b573cf",
        "cursor": {
          "ref": "a9fdbee8-4325-4f3a-b56d-ff2ec5691b61",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8325e968-5b90-4b21-9ae9-c73fc902af02"
        },
        "item": {
          "id": "d5844bac-0a93-483a-8edc-e87bf4b573cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "50dde66d-26e5-416b-94d0-187a3e742620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2110be2b-c82b-4689-8a76-8f93aecbcb28",
        "cursor": {
          "ref": "c995719a-9b23-4f35-8a06-8a4b7d77233e",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a4713d8d-a56d-4d7b-80f3-77e9f1180e6d"
        },
        "item": {
          "id": "2110be2b-c82b-4689-8a76-8f93aecbcb28",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "42e8b69c-3e65-421a-89fa-5a4ee0da71aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25853f9-c96e-4705-9bc6-1bd7560d0cc7",
        "cursor": {
          "ref": "582f5fb9-2ca5-48d5-9962-2427cc6ce452",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2ce13ef2-3289-4a9d-b7c4-1dca7676694b"
        },
        "item": {
          "id": "d25853f9-c96e-4705-9bc6-1bd7560d0cc7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59bdc788-8ab6-4f03-9d85-cca21f21e06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084e2ae6-e309-47b6-b9fb-f2f233e296d1",
        "cursor": {
          "ref": "555f8ab8-cf23-420e-bde6-6a2f907daea5",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "521d5764-4916-420c-959f-6d0678b5f07b"
        },
        "item": {
          "id": "084e2ae6-e309-47b6-b9fb-f2f233e296d1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9fafe724-548f-4cd8-9594-b4ca478ba9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b9b9ba-a420-476b-93b5-ae81818d8724",
        "cursor": {
          "ref": "0889b07d-4a72-422b-8260-93915d3cbcc2",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8545e003-dfeb-47e3-90a7-ecc1e6ac75f3"
        },
        "item": {
          "id": "f7b9b9ba-a420-476b-93b5-ae81818d8724",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "644b3d74-0ffb-4cc5-aefd-f9d7ae964dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21712447-6837-4b54-b326-5d8d0b41da6d",
        "cursor": {
          "ref": "75359567-dfbc-4a01-89f1-422a0716a403",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bced3093-cac7-4531-b782-0eaf77a07e7e"
        },
        "item": {
          "id": "21712447-6837-4b54-b326-5d8d0b41da6d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a3c11ad0-0e7e-4f57-9603-2b8ed4e9ace1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9924e68f-c800-46f1-844a-af0195199999",
        "cursor": {
          "ref": "9dd4714d-7f29-44c4-bc81-0878c13bb2a7",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d88d577d-9c28-4e80-9455-1b231be3958d"
        },
        "item": {
          "id": "9924e68f-c800-46f1-844a-af0195199999",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "392cde14-738c-4e00-b62a-8e9c1fd653d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8632239-5eae-4df4-b5e8-0dcba4bc49de",
        "cursor": {
          "ref": "0ef8b4b1-f639-4750-acb0-2158dd32a451",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "653309d1-c125-4d1b-990d-dca191e5327d"
        },
        "item": {
          "id": "f8632239-5eae-4df4-b5e8-0dcba4bc49de",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "12202604-a300-4261-97a2-3cda091b17ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3728a40-1510-4f11-9c14-b47e2271ab3a",
        "cursor": {
          "ref": "03d17f78-3761-4d34-b660-cd16b3e2d996",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ece5f943-4e08-423f-830c-333efbbf69f2"
        },
        "item": {
          "id": "e3728a40-1510-4f11-9c14-b47e2271ab3a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cce9e20c-8056-4a63-a78e-ed95ede56045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637f346a-0a34-4ec4-a22c-6c443ba073bc",
        "cursor": {
          "ref": "8257af2b-9f9a-46a6-878c-ed058e54fa6e",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5c3c5e3a-353c-49c4-993a-53c0a19fa646"
        },
        "item": {
          "id": "637f346a-0a34-4ec4-a22c-6c443ba073bc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8edfd71b-536b-49dc-8874-0ff33c6c0152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076d4b06-63bf-47b6-99d0-240faed0d278",
        "cursor": {
          "ref": "a0cacc25-c200-4865-8f20-c9a4300dea9b",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bb65dbde-33ed-45de-932e-f44cdfd42dfa"
        },
        "item": {
          "id": "076d4b06-63bf-47b6-99d0-240faed0d278",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "220653e6-23e8-4693-a8b2-85837544fe23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1268c56-245d-40b0-afc6-5add158e7025",
        "cursor": {
          "ref": "d2cd863b-d917-4b74-8464-d3355612d3ed",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "555573c4-59d9-4325-b084-19db1ef900a9"
        },
        "item": {
          "id": "f1268c56-245d-40b0-afc6-5add158e7025",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a6345547-3977-4509-8d73-1ae87e1b8a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54706780-9d9d-4a7c-8693-be4386ce5305",
        "cursor": {
          "ref": "5f62f9fb-4d37-4aea-bc48-ca2d39ea321f",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cf6d9a3b-aeda-4b11-a806-5c76f90c239c"
        },
        "item": {
          "id": "54706780-9d9d-4a7c-8693-be4386ce5305",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f9e281bb-a4f9-4797-9e44-281b6f55f535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09149b8b-f1c3-470f-b688-3ba9eedd6138",
        "cursor": {
          "ref": "d0fc29b3-3dad-484e-881a-2254041b3a89",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0c8c097c-3e9a-40ed-8014-c557c567fa54"
        },
        "item": {
          "id": "09149b8b-f1c3-470f-b688-3ba9eedd6138",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "076416a9-ac01-4548-a5c0-bae6c75d954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390d8546-5b81-4133-b87a-c4b4ea6c62bf",
        "cursor": {
          "ref": "e5a733c6-75c1-4aba-bfa1-7d3b0e8879e1",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a751d3b5-cd7e-496e-b6f5-b78eeff82722"
        },
        "item": {
          "id": "390d8546-5b81-4133-b87a-c4b4ea6c62bf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d04017d1-52a2-4bc4-899f-e0b4045c6e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5210be28-3a65-4745-b522-e5347a0ac163",
        "cursor": {
          "ref": "79a33975-80fc-49ff-a748-61ba323ffb03",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9cda3699-e8a6-4b50-9aba-1e0ca2c1e6c6"
        },
        "item": {
          "id": "5210be28-3a65-4745-b522-e5347a0ac163",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "64ffc908-7172-434f-a9e7-98d384add568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7510ad-a7c1-42fc-8ed1-40d2c5feb807",
        "cursor": {
          "ref": "74a4c64e-0446-4d00-8bc1-d997b569a8d0",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e2f34c35-044e-4bd1-989c-244d4dd18d2a"
        },
        "item": {
          "id": "7c7510ad-a7c1-42fc-8ed1-40d2c5feb807",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aaafa806-0f40-4716-8886-29a0d17986ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62d3cbb-5aa7-436c-ae8c-f14314c0c70b",
        "cursor": {
          "ref": "45e2ea5e-618a-45b7-948b-97d5be6061f6",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "57befa3f-2d6b-4760-af2e-8759705e6297"
        },
        "item": {
          "id": "f62d3cbb-5aa7-436c-ae8c-f14314c0c70b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fb82936d-4697-445f-9eff-ffad3b380723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82ba478-b972-4b2a-9699-f91aae8f39dc",
        "cursor": {
          "ref": "5734762b-d51c-47f7-a864-bb3dab32e553",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5a141581-84c7-4ef2-99ac-a07ef95e427e"
        },
        "item": {
          "id": "f82ba478-b972-4b2a-9699-f91aae8f39dc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ecb2269e-44cf-468a-8411-11d474bb101b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bac809-e69d-440b-b4bd-4b098f5f9856",
        "cursor": {
          "ref": "fc073bb0-11df-477e-8911-05c0caa59338",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8a86cfde-3f23-4d4a-9e25-76f9ebf4fbf8"
        },
        "item": {
          "id": "23bac809-e69d-440b-b4bd-4b098f5f9856",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a4ff9228-2bc5-4f25-a88f-2ab2991eba9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a490af62-af80-404b-bbfd-8150c2ff4ed0",
        "cursor": {
          "ref": "6b58b933-a056-459e-8060-63bb0efde2c0",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6694fcb9-a8ff-4473-a463-e138f1c685da"
        },
        "item": {
          "id": "a490af62-af80-404b-bbfd-8150c2ff4ed0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ed31e1c2-a4e5-46c5-a152-20a37eb530a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996adf0-9a37-47fd-9cba-f41575f7820e",
        "cursor": {
          "ref": "3e7ddaca-3f2b-43c7-9925-9fef4b590bc5",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "04dce851-5e74-43ae-98ae-87c79d35553f"
        },
        "item": {
          "id": "e996adf0-9a37-47fd-9cba-f41575f7820e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5ab4407d-33f9-4daf-ab38-dd569a4f060d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b96dca-312d-4144-b2d6-f7432fcfaaed",
        "cursor": {
          "ref": "2740573c-e3f6-4068-aae9-3cb2245f30ed",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "83fee855-87a9-4fdb-a739-e841f1064a5a"
        },
        "item": {
          "id": "b9b96dca-312d-4144-b2d6-f7432fcfaaed",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "be500c35-0daf-40f5-b7a7-4109e2b4a375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65939e2-48d9-48ac-99ec-32bf03392ccc",
        "cursor": {
          "ref": "4ae16708-806a-4564-8019-1cab1df8feaa",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e0543ab5-83b0-4938-8f0d-b77e211887ca"
        },
        "item": {
          "id": "c65939e2-48d9-48ac-99ec-32bf03392ccc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "427c0909-dc47-4e6f-882e-ea2972243923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5dfa9d-9bac-4b5c-b17c-2332f5c9490b",
        "cursor": {
          "ref": "f124424b-9fb0-4d94-8000-0be95dd6c9d9",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b8fa4629-f97b-4e8c-b77f-828b6eb52dc7"
        },
        "item": {
          "id": "ea5dfa9d-9bac-4b5c-b17c-2332f5c9490b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "065598bb-605b-44f9-853d-82dc5514abce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d61292-ded3-48ae-aeb6-43ce5ae0a4b2",
        "cursor": {
          "ref": "2386f4be-2a06-4afa-8cf3-50a3813a76cb",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ef505570-43fc-483c-9ac9-cb0ca158ab6e"
        },
        "item": {
          "id": "07d61292-ded3-48ae-aeb6-43ce5ae0a4b2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "425bebf8-070c-4702-b197-56c1b3dab543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d12f1df-4ddc-4a91-9b30-f6b05d22cb7d",
        "cursor": {
          "ref": "8f4f1ea1-6050-46a4-bee9-3da47a5e71d8",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9f28f123-9633-40e9-9c43-96300bfab317"
        },
        "item": {
          "id": "2d12f1df-4ddc-4a91-9b30-f6b05d22cb7d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e588fe6c-a499-4a4e-896d-3d68c5650e32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bd8c59-0c77-4922-af8a-5fd5a245934f",
        "cursor": {
          "ref": "e4767d39-e8b4-43a2-a09a-7868c2b472a2",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c1e469ba-3b2f-4022-b62f-fc4e9447842b"
        },
        "item": {
          "id": "a1bd8c59-0c77-4922-af8a-5fd5a245934f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aecde1bf-d9c2-4f8f-9056-82b857f4e8c0",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a83a42-0e12-4633-af60-c4919a22f21f",
        "cursor": {
          "ref": "7facffea-ce84-43bd-9c8e-ad98784e2c91",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7a429d51-f77d-4128-89e9-478a20c48a34"
        },
        "item": {
          "id": "96a83a42-0e12-4633-af60-c4919a22f21f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0a7e1cba-cab4-4512-8c65-43a3b6ea2056",
          "status": "Created",
          "code": 201,
          "responseTime": 211,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dd2fd1-33bc-48a6-9886-c01cdfbe4564",
        "cursor": {
          "ref": "ef9323bb-6acf-4f92-97f8-17b98372998d",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e542dd11-f8a5-4998-952a-469361b3d06d"
        },
        "item": {
          "id": "89dd2fd1-33bc-48a6-9886-c01cdfbe4564",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5562b080-e5e0-4be6-b97c-1dce7f590a76",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ea6d9-2c01-4122-9e77-d173ce4faa06",
        "cursor": {
          "ref": "d3357bf4-eb20-4004-a3e0-13fab755aa57",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "707ae079-ec6c-452d-be32-9ae99f39926e"
        },
        "item": {
          "id": "a77ea6d9-2c01-4122-9e77-d173ce4faa06",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "711af334-b698-4541-823f-6cf6811a94d1",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736cfa9-f002-4f40-9563-6dab7fb22b3b",
        "cursor": {
          "ref": "cec62630-05f3-41d5-bb99-dde75070015d",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1ed8e493-26ae-4861-a49a-4e78e78262a2"
        },
        "item": {
          "id": "e736cfa9-f002-4f40-9563-6dab7fb22b3b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a30b3567-dae2-4de3-8fe9-9f3f04f7ab50",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "629be3a2-a640-4d6c-ba79-eae6d13233ff",
        "cursor": {
          "ref": "107969c5-b8d5-40c8-aba9-a51d71fd77cd",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9ebd52e9-2cd1-4dc2-b173-46f198ad713c"
        },
        "item": {
          "id": "629be3a2-a640-4d6c-ba79-eae6d13233ff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dfb3ef83-32aa-4105-91bf-9b67ea14602e",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd25b50-0dfa-4987-990f-f437bac02a20",
        "cursor": {
          "ref": "37be8ab7-a003-45f9-a028-ad090e5a0dbb",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "163d1d1f-e525-44a1-81c1-439c1892987c"
        },
        "item": {
          "id": "dfd25b50-0dfa-4987-990f-f437bac02a20",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4c536f05-f301-4622-8f51-ba01fae601ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57d911a-5763-474f-9a28-238fe1766acc",
        "cursor": {
          "ref": "d41099b9-fb2a-47ea-abcd-8bc64dbcf649",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "41851afd-5e74-47bb-ab81-e7b9a65395ed"
        },
        "item": {
          "id": "a57d911a-5763-474f-9a28-238fe1766acc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5f575253-c15e-49be-8b40-1467bd4f5003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a73af4-8cd6-41aa-9795-8248ae06fb67",
        "cursor": {
          "ref": "819101db-8780-4434-bddf-4a4b5ab41131",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d5f81274-99e0-44cd-82f4-56772439ef86"
        },
        "item": {
          "id": "19a73af4-8cd6-41aa-9795-8248ae06fb67",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c250faca-be91-440f-96d2-963b069e0800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ff7a59-b8be-4fc2-abf7-18d13009cd98",
        "cursor": {
          "ref": "abfc8248-d0d6-4e93-94de-74864452e559",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a0cd19ff-59c6-40f7-9dbe-b3f5e10585de"
        },
        "item": {
          "id": "65ff7a59-b8be-4fc2-abf7-18d13009cd98",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "40449c0f-40b5-4fb0-a914-0633cedd9130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6048dee2-8957-4c26-8cfc-c17efbb73178",
        "cursor": {
          "ref": "a69bd20b-8e3a-4c96-a8c0-656195b68eca",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f79bad4a-2b2e-4ca4-a4b8-129ba2a657f8"
        },
        "item": {
          "id": "6048dee2-8957-4c26-8cfc-c17efbb73178",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40b2f868-765c-41fa-be60-f366d5f5cf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82bb1d7-1df9-43a5-b022-002df914c12c",
        "cursor": {
          "ref": "f26dbc43-b28b-4765-923c-fab34436832a",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "918f18ba-5370-4fbd-9618-59871622b321"
        },
        "item": {
          "id": "f82bb1d7-1df9-43a5-b022-002df914c12c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "13ab1f8b-76da-4323-8f41-a177f760fb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a0b8f9-688e-4a57-b8fd-5c335d7436ea",
        "cursor": {
          "ref": "cbb4801f-b5ba-4e50-9c72-fcaf9f317de2",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cdf78008-482e-4b88-849e-f4752e4ec10d"
        },
        "item": {
          "id": "f7a0b8f9-688e-4a57-b8fd-5c335d7436ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "afcf6fb2-c367-4826-abc7-94e978307be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7781fc99-6200-488c-a54b-68cd0e9865ba",
        "cursor": {
          "ref": "0ca6dd8d-0812-420d-813f-0e939bff25af",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b30470e2-0a4f-4cc6-9fd6-4027fd8ec35e"
        },
        "item": {
          "id": "7781fc99-6200-488c-a54b-68cd0e9865ba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c8de916-336d-4512-9712-d105eba045b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2b5f54-ed89-4279-9bc6-0c00fc7da8c9",
        "cursor": {
          "ref": "8a16ab4a-8beb-413e-85f4-05b85d708379",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a9951bf6-6412-466b-959c-f703a8eaaa96"
        },
        "item": {
          "id": "bb2b5f54-ed89-4279-9bc6-0c00fc7da8c9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b62939e8-85e6-4ecd-9d34-c20805852088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacb0620-3682-4cf8-9083-867c7ecababd",
        "cursor": {
          "ref": "779c693a-6726-45be-8a7f-2d15805ad563",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cf19a9fa-b447-408b-8574-0f27d45947f0"
        },
        "item": {
          "id": "cacb0620-3682-4cf8-9083-867c7ecababd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3d3fb607-0152-4c4b-95e3-f26be8ac4fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f715fcab-b143-462b-b0aa-e4461d8adcc9",
        "cursor": {
          "ref": "ca309e82-9204-4181-93c8-9655b4fd1841",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7b79b8b3-1c98-46a6-9da5-c65db016346d"
        },
        "item": {
          "id": "f715fcab-b143-462b-b0aa-e4461d8adcc9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8ce91c80-b54d-4682-9006-e0d0bd988e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81e3701-a26f-4d0b-a8e6-60169a0ce312",
        "cursor": {
          "ref": "f3227371-4682-4862-9104-4d5d8dd1ceee",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "11c37132-8daf-4143-8fb6-3ede11b3f9c8"
        },
        "item": {
          "id": "c81e3701-a26f-4d0b-a8e6-60169a0ce312",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "54139675-48cc-40d2-b3b1-f5582a68f405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ca5338-3827-4135-a700-9628fc5039d7",
        "cursor": {
          "ref": "547ddda9-8a03-494a-8a37-65b4372f199d",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1281b6db-e771-4feb-87aa-da457efaaa15"
        },
        "item": {
          "id": "f8ca5338-3827-4135-a700-9628fc5039d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "860c907e-080e-4b25-a1ff-f89a9d312725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a378b7a0-d65d-4edd-a242-095bd2e6eb15",
        "cursor": {
          "ref": "5cd53468-206e-4fb8-8255-67fe8229a593",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "965bf48e-17cc-4dc6-a6a9-8067b19bf964"
        },
        "item": {
          "id": "a378b7a0-d65d-4edd-a242-095bd2e6eb15",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3a75194d-05f3-473b-b36b-0d2c5b41e70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc01456-aaeb-45a3-9338-b82d2c86c388",
        "cursor": {
          "ref": "1fe3ef63-2acf-4a56-a9b6-5e3df2346354",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a0d0de45-d958-4ceb-9543-3e24efe5a755"
        },
        "item": {
          "id": "5cc01456-aaeb-45a3-9338-b82d2c86c388",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6f7e4ad9-9dc7-4c86-8e8d-ee9039003713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270edc24-5228-4c41-98c6-60d66a88f9d0",
        "cursor": {
          "ref": "5554ddd3-1348-4f57-ab27-78f42395cf06",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5081fb0f-9957-40f7-83ee-996628ce63b7"
        },
        "item": {
          "id": "270edc24-5228-4c41-98c6-60d66a88f9d0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "61c068b5-8ecc-4534-b6df-eec715b6cc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb896ae-2735-4b25-bf47-72b0ecf32ffe",
        "cursor": {
          "ref": "1e1de610-c4f0-4537-ad8c-486e8b9af996",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "01879f3f-b5a9-449b-a871-c4104fdbeaa8"
        },
        "item": {
          "id": "2cb896ae-2735-4b25-bf47-72b0ecf32ffe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8fb9c03f-55c2-455a-af78-a9d4d28245e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a79ebd-1f68-46d0-bbfa-3e12c78b8a41",
        "cursor": {
          "ref": "329d1469-0422-4317-a489-b1dff44f5f40",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "89a1e540-eb2b-44e5-a8d4-751179d41d4d"
        },
        "item": {
          "id": "e3a79ebd-1f68-46d0-bbfa-3e12c78b8a41",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f71e3b0f-921f-4eec-a27f-6e0b5375480f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5459a678-edcf-4c84-8350-e8c145344ce4",
        "cursor": {
          "ref": "6a5201f1-3613-4372-b04e-9e0508929c4e",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "65dbd59f-d6bb-4ed1-858d-0b08e75e993c"
        },
        "item": {
          "id": "5459a678-edcf-4c84-8350-e8c145344ce4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8750023d-0d82-401f-9d8b-ce0dcd4231fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da27e3dc-2600-4171-b3bc-d0e828722784",
        "cursor": {
          "ref": "a3998987-d4f1-4471-b238-46161c5656f8",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "821f223a-065d-432f-9c12-ec256a0966dd"
        },
        "item": {
          "id": "da27e3dc-2600-4171-b3bc-d0e828722784",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e8c4a5b4-ee9b-4062-893b-bf79cd9bbf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea3f635-d03d-41b5-a68d-aebb7c62f9e8",
        "cursor": {
          "ref": "72b22ad7-f796-45b0-96fd-da335797b68a",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "648f4209-aca0-49c6-a5d6-234c6c3b91b1"
        },
        "item": {
          "id": "aea3f635-d03d-41b5-a68d-aebb7c62f9e8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6a03c1a6-577d-453e-a3ac-d132e8f6c6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09121132-445a-4e07-addd-71aa4b4dee62",
        "cursor": {
          "ref": "e8183d5a-7273-4877-b113-85b6f2c4bdc8",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "075af115-3bc6-4029-81bd-fe3a7339efbc"
        },
        "item": {
          "id": "09121132-445a-4e07-addd-71aa4b4dee62",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fc09520e-e2f4-4c57-b239-f240f76eeb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0505bf-df5e-4e59-9349-aaeec7a3e048",
        "cursor": {
          "ref": "e2541192-8f22-45af-9443-3dd7d6978206",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "af3bf423-4159-4deb-a0dc-35fc5d16d32f"
        },
        "item": {
          "id": "7f0505bf-df5e-4e59-9349-aaeec7a3e048",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b269cc2e-bc9c-4023-8828-9c09c3822243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77abd5a6-cf70-450d-a732-c417b4d0792e",
        "cursor": {
          "ref": "5ee26594-fc93-482e-b647-ddb85e1a10d4",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dc2377b4-40bb-48ad-b0be-ad573ec6ada7"
        },
        "item": {
          "id": "77abd5a6-cf70-450d-a732-c417b4d0792e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6edfe44e-6572-4d71-9b37-8f47d87651dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd78dac5-7db0-43d0-87a8-37a054b58c89",
        "cursor": {
          "ref": "3aa0f850-de73-4ee0-8dca-9e1613dd597c",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b358232e-73d5-4d71-9617-68abdbde27a4"
        },
        "item": {
          "id": "bd78dac5-7db0-43d0-87a8-37a054b58c89",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ce470d23-388d-4600-807f-7093863e20ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63de4ae9-5b98-46f2-8fa9-0533ce79af2f",
        "cursor": {
          "ref": "dde8db23-a065-45a8-bc05-1c8a8673c307",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "133256fa-9c14-424f-a992-845d9d596ff4"
        },
        "item": {
          "id": "63de4ae9-5b98-46f2-8fa9-0533ce79af2f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "51f8396a-8636-4533-b986-85aefaec208a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2cead0-ad14-4493-8efa-cf1294805aff",
        "cursor": {
          "ref": "bafbe27d-b125-4dac-9f71-ec3321ac9614",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aea1be42-c217-47e0-a133-2aee66d3c52e"
        },
        "item": {
          "id": "8b2cead0-ad14-4493-8efa-cf1294805aff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a72291a4-1ab5-4cf9-abfe-724ba864a663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbf497d-623a-4780-9414-d5648f29f92a",
        "cursor": {
          "ref": "0eb990b9-b7dd-4954-9cbd-e56e0e7719db",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6469b283-548b-4d8c-9e56-4463402f552f"
        },
        "item": {
          "id": "4bbf497d-623a-4780-9414-d5648f29f92a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ad7f1b1c-db00-4246-879d-5df931dfbf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5666f1-c9c3-4526-8407-da13b30b5270",
        "cursor": {
          "ref": "69bd8fdb-1c8c-4c3e-93a2-d44a4a4fdba2",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9ecf25a8-632f-46d8-8f0d-a30ad87b739d"
        },
        "item": {
          "id": "de5666f1-c9c3-4526-8407-da13b30b5270",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dabcbc3f-bf0a-4b0b-a097-35536032299b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f28289c-801c-49f9-abfa-54452cc7358f",
        "cursor": {
          "ref": "4c60d951-9ef0-4bba-a7a2-d7ab0f1baff4",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f9eaf35d-9a09-44ec-99fb-3847c83c3071"
        },
        "item": {
          "id": "5f28289c-801c-49f9-abfa-54452cc7358f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8f46d2c-0f5b-4937-a171-9e4f9b387cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ffd81a-211b-44b3-a416-82506fa3422c",
        "cursor": {
          "ref": "e84b53d8-ef2f-4fca-af39-3977fe0110ac",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c270e2d6-4ee4-48dd-896d-dde83b7dbd15"
        },
        "item": {
          "id": "e1ffd81a-211b-44b3-a416-82506fa3422c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3fa2835f-740f-4f4d-9a3a-b711f94af4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75914a28-54a2-4071-a659-1f27bd4aa7c3",
        "cursor": {
          "ref": "f4a98b2d-219c-4602-8473-7ca855152e64",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3de478c8-20f7-4fea-8eb6-939a6963315b"
        },
        "item": {
          "id": "75914a28-54a2-4071-a659-1f27bd4aa7c3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "62d3e461-5f2c-4493-8622-6c295165a5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a0e55d-a68b-40bc-8229-fbab39a88b90",
        "cursor": {
          "ref": "612b45ae-7615-4a3e-8660-000a29bb6b16",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb0081e2-a5e0-4256-abc5-49c5e3e15bca"
        },
        "item": {
          "id": "a7a0e55d-a68b-40bc-8229-fbab39a88b90",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2df50df1-68c3-466a-8178-3f1f5bc3ff31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b61182-8deb-4450-88b4-a643160bcbac",
        "cursor": {
          "ref": "658bef2a-23d4-4df9-acb4-19c2c06c20ab",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "51833b09-e50f-4040-b22f-426ebd80729a"
        },
        "item": {
          "id": "67b61182-8deb-4450-88b4-a643160bcbac",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b1ea1c8d-92d7-46ba-ac89-f74c31fe6153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866ced8a-f5b3-41f9-838f-3fda58fe1597",
        "cursor": {
          "ref": "a399e3bd-4e7f-4786-b261-2ccc0c5198cf",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "52fd71aa-da48-47cb-bdac-54011753977c"
        },
        "item": {
          "id": "866ced8a-f5b3-41f9-838f-3fda58fe1597",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "040e7c6f-bab7-4030-b27c-eb74cccb6387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270a2b92-8acb-47d4-8366-5b25145a3b66",
        "cursor": {
          "ref": "57ec5abf-17d5-46f4-ab2a-20603c27d1ec",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bdce2a7f-4c17-4cf7-9c6c-f0dbf755d896"
        },
        "item": {
          "id": "270a2b92-8acb-47d4-8366-5b25145a3b66",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "798caa53-9231-4b87-b67c-abdb75f0622a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1669841d-6fc1-4cfb-bd34-f3e1bc997b5a",
        "cursor": {
          "ref": "61622a41-3087-4c5a-8117-17aa898d2cb3",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c6c46467-18e8-4887-b6ea-89c131352c24"
        },
        "item": {
          "id": "1669841d-6fc1-4cfb-bd34-f3e1bc997b5a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c37c8c6a-98f8-4ae0-8194-610cfa09d4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586b28c2-7ff2-4992-b727-fcbb6b0e1a12",
        "cursor": {
          "ref": "cc7940ce-57ba-4033-af8b-d71193dd40d2",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "712f3d5e-87ab-44ce-813b-43307a66438c"
        },
        "item": {
          "id": "586b28c2-7ff2-4992-b727-fcbb6b0e1a12",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aa7e44cc-0d61-47fb-85d2-49ae65bd16c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9434d8-251e-4bad-834c-42c761419ad2",
        "cursor": {
          "ref": "3541bf4a-c613-4a47-9ee2-9f470a55de64",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b7558a40-4cda-4205-b321-5b5420f4095e"
        },
        "item": {
          "id": "5c9434d8-251e-4bad-834c-42c761419ad2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3cc60b95-6104-43bb-a6ee-a0f08336aca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b61d119-4359-4905-80f3-30c466ffbdaa",
        "cursor": {
          "ref": "718fc69e-c30d-42a1-aa59-26ae5fac42b7",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "23a1734e-dfde-4d1a-b207-dddc48fe0250"
        },
        "item": {
          "id": "1b61d119-4359-4905-80f3-30c466ffbdaa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "81b4c804-a24b-49a1-b165-f5000c434dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8387b374-01d2-4c4d-99c6-5bbc34609544",
        "cursor": {
          "ref": "c4f739a6-c90f-4008-9924-dc1cf7b39f31",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9a73cfa8-a670-4079-b45d-71573b4ae6a1"
        },
        "item": {
          "id": "8387b374-01d2-4c4d-99c6-5bbc34609544",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e9bb4c35-8014-4127-a947-ef5b00886ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870bae9c-ae43-4ed7-ac56-a0234589fdfe",
        "cursor": {
          "ref": "78fa211e-7913-4d41-89b3-3ca898191649",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "80ed5de2-1b39-473a-a1fd-f80d3dac7c66"
        },
        "item": {
          "id": "870bae9c-ae43-4ed7-ac56-a0234589fdfe",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3ecd5789-9181-46c4-87b0-c19133029bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0ec01f-88f8-4919-af3b-49dffade4843",
        "cursor": {
          "ref": "df3ddd70-a6b6-4945-8ab3-24c06291b76b",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1ace1398-4285-4428-a181-438a6cf8d04d"
        },
        "item": {
          "id": "df0ec01f-88f8-4919-af3b-49dffade4843",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cd6b7950-9982-4ef0-a81c-2621a490f77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d827184-1797-4d2f-ad3d-0a676979a2d0",
        "cursor": {
          "ref": "ebc5a6b8-b954-4033-a7f4-a548dd60110e",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "79a88077-9076-41bf-b3ad-9dd4cef32fbe"
        },
        "item": {
          "id": "1d827184-1797-4d2f-ad3d-0a676979a2d0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "87dbb7bc-86aa-457e-8b9b-9b0520cd8d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aa6e5a-10f3-4ded-9fc3-ad7e9d60d0b9",
        "cursor": {
          "ref": "9e6c1780-602f-4eef-b4ac-19beb0bae56e",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "16a3032e-a9ca-4f0c-be4d-84aa3e10cb03"
        },
        "item": {
          "id": "74aa6e5a-10f3-4ded-9fc3-ad7e9d60d0b9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cee1428d-e3ec-48c9-bc0d-9644c2617302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446e828d-4317-4170-a2c2-756e6a4ba9a5",
        "cursor": {
          "ref": "a998924f-093a-47c8-8089-81163021f7b9",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "01bf3908-c90c-48e0-b7b3-cb2b57b8c0e8"
        },
        "item": {
          "id": "446e828d-4317-4170-a2c2-756e6a4ba9a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a1f7691b-db33-4ff9-9be7-d3c4da7c5f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcca534-1664-4015-add5-0b4b4cd25305",
        "cursor": {
          "ref": "ef74ce89-afb4-4b17-afa6-763a2ed4b3c1",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c9c9c079-66ee-46d7-9194-04546478bd7e"
        },
        "item": {
          "id": "4dcca534-1664-4015-add5-0b4b4cd25305",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9275dcc2-7ff6-463b-8f01-2691e9d21f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158bc9f9-37f8-4dc5-9311-4405db2817ad",
        "cursor": {
          "ref": "4bb1fc65-6b33-4b7e-b957-36151fcd1871",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "33a0d223-1099-422d-b309-2a250a91f451"
        },
        "item": {
          "id": "158bc9f9-37f8-4dc5-9311-4405db2817ad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "50bb23f1-3fdc-4d86-ab13-d27bee6b02a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb43950-4e5c-4da7-b886-cf5f0163be9b",
        "cursor": {
          "ref": "6b00badb-c1b7-47c6-900a-a3c7ebb90a0f",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5eeff7c3-88f0-4643-8d0b-19432e435adb"
        },
        "item": {
          "id": "feb43950-4e5c-4da7-b886-cf5f0163be9b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e3549ad6-514c-4215-8b2f-21608c5b987c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ac76fe-fc5e-480a-a9dd-5dd74a8c1fc4",
        "cursor": {
          "ref": "2da5b28f-b4d2-4cc2-aae3-f5f155d01b52",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "43496162-807e-46a1-8ed8-3cd2bbc07a11"
        },
        "item": {
          "id": "a3ac76fe-fc5e-480a-a9dd-5dd74a8c1fc4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0abdf0f1-cdd3-4d7b-9cd1-f24397af04d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd948c0d-04c7-4492-8be5-430445b7ead4",
        "cursor": {
          "ref": "ccdfcb66-127b-4d04-8526-0d13a6d0e0b5",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "63dcb719-37a4-49bc-9662-302acccef5c2"
        },
        "item": {
          "id": "cd948c0d-04c7-4492-8be5-430445b7ead4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2ecb0c09-d2f3-4d0e-89a9-d69fb2d63e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9255c897-7d67-4808-acf5-e2116755a605",
        "cursor": {
          "ref": "51089626-1e12-4b16-a2b6-c99b94e185b2",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8f9cc239-f684-45f1-a323-419046b4d58b"
        },
        "item": {
          "id": "9255c897-7d67-4808-acf5-e2116755a605",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "07e7704b-0799-455e-9bde-b3d3c6f9bb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334d99bd-926f-4a1b-96e4-3619735ac0e0",
        "cursor": {
          "ref": "0e7c7420-1d22-4023-9786-ce8991e6f442",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fd786a6a-f2c8-49c2-8c44-9ffaa30febb7"
        },
        "item": {
          "id": "334d99bd-926f-4a1b-96e4-3619735ac0e0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5e2d64ad-1b80-4fb4-9073-78a905da3708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d398c5-10b8-4920-9deb-a994fb0ede47",
        "cursor": {
          "ref": "b2955f12-582e-4945-8ff0-68e22e69db4d",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7d7132a2-269f-4c5b-99e6-e2d5b07cd651"
        },
        "item": {
          "id": "05d398c5-10b8-4920-9deb-a994fb0ede47",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8adce43d-259c-4502-b8a7-05c860d06502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504661e6-37be-4fb1-b4c0-0089364a267f",
        "cursor": {
          "ref": "2d0df834-ca41-48ee-aa09-1ad4ae235695",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "72905e5e-7217-4b19-ade9-89d6aa21aee1"
        },
        "item": {
          "id": "504661e6-37be-4fb1-b4c0-0089364a267f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e5d9b79d-3e65-4014-8644-c7f4087846f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b5e71f-8b18-4ae3-bc46-e4c6de7f5c15",
        "cursor": {
          "ref": "91c8f6c0-ae19-4c00-baad-240ab697fddc",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "16e83b01-8d61-43fb-85c8-787bf727bb0d"
        },
        "item": {
          "id": "b7b5e71f-8b18-4ae3-bc46-e4c6de7f5c15",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "68560fd8-f30b-4aa2-a2c2-0c09ae839bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f7c7c4-c1ef-45d9-8fe1-d14ec6b81f32",
        "cursor": {
          "ref": "075cc914-1403-4e9b-ac3a-e1e759f89641",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "afa2f2cf-3262-4e19-9273-dc9e55058308"
        },
        "item": {
          "id": "28f7c7c4-c1ef-45d9-8fe1-d14ec6b81f32",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7981fb8d-aea6-4436-8a03-1375d35b3ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c3142e-9c02-427c-be0e-a0db71c8441d",
        "cursor": {
          "ref": "f6ce1194-0be5-45a2-8673-1c73ac22d52c",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dd7be733-40dd-4cfb-895b-3c095e5cf921"
        },
        "item": {
          "id": "83c3142e-9c02-427c-be0e-a0db71c8441d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1bf32b26-fa99-4ac6-b434-f48c8a7afa59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e075ec04-4d88-41a7-a086-99a7f5ce5601",
        "cursor": {
          "ref": "c8999e70-b196-4f27-891d-de818d06dc56",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b8d275e6-14e0-4b16-a051-a8ebd3e504dc"
        },
        "item": {
          "id": "e075ec04-4d88-41a7-a086-99a7f5ce5601",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3ac90e55-9fa3-4428-8cb0-c9d3ccb925d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638db184-311d-4886-9352-8115b7255a85",
        "cursor": {
          "ref": "ab87b356-7a48-4e86-8750-fd1008b4e91a",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e5686d57-d529-4a9c-8eb3-c81ada679e12"
        },
        "item": {
          "id": "638db184-311d-4886-9352-8115b7255a85",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9b6eb8df-3ff2-4925-b67e-b98df08c15de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195afcac-98d0-4025-a0c4-425b4cfd336c",
        "cursor": {
          "ref": "28d7df89-8c73-4a92-95db-dbb803444b87",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a9ff15c6-74d0-47e5-87ca-4cf7390fdd6f"
        },
        "item": {
          "id": "195afcac-98d0-4025-a0c4-425b4cfd336c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a2c4bf8b-246d-4b1b-9d6c-34be795db8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742988c8-31cc-4886-8829-72f16c6d1af2",
        "cursor": {
          "ref": "99fc178f-4d09-4720-9ce5-868c6a4fad29",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4b05d1c9-41a1-4d5c-8408-a9834c54e3f6"
        },
        "item": {
          "id": "742988c8-31cc-4886-8829-72f16c6d1af2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "036c7a3e-6510-4f23-8235-f69bb62d081d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcaa8be-c57f-4412-9787-dc42f5fdcfd5",
        "cursor": {
          "ref": "05dfe1fa-832f-4847-abe9-1fa854ac0b9a",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "747c254c-1a7f-487d-ab9e-32007e33b74a"
        },
        "item": {
          "id": "cdcaa8be-c57f-4412-9787-dc42f5fdcfd5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1a68e9ec-4f2d-4380-a903-049b490f6ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f30ab1-11e6-47f4-bf37-e27c61f4d7bd",
        "cursor": {
          "ref": "c9c0d04b-0a84-45d4-8480-cd916fb9a457",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e191cccb-d866-414d-ad3d-c1a275cfac3b"
        },
        "item": {
          "id": "00f30ab1-11e6-47f4-bf37-e27c61f4d7bd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "22d8024e-98e7-46cc-aa20-f4d84b92828b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdf8d2c-a3f9-498d-bcd6-cc7f552f2837",
        "cursor": {
          "ref": "43aa5e49-e465-40b2-abf2-ac787b67d1cb",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cf072bf3-2e55-4ce9-98a2-7842e7f80091"
        },
        "item": {
          "id": "9bdf8d2c-a3f9-498d-bcd6-cc7f552f2837",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a1210367-12a2-4396-b7b8-646b13a97d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6b72f1-5724-449c-bd4b-201cd86202d8",
        "cursor": {
          "ref": "be731d05-d38d-4575-9d2c-9b8d4407f47a",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "443b93dc-a8ce-4392-af8c-8b313be466d8"
        },
        "item": {
          "id": "3c6b72f1-5724-449c-bd4b-201cd86202d8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "622ca049-ecbb-4aa1-a419-4bd925924761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447483b6-645d-400f-901f-68ae637c6ae3",
        "cursor": {
          "ref": "84df64a0-0021-485b-a8e1-631db809948d",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e74f0182-da44-42d6-b326-3cee6e042001"
        },
        "item": {
          "id": "447483b6-645d-400f-901f-68ae637c6ae3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ba99cae4-7c4b-4b0c-8e82-4e35465afb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e6298b-ebe2-4592-b221-4dea7f7adce1",
        "cursor": {
          "ref": "10346ed0-f331-4537-a5fe-3bb9031fb79a",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0030acc3-9398-46e1-a3f9-cd25ae47777e"
        },
        "item": {
          "id": "a3e6298b-ebe2-4592-b221-4dea7f7adce1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "52646c6f-427d-42aa-9d81-cbc8f7d46bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3c6117-56f1-4a07-82e9-b0fec6e01389",
        "cursor": {
          "ref": "e9d03098-7f75-42a4-844b-c757e1c19858",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3aaba9f9-049a-4089-a236-9a09aca6b475"
        },
        "item": {
          "id": "1e3c6117-56f1-4a07-82e9-b0fec6e01389",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b608eda9-a848-45c0-bca3-9ff57fbf089a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357bbcd8-521d-4cc7-af4f-d14df50a68e1",
        "cursor": {
          "ref": "f85c82f7-ef90-4ca9-a51d-770539d0af8e",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "28d8d45e-c789-4f9a-a18e-338d9ffc511c"
        },
        "item": {
          "id": "357bbcd8-521d-4cc7-af4f-d14df50a68e1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5ca9a20c-c975-4aea-bc1a-2b9aba781049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd12d072-8040-4598-b692-e9f699cb9aa0",
        "cursor": {
          "ref": "abf36fe9-b29b-4382-a706-17e1ce309e61",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4fad0288-ba8e-4554-ad06-66d50e900ffc"
        },
        "item": {
          "id": "bd12d072-8040-4598-b692-e9f699cb9aa0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "aec2c6a5-1358-4d7e-842f-4a0f505d59df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3457afb6-581d-44be-8c69-03c1075a6968",
        "cursor": {
          "ref": "74fa6aa4-2cca-4d32-af6f-2c92096fc574",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e98dd50f-e23e-4bde-9fb8-2aace0a5dc2b"
        },
        "item": {
          "id": "3457afb6-581d-44be-8c69-03c1075a6968",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "918dfe1c-7a12-4270-aa4c-18548d8092b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b849743-0345-494a-b3a0-b3825785cf10",
        "cursor": {
          "ref": "655441e0-508c-43fc-a372-7af97dc18323",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a3e2d466-e3d2-4bea-912a-0dfef2a5e422"
        },
        "item": {
          "id": "6b849743-0345-494a-b3a0-b3825785cf10",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "852501e9-e06d-4e85-b054-0fd37f5a88e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ab7c9d-31fe-44c2-a72b-2607699d1ac4",
        "cursor": {
          "ref": "b4c482ba-dcd4-4cf6-bed3-1a2d0094c634",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3b352ce6-fb7d-49dd-b054-d1b5c05ad827"
        },
        "item": {
          "id": "81ab7c9d-31fe-44c2-a72b-2607699d1ac4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "39d73958-5206-47c6-8a1b-1c2cf4042d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4003c8-2495-4f15-974f-35c7bac99c5b",
        "cursor": {
          "ref": "b6233f9f-e9dc-4ab8-8dbd-bbd41e325524",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "efcfa3eb-f870-49de-949a-7248fa853c6b"
        },
        "item": {
          "id": "0c4003c8-2495-4f15-974f-35c7bac99c5b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c45af5e5-3620-4559-87ed-8991927403bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffcb7c9-709f-4d37-b664-ae69c9749559",
        "cursor": {
          "ref": "b704c702-4575-4307-b8c3-57378f577792",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a4869a0f-7ed1-4519-9576-0c314a0af7ee"
        },
        "item": {
          "id": "dffcb7c9-709f-4d37-b664-ae69c9749559",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e39973be-3376-477b-862b-d59a4948334d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3f6dcc-28cd-4a89-9612-aedd8f8d9c09",
        "cursor": {
          "ref": "f4618e24-103a-43da-ab54-5aad11ddf641",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "730e5e00-bc4b-47a5-be39-ecdae9395eab"
        },
        "item": {
          "id": "5e3f6dcc-28cd-4a89-9612-aedd8f8d9c09",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c522ab11-bed0-429c-a1ce-464c23a9d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f6af7e-8c88-4ae2-8903-e9f0d1098cf2",
        "cursor": {
          "ref": "e97a1973-6bba-4edb-95e0-a828a290975f",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c307bf61-70bb-41b2-aadc-99d5c3746a42"
        },
        "item": {
          "id": "d4f6af7e-8c88-4ae2-8903-e9f0d1098cf2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9cd5500c-c2b9-4ee4-a7f7-df131928f98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3928f3b1-21ca-40d8-950d-391a5674086a",
        "cursor": {
          "ref": "ca4a2972-cffe-4e70-bbaa-565c0625a4e0",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d2e0c564-7d7d-4860-9017-f36505f7398d"
        },
        "item": {
          "id": "3928f3b1-21ca-40d8-950d-391a5674086a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ec4ba752-b48a-4b45-9f9b-13929f6b12f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06baa1d8-8866-4ac9-8d62-58834e760f8a",
        "cursor": {
          "ref": "f46a4fcd-7d70-4372-8b81-63049b5e5b62",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3b9d3ebf-3a4d-479e-8eed-ce1642e33c34"
        },
        "item": {
          "id": "06baa1d8-8866-4ac9-8d62-58834e760f8a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f4bc1862-1e9d-4a53-bef8-caca030f36c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe85e62-e0b5-48bb-8bc5-21f696c6fb69",
        "cursor": {
          "ref": "17e545db-3362-4a55-982b-2415bc6326ec",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c5a9d765-e05f-4beb-8017-5cc59009a3e1"
        },
        "item": {
          "id": "fbe85e62-e0b5-48bb-8bc5-21f696c6fb69",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f609c6db-a797-43bd-b19e-44940ed3fd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1438e81-545c-4951-9d8a-35b159e9920d",
        "cursor": {
          "ref": "5ddb092a-a1e4-4fab-9be7-ba22284cc660",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f375279f-9876-4f7e-b549-651d72ac3d2e"
        },
        "item": {
          "id": "d1438e81-545c-4951-9d8a-35b159e9920d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2263b5fb-8b87-4252-b45d-91d12e8a9d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aff56a4-69f8-4c6c-9c9c-3089977625fb",
        "cursor": {
          "ref": "d9991bd5-1ab6-48d4-8c06-17147f68bd99",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "db1ad140-4554-4df6-9a2c-f277ad941eeb"
        },
        "item": {
          "id": "6aff56a4-69f8-4c6c-9c9c-3089977625fb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1f5e1dfb-9ed4-4d01-8a5f-92a99a74cc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772170dc-77bc-4eec-9605-70f368927698",
        "cursor": {
          "ref": "03195c15-1d82-47cd-baed-d627e4403259",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "02668157-a804-4531-9aad-0705493907e3"
        },
        "item": {
          "id": "772170dc-77bc-4eec-9605-70f368927698",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1d6e1a53-f4c0-468d-a969-cd5d5eac3785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994d4c2e-1402-4efa-b743-7f38715386a1",
        "cursor": {
          "ref": "f2ddb274-44fa-4ff6-87fe-723c52bf7451",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "26345c1a-f2fd-4011-a305-2f182dc0c198"
        },
        "item": {
          "id": "994d4c2e-1402-4efa-b743-7f38715386a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b3cc57e0-a75d-4ace-acf5-f087d6d09de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9135b3-5553-476b-bfd8-17316a5f3276",
        "cursor": {
          "ref": "7e79f128-e135-4487-ae29-1d76909177a3",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a0208a1f-ae11-4605-989d-e94ec7052811"
        },
        "item": {
          "id": "ed9135b3-5553-476b-bfd8-17316a5f3276",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c71bdffa-01c6-4ece-8676-ed5133b819a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e096536b-ba30-4782-ac6a-05d04e058910",
        "cursor": {
          "ref": "5ec34fbc-404d-46b1-baf2-52407ae5dff6",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "02e71d93-a9ac-4452-8670-ff8c64fc0fba"
        },
        "item": {
          "id": "e096536b-ba30-4782-ac6a-05d04e058910",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "edf84524-495d-43ce-ae01-f91731099f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2dd83e-fa1a-41dc-b35e-890c98577ab2",
        "cursor": {
          "ref": "afc53b79-7d38-4bba-ac61-57e2fbc27634",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c2a0ce5b-c291-4d71-b1ca-a3feaad1f38f"
        },
        "item": {
          "id": "ca2dd83e-fa1a-41dc-b35e-890c98577ab2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "60a0b62f-9bf4-4703-a27d-b36ceb9630e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dd1ac1-8a8d-4802-b731-a582cb4d7e8c",
        "cursor": {
          "ref": "15446fc2-3cc4-40ea-a8aa-0bac04f0327b",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cf56b41b-f873-4227-afad-482fff7c7bd9"
        },
        "item": {
          "id": "71dd1ac1-8a8d-4802-b731-a582cb4d7e8c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d73230dc-30fb-432d-bf2e-3d485289c97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d6f6fe-853a-4570-90b3-105b9facab22",
        "cursor": {
          "ref": "bd831008-5506-4089-b5bc-ed8194ac3da7",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "01e1262c-c38e-4fc6-8332-831326e6a2e2"
        },
        "item": {
          "id": "65d6f6fe-853a-4570-90b3-105b9facab22",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b762578d-ad05-4e0d-9855-b638c3ac6f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d01edf-92cf-4f42-98c9-fb2ef96c3889",
        "cursor": {
          "ref": "1fc27b28-7723-47fa-9709-da471afa94b6",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dc03b91f-98a8-4c07-872e-a048c2efc191"
        },
        "item": {
          "id": "d6d01edf-92cf-4f42-98c9-fb2ef96c3889",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "59d65378-a1d9-483b-9065-0e8e7c6dd873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986807be-2b52-4a67-9cc7-3d33f9e8e9c6",
        "cursor": {
          "ref": "94b2a92d-a746-46ca-bcf3-cd95768e7550",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cd94aae9-16b5-4cb4-96e5-612c0be5ddc3"
        },
        "item": {
          "id": "986807be-2b52-4a67-9cc7-3d33f9e8e9c6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9401c65d-6042-4385-baa0-86a5727fc239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da962b7-2a36-4bc7-a1ef-17f23027d1c9",
        "cursor": {
          "ref": "03a5e60f-4616-4124-9f4d-a0d33635b0e8",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "35193198-0547-420d-b5dd-358970411c00"
        },
        "item": {
          "id": "9da962b7-2a36-4bc7-a1ef-17f23027d1c9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "37a6d2df-5203-40e2-bbb2-117131e7c2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c90a40e-70ab-4234-9474-d9a4e2d52a0a",
        "cursor": {
          "ref": "92bdc99f-b51b-4fad-95bb-2f0d37a62016",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3f9fb707-fdfa-4a05-9324-f06cd2b1115c"
        },
        "item": {
          "id": "3c90a40e-70ab-4234-9474-d9a4e2d52a0a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ac4a742d-a3f9-42fa-ba81-ef25b9cc5a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482e041f-bdde-4429-bb5d-06f98616521a",
        "cursor": {
          "ref": "79905f6d-19d4-46f5-b0a2-b146df29570f",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d4a3275b-7bfe-4d0a-9e5f-53acde9635fe"
        },
        "item": {
          "id": "482e041f-bdde-4429-bb5d-06f98616521a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "be82ebb2-c27d-4fda-acc4-ee6f109d9971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c43b888-1af6-42c2-ad48-dabc9d0725cf",
        "cursor": {
          "ref": "53a4b22c-8046-4182-b0f2-a275d57e3a36",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cbebc27c-0f0a-4cad-8a6b-155b23d26fd9"
        },
        "item": {
          "id": "4c43b888-1af6-42c2-ad48-dabc9d0725cf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cc5a3600-0759-4e5b-8f18-8efd2b85d387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417da8d9-f727-4236-bf58-679a423832a5",
        "cursor": {
          "ref": "9f3c48cd-51f5-4a5f-a101-ebe9f4a352be",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "901906ff-778a-4703-a8f5-e58dcab49330"
        },
        "item": {
          "id": "417da8d9-f727-4236-bf58-679a423832a5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a0140e3b-55a0-4523-8c9b-09cb708d9224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c141c0-e3cc-4c3e-b011-6bc5dc8604d1",
        "cursor": {
          "ref": "d75e92f1-15ca-43cd-8fff-a541a5434e4b",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "10407ca9-849b-49f1-8caf-d458b0963fdf"
        },
        "item": {
          "id": "78c141c0-e3cc-4c3e-b011-6bc5dc8604d1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "475359ac-1cb5-4d66-bae1-5657d1b30a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f6067d-2b43-4ae8-8542-524d665d2a4e",
        "cursor": {
          "ref": "35dc9dc9-a759-4afe-b55c-69dffb3d4774",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9a36c0c7-a143-45e1-a9d7-43551f8bef6a"
        },
        "item": {
          "id": "68f6067d-2b43-4ae8-8542-524d665d2a4e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a7be6916-28a6-438f-8276-4f980df0b74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8fa5e0-05dd-45fa-a550-a10323d2f137",
        "cursor": {
          "ref": "a9726b45-9f06-43d4-853b-508a2d0eb798",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "05959f09-497b-4f47-bb14-e6418749d631"
        },
        "item": {
          "id": "ba8fa5e0-05dd-45fa-a550-a10323d2f137",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "10a00627-4d30-47b8-b327-721ebe5a8c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a3fcee-c6ea-4f9c-a1a6-1c8fabc83311",
        "cursor": {
          "ref": "5af6d00a-cb2f-430a-b46b-e433cbd907c7",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3a1825f0-1205-4110-9309-b5c5780c7d0c"
        },
        "item": {
          "id": "e7a3fcee-c6ea-4f9c-a1a6-1c8fabc83311",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "87ae4fa1-5ed5-4318-85e4-7c832d5fc56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e71f4c-55a3-460d-bcc7-6c1a2d77b862",
        "cursor": {
          "ref": "dd0b2e68-60dd-4347-8a65-4949ec6d0636",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "61b12c12-581a-4155-9299-d1e81d731a30"
        },
        "item": {
          "id": "29e71f4c-55a3-460d-bcc7-6c1a2d77b862",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "60dd9b90-63f7-4de6-888e-68e8a82ded3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a71bb76-7805-4a0f-8a75-92afd8f2d53f",
        "cursor": {
          "ref": "e77889cb-f35f-457c-bc6f-31cc70f454ff",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b6408c52-0394-44fc-8862-8e39d7f4aa6e"
        },
        "item": {
          "id": "7a71bb76-7805-4a0f-8a75-92afd8f2d53f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d30779e0-9c30-42b8-aad1-800cd018c3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bc91bd-2776-4b38-8032-c8952c21815e",
        "cursor": {
          "ref": "ee37022b-9c22-40b2-869c-ef025714f29e",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a70025a9-0086-4c7d-aa34-466f4910adf8"
        },
        "item": {
          "id": "74bc91bd-2776-4b38-8032-c8952c21815e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0ca73259-52eb-49bf-a388-f862cbb2f7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259bbcc1-7df6-46ca-88bb-094fd4e6d994",
        "cursor": {
          "ref": "0c304ef9-1a26-46c9-8e5c-58368ada15e1",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6749355e-5c6b-452b-a97a-b9545732c178"
        },
        "item": {
          "id": "259bbcc1-7df6-46ca-88bb-094fd4e6d994",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c91a5e92-f940-4ce5-9a58-b4beb567e735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00a2095-ceb2-4177-bf86-257400a64b4a",
        "cursor": {
          "ref": "81cdb4e1-edd4-4317-9624-4b73586c426e",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1c5a61ea-8e95-478b-bd8f-c923cf01c14c"
        },
        "item": {
          "id": "d00a2095-ceb2-4177-bf86-257400a64b4a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "daaebedf-51f2-4bed-a30a-c5e5b1b16fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98835974-cc01-4067-b3b6-dbc32b10b0f2",
        "cursor": {
          "ref": "8bb0a1d8-9cf8-4bc4-b91d-34aea54505e1",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f74ec4a4-ad7d-488f-9da2-cbdabee79c88"
        },
        "item": {
          "id": "98835974-cc01-4067-b3b6-dbc32b10b0f2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "813b62c8-7a79-4957-9b2b-81637bb27cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e6b877-c39c-4176-9a1b-248edfcaa815",
        "cursor": {
          "ref": "15ced913-fc32-4a5c-8f16-bf521fff4389",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ed1f2db0-2d8d-483a-b25a-49f0bc72e01c"
        },
        "item": {
          "id": "15e6b877-c39c-4176-9a1b-248edfcaa815",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bd8fc685-1bfb-4917-b2b7-7af8e3b81984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d852f980-c525-4480-958c-1d6aafa19c8f",
        "cursor": {
          "ref": "3821197e-924c-4b62-81b3-727f621d6c2c",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4f16c432-5724-4933-a0f1-68b08ea2d242"
        },
        "item": {
          "id": "d852f980-c525-4480-958c-1d6aafa19c8f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "99b378a9-6e87-459f-b029-4fd8af2a5ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84460de1-25bf-4737-abe9-2e53fb501638",
        "cursor": {
          "ref": "0dfaa504-ec89-40f0-8139-bc84a5d7b364",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9a66576e-6a59-4e4b-b966-35af229067c9"
        },
        "item": {
          "id": "84460de1-25bf-4737-abe9-2e53fb501638",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3ade5396-1e4c-4bac-8472-957119f4c23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e17f8ae-c921-46be-a6eb-5e466dc754f6",
        "cursor": {
          "ref": "20f66df5-6a93-4a3a-84c2-a84ac46afc03",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a8068535-fa8a-4fba-b8b1-57e9046a8c00"
        },
        "item": {
          "id": "4e17f8ae-c921-46be-a6eb-5e466dc754f6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a881306b-9d8b-4568-be2b-8303a8461506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fae6401-548f-474b-a7f0-8a4876f3eb2f",
        "cursor": {
          "ref": "ff943416-08d8-4394-9280-18049d969335",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d2064841-7139-4352-bbe9-f0b20ab1a99c"
        },
        "item": {
          "id": "7fae6401-548f-474b-a7f0-8a4876f3eb2f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "46873fbe-d964-4588-a4f4-10ee62b49761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad602cca-edcd-477e-a562-d6892d246a83",
        "cursor": {
          "ref": "5e718276-9a8a-4e9a-91f6-7f79af7f048b",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "18cca247-6289-4cf0-878a-cb9de811b8b4"
        },
        "item": {
          "id": "ad602cca-edcd-477e-a562-d6892d246a83",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "429f4248-6607-4138-a216-fe73171d7455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a10e631-7503-49a1-93e8-0a64ad81cd79",
        "cursor": {
          "ref": "c80b4288-e6e9-4c41-b620-bb338192ea43",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "48ce6d9c-6437-4026-9a2f-acb125b705e6"
        },
        "item": {
          "id": "8a10e631-7503-49a1-93e8-0a64ad81cd79",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "468bde5a-67b5-4df2-9ac7-a29d9852d375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba43bd4-d621-4530-86d7-29820784acb4",
        "cursor": {
          "ref": "328f7f5a-e3b5-4a35-bcd1-e6c38ad98726",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "143d4954-d9a5-4d01-a936-292647a26f19"
        },
        "item": {
          "id": "1ba43bd4-d621-4530-86d7-29820784acb4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0b45047e-797d-4bfa-8e3e-2eb5d95a0e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aa0a42-0f65-4747-ab2d-b5f6227c1cca",
        "cursor": {
          "ref": "5db4cc18-7c18-4d82-8e17-be14baf73409",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "42def340-ec64-4fbe-9b93-53311baae43c"
        },
        "item": {
          "id": "c7aa0a42-0f65-4747-ab2d-b5f6227c1cca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "22881416-4b48-4d46-ac6f-9b3d084ee694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92509be3-6500-48e8-9a20-f0df209dfc78",
        "cursor": {
          "ref": "9ce067f2-87ad-450a-bfb0-1eadc8bf327d",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bf353358-2536-476a-bd2d-273ac1f2e709"
        },
        "item": {
          "id": "92509be3-6500-48e8-9a20-f0df209dfc78",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5033a59a-63c2-48b6-8472-f5a56fe3da9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727c59b8-68a9-4b0a-921d-1ac9eba8e6be",
        "cursor": {
          "ref": "a089bc15-52f8-4edc-b8b9-d4a7baadcd98",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "866d5b1a-912d-4366-b012-3e3d737ff72a"
        },
        "item": {
          "id": "727c59b8-68a9-4b0a-921d-1ac9eba8e6be",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "395de8fa-0b0b-4f26-8ff9-8e2b61b231fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a2f246-bcd4-4a56-aeb7-890beb79bc2c",
        "cursor": {
          "ref": "6a73a2de-3489-4d4c-b4cc-dc4dbe316cff",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9d8c0bec-be48-430d-9fb4-1a21e82b9518"
        },
        "item": {
          "id": "a0a2f246-bcd4-4a56-aeb7-890beb79bc2c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bdec1018-7538-47f6-8b6c-dc0c72d20e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d97094-c43e-4734-9de5-dc98ef34d97d",
        "cursor": {
          "ref": "eaf734bf-a727-47e4-90bd-129681ab13c7",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ca026599-d4a8-4ab7-a875-66cd5d4a700d"
        },
        "item": {
          "id": "58d97094-c43e-4734-9de5-dc98ef34d97d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fe5c04c7-659a-42fb-904e-7599814ff156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130a0800-328b-4f37-9b8b-879cce425409",
        "cursor": {
          "ref": "18f548e2-f5d3-4276-aa65-97985f627f3d",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dc3ff03d-951b-4374-b9e1-eb6e3df76b15"
        },
        "item": {
          "id": "130a0800-328b-4f37-9b8b-879cce425409",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a4f14e8e-6b4c-457f-992b-1e9b50c5e8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f28863-e0c2-4082-b120-eac0364db5e2",
        "cursor": {
          "ref": "179fcd55-21d3-45f8-b95c-29dbe50f1672",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2c2850f2-244f-445c-af72-8a4ca1b8fd8a"
        },
        "item": {
          "id": "c9f28863-e0c2-4082-b120-eac0364db5e2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "15d7702d-84f9-42a2-9760-71f6276982ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9634f21-f7f9-425b-bb8a-4aab25a814f1",
        "cursor": {
          "ref": "98711352-a5be-4132-a71c-1b6a6af67b6f",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7fa1ee0a-ae30-4123-8b13-4f229b534b86"
        },
        "item": {
          "id": "b9634f21-f7f9-425b-bb8a-4aab25a814f1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "551d227d-a434-4e12-936a-4366fae396dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce13d713-3c78-414b-bf08-a1230f220c6a",
        "cursor": {
          "ref": "ba0a7de6-e7e4-4515-837d-898be8bf35a7",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "66f624af-f11b-46bc-8b3a-ab1007c0b851"
        },
        "item": {
          "id": "ce13d713-3c78-414b-bf08-a1230f220c6a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6a3504e1-3ac7-4b73-ae78-b3957e95a037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647c25e7-bcd8-4872-a075-b62a6b81b455",
        "cursor": {
          "ref": "731244fb-a885-4386-8bdc-ff99fe12335c",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1bde469f-479d-43c6-b4a6-9f62d82d8e78"
        },
        "item": {
          "id": "647c25e7-bcd8-4872-a075-b62a6b81b455",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6fb5eb2c-c782-495c-b804-55ee238b96c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc92532-d307-4987-abbb-9e8997dc3536",
        "cursor": {
          "ref": "9592fc7d-1ba2-44c4-9dd7-b3b88e128e79",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "24620e47-3e5b-495e-8062-3d56ac4ee395"
        },
        "item": {
          "id": "1bc92532-d307-4987-abbb-9e8997dc3536",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9e32c3c0-526c-42f1-ac09-23777cb0fdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea9d5f3-1c6a-4726-9bcd-b71aca1d19d4",
        "cursor": {
          "ref": "a5dd058d-f5ba-4f00-84fe-053ba5a7b46a",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bec29e82-cb70-434d-8a3f-1c0a74f9025f"
        },
        "item": {
          "id": "eea9d5f3-1c6a-4726-9bcd-b71aca1d19d4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b75ab6fd-36b4-4bc3-940e-0407daacad08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7395932-dcc9-449b-8417-f64aacdc01b4",
        "cursor": {
          "ref": "2b8aa164-5205-4ce7-8ba1-a0c939a2c165",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2c1c4c50-0d82-4b87-b6b7-ed5bd90e2b27"
        },
        "item": {
          "id": "b7395932-dcc9-449b-8417-f64aacdc01b4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2c6bc3e-cbeb-4890-8571-7e0c8541f700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52d3373-c9e4-40dc-b963-3e8e1146f3d7",
        "cursor": {
          "ref": "27d322b1-88c9-437b-b1d6-fd3ebfe25d65",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c91a06e7-c0e7-4782-97ce-3e2574fc3f0c"
        },
        "item": {
          "id": "a52d3373-c9e4-40dc-b963-3e8e1146f3d7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b0c481f3-5e5d-45d5-9d3c-bf4085d67e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aa2eac-43d6-4db9-a499-226c1fdcf7cb",
        "cursor": {
          "ref": "ef0e1d74-4677-44db-a107-e91adc27caa3",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "dd168a37-52ab-4ee5-8911-30a48dc58b09"
        },
        "item": {
          "id": "74aa2eac-43d6-4db9-a499-226c1fdcf7cb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a2aef7ff-e63f-411c-bfd9-5eaa3c878539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3237069-9035-406f-b900-ad784d53c378",
        "cursor": {
          "ref": "431544e4-7f18-41fe-81b6-19421d27123b",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "80e44890-9430-40bb-8899-0bd084a1ddd9"
        },
        "item": {
          "id": "b3237069-9035-406f-b900-ad784d53c378",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "028701d5-1460-4f16-a5f1-eae3f815f46b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a6c4fe-0b24-4071-af92-bc36640f5d51",
        "cursor": {
          "ref": "610415c6-43a3-4df6-bdb7-9de81544747c",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4671fbd4-8ea0-433d-928f-774a9eacf231"
        },
        "item": {
          "id": "79a6c4fe-0b24-4071-af92-bc36640f5d51",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3aeb747e-25c0-428c-8f29-c3c4070dee63",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e13f0ef-0b32-4e4b-a8b8-ede9d34cdb98",
        "cursor": {
          "ref": "6e55af90-cdde-47f2-bfa3-917cf3bb8376",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "343b452c-ce9c-42a1-b3f1-6c5984b11076"
        },
        "item": {
          "id": "2e13f0ef-0b32-4e4b-a8b8-ede9d34cdb98",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3174091a-0da0-4c33-bb7e-a16ab08bd722",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8d40ce-7d05-4874-b338-e10ba12820fe",
        "cursor": {
          "ref": "83517259-de17-49ea-a243-833d56e5a43a",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9d751a87-0a4a-4c75-8f2f-5fa952f4620b"
        },
        "item": {
          "id": "1e8d40ce-7d05-4874-b338-e10ba12820fe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bef8f1bc-29bd-4410-b222-acaed5c3c58d",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "294677fb-8635-45cf-82ad-6ce54294db34",
        "cursor": {
          "ref": "4cad29fc-f2ff-4754-8e91-a49d18a70173",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "63c50fe2-cf54-4d5d-b649-0bbebef48815"
        },
        "item": {
          "id": "294677fb-8635-45cf-82ad-6ce54294db34",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "23ff980b-2d72-4818-8739-1a311c52e1b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294677fb-8635-45cf-82ad-6ce54294db34",
        "cursor": {
          "ref": "4cad29fc-f2ff-4754-8e91-a49d18a70173",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "63c50fe2-cf54-4d5d-b649-0bbebef48815"
        },
        "item": {
          "id": "294677fb-8635-45cf-82ad-6ce54294db34",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "23ff980b-2d72-4818-8739-1a311c52e1b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14bdc24-85a4-47ed-a58f-2cab78aab155",
        "cursor": {
          "ref": "22fa87a4-01a5-436c-93a0-0da32aeb4c45",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ba2b405d-c53d-4701-bccd-2eb2602afec9"
        },
        "item": {
          "id": "a14bdc24-85a4-47ed-a58f-2cab78aab155",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b0b06954-55b7-4c63-ba4e-982272d9b701",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b910cded-ea57-4979-8b8e-746cbd569e88",
        "cursor": {
          "ref": "e3805c65-609e-4b42-8c4e-efe086e3bfe1",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2039f9dd-a824-4aa0-b9a3-5856342c1a61"
        },
        "item": {
          "id": "b910cded-ea57-4979-8b8e-746cbd569e88",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "26c49140-33d0-409c-ba4b-c93b64a3948b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}