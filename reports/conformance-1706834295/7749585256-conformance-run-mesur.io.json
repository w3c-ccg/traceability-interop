{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5fb65a18-1d61-449b-a404-7001609e871d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d50c0638-d98d-4fff-83a7-84dab06a2a03",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9df4d89f-5d38-4e3e-a181-bd6ff3821e72",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40d247b3-2108-44c9-a9df-6d6f46c29a08"
                }
              }
            ]
          },
          {
            "id": "0bda8a83-44e7-4c98-a8e3-b3614ec4cf49",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "383e7e77-98aa-4816-99e1-9ba23760562b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1d2a133f-0949-4d92-a0d9-2c699f3fe332"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "de15036e-0ed0-4376-9e6b-f7b090cd379e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2c8c195e-0eb9-49c4-8abb-450ee2a4fb43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a92ec32-2739-4608-ad1b-7a1e764d4ff2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ed17a1-e0d3-4332-b91b-ae3156193909",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebd1fc77-c211-4ea3-8ca0-dccbb6efb36a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfbb59ad-24bd-413c-a234-49c3a57aae5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f5e0314-7d95-44a3-ac8e-bb9b57c14638"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71404a0a-2724-40aa-974f-9cad8302fb1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4445e50-a4b9-48bc-ac46-355e8dd462da"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f3cd103-2609-44e0-a346-e940c6fe73cd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5647db02-0cb1-41ec-8aa1-4c2f51bff4ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59609120-5e3a-452c-a688-552c43262504",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99859a16-f8b9-45d6-8d34-7d14784fae1e"
            }
          }
        ]
      },
      {
        "id": "c0749dc7-32f1-443d-aaa2-7374239c87dc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "60f4f0c1-79a1-4cee-8384-7215bff0cfb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a5a7320-74b7-4559-a4d7-a2b3ccb58cd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "445281bd-51a7-47b1-b84c-68bc2e77cab0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2ad41f-42c3-493e-b833-c68203527d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46c646b4-d736-42b2-8ad9-720ce9dac3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f90186-cd22-4ec7-8848-0324f93e1499",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174c2e8a-fe7b-46a2-b309-69e69f0694c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70649d42-0d36-4540-9fb1-e2f6f4100dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891dc3c6-4d21-4166-b119-648d3f555cd2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb230c9-7d2a-44cc-88ff-029ea66be37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20c6a2b2-bfd6-4dfb-a9e0-c1f45a81d002"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8239c21e-6ed0-4e67-9c60-47a78c578e45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f541f98-2768-4ec0-82d1-9b41a803381f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d836a3-34b8-47c7-9dc1-1105775bac69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4085f9c5-9bd6-4117-a20d-dc72a1a48277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35b369a-7e49-405f-a9b4-76820c5f3d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5310d0-620f-48f7-a8aa-773dc3903bfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "077dfe49-7c49-47dc-ab76-9065ab4e199e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18cb5df4-20f3-4a0d-a519-002337842d20",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60b5e4d2-303b-4c7c-b784-5b663571af6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "787337f2-e485-4fd2-8a31-7d2eb6b2430f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2c6a00d-7bc1-418c-9ea8-874d6e7eef05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "735bd214-5549-4e2c-ba87-361a859a0611"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "821e55f4-d6fa-4995-ae0a-b43a6fc02c8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00f54277-21d3-428d-9809-ba57eab4f9d9"
            }
          }
        ]
      },
      {
        "id": "0d834df0-b480-43e5-9943-0da8c92dac50",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7f8b8d9f-ed8a-4982-b749-b27cb67949c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bd67d5c-52f2-4964-9bc7-5861a7a3d123",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0881e216-3e05-4e65-b894-4d33c602f0ea",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbd4c16-7c6c-4b76-baa2-40de9ca639c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c5f8b7-ef2d-47a5-a7b5-e8798b5a914a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf43e86-dd5d-43ef-b41b-1f48cad5cb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25544073-6f1f-4196-9b26-a6c165cc4407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20af1a33-cd72-44e8-98bb-abc830dc8aa4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e642c9b8-1b37-4a9c-8a28-5eb33118006a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4144f650-3da8-4089-be48-72e06ebb253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7140359a-dc79-4f2a-963d-2413d18ba4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac944801-7baa-4972-ad99-9cf25284a71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3377f36-ee85-426c-a093-5c1e9406fc61",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e72f95e-b216-4bb1-9ac0-b4ec56e00b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514ed761-f966-49c6-9748-20da693a0da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ec77a-3b7e-426e-a162-2ffba955e2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3010b817-8abf-4f12-adb6-fe3a3f2b3037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd66f8b-49fb-4d8e-8b01-8415667a9e7e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9f82cf-f817-48fa-aa4a-738a1e2de854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663b8993-1637-4f7b-b984-f32c13076c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ea50e4-49db-4c89-b071-b5d1300c4666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0655616f-a13d-41a4-8ef3-37e6bac4b839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e01f6e-c959-44f9-bf9b-2ca779dd8686",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124f689e-4add-4df7-8551-138f724299a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc741706-074f-4e84-a7ea-fcb041e3dfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df65f71e-fc70-431b-804f-b69b6e51ddce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71433697-9fd7-45eb-bd84-b54d6e8096fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc787c34-f4a7-470f-be6f-81101e6936c0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c417fb-82c1-4c6c-88fc-d484488b1cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce82e3d7-5a2d-47d9-b793-0784782f205b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dead7c9-2ea8-46a4-bf26-a213c5f304c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9300e66-69d0-456f-ae57-87f72b607ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd88125-29a1-450c-8971-2df0a0fb3204",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020b57ff-5c9c-4e3c-8bb0-99035397b0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b4f6bf-f15d-4545-8145-b01f81211452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e5ba1e-d942-471b-bf2c-706d02ed54d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "997098a3-f8e4-4671-882d-47ea903dfbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4c0cd5-ea6f-4f46-8d3d-39c3e4278201",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2ca292-591d-4501-a1ba-8c9182821e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75a0740-ce2b-4d9e-9034-5e1ee1920e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14be2ef-576a-48c1-9422-c6ed0b53ce74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09b930dc-65e5-483a-bb19-6c0aa06b09b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbf8c22-9eae-4fb9-a018-e562aa661bb6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d03ec8-705c-4647-a1ed-7dee6d83d397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68537d4-1ca6-4f9f-a5ce-f97f1729b432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7451346-9572-4714-b37d-8d45faa78a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "595f5ad8-0b2f-4059-94b7-17dc1a70d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3913887c-c8cb-4786-9c06-646a1d81175d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e132b11-df85-41ef-95fb-0f797049f993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee36097-16e9-454f-b409-01c3b592772b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb1fd78-d132-4ade-8cbb-f740e34944f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5c80cf1-a017-4e63-ab18-38aa8f9a981e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45857f57-a01c-48f9-8803-e8fba39d16e4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f895d21b-d7a7-4d86-bc69-8b78e87116b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3589c0ef-eb31-4474-be6b-efee2f51b35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2f1ab9-a3c8-45d8-87cc-cea053037653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76628edc-c6c4-46a5-acbd-f06aa49e1da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fb290e-631d-41db-8764-65581f38c449",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8465be07-d5f5-44cb-9509-8b36cbad5f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9bb837-ff1a-4845-8c75-5c7eb00516a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd779cde-7e27-43c0-aebf-fbd01622ea0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e648116-3b50-4631-8ec1-bd9db259ba09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf312f7-f652-488a-ac2e-3456aac28dbf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448f2ca8-db7f-4d92-8f72-30a54f33f960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdb02b0-3014-472b-8c52-8586965c7f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b9696c-dbd7-4902-aac3-dc405fbf6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e00ed33a-a7a3-4cd4-9030-f71f52307136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0afdce-09f0-49a5-b08c-14d0af1e383c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a07b8a6-91ba-4483-95b1-74be01416ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7340ff-129e-450b-bef9-3a1b75df5579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d92d90-059e-49ec-8547-dbdbee2502cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7b82b82-1a5f-4cca-a5ce-fdb061726aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b870efbb-e587-4686-85f3-7b84d4af180a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d5fea0-d8c4-4d08-9c33-afae20f5fde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9ed3a9-fa08-497e-a134-9c90f6113ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4493dbb6-fac7-4f8a-9c28-744ead635ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa9c6fc0-fb05-4049-84e8-a9299ba9cf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fc0c0f-b856-42e7-9731-d062e60bb20f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5205b4de-7193-4628-b842-9f2d913d05d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e42aa70-9df8-4ab1-9bb4-49cdb9f6476a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd35b27d-de98-4fe3-92fb-b515d9598233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaaeae0a-8ebe-4a8d-8296-4d27261e0137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c31167f-499e-4737-a36c-54dbf41d36fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd200f95-1fc5-4746-8f1f-12be04c61c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09498f81-65c0-4fa9-b2ff-0a6bf10402b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52df8fe-fa21-447d-b8d6-626f5e7d31ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b54b51-488e-4864-912b-8019903d9e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7280a279-9160-40f2-8e33-ccc6fcfec754",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafec94f-cbb4-47cb-9079-813591aec399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81d9b8d-77d4-49db-8b7f-761b54f7b114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b978cc-c2a3-4eba-85b7-ebca80ecf455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c00708e-b5b9-4aa7-913c-24c1de4c053c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05116a70-4aa2-4969-9e71-945f232715dc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981d9be1-0da4-4399-b3be-e01d68c87586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3b2337-a4c3-4eba-86f4-92a4ff51538a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f6200f-8770-4e4e-a24d-74b7bb150a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0851a1ed-61b1-418c-9403-12c100a0a6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f607016c-6724-4532-b7ee-3cf0993ba77e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a755f15b-685e-4d47-a3e6-52edbefb816a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5030ae-5f91-40bf-822f-c46bd8047bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04050385-3ff0-4662-8b70-b130a68a043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cabbeb-073d-48d4-ad5b-a4001529c82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcc65f8-67de-47b7-b1a8-143d28099a96",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3509c7-75e1-48ab-8942-42df137ba32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fa82cf-110c-4c22-bede-3a76f1cea930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520ac335-81fd-4401-b084-31da21f34e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83d48aac-7451-4594-a033-ed62d14cbb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0af0010-9f61-4d07-be5a-9f66f929d18d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4119480-c844-4e21-8f2a-1fdca3bb2957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267b8ca4-e45b-426b-892f-adaa85e63daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611e1d8b-381b-4a1c-afce-a5b28d87ea45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75c5a6cb-3d4b-4467-9ccb-73bbeefd8cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f616a6-93a5-480b-8a7a-3a601f2cefdb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324a6ae7-2727-4c1a-8e4c-2478f1489492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ccc1f3-10cc-40a6-a475-e35ab01c3ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3e2896-dfdc-497a-a81a-e69a76695b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3757f9-0a28-45f2-a377-05920a069580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a184b637-44c6-402b-8644-fc4e36a387aa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e94cf51-c439-4bac-b3ec-59d4253ea8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c21b4b9-00a3-498e-9a38-b691318f6a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c333f776-effb-4042-9bbd-828194548863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b769b3-d7b1-4ad9-9b57-491348faca18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7810ad-5bd9-4853-9110-794eadeffa81",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d495f872-f6fe-4437-a35b-b98c21f0c32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34f5798-7910-4164-aef6-58f95b56ca81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166e49ff-8d1d-48f2-99be-306100f616d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbb36d6-35b9-4dfa-a55e-c29d3462245b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148699c9-2df4-4fb6-8476-4dc33c41675c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4962c7-e15f-48b0-b648-07a1c71dac57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ced969d-fd53-4b7a-a99b-c4046f7a3680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c350a9-ab2b-49dc-bc98-2baf0f0a3624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f022aacb-e983-4f90-8d1f-ee8a03a923c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce3df3f-1363-4e0d-9b3d-5a898b1dd233",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f23bf4-7ef7-4e4c-a41f-cc04c6c5b8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833dc7dc-9bd7-41db-baea-6f1b49ac6341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fd4b50-5008-4d82-af93-9c1628931198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0ddd74-eaaf-4d00-8bb0-d52e378ff9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eda191-6600-4db6-9858-5cd4068f6247",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e12321d-ac92-4cbd-9f5f-ab0f144400c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b7f7fc-b0d0-4542-a5ed-d458bb8717df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9db0438-30ba-4a69-bfc8-10bf04e5597d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ba8198-65fd-4a6b-b7a0-a974dc578852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c314d49-7c10-43d7-a07e-1e93dd6d3015",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1d2849-6af5-4d6a-92f7-6a0dd773399e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a709a3a7-d305-4d01-bad1-79d6eddb588d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f851c8-0ac6-4b8d-aad6-a467c199cc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b44933-53f6-466d-88b5-e2c91c591c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832c1d4e-94d3-4d9d-8f2c-0e2c5831b001",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb535bc8-1607-4be9-a4db-effc33d4605f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d509c6-10cd-45e1-9f63-19c1ffd941b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6c0022-9bc9-4682-8124-7cf02a9ba787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a03b4d-e9c2-4472-bbfb-7651891189c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016b43bf-1d3a-4228-9064-582be6347230",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da99c719-b17a-4fbe-9550-4d4e7e552b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfde3f05-f6d9-4e43-977f-4c3627848b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a8dce1-3ffd-4057-9323-604be593c478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4ae60c-05be-43fb-abee-d696b99e13f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306bad7f-8cf5-4dea-a172-9d6b77790bce",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c37d29-ecbf-46dc-ac9b-2845df9016a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15608a05-bef6-461d-b09d-a1fe6f0dd006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2be224-361a-49bc-b0bc-f1e3f60bfb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6327c9-9a07-4e33-8371-2ba56e3455eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45e9195-0652-42d4-b807-340a6a33778d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9eb3be-94d3-4dba-a8a0-2d7c3220273d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358de544-292d-4f55-ab17-0dfdfcdaf7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa090c1c-e3a6-4b10-aa34-2885c4c68dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24254797-a229-4bee-92d1-013f5d289a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b393a8-44c6-4739-bca6-ceafa3298dd1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc0b87d-3766-483b-9400-d3c64bb4f79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1bdfbc-393b-445d-95eb-4186b49d0321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0885488b-9f26-4495-893b-78ff9ab281fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c0f388-e340-4634-a050-a28559324a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f466f8be-99d8-4296-9535-0846ae438c7f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a081d4-d53a-410c-9eef-84073c55f60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf38d21c-bec5-4741-973e-2d97bbc752fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcfb8ee-d3bb-49f6-bfad-dc4f1f0b030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4785e749-5af0-4185-97f8-5adb6165c405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24966826-a54f-4966-ac2a-cdd4b7bf83fe",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c3d002-6639-4463-9e1f-ee3cd58ac372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba6b821-8bd0-4904-977f-9eb53a536382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493b12de-6827-4be1-86dd-d52ff12c014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1c647b-7d60-44f8-8dbc-91e06e1670cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af62137-365e-42a0-8ede-3880c7e908af",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbca085f-e908-4861-946c-8cef4e2e4783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c878862-d9d3-4471-be19-8e470c4bb45c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc99397-f012-4a0b-a2f3-e0f6ea23e53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8190b10f-f8ca-4c96-b1a8-6ea751229f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2796908-fdb2-4da2-9dc9-0f3b22f1f1d9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a38cf97-969f-490a-add7-d89314138701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedfd345-c388-43cb-aa9f-28208f2c1888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42cf37c-15a5-42e2-911b-88253cf9d489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2183fa1c-733b-4872-94ca-5c61f201d568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f308ab7d-a658-4e3c-8618-b29903bbe22a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de101754-5609-49c8-ad92-06b6a39e8288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f838f65c-790d-42bc-974b-7c79e0153e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3497f15e-f03f-49c5-8587-adee5cf8c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b23b7c-b3de-4030-ad01-30c9d6ed2302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1464e09-4f1b-4c6d-af54-0638cb63c65b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ac9239-1231-42da-b287-db53030d0725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14863328-a670-4b5e-b557-96ef5cf5b94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df247d50-da1a-4afb-9897-6ee2ab0cbce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6938d3fb-3911-428f-900d-5ade22a9343e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af87753-e188-4674-92e9-923080108c56",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccdc55b-40aa-4a4a-99f2-c05fa1facb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febf8cf2-a765-4e92-a22b-0ccec0f02f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d240e7d7-69f9-448c-89d1-62fbefee7683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffeb7a76-0ae4-4d1d-9f84-5255bf5bc6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307f07c4-0d84-4fab-a5cf-4676777c99dc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0030667b-52e2-4e59-9af8-4a08760d3e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2512e1e9-5751-454f-972f-eaeed04f783b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475a4b0e-651d-4de9-aafd-d74b5a1c62fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "98bfd5e3-8c63-4335-9930-f3523507a7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79e3497-3ced-4bcc-b7fd-40fd5783121a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd38d564-cf6b-485a-841a-f5cd4708797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa35ae34-4a93-46f9-832a-9b9f16638e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469d9af-a34b-418e-a1e5-bba7c74a6142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "12976d7f-6b60-4d92-936c-994fc0192794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae029f1-6ece-4c8d-9870-f0323f890595",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd1b93f-e607-4e29-9bf1-8ec0f4df53c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d16d50-7b4d-432c-b433-3a7d1e822038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e42f333-cf0f-4316-8d4e-a7f20ee7cbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc19013-0031-499a-b1a7-b064f32f0fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c495a4f-2cf4-40c7-9b41-70e5ea681307",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1f89bc-a3cb-46db-b2e1-ccc5b3a94f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c649b367-70ed-4e89-bf06-35352e123285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3add21cb-cb65-4288-ab44-659743ce8e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d53f94-50fe-4120-a467-b1daf34d7360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3c8494-cb0d-41d1-bb20-f00c089cc4a1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1a3549-b866-4def-b8eb-48c86fd69b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0607c26f-009b-40d3-9be0-b52b2dcc9d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8198506f-72d2-4694-9178-07b84ceead0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e33d00-1bd0-4d27-b0f5-b6273596ba62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40f738c-ca38-4b14-b2b2-7c6a2eeb7be1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c6f30a-5d75-486c-ad82-d5ccbc6c325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ba2b4e-842c-4986-85d7-1a612f24089d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1cfa80-5dbe-46dd-914e-5a6cf7770076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "affdbf2f-a4d4-4cfd-a90e-41b446fc1b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38212bc-8959-417a-8009-7b9635da64ce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d19b52-e1d1-4047-b412-6ad4828e3996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54c43ac-97b8-49a2-9cbb-6eac2272b0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ecebaa-b349-49cf-a482-c02f7dc8c47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b657e9-729c-40d1-a95d-56d855880b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0010efc1-95a4-4973-913b-a74d8ddc361f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fec454-e8b2-4da3-be13-df889512e892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dde5d2e-c3c5-4cbf-abe0-07c41846b697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6310be9-7732-426c-b733-57508f20890b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18a83ee6-7b43-47ea-b160-3b0a68af1ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8012f9-0163-4927-b203-7cb5f80eff8f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5569ecc6-a913-452a-b03d-2867924e06e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5143804b-4741-48ea-a732-a105130da9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4748b7c4-f785-483c-a585-e37139aa04e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b65d8811-fdca-443a-81ef-cb899670418b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb956a70-1279-49cb-ad27-5629db58e168",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bded376-7ebb-467d-b9a8-e3f35864705e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e45ca0f-7693-47fa-bae1-447f57f49e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ae1027-5017-44e9-895d-ade29a3ba297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c75170e-3bc8-4de0-867e-06d2605ab235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eb8d27-896e-4071-afe1-ff58c0bf8d6a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b9b4af-893c-48f1-ade3-4100db4b0278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6083a7a-4f10-48fa-848d-827cbe636c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bf2296-8f97-4557-8eba-11eef8d4f552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f71ebb1-4815-436e-8543-47f8756ee3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5993fc5-8ee0-4780-b96a-763ee02fa05f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a501ac-9f4d-416a-8385-119159299661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3e77c3-3bc8-4cb7-adfd-641cb1f08f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef0c811-00ca-46c8-81d3-7458f6b4d263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd084f0e-2c99-40fd-8f58-630075be8eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b58fd1-bbc7-4a0e-92b3-bec86b3151eb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8214318d-846d-42c7-bce1-1b099fcd5c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8743f518-5815-46e6-b76e-d9484a3d0dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a63551-4fa2-42e9-a93d-591b20de05c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20837316-1ea7-4c8c-8a20-ea62476fbd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc3f8b1-f66c-49aa-a55d-a7a13a5f72a1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc87901-a413-427b-b6b3-6b095398cb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7307ca1-1706-48ba-8841-08165f0a1593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be56bd2-ff5e-414b-9ea0-a996d79f1246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c70c85-6dce-4bb2-bbef-30270f376fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376a7914-0eff-4745-a6ad-1a24ea365552",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7277166f-d99b-445b-9098-56d7a3203bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af06df6-a1e7-4b62-9409-5a835b18e3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caddfcc-428b-4203-b757-5fcf79f7e01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "61641c91-6d13-4b1d-b3ee-746413fe7109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df072047-68de-43b1-bd86-20e35964a2fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08144e1-d68f-47bd-bba1-eafae942f123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7648f05-e9a0-4c72-886c-974d0841db79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b88051d-1006-478a-afe4-861b74b54f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f05de46-1417-442e-979d-55b541dd0cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db4d69-3583-4812-83ec-c62a1c1d0b09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1119971-910b-44e4-811e-051b9d3b185c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7521701-b1f9-4557-81cd-de3ae0306a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5711035a-7c86-4f40-a0aa-136361e1d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7597f18b-0c8e-47c9-ad92-47c86fd5fd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21ead55-19af-4bf1-959f-65a78b043669",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedee040-3eab-4e1e-a659-f4183a5a2098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790d79ee-32b9-453a-8379-4b716b6ebda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb87b81-7be9-4e2e-a243-de3ba2dd38db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac589fc-8ec6-4e22-93ab-a6cbd339c23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68952786-94d4-4ef6-8eb3-18da1ee9fc7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac55498-5281-4bd5-abf0-fd0f19e2ce45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933412dd-c561-4289-b893-dee5e8f26d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0637153-c5c0-47fe-9279-10adee546c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a44ac64-58cb-473a-802a-c8e00b5273dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f61d42b-74ac-43f9-a903-82de14de2ab2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f6316b-8b03-444f-a82a-4986386ff544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47ce533-b045-4451-9cb3-db62fbf40538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdca473-bc62-4b38-a6e1-c77ecd536150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dd92ee-b712-491a-b95e-8cdefec00f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df3b4d3-9710-416e-bb7e-1ba0e198d573",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a19d90d-9020-4cd1-aa77-74f6cf6078a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bf4f5c-134d-49bc-884b-cff169c3fe03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13361c51-c107-4028-937c-c9435655b7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f0aa28-bdee-4611-9751-5f34f6468cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d235a819-b662-4e06-b4a0-7da8f2d9a2ab",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b724b8da-82fd-43ca-a955-c6c10a554615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79cbc7aa-5be8-43cd-9f29-5597c93dfb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b23ab9-11b7-4d11-bd82-0c61330ca156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed092444-a3f4-4540-8919-8d5d9389505d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd2611-e828-4f1a-a71b-1b4578fc458c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d79555-a660-4444-919c-a97c5bc79eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2571a057-3bed-4b27-bd06-70d7ff3e843b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fd5949-bb9e-45b2-909f-f0533ff3c890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65e765ec-d53a-4279-bb7e-05f3d518a8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7da2e1-0bf8-404a-8bd2-ae314b1c73f7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945eef12-6ac3-4a51-8723-55dbfb32a58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9a8797-4e0f-4cad-8d09-1fc8ffdeb8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a56c09-88ce-4c99-b31b-a93178adbf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6a7fe9-6374-4e28-b67e-250c96352197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78757764-be78-4fd6-b1b2-6a45a26ad3a4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d774d9f0-5dee-48a5-8549-001d0e09b740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d200e0-3368-4e33-a42e-41892366647f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e9019a-bc4a-4779-b18a-9da12f270d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55dc2640-f1b1-454b-9ba7-a8e76bdbab18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf60db7-bd14-40c4-abe4-f6efae7d1771",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7b6d7d-c36d-4010-8106-44ae2736f1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b7358f-6bc4-4d6c-8197-10578c70e599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50009e81-6ae7-45be-b047-2f99a65b2b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea587c8-6c3a-4ff8-b7a6-cbc024d6332f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7d416f-43eb-4b8e-85cc-fe3166b6464f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77941fb-4b50-46ff-971d-5ef783ab6851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7837bc5-0c65-4769-9849-56afe9dc8256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567d7bec-d2e7-4a0a-806f-83ca29ec0110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b0dee9-1b93-4614-b40e-8b87a2d339ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5cd67f-ead6-40cd-877e-b7920daefe09",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100be5cd-900c-4424-9a34-7477e5183137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffb9b4f-31e6-4059-b5f9-f5491ec5655f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cba6b3-37e0-4c10-accb-d4f952032636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e9c05f-23e1-49f2-854f-c5bafd3286f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6974b0ef-7a11-470a-9f82-f4b3b5b26486",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feda5ccf-a524-499f-9b9c-1f22abaafab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4413333c-af8d-4ccc-9f7e-5c2f901c5187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fee619-79b6-4463-ba1d-dc9fbb8deff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bac98c7c-6c14-42c9-b025-23721c0983e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d88834-aa59-47ac-ba48-64b5064ba860",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4608306-f6a5-49d1-b732-3c5380c3dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d805ded4-fe8c-4c35-af42-b506c6726203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d3237e-2a39-4fc8-8bf1-89795847dde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7315cc1c-4215-4dc0-b71f-edcf05fdbff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49a0136-eabe-492c-b255-67a24916f19e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f90ee76-b2bb-451a-8042-5a4261fb30ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3bde18-aebc-4b88-bf6e-6bda85032aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1b172c-13b4-4b12-9e56-6477d15b568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e92eb4-79e4-4b13-9b29-4752eeb2dbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb66cdf-5b3d-4779-a77c-789287ca2845",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ae73cb-2632-4546-9b52-db70bce5f681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee993857-381d-464d-9879-cdc8bdf6a924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff401f2a-39a7-42a7-87ee-a7ed53c769d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cff5855f-8d8f-4a60-928d-a4d073ce9911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f9c3ee-9474-4ae1-a18a-0aca47ba1b05",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59b16be-24e1-4568-a7fc-50ec4ca83132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55592c28-6967-4e28-b4db-e9108a6f55a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2896e24f-8d17-4993-910a-c3588306c1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d2e9aa-b706-4f40-a0ef-240406abe0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d35dd06-b8e0-41df-86b4-4505caf83564",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82b921b-3b0c-46e5-87b4-94aff7ce02b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5deaf5e8-19e7-4bcc-996e-f4646b9720ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa56947-a8d0-480c-abb6-56dd205d96bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fd95a9-6c8d-4202-bfd7-2dff7d68219c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67962322-db48-424e-a3f8-fb229e2fae6c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcc2fd6-9710-4c2e-a044-bae78a4718e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e416d5ab-044f-44ba-9f5c-5f2fc252236b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ec4851-dd4c-405c-8847-5a1982cf6adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5cbb66-7c8b-4474-8e4b-60d92efe4cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c1a0fe-5064-4ae4-86dc-eeea3fb6671e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9d604e-aac1-477d-bf72-29a813b2b0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978f674a-3a37-4544-ba89-3cd9ac97d117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6ce223-4736-478c-83fd-af4511410893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbae5db9-88de-4db8-91db-2379877f9da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b627dd46-dd01-49b6-a574-d585d4b9fbee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532b4e21-a47a-488f-8c03-58755e67d0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad542b7e-e13d-4f56-a446-41abdfdd2780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d06ca0-27c0-4740-b51d-14d0f205e17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7744ac3-9a40-4773-93b0-b62aaff5b7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5d35de-4ef6-42ba-8576-32799779f029",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44f59f4-426b-4a4b-966f-9bb76c9a0eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad58dbe-ffa7-4e5f-b4c7-d5cd0cda0fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1bc9d3-2a5c-4203-9767-ef83eb58d2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8611ec30-1473-46ff-89c3-c469248a7f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bc7966-08b0-41bd-9bbb-0aa7dc9fbed9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5bdc16-e102-4590-bbe6-a4cd484bd62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f648aaca-c1b0-4b81-90d1-0b2caeff1070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887b2ed3-b377-4f99-89ee-a6b0367408a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17e675b6-52e0-4ac8-8d20-8b71ae1b67be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a879c74-c1c5-4f52-9ffc-0260417b0655",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a219b32a-72d2-4122-a759-f6a9fd80e2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66645edb-50e9-4760-9ee8-750d897d890f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80e095b-0dcc-44da-8388-5a25e216d90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "190cd075-7031-4893-99e3-5d4ff4e238ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cf55b9-21fd-402e-85ed-5748f5e8b04d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f83bc8-b583-46fe-89ce-4581f08b4062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8cc5a6-5363-4451-9735-de47598f62ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effb714c-3050-489a-bc09-34ca90543ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df17de2c-57e0-46f2-a9f6-9da232ce01ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3739c0d-795a-4a8f-bc82-99dfb4fa8f31",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2875422-1199-4f72-bed8-0a56254689ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8493a6be-d13b-4352-8024-6ce2fce710e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43d10ac-bae7-4a2c-8cdf-2ca554456da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "178c6d68-b498-4967-9b88-fcfc5a3f51cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d66a172-1269-4f4d-ac07-1532ce55927f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3003f8e-4bc0-4f63-88df-b66fbfaa3fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e39b9d-ec5f-448b-9985-bfd882fc2a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab985d59-9134-401d-ab30-da565575ed50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94fbd48f-467d-4ae1-bee3-6d4c2bd67135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80af5b5d-db1e-43b6-a9fe-10e5ac8705e3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f21402-06f1-450c-9ad9-3c0b59fff90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3ea94e-eb53-4eae-828e-5bfc87a5395f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8e3107-4fcf-4540-8395-a738e3af3027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "585194dd-a46b-4fbe-8aeb-c5758e77e0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc5ec40-ad93-4b36-865b-30829e215f60",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52947e3-03f2-45fe-b98e-8566b7d9930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8196060f-b9fb-4b16-8347-f01afcd9462d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a59200-a983-429b-a857-51042a7c5e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce77064-c8d8-4455-81a1-3f191fabbf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cd4d7d-c1c7-4df2-b7d2-31e07be5fa1f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930d8ec9-0c40-43e1-9a6a-6a0aa9accbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8629014f-c193-4c81-9b7e-2b3fec6b0c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2464d87-4e87-4561-9886-f0a8dc1a3589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3881c020-d620-4e9c-9636-684d4c38ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac55d15c-fbd5-4732-9df5-bfdaa237e9b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047d55b3-8e9b-459b-9d2b-4ebf87b94931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83541885-5340-4b1f-9cf5-31eddc067663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d3e063-bc71-4e8d-bda2-9c075d6e8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "72a7e02e-22d1-4390-a9ff-686560a11c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671b168e-e361-46b1-9fe2-2605f5ecc16c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ed2b41-6b23-448d-8187-69971426e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7801f5-2bde-4c87-b12c-8beb5a000b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd856b85-8265-4ab0-9ba4-5c4bd4a7d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdba27d1-e9fa-4cc9-ae35-18b82527c822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4aac17f-ca1b-4935-8558-f0c9dec7322d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12907a8-cf34-423e-8cf7-4c0c5baf8581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bafa431-599e-4017-83c2-6f684e0091d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9446317-9e6c-4899-8a96-7e0ab7327bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84bb045d-f48e-4074-9575-3540f91256cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205247cb-4a6c-471a-abc0-43522dfa3bdc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7991cecd-d1f5-423a-ae06-17ecfa73543f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30628de-e9e2-46bc-b959-68138562fb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3c19d9-8760-4bb5-89f2-10e9d9a2d83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5d0505-2632-4199-8119-dbcc79ca629f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4431ac-79ab-4582-8a95-b86b32977dbe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9207a21-bb02-4fea-b93d-efb497f1a4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7d9c890-e616-4615-a6dd-212f0d0bc603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f671db1-e177-425c-a8aa-977bb69aed56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "18d18834-8850-4c66-a268-8343aac37901"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d968ef6e-76be-45dd-ba40-5fb40c92c835",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4792433a-a546-4982-a86c-0ca5e8ca53f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b61efd-5674-4dc4-8972-1d9f482328cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a9d79ac-761d-4e04-8c10-4e95b694f0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee13acfe-2040-45ae-a1eb-c339c9cf0fcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "301e939d-199f-4287-9447-d19bd0ee2cea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ed1100f-87cb-4650-ae6c-ea19e86636dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8613c381-59fc-499b-810b-e8afe096090e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4157f562-5f6e-4e70-9545-98d4f0e74920",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa98f8a-31b3-49fd-a1f8-3a42dd2acd51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e3b1eae-dbb3-4228-b309-54e5d3bdf991",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0317ff14-913e-4eb2-b05a-806ef59d00cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b9e5803-39c3-46ce-9c72-ae745ff4a80b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a566a5a-7300-4d72-a9d2-3f99a6f0aac9"
                }
              }
            ]
          },
          {
            "id": "b082ea09-dc95-4fb8-9155-ed823610b802",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59c5672c-d08a-4b11-8e70-57e8176cc85d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cb34a066-f9f5-4289-afdb-edbdb06b3050",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891e0072-a7ae-425b-852a-315299df5a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3d02e923-a45d-4534-85f1-9f3804ab2220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371388d3-3a45-4a0e-9a84-b0f867a0dcb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ef22d4-1e73-4b5f-9f4a-11af0a14b1a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c3e1647-dce9-4751-9b42-37dcb07a5ffa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd32fb5a-e9de-4ba9-a5c1-fae23a5d3a8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36097eba-0ec8-4f64-a19b-7ab6cfb09d59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e64fecf2-62c6-42ed-8130-ce7546bf5c5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99cbf7e2-3eeb-45c6-bdcf-575ffd94c6cf"
                    }
                  }
                ]
              },
              {
                "id": "e5c064e8-ab4b-41ca-a127-3b7233d1114b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4fbaa23-7564-4c71-8209-e491e103fb9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "845bdbc8-0f70-4e82-aa17-bafe226cfd90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bd70215-fcf4-4740-8a0a-e7aa7e5bde6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8468213c-3b2c-4376-be51-d3c3e4e781e3"
                    }
                  }
                ]
              },
              {
                "id": "529ff958-f939-4d40-b280-511c3a606294",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc566289-1339-453a-b9f3-acc1b7dce498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c721665-9b94-4f9b-841f-26f1e11da07b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "957804fc-9698-49c2-93ac-a965149d95bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5e876ef-910e-4add-aad9-2ce57cb1844a"
                    }
                  }
                ]
              },
              {
                "id": "a2ae9e21-e0f6-41ff-9f95-55d209a78d91",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32d6645e-6a75-4ce5-8098-6eb2a14afe32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f22d50f-f22a-4b9f-a61c-f7d1fcb6d74e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ae18b5f-56c0-4350-81cd-222544e3b5b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "05423851-dc13-4d74-a9b9-f5277d00202f"
                    }
                  }
                ]
              },
              {
                "id": "703435f8-df32-4927-badb-8e296807b3c1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "673000ae-5a13-449d-b928-0e163ad1b66a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e07722b-4968-4074-8c6a-56a5fffe2080"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d176771c-e0a0-4333-af13-b27b6966ae40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "05f166c0-f799-4eda-9b9e-6bf2fbeee90e"
                    }
                  }
                ]
              },
              {
                "id": "19452ec0-fb63-4467-b4e7-fe66d4d914d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d8dc161-0592-4363-aafa-80e0c8d50c06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15b1bb5d-678e-4299-967f-5aa0d72f5f67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02affb79-18a7-495b-b0d8-c8d2d72eb1af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "001acd30-a862-4807-83b0-14506a011aee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8846a23-59ec-40fb-bc76-59177e586e8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0687df52-0c9f-4ac1-93a3-197f2d668e6e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79ad843e-3294-4d5e-b32b-21a80e2c40be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed50729c-9176-4a2d-800e-56852f54cfb9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18408a38-8781-418a-b544-8f5ce61e31a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6062dd72-986c-40fd-b34d-a12f32d46176"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41600c49-e4ca-41e2-92c2-50e502a8eead",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32e13a4c-3bad-4029-840c-a054feb3021f"
            }
          }
        ]
      },
      {
        "id": "bbd0c493-979e-4021-865c-7141669b7747",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "195a1f28-742e-4205-83d3-352866c27470",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af6efd2b-1baa-439a-acaf-d1628dbba062",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "134d8398-9242-498f-97dc-81566ac54a51",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3787eda6-f701-4df6-bce7-1282bb3c8d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b756b23-700f-4744-8af3-2f5ab137197a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44f37d9-8992-4ff2-ac79-d529dd4f310b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa48aaf-689a-4903-a8f4-c9e83d5e38da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b702ba-6079-4dac-9194-9c5c52aade69",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8637aa-ebba-4dc9-a6c5-45c5336b77eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487451e2-bd4f-4ede-bd5f-7cf8ea5ec3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6d5493-8df0-40a9-a208-518bdb410523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ef7550-234e-4288-b723-da54bfa9a939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db970cd7-eae1-436c-8125-51950625b0fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd21f06-58ae-4671-8d8f-f2606ecc4fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6f6726-d419-4824-8f5e-960399b6b851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f638e2-9e92-4707-bb9a-05d6c01d9d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd88d18-e5a7-4aa9-8ba8-8d7c4ab8bb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bee550-fa05-4e70-9c5a-37c597ce53b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7edbc5-904f-4271-8bb1-15259d5b24f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f678a91-dfc1-4196-9497-0cb2b972975d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eb9a7b-e5be-493b-8ded-1da2a5dfb2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "749630e7-7339-49a4-8701-8b302cf563f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d16ce0f-b10d-4df1-a91c-b1e78b151fd8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28d520d-16ec-4d80-bcb8-0fb135a953e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d60058f-9cba-498e-a0fc-e6acf4a843d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3047aa8a-5851-4113-b9d2-464e7d0928ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f373c722-04c4-461d-b13a-606871a89469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55be5cc-6d1f-4198-bf6c-931ed2861aa3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ff5a4d-b3da-484e-a8bd-cc2a9591f089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2b8a91-d2c8-4061-9b1a-d97a07e9064d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64088aea-e1b9-451a-a776-ecb253be802c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49f5f23e-47a3-483c-b973-8830554fad98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094fdd3c-30a3-4372-a1c9-0dc8e70da92a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef75aca3-1007-42f6-8af2-af25dafb45c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6371fd-54be-4d22-9039-0e61b4965ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f900997b-c51d-4319-8cf3-ffeec84d226d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ffff70-f347-4c52-be5b-fbf69e7355c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6352f49c-288f-4e14-a691-21a47fecbad2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ba4eaa-442c-4a27-8236-4ffdf6a5c0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01d79ff-ee48-4a94-a1b4-691ecc519281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aaaaeb-f012-446f-a9f2-6f67fa66209d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cbdc85-6b76-4f4a-9cf0-612c0bc66dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e427bbe-01fa-4e41-908e-99a79061c96b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9e9933-9a9f-46b8-b425-69a79f6ddf4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdc2586-8546-4e7b-baf3-a3fe39ea15ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6288dfb-61e4-499b-a3b5-2b7888c76cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46bcbbfd-4ed3-4826-8ccc-494178882b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4454fed9-67cc-41eb-a71e-7fe5ed75bdd2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61a37e9-c544-4758-817c-c5ae5d24b407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80640bcf-8e34-413c-a215-449b677c28e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36210ee2-3427-42a5-bee6-5799f165ef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35adc8fc-5a6c-4a72-b83b-6e5d124c0970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93857e8-b6c0-47e8-bdec-b9522e9f6ce6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d44a12-0d98-46c6-9fca-61e16f03bd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee70919-2382-4cc1-8ec4-29abe3a3f63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8560713-b94a-4233-8a31-3348060a99d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf1108a-9b03-4e02-b93e-563c0d6219dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d896d5af-c083-4440-a997-02f24dd48e57",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b215ba-5068-4779-8987-47e6700ec83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713139df-0529-450d-989e-f7e8cb0954ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e711e33-5094-42da-be9f-37788c8ea4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e78d79-8dba-47f5-b746-584a92f93b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4df6b6f-4348-4785-8cf9-727355405b74",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7185389e-d10c-4148-a596-579b42e20144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68df1c89-9370-4c84-8737-0699c2d8b70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145ceae2-1a5e-43a6-9ee2-793676a21beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc7c51f-b97d-4a3d-84b5-0870810d0742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0c7faa-7e1a-4e46-87f4-73f206ca8df0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad496dc0-54c7-42d7-8767-b79d88ddd0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e72932-2584-45c1-9754-db18843d74c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c0b5b2-7bf8-4b1a-a0c4-2ace4adf3262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "321b8f4c-0428-4621-b165-9ec4aea826b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b11e8b2-2ba9-464b-bdf9-48d5cb71f51d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7642c030-81bf-406c-9e85-2ba6cb214dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba20fcb-2a85-48e8-8a13-e1f08a332faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b724e12-6e4a-4cf3-b28d-efc6c94a8248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f04a32-23e2-485b-846c-efb5b24f6f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d33b69-5d51-488c-99b4-a1bed4c2157d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14b99ee-93fd-4ad8-bbb9-35b063aec1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8784bb0-a1ed-469c-9325-86a07000a53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983cf88c-5316-48fc-80c1-7300f3fa1a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdaa3d8e-df9f-4b1d-bafd-99c038a4a714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0056afc-14a4-4c5f-8584-2917a7840d7a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4354f9f2-3989-405d-a09e-90791d3029b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0c9dff-3cba-46ca-9ab8-bc31e0495991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1594a28-6680-468f-917a-c89cb730748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba17b496-9039-4a20-b7ce-5a20471328df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f6fdd-7415-49cc-b90a-0d26dd248096",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986d0513-878e-47a1-abb8-fddf39674f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cddf4bdb-4592-4865-8132-68796c025b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a93271-4e90-49c8-a670-8d5b5381a6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf56e0be-9888-471e-85ca-2b38ceca8aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04248b26-b137-4a5c-b84b-fd0b8c88297b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc1f32c-f8f4-4988-b533-05ef609190eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2774fc5d-322f-4afe-a2b7-2a3d7ad355f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6667be96-7aec-4c19-96b5-8e8a07f1848c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2702c9c5-0736-43df-82e0-654ad2c631c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c30972-5dc7-48d0-973e-f49490f57c6e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49299e5c-3227-4b8a-92fd-e0608ee2128b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b653a69-de09-454b-8845-c9f43d85e447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db9bca0-8ebe-4da8-90e0-f9779b00a90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "742090df-d6df-465a-a17a-87cfd53f6e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b88cb5e-8784-41d0-8b6b-1f1dadbf439f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80516944-ec21-42d8-bfb9-c53411412a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b555323a-428a-47f7-82d0-beba40196c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903ea7ce-3d52-464a-92e2-1cb16227966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c17b93e-f4cf-4e21-81bf-dd9475ecc06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdb7c85-3c29-4bcf-9c29-e47799a4bf65",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1d4fe2-08ed-46a6-86cc-d73c1229cb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2883cecb-3d1a-43f8-b7b2-98fe79904903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f7022c-cea4-483f-9d6b-2640e1f3c2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aebb9ca2-4f4c-48cb-a27e-27685fc5ad68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0fe763-b0da-4385-800f-e59b35e1a2eb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b12066-5b1a-4084-95ff-b3b570a3b93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6f786a-5a8e-4345-a6bc-78c643930546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3161af67-cd16-4ba9-8b7b-f56b49360c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28491de3-490d-4b38-a529-feecb01daf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0c50d8-2001-4f84-a497-f0e94a520822",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16c8b7c-a139-4d02-bfa4-75f3b89e484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a486670-28b7-456b-9030-f5f2aa252f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21468e89-bf44-497f-9779-ef4936a0311a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df343fe-8316-4654-8e17-880fe123d360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c195eac7-e3bf-40b4-ba99-c6e67b519b4f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a9716-1cae-4245-9fa7-f8ab0106f9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26490a85-f0c6-42f3-8478-187e47ed84b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a0acd1-5238-4c33-94f9-70283e736a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f52f69-eb8b-4f09-b56b-fe1b9e027c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69c5c96-aac6-4cbe-8b0f-481e0d3fc162",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315cfc4d-3b16-4f4d-a227-ec620e96e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e199e8b-e967-4d0f-ae57-ca07aacaad61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9679f18d-625e-484d-b7cf-559f740d9e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a90d73b-d3fb-404a-98a2-6c37ac86b434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73b7e7d-0fbb-4ce1-82d0-6e2b901b559e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94ef51c-2844-4d3e-8652-6080f25002cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38269da-97b9-46b5-8940-a6ab8555ee3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375eb696-62f7-4b63-8fc5-a44816103c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89798219-bc1c-4de2-aa25-ac3f0163e924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b44fa02-5ba9-4e41-9b55-89a78fb3c356",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe35324-2ad6-4832-8d8b-5cba2be8c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d34852-c54d-4132-ae74-aff4858731a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e2d36c-d113-4ffb-b47f-d4743dedf965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb98c235-86ad-4dbe-ae11-ea6c3706c613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5723adcb-1582-4304-88ff-7958167a93e2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729d7410-d8bb-4fa4-98e0-ad2dbb7419d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fccb3ab-2518-479f-bc84-86dfa9e8b5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3494030-0339-4cb0-9f92-26fb632edc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b981b18-e099-4cf4-a856-853ea141f601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11544092-c08a-40f3-b552-a75d5f2a2c55",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3e4b9e-140b-49bf-b864-6c973bb4dcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a05653a-d5fc-451d-b08b-9dbdbfaf3fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a627f7c4-be10-4878-ac9e-681c5923003a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc641034-adad-4f87-a9d7-7fe898ac3299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dd65ab-53e1-4937-b728-4c0a115bae73",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca23e9b-878e-40ef-a0b5-e197bb3fc870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7da56ae-0a9d-4613-8843-e7e6a4da4597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d17bc3a-64e1-4658-87f4-c5d01649d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c216d9-4fc9-4894-9492-18a808fdb276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2172e78e-8391-4516-89cc-1255a7e77b52",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ced0b3c-a989-43ed-b0bf-e7f23bc3dcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144592b7-dee2-4d25-b657-29de1b546c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65827964-c804-4861-9d8a-1b1546ac69ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87ca8baa-9c2c-4fe5-8417-80d9f83f4144"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b21831a8-6864-4cb8-aeca-d38101615457",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4436c56e-10c9-4ecd-a8f8-87e4cf03ad39",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454c0788-2444-49e8-b913-4044f01bd605",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0361db32-eb92-44d6-8093-6e2616a60c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2696d2-87eb-45ea-9ac9-e98ca604e1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dd932e0-6b0d-4fb4-b9d1-76a72a62b3d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9bab08e-bddc-435f-ad51-43628af068f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c929057e-5373-4f81-b574-63a7d88b99d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c054c6f-1e44-41b3-8ccd-4580dfb9ad73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc7715b2-a234-4606-87e7-38410a188998"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "217e343f-ed2f-4ae5-a1c6-6cd0cf44d67f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e55cc68e-8d13-4d1c-b40d-56e9312c051e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64c33d23-6bac-4427-9f80-93496da64d98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83a16a88-4ffd-4524-baa3-37b4fb99845f"
            }
          }
        ]
      },
      {
        "id": "d35ae386-e1e0-4833-af8f-343c43a11e13",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "af7a514f-aa84-4a1b-b749-f1595547e44a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "129fd31c-d568-4fb5-9847-1d4b5973fc76",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe23e4d6-5cdf-418c-aedc-a042e60455ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db5c9fd-d315-427f-b753-a3081d9ad09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f157697b-da38-40bf-b957-799345be73ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e2bd63-b8b7-4bab-9a2c-c363d0317033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e09a26-0575-44c4-95a4-ed9f137906e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47a749b-50b8-4243-9c4e-43a3197e7fb0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8f29a0-8206-48e3-a223-5fabd605718a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c9cb8d-d55f-4275-beea-6186ff0d0754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fddff5-8547-4193-abd3-77a24e1e7568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53b88809-e049-427b-ba0d-42167dc82a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12fccad-9fe0-4ace-bc3d-e6c01dadaec8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1134f317-7080-4e59-b670-f2c5750bf0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0803e79d-e1d6-4b93-bef9-cea1092f6fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bcadb4-ee6a-4fe2-b21f-db0c00a55bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f467f2cb-f56b-4c0e-99bb-7a132e036d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d643995-62ed-4669-bbb5-d03b9c219a66",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac3884c-b107-4a21-92fc-5f56d93d1f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec69ff58-dfcd-4d5d-989d-4da23bdb3760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e641a7e6-01e3-468e-a292-18d78d381eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd0458e-12ff-46ad-b468-475ff2f52e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bdea2c-3c9c-46af-b94a-47854a4549da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75cce06-1559-4daf-8588-862a57765cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ccfbaf-5ca3-4dda-bba2-6dac2d6524e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40241016-fc89-473b-ba56-d12a7bbbe390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0aa5bc-4ffc-4180-bf95-7a6c256117cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738db907-f618-43ba-9c03-3ee91484e5f7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba050291-4101-4116-8f45-10389b72611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7da52a3-44e8-4ac5-b67a-8d398292a2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ced455-9e6c-4323-93c7-467b2f24edd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd1c7bd-5da4-4c0f-a12d-8210f78777de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c76382-1128-4b5f-b3cd-2e992e5c7683",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1888d1e1-837c-4211-bf38-6cc06c1616ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e82702-8f55-46e8-92bc-4148b65594cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a821d0-92cd-4158-86c2-055d85cc53d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a71253-da3d-484f-b134-80bd626c63fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b70cbc-7aa2-45ed-9ab7-c34031356dd2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea691e8-1cf6-4f5a-9967-1910c6025d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c280168f-c5a8-41dc-a411-c34136f0b2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada0f78b-e9a1-4fdd-98c6-8eee77c7d85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9472a7e8-9fed-4c47-bc4e-326edd3c3bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a99bd3f-aadc-4374-b11f-1c42c154d009",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c62582-d170-4dad-ab2a-ac5e02d8ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6738aa5e-16d4-4abe-9c5b-19cd1b30048e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0460378c-c837-419a-a96f-444c347257af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa8616c-78f1-467b-9481-af5d3bcc0e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4317cc-ec24-479e-b4b1-ab3e87ebce30",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6720ac14-4645-4ac0-9549-601774bd70aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581ed474-35f2-4b71-962e-036c7b8f5efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d1c1ef-d949-4b74-8b62-3c7931fe1722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b19287-8b8a-4541-b4e8-59d54ee57e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ecf409-6b08-45bd-970b-6e06881c3bfc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763f7ead-20aa-4486-bb5d-a6aab44532b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e829e6b4-55a1-4d6f-b8c2-5be2996d26f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54a0b90-af56-4741-958d-4a6174f0b29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cd879795-dbf2-41b1-9918-b3402b1237dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657d8e3f-695d-4a84-96f7-6c679abab2c4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9196442-b912-4247-8da3-3f477e1f15d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbb9162-4757-4742-aced-d33bcc3912f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e672f-c1ac-4a78-99cf-d572149f6c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60a36191-c547-471f-8768-f25e1d0d9eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217dae23-d162-4351-9fc7-4f661ff013ce",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f086aac-adbe-412c-96b9-7b498d8f9ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0401ffe-fdeb-4c12-9625-160b4c499128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bbdd11-09bc-4051-a167-a0d82b4de0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "399bbb0c-441b-4189-b440-eaa3ab97d42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a547fc7d-b771-467a-a17d-7ea9e81109af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3448c281-2508-4ab3-8e75-02530d531da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e20e25d-df7a-4d7d-935c-98f494387ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8d8422-cb7c-4fb9-9926-6d5df752f477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09dbe85-5c51-4171-bc2f-299df83b1cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd697eb-983d-41c0-a630-bc49924c3818",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe637ba8-4bc4-41d0-ba37-db3573ebdd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0439ba-21c6-4622-a05a-594affe4b712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1108f375-586a-4fc7-b0bc-4d9e0fc155a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b0441e-e487-4e23-bc1f-a459c8059e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827030b0-8cb1-4afe-9b41-d11c7a3fc22d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1e102d-faa3-4619-a929-bd43f15d7f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d15068-eb9b-44dc-a941-2309ef076b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884a8109-f230-4bba-8db5-c4666f3e6aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29da9f6-e1a0-4c6d-b7a0-29af3dfd57e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d8edbb-a51f-4fc0-ac73-f66351c38f9d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2ebbb9-068e-45e9-9afd-192286f2c871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f1a1c8-32ff-43f4-8042-15941fad9289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af8e27e-fc4b-4e4e-85c5-faaa8461e7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c9322c-502e-42de-979a-13986ae01fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b2c637-5118-48c7-ac4e-d95df72a4004",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced0adf0-2eca-49a1-810e-42f46b23dc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cd069c-50ce-499f-b732-81956152e2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9d9ef5-bd0d-4d01-9e20-527a40643411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53a6dceb-9590-4f36-ac3b-7e7f7b2e689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4769e073-13e4-49a9-a04f-a18c32b4f34a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be722e48-5371-40ee-a7be-4a392f29ac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865040e8-e72a-430c-a8f4-8a0e0d0adc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499b2528-920d-4f3e-9236-e82f912f2de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e5a774-2dd6-4ec3-a0a3-346d5d2a1edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7ded43-833e-4cee-8295-af4c8a01775e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89af5478-0fb8-42ea-b5e7-8a7a7c198953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f99807-73dd-4ed3-b43c-d0796c8c37ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bc3994-df64-44ee-ae4c-b7eb91778a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2a411c-1cd3-464d-8f1c-297cb2269150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cedf6c-da6e-4222-a70d-56f0e301740a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed74e695-5ac4-4573-9a3f-a19de696e60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d3d1b3-c23c-4989-aaf6-d0b16bd3f23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3d3346-aa5a-4e1c-a7d9-fb10db631870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "791e34f7-30fd-4c2c-b37a-522d43c97450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30623a53-e003-4c2e-8c65-f66566d3ca3e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a934e48d-fa33-4c3f-b8db-c4f84ae727d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb37fcea-9034-4917-ae9a-7ae1f4c55ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa92b23-dce3-49c3-b119-a5f8aa087998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c9c893-faea-4ed1-89b6-fef78b922b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376154a2-7d54-42dc-9c7a-b0757d16c44f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9ceb3e-dc04-461f-b9fb-11eee33a7bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3655e8-345d-4ba8-af2b-9df151ca759a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62e292b-afb5-4718-b78e-378bf5235581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d439cd-5468-43e9-b019-47543bcf95c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f652dbbd-609b-49ae-88f8-54d4e9d99ec8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12298e78-dca6-477a-9f0e-33a9877fa4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1278de-4865-4ca1-9b44-9e03700df285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73187f45-82f3-4c7d-a88d-add98b6ccbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a753fcf-68c8-4469-a736-8ff3b5e6034d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc00ee-51da-4d65-8535-f61a146ddc1d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89ccd78-1bab-41f4-ae81-a8c811092dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bed89607-2ea1-4eba-8272-8b026e88fad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd54e82d-1181-44a9-b88b-d9d9fa765b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c85bef-0db6-41e7-93a9-95a151cb6cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb9d82f-5ea5-4757-aff6-aeedb99f144f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e3eaa3-039f-47d3-8231-938a46cfc707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6ae883-d9e5-48b3-b7e2-78967a0a1e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2191432b-033d-480d-94ff-9c856c474636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "323c7045-fdd1-45ac-bdc4-99ea0981a4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a1ee89-3189-4ab9-a5fe-479af448d109",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb2cf11-9d3b-43d1-ab1e-881eec2645f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b037d30-a2f9-4f48-a7e5-58b2c35fbd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59325857-ef8a-4d7f-8d26-5c2029316d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf053db-a7c5-4d04-8069-782dc38b3552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431e11e0-07ec-46ec-aabe-4a7cc76193d6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091ef4cf-46ae-413b-8e07-903446756f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f33e413-3417-4043-a8e9-5d343a3fdb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ceafe5-809f-4955-9193-bdf60b8eae7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8302426-e890-4152-bfe4-9b399ea86f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e4f7ec-3dff-4b15-8341-bcb8cf6b1646",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6a763d-4421-4ad4-a883-5a6f0156ff5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58d4347-08a8-4105-aaed-1881c9f88efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64111871-e813-4929-90d9-1aa749c26871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42cb5e96-e4a8-4e36-9092-f2d550f39f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ad169a-984a-4980-b079-9b74567817bf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a37b9c4-123f-4ba4-a998-8442d3108c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f32a31-72c2-4425-89ff-dba767991d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dacb780-4408-4474-a3ce-c2228df4367c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffaaee6-b3a3-4561-b997-b5e70da6df05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d3c668-4524-410d-a998-79637f89b38a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757e5ee8-218e-4337-9592-f56de295d2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c1b02f-3d78-40a2-92df-1af732557753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03be24a-f48f-4bf2-a2ee-a2afb96c2635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a05bcc-7e0b-45c1-bc1c-9ae29ef1d8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99c9a6f-15f8-4115-8d78-e9a9ecb3fe74",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e374fa8-f336-40c1-9d33-704d83206f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a82197-e0b1-4b33-8b35-bb3df60b9786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfd3e32-d588-4a73-9b30-9ce300c14fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e374db-3693-4ec5-88d6-cc76fefd2583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e321e22-98cb-4bcd-ad6e-23175bbadb52",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52aef292-3158-499a-989e-f8b13062459d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c74fc4e-b46e-4c23-8ad9-1172278b9172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0c581e-66d7-4dc9-a779-51acd1af9235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18d33443-fc5c-4e24-bba2-edac5db12b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3f9617-ffd8-4414-9d24-333840935044",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85a6f55-0668-4d7e-a102-24017fdf2a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e215c02-f58c-4cbf-92cc-a42fb64f29e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b2a842-3b07-4b70-a29a-2eef49206f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e452c79-14b1-40c0-9c1c-7c7b9a225665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1c95f2-9fcb-441b-84a9-c6cf95e4cc2f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f92eaca-f11c-416e-9442-b2f97918c998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1aacacb-fcf4-4a31-a3aa-def83f3343e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0e8c0e-ad1b-4331-9a33-4607bdf5a79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e26da5-5ea0-4dbb-8fef-d62d5a0f7e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895adf2b-2a5f-4445-9cdf-8e9e730908bb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85235f81-cb68-4c70-ae34-292b3ff613b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4d9f68-aa14-4367-8be0-b8aec36f120f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4763fd70-e3be-4c6d-9cc2-2a896dfd54ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0af2af9-f04f-4346-a7c6-2e1429f637c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab3d3a6-411b-4df8-a22d-0a98733169be",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1763361-c4aa-458f-a223-082d4a4807c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f695dd7a-b2c5-4667-b18a-a4d662e079c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbd0b49-4ff1-46a8-8905-39462d8585bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d8aa4c-63f6-4f0e-beb6-0e7c61fc016d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60823fdf-b6e1-4d07-a491-a09f397f0834",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0d02ebe-fbf0-4dcf-a77a-1d2ea281d3fc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0413e154-dd46-4aa8-bd46-f01fd7e461dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5252a670-0de5-485a-ab4d-79216a0aaf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7c9e23-5642-43a4-919b-0a6e8b583511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6d54d58-fddd-4c5e-a6db-c2a5fc209067"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78f48f8c-17ed-4190-b619-4f5f6108840c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d6062b9-e738-46bf-aebc-cc2dc4d9d8d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df0ebb87-38ac-42f3-8856-577e80b0ac28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "102e0038-38df-4296-a5d4-8250583a6dde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2c9fb25-3f5d-4bbf-b525-1eee5e27af5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a395d77-3db0-400f-aa0a-50b312c7d85d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78193c96-dd69-41dc-b50b-1b7c0ac69c6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa22ccb3-00b9-4010-aa09-b3779f166bce"
            }
          }
        ]
      },
      {
        "id": "1ee09f2c-952d-4b9a-971d-828aa6bc65fb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f6e73e64-e3f9-454a-9e78-fb138a04536d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e004fee-251d-4841-8513-abaefebf61d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9803e459-a59c-4845-a323-5460d7efe3ef",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cb9131-3f97-482b-8f9b-69c4eb705df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bc8a40-7b3f-4efa-b880-1c04ac0854cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8a1dfb-239f-4b67-8ada-12e75505a44e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e89de6-057e-4d8f-8a1f-bb398d0d09e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a76524f-f54e-4a64-b78a-00631ae9d282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa05082-d728-4f43-97ee-9409cfc3c9d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fb7f40-ce7c-4130-a84d-7b5d87513367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334ed396-7477-420a-93d4-1f7dd5d59ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615e2bf6-f1fa-4bac-a6e1-dfd9cfa0e764",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde86d7f-8dce-4f57-9936-718049adc39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b35831-5867-44f6-b87a-39ade98dcde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d50f060-c730-4f08-b13a-81db73ecf181",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6a273e-6edd-4197-9333-23db4592fc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7183fb57-d404-494e-9821-78d482b612e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996b0ce7-5b8c-4280-897d-e6fa9f690911",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59583bbe-4a3c-4f51-96d8-fcfd78b5de49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eee09f-cfe9-4496-8d10-c4ceebe0646b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82f71be-b185-4e0c-9340-64a66a0f2c3f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4be8f5-0e12-4a9f-9ddb-fb42c9786bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b408e6-9cc5-4b98-9e21-db9f8319f296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52509ba5-7ae1-488f-9af7-7fff1ad08fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693a60ea-9eee-4df6-8766-7142917d7f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03345245-884f-43ee-8fd6-c157029a6e0f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8003045-965d-4102-ab92-2f52aee00459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b24ac5-094a-4d8e-9a09-bea30dfbbc41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86560ba-3dee-4d79-832a-c8388b1b9503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757bb7d0-1580-41de-baa8-466d14374f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d7f99e-9be9-45df-adec-17ff18cf2d97",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2fa283-cdcd-4af9-b3c6-5aa0d3921596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81e4e51c-cf75-4d02-af5c-7685ecb86022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3161b0a7-473a-45df-9cde-2af80dbd8c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a134eedf-9d8c-45f1-a87f-45624b184614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231f5833-59d0-42ea-99cd-17c953959ff6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cd3d02-1fde-4317-a1ad-16734509887f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2171359-ca18-44ea-b7a7-f4388ff75a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9c6514-8d2f-4202-a658-4a87027fe09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9810761c-1d5e-4628-b3c2-2bab9d40ec34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d9287c-5062-4b0d-9d24-2675defa5ca2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82f8fa9-91d6-4339-ba89-8aaf1ed46d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8632f9-31da-411f-a372-eebbb031aa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079f46f3-90ea-4606-bdd2-c0e150bc63fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59f9005-c1b8-4778-9354-f3087b58bb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e341b89f-fe54-42ef-8d1a-d45551eb60ea",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb2ffb8-422d-41ea-98ba-4bc4ef5aff0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a7b23b-246d-437a-a7fc-2fa92a31dcbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08dee35-01f8-4167-b52b-f79405cae51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096da380-f15b-40b1-909b-7225084c0b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29d3e65-9c0e-44fc-b537-2bc57dbcccee",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a028df89-54a7-419e-aaa6-89fb7f416250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17731f7f-60b0-4f7c-b29c-e53b1ea46214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a36980-e4fa-4957-bfb5-f8a5d34f9c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781a4202-dea8-4791-aa05-23b2229c0d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88944352-c338-4a0b-8aef-551de1a11110",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4e2f83-e494-4511-9463-b3d847a0a06b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0040314f-965b-4ec4-a3e3-e3441e5dc2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9495b4-254e-4c03-812e-6cbbf66c0f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2031e2-6115-4d96-88cc-ddd6b3017a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e529fb53-b29b-4b4a-bbbb-3b7fe8536c64",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2182d7a-ee5e-4fa5-b07e-cb2b66df6d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0311c1-bf7d-4927-a85e-3734eac0817a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b673b2-78d6-4316-a4a5-3b07ad6543cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71d51e5-c051-47c0-9835-d50ea1732744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f473e003-6b3b-4fd7-9bdc-21491f54cd3e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182cb8e7-88df-46cb-a86a-d31337d9a603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc523868-827a-4b73-862f-de71c8f6f369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdba264-1ebe-4dba-9f35-dcca70ec7dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ff57cd-bab7-4126-b2c3-57823ade9af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6d0d57-7d6c-4250-ab19-f8b655c863ab",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4853d7a9-3b1e-428f-986a-8e304ae62ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df199a2e-4f4b-40c1-bfff-b8861514d482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27090be3-d2a7-48e8-98aa-ece0ce0a21d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3644c8-125a-4d16-8a37-283ab3672021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c11892-6cd8-41a2-8cc8-875e3d911868",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50b749a-f67d-4c40-941f-1458de650c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c5d448-a06b-4949-a150-78f17419b093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d93289c-4b50-43e7-993a-20c0d18bcd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0dfa318-61be-47ab-8281-31fb4673fa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161b3fdd-ba98-4c5b-8947-e6787fa45718",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9ade6b-24d6-4e26-8577-21d98c3e77f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c7285d-9e5c-43ec-a88b-c652b354654b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3acae-7f28-4fb5-a9d0-c5ca1f4ef9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272de4e4-0175-4a7f-983d-dfb3ba3bb8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c5dea5-381d-4af2-9e3b-bc829c60b90d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb180653-6c88-4bac-9c3d-bf41c1df2ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029dc8b3-0823-4a49-b0a0-a179e3bd3e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4f99e7-5959-4353-a5df-15f68050671b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad54f007-4c6a-4c0b-8c39-6e39b1616ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccbde97-36f7-4bb9-952b-da41250dcfa2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23085e72-330c-497c-8273-8d4c902585c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071c7740-6719-4f1d-a685-3adf86010e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9820f12f-7dac-4c1e-94e7-3dd7ae722227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49e190a-34de-480f-8278-6ec5d9ceecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7e905-9976-49f0-9ed7-f5eb4781d3b7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abd84d3-a8bc-421c-9836-9d9ebcd47adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4094b212-a080-49e7-8a28-27b35b4653bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdaf44a-2cbe-44cd-a4d7-580405122140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9179a550-89b8-48e1-86bf-bc9f5169e8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab4a2cc-03a5-466f-aa92-30699f8e3756",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e815eb57-e80f-45c6-b35d-476a810b8d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff64e308-0a65-4f6c-868b-5c6eeff8137e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f860fe7b-3937-4f3a-b8d4-33ff9d5eb70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36239f34-ea4b-4fb4-a01b-cb3ec81b2005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7137fe8-cba9-4ef2-996e-e283dea43a34",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa36556-f9a5-4b10-811d-c17bcdf11a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b767ee43-bee9-47e9-af5e-1ecc715afbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba82ce4-3071-41ef-935e-7f5d6d17cbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a722001f-3d93-4dd8-ab5f-23bf6ba39e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7ac6f9-ff02-4351-8169-1bd90df986e1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90232ffe-411a-4a46-b710-1939d05c1f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f11d1b-8f70-4cfd-8388-3443f4862384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6426067-27f8-48c2-905a-3d416bd650eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1848abe-d5d4-4805-9979-281ef8bfd37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e80e19-1872-4895-baee-48825b1c34bb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5d7ec0-ca24-44ca-b9b7-b57601159624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c13b4a-ce2b-4166-b7a2-8ad36ff0ffdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b119755-2b68-4b97-8e64-fc9928004c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6621e575-31e3-4b17-9a6e-7445ae45105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23321d07-d856-47ee-af5d-1e6f5e18c0db",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c6ec93-6bed-4519-ad4a-1e141f9aa9d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a9f62d-f52d-44ce-a05e-d17f384daac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada5d14f-d4e2-47e2-9b58-4b59f4cf7b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e071341-9100-4665-90cb-ce436c04cd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cdee04-b5f2-4cd8-8c19-d02374507dac",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59992f0-ef95-45de-aa48-2ee9715ad4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab1a73c-3dbe-4213-9014-af23e97109ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12401c83-5d08-47df-9214-0ee6c05fb8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba15dacb-2023-4f5a-af88-0959301ae7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83611ceb-adc5-4411-bdf8-46d2275c18cc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce4212e-0f40-490e-b771-66f8128442f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c291ec5-140f-45f2-8a7a-80b7418716fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb9a3b0-c8dd-422a-86c0-3f4614b60f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f51831-6d2a-49bf-ae9c-1db7056f5e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6353677-678b-4767-b20b-cf8015bede8e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb45ca86-3e01-42a1-90fb-cb9c67e95b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c804178-d056-4f94-a9a5-050015977b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911baa8d-2ea5-4962-b864-0713ebb2b83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9260d586-701d-4a18-84f3-5388e77bd952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf31dcd9-78f4-4e3b-8ace-6c21c5100c03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3e630f-8fc0-4815-aae7-b4d2b170346d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c52721f-dfd5-45c5-a0f4-c267658161e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdbb62c-a25a-47f0-bf4e-ece570833610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588161f8-d3ea-432d-a069-3ea18b05919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c152fa-019d-41c2-ae63-dbee661113c6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257d55f1-5d10-4c6b-9608-a99210c08936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "513a8041-ad7b-496a-8cdc-e1f677cb98c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a972c0e-ea1d-4888-aad7-2798e9f8670b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c523a7-4021-45fa-9f55-01647b646918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082879ac-04b9-4a1b-bae9-fc1abcecb7e5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef14d67-1161-4445-bd1a-9a3cc32c20ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1e21870-bfef-4ee1-919d-4957878a5b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe1c211-a38a-473c-ba80-9b8392934769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3a3d6d-e09b-4d41-a10d-8dd776890850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a430b896-bebb-4a5f-aba4-3e875cc1d063",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1032bb-33b4-4786-9107-479a76e2ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ef2ec7-d1fb-4cb0-aabc-1667cd54026e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0321a533-079d-40b3-af7b-c6b9f00b04c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57817ed-e24a-4639-b425-37a7bdef5c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b298322d-e12a-4a08-b436-3e64406f6568",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef016561-e38a-4778-8404-3dc1159bc2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fa297e-e3c5-40bf-b29f-f8020a3d47b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32e8855-8995-4043-8930-910e549330a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f598f0-9137-4dbb-b1fa-1b1e6c6c93ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7359de27-796f-47b3-92a1-5c16fb61d942",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1710e4-5686-4792-a126-9ac617e4e26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5454b3-ffd9-4d93-816e-839f798b02a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9f846a-4ad2-4311-832c-56710ca2d7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad92d60-a0f8-4553-a50b-3ff1e61b75f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485ab55f-160a-4207-bf03-52393ab4d950",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07659431-3c76-4ffe-bbc6-350254d0e2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2c457f-3bc4-449d-bbf9-cea3994e5719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de4d48a-9eef-4593-a516-9b83b7507bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4306743-10dc-4d9c-b4fb-11acdf4669bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533cfcf9-b369-4682-b641-639478157f63",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388bf36e-4a82-4992-a7b9-94234df05282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28f166a-52b9-484b-afcc-2bdbef00b69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7b7076-1e21-4e88-8a4a-95c542077bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55853b5-d2ca-4af8-bf7e-25e2b225c4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d945f5-779b-4288-a69c-6979c206b94c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588d70f8-286b-4a72-8c28-c642b568c335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdb74e5-4975-4226-8dbb-82cec961625a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6875dc-a275-4d4d-aab1-9f9026b47a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14cfee0-0559-4fb9-b7e0-cad4fbf42087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5e27ab-9c11-4cef-b0ef-3c6ee793e22e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded2648f-61e6-4980-a21f-9aefa88209c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed2b1dd-b2ce-4877-adbb-ed1c9102e5af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c863955d-68bf-4766-ba34-860bf4a54bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd6dd68-6353-44e0-b514-51aae13d9262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918b1101-f097-405a-b865-43941ba79773",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f44a431-5a07-40ba-87f4-dbd917624907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413aa5b9-8c8a-4d17-b3a4-76cb6ebd5415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b42511-e697-4858-9f3c-dbf2494c8927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e8c544-2bb8-4cd5-ba8a-362119da8546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719ffa04-d64a-4070-8faa-51baf5b9a364",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37148c57-7b48-488e-a693-6f5ec041303d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac32089-24d1-4beb-bb65-97a10cd832fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9148f5-7825-4698-aa3c-d8ce2b3687da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dafd4cd-3f31-45d9-a610-b0de1d186db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d79b1b7-6f3b-4cc9-a795-a33024e64494",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e8f962-c8c4-4e4e-8319-734ca8002466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae639fd-257e-4cf2-8a1c-c449436bbbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd10884-9351-4df7-99ad-5091e1884c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9f78fa-33c7-4151-afe2-e30957903100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98c71c-8f65-4591-8e93-c38b6a9baa1f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3e24a1-5956-4ffb-b969-d0394d07f3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee649d8-0df8-41aa-8d5a-043d6e39e6cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6ef39f-cbec-4558-9b3f-1c4f0f5fb84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be2b5b1-225b-4c76-bf83-cd71f5579a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d45947-66ba-4594-8220-c00fc16a36ae",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aae7bb-4711-4126-bbbc-0e52c3d5f0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f9422e-9084-4635-b401-e5626cd5f6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2063396a-97b2-44a3-8cda-ee5a2d185c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80340e14-dd4d-4058-86b4-9328ec00709b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebe504a-ddb3-4d76-96a0-0b80e5666e4a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6faf0a2-5e39-4957-a2ab-d15191bd1d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd2a99e-daab-42f2-bfb2-2057947c08ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b4bfa6-7d20-4b9b-8c67-ecdfe663e640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a358f7ce-c3de-4a3c-a98a-f493c645716a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7f08dc-7a3b-46d3-a1c5-a143de554b2d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ac0379-b984-48a3-8314-433e876db765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7569ee8d-b728-467b-99bb-cf8483328804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8f5d25-6d05-4b50-a5c7-93b799277f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edad63d1-1c6f-463b-910a-5d6c4703a470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8b6055-f238-46e1-96f1-b14a6ba59f18",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8ff512-8a86-4259-b625-59b2735e6225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4617eac9-9c68-4f8c-a68c-8f90d40bd427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62a88d7-5ccd-4276-a9c2-cf96578736f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e6bbae-8e85-4100-b5a9-a7e599a4732d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9719a13f-c6b1-4d4a-867b-578f9486fa3d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7239a84a-d89c-46d1-94e1-73471f98c807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6876562-f913-4d92-8141-de41e44b4c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d322fe0-741f-44b1-b498-152060ed9e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8a7efd-3a29-47e0-990b-6ec0ba2df819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e93cd3-173b-4510-bc90-51eaf2837042",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756f7803-99cf-4d3a-8f3a-6f167044ff35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b81bef9-54cd-4d18-b262-d5a609acd7ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f9fe65-9e97-4494-a4c1-bf3d9ad9461b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f21424-e6f0-4e73-8c55-742e49018a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ef01f6-8dc6-48bd-b8f9-a1942a1b90e5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d01ed1-05f8-4621-ad99-623c01fe0544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd7c08f-89b4-4cf0-8e33-91bcdc1af9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f057fb-0253-41b2-bce6-77f24e3a541f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb17953-0be7-4bae-b655-581390159111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279b4dc5-0aab-4d38-8496-6bb3f0a83318",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29df96c6-bcdf-4cec-94bc-725cf561ec0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0548b31-4a9c-4f61-8e1b-e44b9c1b8013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17118c59-59ab-48b7-b87c-94d64df39f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3830427-4b2b-4020-98f9-20ddb2011eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6697b6-65fe-4003-85ba-1b9ad0c31ffd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86f8c98-5af9-4a69-859a-f009d0ff45b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efbfbe9-f42e-4746-ac12-df62f35dd6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2d75f5-1c5b-4b86-869b-c012cf2f4f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23579593-f1fd-4ca5-80d6-0fbec881e681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658dbb3a-a4e3-4285-b351-efbbf382bc65",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3e9933-2586-4ce2-bcea-b9e92bcfb319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c640dfe-5ed7-4f30-9e0d-64c76018068d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0474d8-b3ce-4893-b53b-b825828f66b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52264344-fc2f-4814-ae61-5d32167f36ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e7013e-479d-4da3-b5cd-8ce135b78b9f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea861baa-25ce-4c59-a841-34ecf7a27bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9164ca64-fa85-48e1-963f-97422975733e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063a2f41-3a1f-448c-b490-8a38d780842f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e674c9-2b6b-41ce-b8cb-73950fa57db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccecb4b-d573-42d2-9b3e-97e1d291e3a3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e3fd48-8912-422e-b4f6-9223678476d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2848e0-0dd6-4975-bdea-f655866b7c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488617aa-52d5-4abd-92e3-1f518234ce9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b43595f-9151-43ed-bf2c-ddba0d63b574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d7608e-d0dd-4cfb-9137-65d47534fd03",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5829c72e-bfc3-49c4-b7bb-105d499aa34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a486e1dc-b25d-4d64-9ce9-7725cdab7015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b14ab30-e8c5-4b58-b3a1-99aea1a19c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3d2d0f-1612-4ba5-95d3-744a45f47065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6cf1f0-8ef3-4cd7-a5f2-491de0c57676",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98585d96-1cc8-4b30-98a3-bfe8d27a3aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6ccdd9-9971-423c-bdfc-e675f9203436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089b9155-68dc-4a07-99ae-543aea2e525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898d5c28-7850-4114-821f-456fffc55d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275c571b-2b50-4c36-9b10-2570404ee294",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538bd975-d6ed-45c9-948b-00c712bea84f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0344cc-afc7-4a0d-a0c2-f371ad907fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3665d3f-0739-4167-ab73-81f187182208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e8dc20-74ec-40eb-9266-f9809c172d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c213a8c6-b44d-4e01-a12b-d46a7a8743d6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94887dd8-5614-42c0-92eb-ce5db268652d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16da5619-04e9-4081-9539-d92db912f62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66e92d9-96a2-411d-b93d-55e2ab0ce9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7450d7-4ac8-46b9-9630-af4d36d53104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee7981f-0778-47f5-a242-e508c4ebc3e9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd9797d-58ba-4eb8-b50b-290db902da85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e6a2b9-4d70-4d60-9ace-c75008c71990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b495e9-ff24-4c4a-895a-e2fe6325f495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15e5aa4-120d-460e-8bc5-9813d1fee83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7bd2d8-01f5-4682-a788-e567dbca25dc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34925c47-2bda-44f6-b9df-ead33a3f6188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8eb8522-658a-4f34-9c32-c77b0deb88a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24adb0bb-e3ae-40a0-bd03-bc44f37a019f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6567478c-e71f-422a-a2a4-576db0659c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f345d6-98f5-4de5-9fb5-f44cdd8712f8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b6cdd3-fae9-4b77-b129-1ec17c05544a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654a2804-86da-457c-b05d-d1d1347030c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29984fbc-8d87-49c4-a67f-0987bb2dfaf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a647c2c0-9f46-4369-bb0b-ae794c13d46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c377db9-3bc0-4a10-a1b4-2e8e3a464293",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4aeac1-b84b-42ef-a0c5-767a498725f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983494e6-6689-409d-bdb1-d8c6bad44d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ab45ba-74ae-4f66-83a9-0df1b820c47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a3b5cd-658c-4bf9-8096-5ed7e29220e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cca2bb-05b8-4a31-b5ec-2a7a74f77b7e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15a3b83-1252-45f2-9ee4-3a9ddac390de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1030866-7517-4781-8535-5b0e5c737193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dceabe-0dbd-4ba5-8435-afc0d3e2569d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd69991-403a-4fc6-82ee-2b59dbcad2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85f7a29-adde-45d2-a060-9dd711970c5d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd68f0f-a5fb-4629-9255-0b8193889e40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3e5b7b-19f3-45d1-852b-f741296a409a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0de9d0b-e17e-4044-9395-f790a383e928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fbe7c8-101d-4533-8b12-97f8e591e988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcdbb69-81c9-4fc2-a957-4cd8aa8c5a3f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d693a53-51ff-460b-b9c1-038c6465c87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2324cc4-a471-4ce5-8c8b-1a9ea99e1d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6239dfef-a047-40fb-9128-03b045a657d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1119d67e-12ca-4fb4-b2b2-f228b8b22d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30db236e-77fc-483c-9a81-5db4eed22c95",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9139b7dd-cc6f-46d5-8200-3a0f7b9979be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392c9512-815a-4760-a8ee-d7004626f609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557a450c-72e9-48e5-a51d-33a12fe11aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43665976-f23e-4c1b-9df9-16c4a9fdf0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7371ae94-ae17-482c-9dfb-987f3700846d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb321a6-6f75-4fd4-835e-9720f5f2eeb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb4788c7-0c2c-42e0-b2c6-8adb7e9171eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9eac2ef-b358-45c6-a595-47e56e548015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392efaa7-962d-4bcf-a74c-6ad0d1fc2ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f53d8a3-a4e0-4566-9bcf-3023abbfcb99",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cc2814-2b16-4390-8a58-4d73fd524255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d3029e4-eaa3-4eb2-a986-de3b7cd50415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b931d3-9de1-4a18-9c97-7be07c44c9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adf8d55-954a-48c8-88bb-0a11df234dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd74df36-aabe-4ee4-afda-241ef296c3ad",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f68e67-1127-4779-8457-d3b185916830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849f1c43-edea-4ac5-bc0f-92e24b454d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c521d-30b5-4d7e-9a9d-31edaa846452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea794e1d-1e10-4632-b7b0-0806686cd76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171c0a0c-b360-4290-b413-5413e578256d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76afc87-4466-4c8a-b237-e17955a84cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf4a525-5aab-4a1f-ab4b-0638be83e36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3823fc0e-e75c-4fa3-b626-d8c6ae18970a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d022aa92-3d01-4c5b-8ff7-555049405686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20017c22-6e28-401b-a6b3-1f2ce538bbfb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9b9a26-d69d-4070-b01f-2c7dbd36b17b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61349ac0-b86a-4c44-b58c-939716d2c03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b0292c-2fe5-4f62-a7ad-8e0b80491ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54267115-8cdc-4e8b-8385-e6e9aa570474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db0e0b6-5e14-4237-ad5b-eba472e196a7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c3642d-7146-48b3-a361-50ece16f2798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210d8493-f039-4ad5-ab25-0805a2e3bb69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d58ce59-a2c9-4ef5-8f80-573ff1d92c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96a08ad-f6d4-4d75-805b-c98287d69d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0085d3cb-47df-4550-93a6-98915e23315e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b753aed-2911-4575-ad49-702b63d0cf37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d603ce-f901-4231-9fec-b71b9267b903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6474b06-0a20-4b7e-bff5-287547d6d800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50f4229-ec09-451b-86a9-4c8150f9daac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96429f4-54cf-4ccd-842c-5ee40477b64c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97da3946-8799-4f30-bb7d-7e23c67f6cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a69654-515c-4f12-b015-79b71ec7532c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e7532e-59c3-4584-b137-3a96f8ef4555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f14cc7-813c-4075-ae1e-50441702da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11031a8-2ade-44b7-bc75-8e891e76ac3e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33deefb-cca7-4a70-93ec-aecb05339ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de8a3529-7428-4c32-b4c5-a8340744f73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e340a44a-3a4f-461e-bfd7-081c4fc676c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75958130-204f-4045-8e67-ac1f57e6eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61265a6b-bb09-48d2-a52a-d422450b7cf9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6771bdef-baeb-4975-b59d-5c6ff05e8904",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a08011-bc25-475b-ad27-77e25c3a1152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3b710c-cef6-4fe7-abbb-abe8879065e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966f42b4-9f16-4191-81c0-1bd2596f6083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd1eca0-35a7-4047-b120-898a38d2e6f1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55873c2-1393-4097-a31a-adaa36de8d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aff72e7-ad09-414f-8513-90aa46709234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8740e138-bc30-476c-a357-f886339ad5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb39ec4e-6854-4b4e-8ae1-3435a553e270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695cd409-6228-4901-8bd4-a4c5ddd951d7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6400133c-db33-42f9-a6d2-8587571e3856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a637b8a-a1a2-461f-8372-fd1a50a9fc7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7774d7a8-2f88-469d-947d-0ed7fdb16301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ee67b5-c0bd-43c5-a74e-3be228093d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e301b4-9097-4f90-a0a1-6ce73cccc3d9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d65c165-f257-4e4b-9fbc-30dd464c41fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad4765c1-7a62-47fa-bb4a-5aeb92eed117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77df642-b171-42d3-8b42-b70cdd264c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa548885-2ca7-4287-a3de-5576a5a06f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4006c08-380f-4eb0-9e4a-79c068506317",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9611b915-249e-4d6f-919f-c1c4076c8499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c83f34b-fee5-4a88-b3bd-27919b364769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b8f828-cee1-4420-a9b9-a2d434b6223a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840ea635-f9e9-4c11-8fe3-6a04fd5c249d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325a9ab7-e204-46b0-a478-c28d6e630b6d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff1b954-a0a4-40ec-8499-0ee688410ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6f43e6-61ce-4b92-a22b-9c2e22551a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30d299e-61e5-4301-b100-cb526d87046d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a89dae-63d2-42cf-93d9-bfc90fe64425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b53c29e-af0c-4743-bb8e-092db71a0e5a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894ebadf-b02d-4c5e-849f-4c61ed6a6d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "debfbffc-9dc3-4c5a-ab7c-2e8938caae30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c24381-b3d9-4daf-9537-b017dfe9dafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05661ea9-ffe9-4529-9901-d271be038c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740420a2-8603-48c3-a712-df44bcefddf8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2de5d2-df59-4cca-9764-df0e02fb3cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89b3c6a2-8d7a-469e-9a20-abde77162f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caea3b20-c000-477c-b4c8-ac36ef535fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9390bc7-3ded-43ff-95bc-4c03a9a34aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5be4640-bd29-4009-9b34-56644989ecc6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4908342b-0f6b-49a0-90dc-fc7c5ea0540d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19b9a57-8bb6-4603-ab08-fb1f4171fe21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512f1660-1e0a-45bc-bf76-a45d0679fc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ededc045-3f29-4439-befc-05e84743ad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ca39d5-0f97-4f53-9ad5-7a952ab95ead",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c33c44-8e02-4cd7-826d-8ee0a1cbbae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fab81b-f167-45d8-823c-28ffe2366253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c715ff7c-02f1-4af1-8d3a-c54236546b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb4cfa6-23ac-4160-a74b-aab87fc514f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45f504a-57f8-4aa7-94c5-65e143a4ca75",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412c0406-e431-464d-9586-a6b154a9c2ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c400d27e-3cb8-4a3e-93eb-ad9e94731519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23191752-a426-478a-8256-21e41c67b27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0639ce16-5c53-40be-a4b2-74c94dcc52b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8540ed-bbed-437c-8ac7-a30812ac4ce4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd34bd0-114d-4604-82d3-e84bd6a88826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1ca14c-6610-4c1a-91aa-56e0bfa75bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b972c7b-06b0-4eb2-a98b-fe6d5aae89cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc30fe8f-1e42-4f66-8e37-cfef7f1c277c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db912ea8-059a-4308-a6a5-daa026ffd164",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169086c1-29be-41b9-ba14-0ee8ffb8a187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771d3cdd-61cd-4eff-8d4d-3680f8be4edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d956f88b-7b07-45c4-8844-288fb9fff34b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ca01d2-e501-4654-8945-54834344d0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dc13e7-def4-42a3-8d64-79d563187365",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c48987-e7af-4f10-bae2-41724941f996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5def65-1250-4cfa-bdd0-7887ca6de0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40467dd-6126-4ea4-8252-5cb7d1efeac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39141e3-dcc2-4032-a7ae-fb0cbf9bfd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26d39d9-7546-46ef-8d97-97d3fa9a8b81",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcd1001-0df7-4982-8f5d-8a62bdcb7233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7545e09-5a31-450b-8f32-b72aab4abefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4fee17-609a-46cc-85cf-fef8023ecf5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0057e6a8-f556-4812-9cd1-1331c74da6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c1b846-2107-445f-a773-de3a80b0c9fa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d458edd2-eb1c-4df3-b9de-7793319768e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5e8de3-fa6c-4674-921b-7cc6e2750e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f14631-232d-4370-9f07-d9dc9cd8322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049ca164-6bd1-4d49-a0fa-6df643f96683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c08116-21b6-4627-84a6-8ac491e064c7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db15aef-cbe1-4efa-8368-a76ff4d01701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b631cf1-86b4-48ee-aac2-0ce45e0a8f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff07ec15-86bd-44e4-b3ee-a615913a3460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8d8b71-fbf0-4b99-a668-3d50b0dcb5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0716e8e2-03b7-4fe2-ab06-ba4ca77e8e38",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefac0d1-1163-4665-9d68-ceff887c13d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dab7b01-8810-492a-a907-92fdc8c9a46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2abca06-db66-478f-920b-5c88904c3c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765b6851-a4fa-4ebb-8fde-1131c98fb58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb61295-6852-440c-85e9-5ef9e0b93f34",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61206fc-4a9f-46af-96cb-27d4011ac8ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d6b07d7-c72e-40eb-b41c-baab981e76e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a95eff-2552-4da8-879d-9d8af0a1dc1e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8b3274-d0c7-487d-a4a5-d114cecd7107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2620a1-3d9f-4123-96a0-d493b286f2f8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bc656a-d1a7-4814-b910-95642735c014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e06a02-f3de-47d8-848e-f8d8d5c16697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d0dbde-4d9b-4dd4-a5c3-037efa0a2550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244e1c2b-d11b-4db6-a934-54e9775b4267"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39c624c8-ca9f-4c05-a78b-8569ad9eca4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a46af81-7b2d-4d77-828b-b46ca5917b57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3db550bf-6ae7-4c52-9c97-ad26d5f42ae4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41d165f8-d475-4ffd-8f7f-d6c88bb2875f"
                    }
                  }
                ]
              },
              {
                "id": "8ffe21bb-303d-472d-973f-2cd71b590c0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d62cab19-2ea0-415e-b3a2-1bab3c48a844",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43eb46f-7a8f-4680-a406-de69b5aad558",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ecd45daa-6ef8-4539-8cdf-9e3bde004089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9275ea64-e846-4acb-8d4c-ed988c66ede7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "214a3444-f17c-4e82-8075-fd8107330d4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6d5fa56-4662-4dad-923b-8f044ecf44c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72af8afa-60a1-402e-a953-4d26f13867fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7975f530-d574-4906-9cda-3b28a5da9c25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47488ad8-cceb-49d3-adee-2dfc633d579a"
                    }
                  }
                ]
              },
              {
                "id": "81218647-9f6d-4801-a70f-6a96632bd020",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "66fdf03c-088a-4c6c-b1a6-60a9b8ff7b5e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a520a7-89e9-45cc-b5cc-14c9377ea9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "326c91f9-6a33-4793-95bf-68070d52ba6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f446fc4-3a27-4f34-9dfa-9dd4d4ba4e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5540a4-2cf8-4ffe-884e-ef38b6ae1b5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b85e7363-d894-4753-b88e-98fc9e0800e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "652d0c55-c3e0-4c7d-9a32-dd960d41e1cd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6c2e416-a382-411f-82a8-65bcd3a1c3fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0327a70f-12a5-4eb0-88d9-01cba51f8379"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aae89de-7f9f-4b0a-bd5d-2f10edbd0a38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98ade856-0145-479b-8f90-d17855b2c5c3"
                    }
                  }
                ]
              },
              {
                "id": "6273b3ef-f120-4592-818a-b4f8a1abecf6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41d442ec-a34f-4122-aec6-03303004f4dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0d2288fb-fd79-4332-825a-d993228318e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd00cb2d-3786-4c1a-88ea-9e679cd72938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a31b927a-6aca-4a1b-b2a6-d8dde71e0cbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad4a6857-62b3-4e36-af54-b0cc030a14c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dcb4a706-8318-46c5-a104-3eb3e59b52ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c234cce7-536e-46db-aac8-dc8078b45db0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b3ac161-480a-42bd-ada7-5421aaf512ec"
            }
          }
        ]
      },
      {
        "id": "8c5a69a7-2218-4603-b148-9ae6f7786589",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d62e9b27-7a5b-4a86-8b60-f62765a85dda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e3d81c8-c4f2-4cf5-915f-f524fab3e55d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07e36f4f-a110-4d04-9d58-d60de853d160",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b68ce1-602b-4a53-814f-17ada807ba69",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bdd1b04a-a6cf-45aa-b9b8-6c7036944127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b155cb-1023-4ecd-8035-ceb8acfc68df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "268bb991-2e78-483c-bd3a-19ccfb195da9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96bbafba-e04f-448d-b0f0-2809a4177e9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f18c9300-fbad-4515-9585-dd58a22e95eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38e3bb08-cffc-4eb9-a768-ac68eeed2700",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77b76e6e-41b3-483b-957e-eab839b634d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc1b0b28-4633-4c30-a50f-f442f36172bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e189a91d-d50e-4c6e-8cc7-81725133e882"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d0ce763-5928-4d01-9fdb-0ed897621526",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f67826dd-f1bf-4960-bee0-277eca9b5e5d"
            }
          }
        ]
      },
      {
        "id": "729ad299-746f-4e51-bb22-efbae957aff3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a2f04f28-f8dd-4f72-a389-ea1e83fbaa60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c33ee7b-3edb-4195-9895-4894ad47a01d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "117636ad-be09-47e3-b0b1-dbe6c6b07cea",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85face13-5b91-4924-b2cb-a49c35e5c34d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69b15219-ffb9-4f5b-9e57-d52e9f9ac320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9be682-a2cb-4c96-a335-2ea411f01406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84a1827a-bd77-4786-a9b3-e220e3fb60da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2fd4942-b1b4-4c41-a49a-31209c697134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "198fb58d-6589-4fd1-85a2-ecd08bd7f774"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21a5d7bf-50b1-4700-9001-e1c6d7dd0373",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9157f691-201e-43e6-9d8c-910f92da5099"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e8b394e-c7e2-4af9-8877-569ddf795397",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5cb35808-d8d8-49d1-b04c-d4bb583b064d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e947245b-595c-4914-b085-c5f5f93ee9fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48e70c6c-2d3c-4984-b860-8d6d6c83e44d"
            }
          }
        ]
      },
      {
        "id": "b032abf6-5996-4925-932d-4b566242f3d1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "de0b421a-7286-499a-9c8d-28c714378bde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "124c753d-25d1-40f2-a617-52c912efe03e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d043e2ba-2961-4950-9d8f-ae4b5ad88cea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a829c7-5b3b-4c26-92ab-979a5d4aa0c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b363e28c-e76f-447c-8fbd-e1583c9f0669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f881e52-92d4-467c-8c3b-d596021652e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21fe2839-0498-4fb3-925d-680be500150e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0e06984-a588-45fb-a99b-451175a50fb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe9f2ec4-604a-46d4-9cc8-b4d6a4852bc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d20c616-2fdf-49f4-ad99-1d5452ff5796",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99cd929e-948a-4a60-9e49-17a174181a53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2fed703-6933-46c2-af9e-4851f5056980",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9565e466-88af-41a7-8e9b-3e14e43f39c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "983d6791-91aa-4fef-8b28-c7183752306a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bf44d14-e782-4690-940f-b8bc80919d58"
            }
          }
        ]
      },
      {
        "id": "9dcfc79c-e9a4-47e3-9460-4ee027c11e23",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f33850d6-1cc1-42ad-8a11-a8bfef8bc1a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67959508-f480-42e6-b1ba-ec2f6b3721e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "99349c8a-ab81-461c-b68e-fe192cb7e61e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "263f80c0-4610-4f88-bff6-42e4555acb45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec65ce91-9537-4495-9039-feab2536d78f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.23859649122807,
      "responseMin": 6,
      "responseMax": 267,
      "responseSd": 24.305062315709357,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706834072869,
      "completed": 1706834090531
    },
    "executions": [
      {
        "id": "d50c0638-d98d-4fff-83a7-84dab06a2a03",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "47d7c4e2-1cb5-43c4-9540-b6b7c87cadc9",
          "httpRequestId": "5367e3b5-9135-4e0f-8237-623330eed6e6"
        },
        "item": {
          "id": "d50c0638-d98d-4fff-83a7-84dab06a2a03",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "06c69348-09f7-45f0-86f5-3cb049607b41",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "0bda8a83-44e7-4c98-a8e3-b3614ec4cf49",
        "cursor": {
          "ref": "a1f11c62-bf20-4887-9461-7b00e0437b12",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8078cbdf-b1fb-44f5-b807-cde85bc3cf2b"
        },
        "item": {
          "id": "0bda8a83-44e7-4c98-a8e3-b3614ec4cf49",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f3dad92a-83a5-4924-9a92-60ace625ecdb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "6a92ec32-2739-4608-ad1b-7a1e764d4ff2",
        "cursor": {
          "ref": "555bfe9f-e080-4ec1-9029-b9e38d94adce",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9b406b9c-6411-4b40-9d9e-b6e16c45fee8"
        },
        "item": {
          "id": "6a92ec32-2739-4608-ad1b-7a1e764d4ff2",
          "name": "did_json"
        },
        "response": {
          "id": "09d1259d-6e23-4360-8be1-8b9d7773cda8",
          "status": "OK",
          "code": 200,
          "responseTime": 267,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445281bd-51a7-47b1-b84c-68bc2e77cab0",
        "cursor": {
          "ref": "7f0ee119-a26b-4a3e-a585-aa9eba21f2d4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5af8cb25-0d1c-4a34-814f-86b0a5fd1a80"
        },
        "item": {
          "id": "445281bd-51a7-47b1-b84c-68bc2e77cab0",
          "name": "did:invalid"
        },
        "response": {
          "id": "f996c94e-3fc5-4a20-9cd9-e4e09ffdc797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445281bd-51a7-47b1-b84c-68bc2e77cab0",
        "cursor": {
          "ref": "7f0ee119-a26b-4a3e-a585-aa9eba21f2d4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5af8cb25-0d1c-4a34-814f-86b0a5fd1a80"
        },
        "item": {
          "id": "445281bd-51a7-47b1-b84c-68bc2e77cab0",
          "name": "did:invalid"
        },
        "response": {
          "id": "f996c94e-3fc5-4a20-9cd9-e4e09ffdc797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f90186-cd22-4ec7-8848-0324f93e1499",
        "cursor": {
          "ref": "b2a57099-6fe9-4af2-a3b5-b485a675dbbc",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3b8b0e43-cf86-4f00-a31b-97ec00176b5a"
        },
        "item": {
          "id": "28f90186-cd22-4ec7-8848-0324f93e1499",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f03f820-0f29-4ee1-a6ff-56faec954870",
          "status": "Not Found",
          "code": 404,
          "responseTime": 94,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891dc3c6-4d21-4166-b119-648d3f555cd2",
        "cursor": {
          "ref": "d8ab436a-40f7-4bc9-b8bc-a1f594965ce6",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4c48553b-1cb5-4af6-9899-341807c0e4e8"
        },
        "item": {
          "id": "891dc3c6-4d21-4166-b119-648d3f555cd2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4b1e9d25-b558-4cb6-8812-51fa2895c8a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f541f98-2768-4ec0-82d1-9b41a803381f",
        "cursor": {
          "ref": "f5ad6315-d97c-4cc8-9d3f-025cd85a182b",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2185c53f-bb37-4408-bbb3-9f5db86d2492"
        },
        "item": {
          "id": "1f541f98-2768-4ec0-82d1-9b41a803381f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fe3b7336-199b-4e64-ada5-60852be67d60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cb5df4-20f3-4a0d-a519-002337842d20",
        "cursor": {
          "ref": "157e71a9-8930-4a04-bd3a-34bdc785e8f3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bd90282d-87b8-4596-8c00-87352a980a8c"
        },
        "item": {
          "id": "18cb5df4-20f3-4a0d-a519-002337842d20",
          "name": "identifiers"
        },
        "response": {
          "id": "d581e10b-1fea-49ba-bef8-7ca1461fff79",
          "status": "OK",
          "code": 200,
          "responseTime": 175,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0881e216-3e05-4e65-b894-4d33c602f0ea",
        "cursor": {
          "ref": "0ffa0161-6a87-4526-b5d0-33cb96d5b20c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "889632f3-c21f-4bc6-9f62-73c678db5be1"
        },
        "item": {
          "id": "0881e216-3e05-4e65-b894-4d33c602f0ea",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e1020918-eb4d-409e-a0b3-98b3b2c8e16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20af1a33-cd72-44e8-98bb-abc830dc8aa4",
        "cursor": {
          "ref": "1f8fe7c3-d44b-41b8-a2d0-6e402a14371e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "660a74fa-b2be-4470-96f1-7c5bb950dd5d"
        },
        "item": {
          "id": "20af1a33-cd72-44e8-98bb-abc830dc8aa4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9981fc55-6aa7-42b2-ac25-3164130db7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3377f36-ee85-426c-a093-5c1e9406fc61",
        "cursor": {
          "ref": "f9a42360-7ddf-456d-a496-e200445e4eda",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7cf4ec2e-608c-474d-8597-d35df023e350"
        },
        "item": {
          "id": "d3377f36-ee85-426c-a093-5c1e9406fc61",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "127155fa-00c2-40fd-8294-6d6cbd2d60b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd66f8b-49fb-4d8e-8b01-8415667a9e7e",
        "cursor": {
          "ref": "8807229a-72e2-4009-929c-d414164d9b01",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "93062335-2d94-4716-88f0-f54cbdf5608f"
        },
        "item": {
          "id": "cdd66f8b-49fb-4d8e-8b01-8415667a9e7e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "32de3087-3300-4880-8d4e-b75fec7bf8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e01f6e-c959-44f9-bf9b-2ca779dd8686",
        "cursor": {
          "ref": "73b02254-97d2-4062-a8ef-17fec26840b3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b7c089f0-3560-448e-a4bb-365686c781e4"
        },
        "item": {
          "id": "19e01f6e-c959-44f9-bf9b-2ca779dd8686",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ae97fe91-90e2-4002-83b3-008658587afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc787c34-f4a7-470f-be6f-81101e6936c0",
        "cursor": {
          "ref": "748f10ec-d9f1-4fff-9206-d0911856611a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0ab153f8-1ded-463c-8d1c-e11dc4a2d6f1"
        },
        "item": {
          "id": "fc787c34-f4a7-470f-be6f-81101e6936c0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ee10bbe4-5ffa-4a9d-b839-26c42acbde63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd88125-29a1-450c-8971-2df0a0fb3204",
        "cursor": {
          "ref": "01d92143-313a-4817-a38f-1b02711fcf8b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fade1e01-a2cc-43ec-849a-cc47ade4f7b2"
        },
        "item": {
          "id": "fdd88125-29a1-450c-8971-2df0a0fb3204",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2891bae3-81f6-4d06-ae78-6afb5aef8c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4c0cd5-ea6f-4f46-8d3d-39c3e4278201",
        "cursor": {
          "ref": "a949bf9d-173f-4b8f-946c-352c533a729b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "af36e04a-c8b1-48ce-a896-2b30b9cec6f9"
        },
        "item": {
          "id": "ff4c0cd5-ea6f-4f46-8d3d-39c3e4278201",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b93602c7-98ef-4226-bbc2-2b6a9d886008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbf8c22-9eae-4fb9-a018-e562aa661bb6",
        "cursor": {
          "ref": "fe79b040-ca95-4710-931a-bbdccc911aed",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "de568c64-ee95-408e-9311-6df452663fa4"
        },
        "item": {
          "id": "bdbf8c22-9eae-4fb9-a018-e562aa661bb6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "73a726c5-5458-47da-b607-71e94c7b05f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3913887c-c8cb-4786-9c06-646a1d81175d",
        "cursor": {
          "ref": "8b9af106-a1f6-4707-8953-668add29a5c2",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c5e8b71c-2aaa-4d42-bbc5-996a8388f93c"
        },
        "item": {
          "id": "3913887c-c8cb-4786-9c06-646a1d81175d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7b0e3f2f-22b9-490e-9de2-57102dac74ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45857f57-a01c-48f9-8803-e8fba39d16e4",
        "cursor": {
          "ref": "798f6968-7e5c-49dd-ac2e-5528ffaed8ff",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e7de8cbd-3d15-407e-a812-2d59d386b891"
        },
        "item": {
          "id": "45857f57-a01c-48f9-8803-e8fba39d16e4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "578303aa-d9c0-47fe-bbe3-fd8a5ca0d14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fb290e-631d-41db-8764-65581f38c449",
        "cursor": {
          "ref": "f47ef54f-a662-435d-92c4-fd294b927541",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d6ed0cd1-8e03-4c40-a0e2-429ee0ccf931"
        },
        "item": {
          "id": "20fb290e-631d-41db-8764-65581f38c449",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6c500e5d-fe38-4e9f-87ea-6b6481439fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf312f7-f652-488a-ac2e-3456aac28dbf",
        "cursor": {
          "ref": "b459a1b8-f826-44d7-a437-28d6bc6beff2",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c8940866-09e0-4ae8-ba00-816d223155bf"
        },
        "item": {
          "id": "6cf312f7-f652-488a-ac2e-3456aac28dbf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1c405d28-a3b8-4683-b0f1-9a488bafb680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0afdce-09f0-49a5-b08c-14d0af1e383c",
        "cursor": {
          "ref": "fc8d1a23-909d-4aa7-a53c-c6aab4ea2383",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9bfcde2b-a029-43f6-adc0-dfbaec383ca4"
        },
        "item": {
          "id": "8c0afdce-09f0-49a5-b08c-14d0af1e383c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "87e37ee0-2177-4d7c-805e-652010ce601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b870efbb-e587-4686-85f3-7b84d4af180a",
        "cursor": {
          "ref": "85d6dfd2-def1-45a3-b084-b7510b2619bf",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dfbf21c1-7d2d-4fed-ac8f-fec4f842035e"
        },
        "item": {
          "id": "b870efbb-e587-4686-85f3-7b84d4af180a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bc7e43b8-4c81-4e24-80de-b8a68c76a9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fc0c0f-b856-42e7-9731-d062e60bb20f",
        "cursor": {
          "ref": "16ae1afe-7b16-4f33-9c3f-ae7757671010",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "93a879b4-64b7-4e06-8108-57f82e3a2fa0"
        },
        "item": {
          "id": "b0fc0c0f-b856-42e7-9731-d062e60bb20f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "47965f28-6e94-4bb7-91f1-18a161c12ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c31167f-499e-4737-a36c-54dbf41d36fa",
        "cursor": {
          "ref": "587d4e96-fb13-4b9a-af4a-8ac6dadc783e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3296632b-a04d-4957-b69c-a38afade0cbf"
        },
        "item": {
          "id": "5c31167f-499e-4737-a36c-54dbf41d36fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1aad62da-0df9-46f4-bcca-44e88fbf1a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7280a279-9160-40f2-8e33-ccc6fcfec754",
        "cursor": {
          "ref": "52c368c5-4fbf-45b9-93a9-2c41e7e9c4ef",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9dfce9c6-2f07-4d6a-9575-e5bfaf4962cd"
        },
        "item": {
          "id": "7280a279-9160-40f2-8e33-ccc6fcfec754",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5d05a5b3-17f0-497e-97a6-ccf74c048d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05116a70-4aa2-4969-9e71-945f232715dc",
        "cursor": {
          "ref": "ea169e58-fc67-45ba-8b52-1b2c4f5ce78f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ecb69acd-47c5-405c-a6fe-64ac9740edd8"
        },
        "item": {
          "id": "05116a70-4aa2-4969-9e71-945f232715dc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bb280828-dfe7-46fa-b77e-7392919cd382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f607016c-6724-4532-b7ee-3cf0993ba77e",
        "cursor": {
          "ref": "5b0f43a1-2a5c-41b0-8036-ebc3723083a9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fed534b0-31b4-40c6-943b-7d56eca8b960"
        },
        "item": {
          "id": "f607016c-6724-4532-b7ee-3cf0993ba77e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7322775f-d6db-4b25-b8a2-f7b7ce1f4dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcc65f8-67de-47b7-b1a8-143d28099a96",
        "cursor": {
          "ref": "88b9ca9d-3d13-4d49-bdde-4677bdfe640a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "002fde82-73c4-46ea-bf91-75b9bfe956a9"
        },
        "item": {
          "id": "1dcc65f8-67de-47b7-b1a8-143d28099a96",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "54f7e527-ab05-4841-b9b2-5f6726d73cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0af0010-9f61-4d07-be5a-9f66f929d18d",
        "cursor": {
          "ref": "ed2bd930-f8b0-4f30-895f-70fdfa8c044f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ab21def-dd0a-49ac-83b4-ebc27845c0a3"
        },
        "item": {
          "id": "f0af0010-9f61-4d07-be5a-9f66f929d18d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "697367f8-3a69-4086-8686-5330bf722c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f616a6-93a5-480b-8a7a-3a601f2cefdb",
        "cursor": {
          "ref": "ccf483f8-65f1-44bd-a0d7-4daeaf36c183",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8b0eafa2-e461-4a21-8174-388e700af485"
        },
        "item": {
          "id": "f2f616a6-93a5-480b-8a7a-3a601f2cefdb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e5a455c7-119a-4c31-8c5d-9ac8a507708d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a184b637-44c6-402b-8644-fc4e36a387aa",
        "cursor": {
          "ref": "8f350ef8-1188-4f6c-9e26-db8432068e13",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7bdf4ede-9da7-4501-96d0-45cb6926b5d0"
        },
        "item": {
          "id": "a184b637-44c6-402b-8644-fc4e36a387aa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4789da96-a886-425e-a98d-281a0ebbaa35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7810ad-5bd9-4853-9110-794eadeffa81",
        "cursor": {
          "ref": "fb90dda3-4d05-4d72-864b-ba30d70b1cf2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7b171c05-7c1f-44b4-a7c4-9ddfcb852c8e"
        },
        "item": {
          "id": "ce7810ad-5bd9-4853-9110-794eadeffa81",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5ee36998-7f24-4157-9874-ff9569531d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148699c9-2df4-4fb6-8476-4dc33c41675c",
        "cursor": {
          "ref": "a9e96f9a-659b-4e9a-9dd3-50bb870a0a29",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "edf6eb93-6349-4293-9523-2253453ae597"
        },
        "item": {
          "id": "148699c9-2df4-4fb6-8476-4dc33c41675c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "22a5f5fc-bc59-46f6-ac69-cdb5c44af8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce3df3f-1363-4e0d-9b3d-5a898b1dd233",
        "cursor": {
          "ref": "8e837547-876e-47d0-98a8-162983fa9ab6",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "76037fe6-5007-43ee-8a0d-5e1921847b3b"
        },
        "item": {
          "id": "5ce3df3f-1363-4e0d-9b3d-5a898b1dd233",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "45e4d179-773e-4697-819e-e34be0147b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eda191-6600-4db6-9858-5cd4068f6247",
        "cursor": {
          "ref": "f65f413c-a412-4be1-a75c-df82715f9c38",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3fba9ab7-6abb-4cc3-b77c-935c252c42ee"
        },
        "item": {
          "id": "79eda191-6600-4db6-9858-5cd4068f6247",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8ca9a0ee-9576-4f88-b75a-63ad72b9e2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c314d49-7c10-43d7-a07e-1e93dd6d3015",
        "cursor": {
          "ref": "1ec0f493-6373-45b8-8923-2c53f04bccde",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9001bda7-5772-4474-bf33-3f51231e0478"
        },
        "item": {
          "id": "7c314d49-7c10-43d7-a07e-1e93dd6d3015",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a5b69dce-a7af-4c2a-a7a7-11a34cb184da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832c1d4e-94d3-4d9d-8f2c-0e2c5831b001",
        "cursor": {
          "ref": "4f8a18a6-6f77-46e1-9a7f-3df71ea31388",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "689638f3-2843-4e8f-b4a1-39dd33af1c80"
        },
        "item": {
          "id": "832c1d4e-94d3-4d9d-8f2c-0e2c5831b001",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "78267e83-0128-4b84-b421-96d457ea8934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016b43bf-1d3a-4228-9064-582be6347230",
        "cursor": {
          "ref": "2aeb1222-41f1-477b-91aa-ff5c6112b7e6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c07be5bf-ec9c-43a5-8f4e-0980863f4cca"
        },
        "item": {
          "id": "016b43bf-1d3a-4228-9064-582be6347230",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1f74ce47-c758-4e7b-b32d-84a43fe0e65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306bad7f-8cf5-4dea-a172-9d6b77790bce",
        "cursor": {
          "ref": "83a359cb-bdce-4bcc-8a9a-cfb8974707df",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3be4578b-116e-44f2-9f6a-e662959f5106"
        },
        "item": {
          "id": "306bad7f-8cf5-4dea-a172-9d6b77790bce",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "23aacaf6-23e8-471a-a519-272ae458e816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45e9195-0652-42d4-b807-340a6a33778d",
        "cursor": {
          "ref": "8a6148da-344d-487c-8272-b4dcdbdee36f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5039a109-0ee6-4fd9-9f56-4a93e1df6667"
        },
        "item": {
          "id": "f45e9195-0652-42d4-b807-340a6a33778d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cfe86837-2cfe-45a2-b2bd-a4407b3e6873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b393a8-44c6-4739-bca6-ceafa3298dd1",
        "cursor": {
          "ref": "dd02b816-159f-465f-82b5-6d205540dcee",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "de03c48c-1970-4e4e-ab60-cc1a95b27501"
        },
        "item": {
          "id": "21b393a8-44c6-4739-bca6-ceafa3298dd1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a65b71f-eb7c-4406-9da2-468e261983c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f466f8be-99d8-4296-9535-0846ae438c7f",
        "cursor": {
          "ref": "58ef0f15-c149-4049-ac0f-a68cb4e52cca",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7f699c1e-0607-41d7-93d5-6a9eb7e01b6f"
        },
        "item": {
          "id": "f466f8be-99d8-4296-9535-0846ae438c7f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "04c6c0e4-33f9-4cf2-b250-98d8b533396e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24966826-a54f-4966-ac2a-cdd4b7bf83fe",
        "cursor": {
          "ref": "bfe97145-e985-4116-9980-b3e1df2631a2",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "35d380e1-5cb4-409d-9ce2-a124ea9ac326"
        },
        "item": {
          "id": "24966826-a54f-4966-ac2a-cdd4b7bf83fe",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c41b535-48c7-4484-a21e-0c6bb153f23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af62137-365e-42a0-8ede-3880c7e908af",
        "cursor": {
          "ref": "cc89990c-8cf2-43f9-a214-48c6be0eedf0",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dc9a1243-9cb6-4a05-ace1-49ceaee71b9d"
        },
        "item": {
          "id": "5af62137-365e-42a0-8ede-3880c7e908af",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b71e303-b65c-42f2-980e-7dda44cd2d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2796908-fdb2-4da2-9dc9-0f3b22f1f1d9",
        "cursor": {
          "ref": "dc77fb7b-b26b-491d-bc77-604e8bc1c12c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bf5733d1-08a0-4bf0-a4bb-09d5faddab3d"
        },
        "item": {
          "id": "f2796908-fdb2-4da2-9dc9-0f3b22f1f1d9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1d25759-55f7-458b-8ed7-412b95be776e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f308ab7d-a658-4e3c-8618-b29903bbe22a",
        "cursor": {
          "ref": "daddeb63-c154-4650-a63d-09ef237650f6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "915dfa7d-c553-4f61-86f6-5cb143689475"
        },
        "item": {
          "id": "f308ab7d-a658-4e3c-8618-b29903bbe22a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "81751d51-09fe-433d-8f06-2aa6ad0d1b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1464e09-4f1b-4c6d-af54-0638cb63c65b",
        "cursor": {
          "ref": "0b9408d3-b2c3-4535-8b30-6d78f9dab8a9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "92d290ae-bb5b-41fc-a695-4d552645237b"
        },
        "item": {
          "id": "e1464e09-4f1b-4c6d-af54-0638cb63c65b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "be3c11cd-32f9-4929-be24-37897ae2893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af87753-e188-4674-92e9-923080108c56",
        "cursor": {
          "ref": "d607b95d-933b-4301-a9d0-56cdd33dd4db",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b219d39e-6122-4f6b-9e38-2596e712c363"
        },
        "item": {
          "id": "3af87753-e188-4674-92e9-923080108c56",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "80feb75c-efb5-4572-bc8f-04ef68b198b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307f07c4-0d84-4fab-a5cf-4676777c99dc",
        "cursor": {
          "ref": "876de26f-15e5-4961-83ca-d10af1ef60fa",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9bcb8217-525c-41b1-807e-52232b395a94"
        },
        "item": {
          "id": "307f07c4-0d84-4fab-a5cf-4676777c99dc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4f08a459-eae1-4241-9363-c1ca40568a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79e3497-3ced-4bcc-b7fd-40fd5783121a",
        "cursor": {
          "ref": "d687aa30-93d5-4894-afa2-8183ea0d6825",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cdd44bed-53a4-4ada-a53d-63bfae182a07"
        },
        "item": {
          "id": "b79e3497-3ced-4bcc-b7fd-40fd5783121a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ff7998a9-1d52-44a6-8fa4-51112eee05f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae029f1-6ece-4c8d-9870-f0323f890595",
        "cursor": {
          "ref": "decca0bc-a250-4b2e-953c-eb9684de4998",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "004e80b2-54df-4d92-a5bd-8079f79a2bd8"
        },
        "item": {
          "id": "7ae029f1-6ece-4c8d-9870-f0323f890595",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "73f5db34-da53-4c31-b673-6ea9889f87e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c495a4f-2cf4-40c7-9b41-70e5ea681307",
        "cursor": {
          "ref": "ecefe3db-cc4a-4a95-b6f8-f7522160ab9f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "60457b73-af8c-40b4-95b0-c5d1cfcb883b"
        },
        "item": {
          "id": "3c495a4f-2cf4-40c7-9b41-70e5ea681307",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bd9f40d9-0e13-447f-bc3c-810b1a5fea3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3c8494-cb0d-41d1-bb20-f00c089cc4a1",
        "cursor": {
          "ref": "4af5a571-005e-43d3-a4f4-caf6ffd82a73",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d76aa780-0519-4ec8-ad3b-fdf6e7317c6b"
        },
        "item": {
          "id": "6e3c8494-cb0d-41d1-bb20-f00c089cc4a1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "37ca6975-e189-41bc-9fc6-f2088fa7f739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40f738c-ca38-4b14-b2b2-7c6a2eeb7be1",
        "cursor": {
          "ref": "d6a334f5-b191-45e9-b039-c7f9372b4493",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3e5323ac-a607-4d71-b545-099b50d55253"
        },
        "item": {
          "id": "c40f738c-ca38-4b14-b2b2-7c6a2eeb7be1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84bc7c2e-0d26-462a-93af-41a3bcba8200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38212bc-8959-417a-8009-7b9635da64ce",
        "cursor": {
          "ref": "cee9f136-ea36-403b-8b9f-cc5f4b41eeb1",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "823f9c26-42ad-4395-8e61-b9d10413232d"
        },
        "item": {
          "id": "a38212bc-8959-417a-8009-7b9635da64ce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e5bc5e93-b385-4051-9f12-02b325e7596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0010efc1-95a4-4973-913b-a74d8ddc361f",
        "cursor": {
          "ref": "395a0397-e688-405c-9628-b8c182596ef3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9fbee05-031d-4daa-83dd-3abf028dd280"
        },
        "item": {
          "id": "0010efc1-95a4-4973-913b-a74d8ddc361f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed654f7b-20a1-4f14-a5d1-f72c996d714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8012f9-0163-4927-b203-7cb5f80eff8f",
        "cursor": {
          "ref": "feb2f8b8-9ab4-4539-a2db-e1c256bd6a45",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9c8f2f7d-cda0-465b-abb7-35a95ad6c930"
        },
        "item": {
          "id": "7e8012f9-0163-4927-b203-7cb5f80eff8f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "973899c0-d526-4d5e-b134-415181fe412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb956a70-1279-49cb-ad27-5629db58e168",
        "cursor": {
          "ref": "cf8cc2d2-83fe-41ba-96ad-c30c8d1d4cad",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1fc4edfc-9887-456d-bfc3-4f585c47e310"
        },
        "item": {
          "id": "fb956a70-1279-49cb-ad27-5629db58e168",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ee836e7e-3a7d-4bc4-a184-c9fe08926fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eb8d27-896e-4071-afe1-ff58c0bf8d6a",
        "cursor": {
          "ref": "e7b9d696-bdb0-4f00-9e96-9180e897a6a6",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "24efcb18-f918-447f-98d1-459d90d51930"
        },
        "item": {
          "id": "57eb8d27-896e-4071-afe1-ff58c0bf8d6a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "315caa89-9bfa-4636-8f79-ce168d2626d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5993fc5-8ee0-4780-b96a-763ee02fa05f",
        "cursor": {
          "ref": "6957f4de-14fe-4e2e-a7aa-4bb5bfe1f524",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e806d0b5-75b7-4f20-9001-7637b0e648ef"
        },
        "item": {
          "id": "f5993fc5-8ee0-4780-b96a-763ee02fa05f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e505654-3726-42eb-ab22-387321ae58ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b58fd1-bbc7-4a0e-92b3-bec86b3151eb",
        "cursor": {
          "ref": "31bbf799-6141-4766-b8a1-be454f01f13e",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f743b00f-1629-4954-a588-ec19d58440f0"
        },
        "item": {
          "id": "32b58fd1-bbc7-4a0e-92b3-bec86b3151eb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9fa8df1c-0870-460d-848a-4acb35803569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc3f8b1-f66c-49aa-a55d-a7a13a5f72a1",
        "cursor": {
          "ref": "2eb43fb3-1c07-44e6-81fc-d3c4c51b4eba",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "404e71b7-b1f5-4612-a629-e83bc13309f2"
        },
        "item": {
          "id": "2bc3f8b1-f66c-49aa-a55d-a7a13a5f72a1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "062a9218-4825-47d6-81d8-77b927752fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376a7914-0eff-4745-a6ad-1a24ea365552",
        "cursor": {
          "ref": "accbde54-1a6c-4222-8d64-2bfc206de161",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a8cc97a6-05d9-400c-8ce9-c5a4778a0f42"
        },
        "item": {
          "id": "376a7914-0eff-4745-a6ad-1a24ea365552",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bda5f300-13cb-4d93-85e0-d852967fa10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df072047-68de-43b1-bd86-20e35964a2fd",
        "cursor": {
          "ref": "6f3c8195-d78b-4766-8a14-8df9a81d3143",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d308d58b-04cd-49dd-b6b5-a429eac42fa7"
        },
        "item": {
          "id": "df072047-68de-43b1-bd86-20e35964a2fd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "24ea6c90-49c0-47e9-a960-6973c3b58893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db4d69-3583-4812-83ec-c62a1c1d0b09",
        "cursor": {
          "ref": "af2c2cfa-2f4a-4880-b754-00baa9c8d347",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4dbc5adf-b715-40ba-857b-5ba65b9589dd"
        },
        "item": {
          "id": "c1db4d69-3583-4812-83ec-c62a1c1d0b09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "89c0fd90-8d5f-4ec1-8276-fba6f5294971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21ead55-19af-4bf1-959f-65a78b043669",
        "cursor": {
          "ref": "86ce674d-d6f5-467a-b94b-fcd88f089908",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5afe77fe-3c3b-41a7-bbbe-d64aeb88958b"
        },
        "item": {
          "id": "c21ead55-19af-4bf1-959f-65a78b043669",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "991a0757-c88c-465a-a1fd-11efbc42445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68952786-94d4-4ef6-8eb3-18da1ee9fc7c",
        "cursor": {
          "ref": "5e573485-ae38-4b70-b665-55387ba1056c",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1264b4a5-6853-44a2-8bf5-e6843818aa84"
        },
        "item": {
          "id": "68952786-94d4-4ef6-8eb3-18da1ee9fc7c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9d58350b-41da-49c8-a520-e10b3be54b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f61d42b-74ac-43f9-a903-82de14de2ab2",
        "cursor": {
          "ref": "64a4d6bc-15fe-4e01-ad42-5513311e4540",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b5143bb3-a194-4327-9bd0-f05601f3a9ad"
        },
        "item": {
          "id": "1f61d42b-74ac-43f9-a903-82de14de2ab2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "323352b3-85f5-4d4c-b2cc-a4ca9ec0d221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df3b4d3-9710-416e-bb7e-1ba0e198d573",
        "cursor": {
          "ref": "4358a73a-d31c-49ee-ab06-0786baa74e1c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3aef9468-bff6-4dd9-b061-8996decb63c4"
        },
        "item": {
          "id": "4df3b4d3-9710-416e-bb7e-1ba0e198d573",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80f6ee5b-811e-4793-a351-5e4919862df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d235a819-b662-4e06-b4a0-7da8f2d9a2ab",
        "cursor": {
          "ref": "28d36e7a-2460-455a-846a-5ddb72b5dc79",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "22afae7a-5b6a-4f3f-8aef-84580c8abaaf"
        },
        "item": {
          "id": "d235a819-b662-4e06-b4a0-7da8f2d9a2ab",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d6e6f939-88e4-4e3b-b4a4-13312991da79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd2611-e828-4f1a-a71b-1b4578fc458c",
        "cursor": {
          "ref": "28ac50bf-dc9d-42b0-bd2d-50b8aa77fe89",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ef21cb3a-8a82-409b-8e3b-e4fc31830f60"
        },
        "item": {
          "id": "1edd2611-e828-4f1a-a71b-1b4578fc458c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "474cbcc3-4e0d-4b1c-8db9-30f7620d5bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7da2e1-0bf8-404a-8bd2-ae314b1c73f7",
        "cursor": {
          "ref": "684e643e-c323-423a-8127-efaac00c7220",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d1160a31-4044-49aa-ae2f-eb53f0684f48"
        },
        "item": {
          "id": "5b7da2e1-0bf8-404a-8bd2-ae314b1c73f7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "29b7d037-c6d4-446a-9699-f110f0bd663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78757764-be78-4fd6-b1b2-6a45a26ad3a4",
        "cursor": {
          "ref": "62f6a613-c4c7-46b0-b19d-1dcf14bf173e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "022320aa-e33e-4ddc-8e1d-c8f8c33f960b"
        },
        "item": {
          "id": "78757764-be78-4fd6-b1b2-6a45a26ad3a4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "276e01d2-7483-4da0-bef3-54f0ab3f8b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf60db7-bd14-40c4-abe4-f6efae7d1771",
        "cursor": {
          "ref": "0e46c3be-5683-48e4-a3ca-1d459980eaba",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5560add2-fdc3-47e8-89b8-d8666da7cd37"
        },
        "item": {
          "id": "faf60db7-bd14-40c4-abe4-f6efae7d1771",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "67b65582-c7d8-4acf-b6e2-083898274f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7d416f-43eb-4b8e-85cc-fe3166b6464f",
        "cursor": {
          "ref": "6014c890-4ab0-47c0-8bdb-0e1bc4776d47",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "16c7db7a-3b51-4e97-ab76-fabf99c66082"
        },
        "item": {
          "id": "2b7d416f-43eb-4b8e-85cc-fe3166b6464f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "230a0f52-847a-4bce-93dd-b58ba9f0ebad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5cd67f-ead6-40cd-877e-b7920daefe09",
        "cursor": {
          "ref": "a33abd68-a2b7-4f76-a337-76db4ad6b921",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "522a5672-f5da-44fa-b85a-c4374e882839"
        },
        "item": {
          "id": "aa5cd67f-ead6-40cd-877e-b7920daefe09",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a5ebd5e4-e4ae-495b-96d0-7557c2f2e3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6974b0ef-7a11-470a-9f82-f4b3b5b26486",
        "cursor": {
          "ref": "3ea3532a-7277-4e1e-a663-49dfa16144f9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0aae6a75-1484-4544-855c-7a25ab151fbc"
        },
        "item": {
          "id": "6974b0ef-7a11-470a-9f82-f4b3b5b26486",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fbbdf252-ab73-4979-a7db-48b63caa90bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d88834-aa59-47ac-ba48-64b5064ba860",
        "cursor": {
          "ref": "b89ef200-d47e-42b4-a8ef-2eb0471af045",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "523e6526-7977-434e-a011-f587db883ab7"
        },
        "item": {
          "id": "e3d88834-aa59-47ac-ba48-64b5064ba860",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "15a23719-03b9-4b46-8a1b-baf2617dc4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49a0136-eabe-492c-b255-67a24916f19e",
        "cursor": {
          "ref": "43b05fb3-faf1-42f3-be27-2c8d46c4158f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1cdf5904-c29b-424b-8f52-2b2bda094fb8"
        },
        "item": {
          "id": "a49a0136-eabe-492c-b255-67a24916f19e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "975a9c50-4845-4043-b82c-09aacb771ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb66cdf-5b3d-4779-a77c-789287ca2845",
        "cursor": {
          "ref": "f2e5f577-b6ac-4e36-b478-0c8de20fa35f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "755c80eb-d2e1-4768-bf46-4056b800864a"
        },
        "item": {
          "id": "dfb66cdf-5b3d-4779-a77c-789287ca2845",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c4b2edad-533f-4137-ad62-f2f982d32a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f9c3ee-9474-4ae1-a18a-0aca47ba1b05",
        "cursor": {
          "ref": "a3af6c09-cd8e-4cc9-beae-8d2a5506cdc2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f416c664-19cb-469e-bf39-86e740c736ff"
        },
        "item": {
          "id": "78f9c3ee-9474-4ae1-a18a-0aca47ba1b05",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ec08d8c3-0d56-4fdb-9f02-7687068b1141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d35dd06-b8e0-41df-86b4-4505caf83564",
        "cursor": {
          "ref": "792131d1-7a33-4b61-bd0c-3727666eca1d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0d55cc7c-0494-43df-896e-ec0a13a1b692"
        },
        "item": {
          "id": "6d35dd06-b8e0-41df-86b4-4505caf83564",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e26f904f-ca38-47f9-81a9-2957119e146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67962322-db48-424e-a3f8-fb229e2fae6c",
        "cursor": {
          "ref": "8d3dc82c-8fd1-48a8-9eba-b3a5dd6e6a6a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d9747daa-ac92-4f08-b80d-95317c0e38c9"
        },
        "item": {
          "id": "67962322-db48-424e-a3f8-fb229e2fae6c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f017f3a-5237-485a-a36f-408067bb4759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c1a0fe-5064-4ae4-86dc-eeea3fb6671e",
        "cursor": {
          "ref": "4076ec35-701d-440d-b416-ecb0e7697443",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c327322b-044e-4bd8-a4f4-923b73d17ac7"
        },
        "item": {
          "id": "d4c1a0fe-5064-4ae4-86dc-eeea3fb6671e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c4a5c577-cb72-4bd1-a3fd-b1e0eb638e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b627dd46-dd01-49b6-a574-d585d4b9fbee",
        "cursor": {
          "ref": "8ead8eb5-ae3d-4036-8278-69c717f66604",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "89d9b320-1016-4ba4-8bc9-367e81e7adc4"
        },
        "item": {
          "id": "b627dd46-dd01-49b6-a574-d585d4b9fbee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bbd784f9-7365-42c9-a290-7476ff7772e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5d35de-4ef6-42ba-8576-32799779f029",
        "cursor": {
          "ref": "dcba6d63-a981-42ab-ab05-7a1332a3fc8e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "90e02dc9-10f4-4d89-9cc0-d666d0317b97"
        },
        "item": {
          "id": "ef5d35de-4ef6-42ba-8576-32799779f029",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c6012485-0c49-446e-a31c-9ffdf7cef6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bc7966-08b0-41bd-9bbb-0aa7dc9fbed9",
        "cursor": {
          "ref": "4374c8f9-6e55-4763-a0f8-1986d9338ffb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f6691bee-6bfd-4e81-8530-4b9742ac574b"
        },
        "item": {
          "id": "c2bc7966-08b0-41bd-9bbb-0aa7dc9fbed9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "07b4855c-e4dc-4432-b871-f4293c272063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a879c74-c1c5-4f52-9ffc-0260417b0655",
        "cursor": {
          "ref": "43b058da-7c08-49df-973f-5514fe4e1e74",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4a09769b-aeed-4eee-8898-3357a7d26af0"
        },
        "item": {
          "id": "7a879c74-c1c5-4f52-9ffc-0260417b0655",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7b1e6e36-0e65-4e4a-915d-0ee7f69bbbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cf55b9-21fd-402e-85ed-5748f5e8b04d",
        "cursor": {
          "ref": "a7075a2e-783a-4bfb-bfe1-4565d8ee0618",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "39b00321-bd98-4cd5-b73f-0e6ff414a031"
        },
        "item": {
          "id": "35cf55b9-21fd-402e-85ed-5748f5e8b04d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9a97e30a-abc7-40a4-ab2a-607d3064f011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3739c0d-795a-4a8f-bc82-99dfb4fa8f31",
        "cursor": {
          "ref": "a74418b2-232d-46a4-99b2-83e6ba84ff66",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e5982161-9a41-4e62-b89a-ad3768d4230d"
        },
        "item": {
          "id": "a3739c0d-795a-4a8f-bc82-99dfb4fa8f31",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "198c50c6-0260-4f17-9a98-633c224b1d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d66a172-1269-4f4d-ac07-1532ce55927f",
        "cursor": {
          "ref": "6013fbba-4ad3-484c-940e-746024cf35eb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4866f8b9-f3a2-414e-81f3-d8afe12f4ab5"
        },
        "item": {
          "id": "7d66a172-1269-4f4d-ac07-1532ce55927f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7865b0e5-9ef8-4f09-b467-75a040570f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80af5b5d-db1e-43b6-a9fe-10e5ac8705e3",
        "cursor": {
          "ref": "cc44e8a0-7ec5-4c0e-bd41-a94efc4e8eb3",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "634fc4a2-ec11-4eec-b63f-a7f569601319"
        },
        "item": {
          "id": "80af5b5d-db1e-43b6-a9fe-10e5ac8705e3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "95e2904d-3a5a-487d-b14c-9247c2e0653e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc5ec40-ad93-4b36-865b-30829e215f60",
        "cursor": {
          "ref": "7abb5e3f-2220-49bd-8ad9-696c12b7ec4f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6fa94dea-1d22-4c1b-8b1c-d2543c3b22cb"
        },
        "item": {
          "id": "bbc5ec40-ad93-4b36-865b-30829e215f60",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dada8f4e-6925-4aeb-a5a4-69e415c1193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cd4d7d-c1c7-4df2-b7d2-31e07be5fa1f",
        "cursor": {
          "ref": "4b13f896-d846-438e-90a3-f1eee72af2d2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "882f1946-b5a9-4d48-9a93-4335cad74fba"
        },
        "item": {
          "id": "26cd4d7d-c1c7-4df2-b7d2-31e07be5fa1f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2b7b34b9-e80c-4eb2-bfb2-422087cabc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac55d15c-fbd5-4732-9df5-bfdaa237e9b5",
        "cursor": {
          "ref": "8d5988e7-12b6-4ca1-8bce-a28a3bdffd87",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e2b3eb93-6e02-4aa4-bd04-cf9bd496e9ba"
        },
        "item": {
          "id": "ac55d15c-fbd5-4732-9df5-bfdaa237e9b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "249c7e57-82d4-461a-a3c1-0592d2f4c424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671b168e-e361-46b1-9fe2-2605f5ecc16c",
        "cursor": {
          "ref": "b6cd69a6-68b6-44b0-a09e-09b83fdbefd9",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0ea65b9e-42c3-4c29-b479-651a4baf4b6b"
        },
        "item": {
          "id": "671b168e-e361-46b1-9fe2-2605f5ecc16c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "10ded6b6-9b1a-4c11-81a9-02474eb55a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4aac17f-ca1b-4935-8558-f0c9dec7322d",
        "cursor": {
          "ref": "9f1d5e23-9a4e-43a4-8eff-8def702ab6ce",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c286fa0a-160e-44b5-8186-77cc4df944d0"
        },
        "item": {
          "id": "a4aac17f-ca1b-4935-8558-f0c9dec7322d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fe3497d1-9d71-4cd2-b01c-1e1dfa01c238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205247cb-4a6c-471a-abc0-43522dfa3bdc",
        "cursor": {
          "ref": "e5f5ed88-6093-461c-b6f9-299539b2b88d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4ee65a43-505f-4e4d-9590-de798829ffaf"
        },
        "item": {
          "id": "205247cb-4a6c-471a-abc0-43522dfa3bdc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b814efc2-6e06-4a8a-878a-d777bc67cd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4431ac-79ab-4582-8a95-b86b32977dbe",
        "cursor": {
          "ref": "c61296ef-0102-4783-a9b6-761e31f3134d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8e1bc5f0-64f9-45b2-bef1-b3c98350c1d8"
        },
        "item": {
          "id": "5b4431ac-79ab-4582-8a95-b86b32977dbe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "df586178-6989-4e34-83de-2a9d0f0ce012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4792433a-a546-4982-a86c-0ca5e8ca53f3",
        "cursor": {
          "ref": "7f73bc70-32e9-4dcd-b81e-4ccacdcf419c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e48a055d-ec37-43bc-8b45-b62d5a759ccf"
        },
        "item": {
          "id": "4792433a-a546-4982-a86c-0ca5e8ca53f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f729f968-7b6e-4e7e-b289-1a250c110243",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb34a066-f9f5-4289-afdb-edbdb06b3050",
        "cursor": {
          "ref": "48c3b356-f1b6-44b1-bc3e-47c8b5bd435c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "38db44f1-63cd-4fde-be73-816f0a075914"
        },
        "item": {
          "id": "cb34a066-f9f5-4289-afdb-edbdb06b3050",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "95b64028-aa15-4876-9ab1-a1007f47271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5c3e1647-dce9-4751-9b42-37dcb07a5ffa",
        "cursor": {
          "ref": "69ecd089-f917-46d9-a4f7-1f236a14df26",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a7c469b7-1a12-42f7-b611-a78414fe0873"
        },
        "item": {
          "id": "5c3e1647-dce9-4751-9b42-37dcb07a5ffa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "92bb2872-020d-4676-b759-98236db07702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e5c064e8-ab4b-41ca-a127-3b7233d1114b",
        "cursor": {
          "ref": "5b58f574-9dee-4cb0-9165-228fa770da56",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "41378a1a-5994-4787-8cef-dc6b6b6b3557"
        },
        "item": {
          "id": "e5c064e8-ab4b-41ca-a127-3b7233d1114b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b334f8c1-2dca-467c-bfd6-8b63c4e27156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "529ff958-f939-4d40-b280-511c3a606294",
        "cursor": {
          "ref": "c1399104-ba8d-49e2-8d8d-07734278553b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "28e28bab-74ee-407d-bf0a-872e886ecc47"
        },
        "item": {
          "id": "529ff958-f939-4d40-b280-511c3a606294",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bf13eead-b513-4efe-a07b-e2200f02e0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a2ae9e21-e0f6-41ff-9f95-55d209a78d91",
        "cursor": {
          "ref": "676e1545-b165-4cba-ac3b-3deb3af124ef",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "92914412-7466-44f1-aa89-f6c16c92735e"
        },
        "item": {
          "id": "a2ae9e21-e0f6-41ff-9f95-55d209a78d91",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8fa59ef3-630d-4b47-9386-fcaec0c96595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "703435f8-df32-4927-badb-8e296807b3c1",
        "cursor": {
          "ref": "2dc7ff8a-f071-48d1-819c-6da29fec258c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9d61c938-d40c-44de-b8f0-db73caeb203a"
        },
        "item": {
          "id": "703435f8-df32-4927-badb-8e296807b3c1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "90b859b8-a599-4723-967a-48047c67a27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "19452ec0-fb63-4467-b4e7-fe66d4d914d0",
        "cursor": {
          "ref": "5878aeb2-965f-493d-b868-5c1652aa4ddf",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7e66488a-a29b-4d0f-9187-448be2b0f737"
        },
        "item": {
          "id": "19452ec0-fb63-4467-b4e7-fe66d4d914d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "66463d28-e113-4eca-8a56-068dcae4f97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "134d8398-9242-498f-97dc-81566ac54a51",
        "cursor": {
          "ref": "eaf21ebe-23d0-411b-b3d1-7e2d11af5654",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0397697e-d997-429a-bd7c-7abd72221503"
        },
        "item": {
          "id": "134d8398-9242-498f-97dc-81566ac54a51",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "91f781a2-70af-4247-bba1-ddf5ae7587cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b702ba-6079-4dac-9194-9c5c52aade69",
        "cursor": {
          "ref": "de7f9105-a5e3-4c62-9179-b0d4f43c2d26",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80264d95-c282-4921-994f-7b9cbc08c8e7"
        },
        "item": {
          "id": "33b702ba-6079-4dac-9194-9c5c52aade69",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "feff552b-1879-41c8-a5f1-d73cefaae5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db970cd7-eae1-436c-8125-51950625b0fc",
        "cursor": {
          "ref": "5fcb56b1-6603-43bc-a86b-bca8effd7630",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "91da4c85-4757-4def-8c35-9973a26c07ae"
        },
        "item": {
          "id": "db970cd7-eae1-436c-8125-51950625b0fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "57dec2fb-29bb-4a20-99bd-7951cbd65cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bee550-fa05-4e70-9c5a-37c597ce53b3",
        "cursor": {
          "ref": "8171cc91-fd76-4e3e-add2-d372825ca3ac",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4db29f40-19b8-409c-ac4d-bb25c39d21f1"
        },
        "item": {
          "id": "23bee550-fa05-4e70-9c5a-37c597ce53b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0836f020-38fd-4f86-b370-9898a7159ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d16ce0f-b10d-4df1-a91c-b1e78b151fd8",
        "cursor": {
          "ref": "a21a5e6c-0b9a-4f05-97bd-b0da2c88c633",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "53222a10-63fd-4771-8d20-69ff35fd78dc"
        },
        "item": {
          "id": "4d16ce0f-b10d-4df1-a91c-b1e78b151fd8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f93706cc-cc51-4a1b-9ea6-686a488d04f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55be5cc-6d1f-4198-bf6c-931ed2861aa3",
        "cursor": {
          "ref": "de28bc2a-740c-4e53-8ac5-dd31cb65372d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "de8c92a8-56f1-4433-a1cf-8b542b3f5e60"
        },
        "item": {
          "id": "a55be5cc-6d1f-4198-bf6c-931ed2861aa3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b6bab53a-7bcb-47ee-ba3b-a065694224c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094fdd3c-30a3-4372-a1c9-0dc8e70da92a",
        "cursor": {
          "ref": "feb8c353-62e9-4fe8-87d6-913b3ff0c695",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f3860ef0-0fa2-4bef-8222-fd90c6a542e6"
        },
        "item": {
          "id": "094fdd3c-30a3-4372-a1c9-0dc8e70da92a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "002f354d-555d-43f9-ac5d-ae983fd736e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6352f49c-288f-4e14-a691-21a47fecbad2",
        "cursor": {
          "ref": "63cba282-c7bb-4f40-bbb3-33d8a487fcf7",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "83adb860-6d81-4a71-9687-1f0140d2077b"
        },
        "item": {
          "id": "6352f49c-288f-4e14-a691-21a47fecbad2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a24a65ca-7ebb-46fe-91d7-ad0808160983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e427bbe-01fa-4e41-908e-99a79061c96b",
        "cursor": {
          "ref": "fb4811cb-80fe-4178-81ca-f56b9d4aabae",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d5cfb7fe-ee2a-4102-b84f-b4180aa318f0"
        },
        "item": {
          "id": "4e427bbe-01fa-4e41-908e-99a79061c96b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aca1f1a0-f057-4568-a3f2-4e8b3d7dcca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4454fed9-67cc-41eb-a71e-7fe5ed75bdd2",
        "cursor": {
          "ref": "51e15129-b2c7-48f1-a9f6-96eb99ad6217",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "021541e6-4ce7-4001-b51b-76295fd707fc"
        },
        "item": {
          "id": "4454fed9-67cc-41eb-a71e-7fe5ed75bdd2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a94f2646-f302-4768-8242-c6000509e5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93857e8-b6c0-47e8-bdec-b9522e9f6ce6",
        "cursor": {
          "ref": "82e6f681-8e67-48e3-89a6-f88b5fe2bdd0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ff6cd586-ad00-4ec4-879d-6e4f23d0c5e1"
        },
        "item": {
          "id": "b93857e8-b6c0-47e8-bdec-b9522e9f6ce6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8331f4be-8280-4e62-b9d2-de0b8d5e4a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d896d5af-c083-4440-a997-02f24dd48e57",
        "cursor": {
          "ref": "ba84dd26-da08-42bd-a477-59dafea2e52c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7108d7ea-2bb6-4f27-9e03-b63f28bfe443"
        },
        "item": {
          "id": "d896d5af-c083-4440-a997-02f24dd48e57",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f861753d-0b00-4232-a440-34242ed386d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4df6b6f-4348-4785-8cf9-727355405b74",
        "cursor": {
          "ref": "37dc84c1-5e58-4649-af28-bff53a4b9c57",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b20ba517-fad5-4af7-9420-170d95c23a70"
        },
        "item": {
          "id": "e4df6b6f-4348-4785-8cf9-727355405b74",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "54a4757d-dd7a-42ba-b280-47a3704cb77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0c7faa-7e1a-4e46-87f4-73f206ca8df0",
        "cursor": {
          "ref": "b5935e35-52e1-4026-9ff6-da7d4b02e0d6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ca2b5bc3-012c-469e-9132-71d0a3f08479"
        },
        "item": {
          "id": "4f0c7faa-7e1a-4e46-87f4-73f206ca8df0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3990528a-10e5-4c75-a72d-cf82c9bd4f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b11e8b2-2ba9-464b-bdf9-48d5cb71f51d",
        "cursor": {
          "ref": "b7c3581b-fe96-4823-91ee-3a8a7a33e5be",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d7c9253a-6fc8-45cc-a326-625085fead97"
        },
        "item": {
          "id": "8b11e8b2-2ba9-464b-bdf9-48d5cb71f51d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "891b2a27-03a8-4a76-ad6b-fc12b1f82dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d33b69-5d51-488c-99b4-a1bed4c2157d",
        "cursor": {
          "ref": "e092b291-8d09-4d5a-aed2-5f722f592f16",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d96f7028-7eaf-43d5-b7b1-b9755097d7cb"
        },
        "item": {
          "id": "97d33b69-5d51-488c-99b4-a1bed4c2157d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6012c03-3319-44b7-a1b3-4c0feb7099ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0056afc-14a4-4c5f-8584-2917a7840d7a",
        "cursor": {
          "ref": "f98ebd23-2007-40df-ac69-8069e05a9a9e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1047bef5-ed38-4abb-8823-2cdfae212a3e"
        },
        "item": {
          "id": "b0056afc-14a4-4c5f-8584-2917a7840d7a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d693cfd-77ac-43ef-aefb-b0dede0cda8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f6fdd-7415-49cc-b90a-0d26dd248096",
        "cursor": {
          "ref": "efeded03-c8a8-4a3a-a1d3-3a2fc20a7151",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c6313250-5195-405f-8d24-0f0ce559ff11"
        },
        "item": {
          "id": "e36f6fdd-7415-49cc-b90a-0d26dd248096",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5bec7fc1-8f13-4a6c-8bc4-d765771c9af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04248b26-b137-4a5c-b84b-fd0b8c88297b",
        "cursor": {
          "ref": "5aa37706-437f-421f-8cfb-0dc75accee02",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d8e844fa-8590-4161-a718-d3e719dd439d"
        },
        "item": {
          "id": "04248b26-b137-4a5c-b84b-fd0b8c88297b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2d7d3f0e-41fa-4c1c-bfe6-c661505a0646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c30972-5dc7-48d0-973e-f49490f57c6e",
        "cursor": {
          "ref": "833a4282-4f79-43ff-8eb8-e03085800eea",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "36f410b8-6925-41db-b387-1acbed7c4803"
        },
        "item": {
          "id": "23c30972-5dc7-48d0-973e-f49490f57c6e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e952d2f5-bcbf-4d3a-8a77-5cb284700241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b88cb5e-8784-41d0-8b6b-1f1dadbf439f",
        "cursor": {
          "ref": "bea2829e-33e7-4b7c-b7c2-2722fead9d41",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "318210ee-59fd-4fde-8a41-e22d213c0dd4"
        },
        "item": {
          "id": "3b88cb5e-8784-41d0-8b6b-1f1dadbf439f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eaaf5a00-2e4c-4489-a1b0-87ebf3b8d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdb7c85-3c29-4bcf-9c29-e47799a4bf65",
        "cursor": {
          "ref": "7862df03-6313-4f12-b797-a8e711771945",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b3907021-f48f-4619-b616-548460be29f1"
        },
        "item": {
          "id": "2bdb7c85-3c29-4bcf-9c29-e47799a4bf65",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3378f735-c2bf-4919-bc11-d9a6f5e4cac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0fe763-b0da-4385-800f-e59b35e1a2eb",
        "cursor": {
          "ref": "81b68b17-5289-4c38-a411-7d94832c83a1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4aa25d74-5aa2-4ab5-aa43-a69d62813df2"
        },
        "item": {
          "id": "6e0fe763-b0da-4385-800f-e59b35e1a2eb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bde206ae-e67a-46fc-93ea-d3cea0a14531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0c50d8-2001-4f84-a497-f0e94a520822",
        "cursor": {
          "ref": "ab77a1d8-644b-4a4f-af61-6612438a001a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "75b6c552-fb34-468f-9cdd-ed6d1e67432c"
        },
        "item": {
          "id": "3a0c50d8-2001-4f84-a497-f0e94a520822",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e2c30b86-61dd-465c-ab60-8426cca59301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c195eac7-e3bf-40b4-ba99-c6e67b519b4f",
        "cursor": {
          "ref": "114aa094-2fee-4eea-a1d4-9563104cc7ed",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "17d504a0-76b4-492e-84e3-b066fd9734c2"
        },
        "item": {
          "id": "c195eac7-e3bf-40b4-ba99-c6e67b519b4f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "da641df9-9d41-4d8f-9c82-77c2ec72d766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69c5c96-aac6-4cbe-8b0f-481e0d3fc162",
        "cursor": {
          "ref": "e74e0266-79f8-4d17-ab58-17af277f1878",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "36f3bc5b-db01-40cc-89ba-5065169464e4"
        },
        "item": {
          "id": "b69c5c96-aac6-4cbe-8b0f-481e0d3fc162",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "579ee886-ee02-40bc-a4cf-891beb37b224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73b7e7d-0fbb-4ce1-82d0-6e2b901b559e",
        "cursor": {
          "ref": "fd3dd469-f98d-432f-b4f4-6bdbcae22a76",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8f7aa74c-af74-4548-ab92-51a4854a66a6"
        },
        "item": {
          "id": "c73b7e7d-0fbb-4ce1-82d0-6e2b901b559e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d388c4cb-45dc-4df8-82a0-7801586349d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b44fa02-5ba9-4e41-9b55-89a78fb3c356",
        "cursor": {
          "ref": "d325e23a-e828-4524-a0cb-efa55455c133",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0aa4005b-8b8f-423f-b3c4-8f3e84436055"
        },
        "item": {
          "id": "2b44fa02-5ba9-4e41-9b55-89a78fb3c356",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "865f0a25-96a3-4823-b553-88a74a6d5dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5723adcb-1582-4304-88ff-7958167a93e2",
        "cursor": {
          "ref": "817d2137-592a-46e8-9662-d7c27d596309",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c8fcb827-38b0-4143-acd2-10e973c0dc18"
        },
        "item": {
          "id": "5723adcb-1582-4304-88ff-7958167a93e2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee36509a-be01-45dc-9379-de0800e3ba05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11544092-c08a-40f3-b552-a75d5f2a2c55",
        "cursor": {
          "ref": "f0d3b01d-5d39-439c-952c-2781d5100bee",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f5957f7-94b0-4dd0-ae13-4f93b2d1bd4a"
        },
        "item": {
          "id": "11544092-c08a-40f3-b552-a75d5f2a2c55",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf95d21b-881d-4c3b-bf8f-a0e63ee80fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dd65ab-53e1-4937-b728-4c0a115bae73",
        "cursor": {
          "ref": "37dbd575-4aff-48a2-86b7-3a8bf3ff664d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "217f513c-b6ca-417e-8f55-777d68205541"
        },
        "item": {
          "id": "92dd65ab-53e1-4937-b728-4c0a115bae73",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ff36293-dd5c-4131-aaf3-e05f51292ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2172e78e-8391-4516-89cc-1255a7e77b52",
        "cursor": {
          "ref": "8a058e2b-01ef-4ce6-bb42-f32eea3f1d23",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "83f77dda-6d85-413e-8c33-d9b83c70b4d0"
        },
        "item": {
          "id": "2172e78e-8391-4516-89cc-1255a7e77b52",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "adcfe4f0-8848-417c-8a8f-153c69c105b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4436c56e-10c9-4ecd-a8f8-87e4cf03ad39",
        "cursor": {
          "ref": "788ffcef-d8de-46df-8781-0cea8823a677",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5af5a981-2cb8-4967-9e8b-1d8e3945bcd5"
        },
        "item": {
          "id": "4436c56e-10c9-4ecd-a8f8-87e4cf03ad39",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6422961c-5cbf-4f15-a110-a0620170f2ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe23e4d6-5cdf-418c-aedc-a042e60455ac",
        "cursor": {
          "ref": "748c833d-7794-4d60-bd12-8911193cb730",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3720d05c-30ad-48a2-8e05-846e9eee61b8"
        },
        "item": {
          "id": "fe23e4d6-5cdf-418c-aedc-a042e60455ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af692e99-990c-487d-bdf1-3a2c0782f336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47a749b-50b8-4243-9c4e-43a3197e7fb0",
        "cursor": {
          "ref": "b57bcde9-d84b-4645-aa50-3dceb9b736bb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6def590c-a12a-4c26-ac87-1d10f665c1e6"
        },
        "item": {
          "id": "c47a749b-50b8-4243-9c4e-43a3197e7fb0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0cd83afc-5ccf-4f11-82b1-20d6051c5a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12fccad-9fe0-4ace-bc3d-e6c01dadaec8",
        "cursor": {
          "ref": "a87e8614-9b58-4450-aa55-3ea584fc7513",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6dd7011f-f947-4d55-9126-b1d38e6e7a79"
        },
        "item": {
          "id": "f12fccad-9fe0-4ace-bc3d-e6c01dadaec8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fa1f8015-73a2-487c-9b0c-0a52f9370cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d643995-62ed-4669-bbb5-d03b9c219a66",
        "cursor": {
          "ref": "85c22a0d-789f-4073-a037-c14c606ba3f9",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "20d76747-e05d-4352-9852-6bbfe92c40dc"
        },
        "item": {
          "id": "7d643995-62ed-4669-bbb5-d03b9c219a66",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70387a91-284b-4363-98a9-aa572a74e197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bdea2c-3c9c-46af-b94a-47854a4549da",
        "cursor": {
          "ref": "b74ede14-f2de-41e3-a6c9-ec4aa2b0dd60",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cadc6858-0eac-4cf7-8509-d1a71205e4a6"
        },
        "item": {
          "id": "27bdea2c-3c9c-46af-b94a-47854a4549da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "64befbec-8152-4bab-bc1b-73b92cf37c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738db907-f618-43ba-9c03-3ee91484e5f7",
        "cursor": {
          "ref": "424012dd-77fb-469c-93b3-1270ae807fbd",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9be30e3d-5b8b-4915-af62-5a107d56689f"
        },
        "item": {
          "id": "738db907-f618-43ba-9c03-3ee91484e5f7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "64b1247a-3fba-41d3-b4dd-00bbb16e9444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c76382-1128-4b5f-b3cd-2e992e5c7683",
        "cursor": {
          "ref": "5fc4d406-54f4-4588-8655-66da3a711186",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8d008844-6390-4520-ba52-0e171cdee0ed"
        },
        "item": {
          "id": "24c76382-1128-4b5f-b3cd-2e992e5c7683",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eb6cfebc-fc81-42d8-8c95-d6c2c2471eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b70cbc-7aa2-45ed-9ab7-c34031356dd2",
        "cursor": {
          "ref": "fd78d4a7-23c2-49da-bc31-8294fd8092ee",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "43cf4cda-a1be-42ac-9242-b86dc7ade24c"
        },
        "item": {
          "id": "16b70cbc-7aa2-45ed-9ab7-c34031356dd2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c0d21a6c-48fc-4665-a051-2968db12c6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a99bd3f-aadc-4374-b11f-1c42c154d009",
        "cursor": {
          "ref": "f5acd03c-2293-4aa5-907b-fa0bdf11bf3c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bf0c38a3-3610-49ff-be5f-2cbcd85cba4d"
        },
        "item": {
          "id": "1a99bd3f-aadc-4374-b11f-1c42c154d009",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "737ee881-5b27-4395-a84e-796b27204e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4317cc-ec24-479e-b4b1-ab3e87ebce30",
        "cursor": {
          "ref": "c6a7d2e2-3f1d-45e6-9dc5-a3ebe9443bf8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "33746b1a-6028-4f6b-91c3-e6abbeb57a6b"
        },
        "item": {
          "id": "3e4317cc-ec24-479e-b4b1-ab3e87ebce30",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bb674b98-b398-492d-bba1-f934d8394c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ecf409-6b08-45bd-970b-6e06881c3bfc",
        "cursor": {
          "ref": "75275453-7dce-4e1c-b733-78ecc4059293",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a9874f2a-2543-4eb1-8201-3e3b2497682e"
        },
        "item": {
          "id": "28ecf409-6b08-45bd-970b-6e06881c3bfc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97e5f3dd-a010-4261-a8cd-ee38aafc38ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657d8e3f-695d-4a84-96f7-6c679abab2c4",
        "cursor": {
          "ref": "f9b9e907-cce9-4882-a4cb-32b7096550e8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8bfa98e1-5802-49cf-bbae-382d9b3ce0af"
        },
        "item": {
          "id": "657d8e3f-695d-4a84-96f7-6c679abab2c4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a55c6e79-171f-406b-b8f7-d3f9d1821702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217dae23-d162-4351-9fc7-4f661ff013ce",
        "cursor": {
          "ref": "2c4b8b7a-07a7-4086-8e45-e6f76d531999",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ffeada29-a8ed-4739-9052-0220383e0eda"
        },
        "item": {
          "id": "217dae23-d162-4351-9fc7-4f661ff013ce",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "00a6b442-780f-4ce4-91ab-28a100c01653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a547fc7d-b771-467a-a17d-7ea9e81109af",
        "cursor": {
          "ref": "1a61cc84-ef22-43df-8cdf-9ce598c5038d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3dfc8499-79b7-4bb7-94c2-95a62e3c755c"
        },
        "item": {
          "id": "a547fc7d-b771-467a-a17d-7ea9e81109af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1453dc55-3f42-4649-8bf5-96f360465b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd697eb-983d-41c0-a630-bc49924c3818",
        "cursor": {
          "ref": "0826b5cf-e51e-4005-a427-974de35388bf",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6faf0bac-7bd3-462c-ae66-207436b3a16e"
        },
        "item": {
          "id": "efd697eb-983d-41c0-a630-bc49924c3818",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "673550d1-8b07-42c5-8bae-8800f383817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827030b0-8cb1-4afe-9b41-d11c7a3fc22d",
        "cursor": {
          "ref": "bb5a26d4-c02c-4c5c-a4ed-0e1b2dc0a6ef",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2401fb5e-cbd8-4e02-ba97-8713924ca2da"
        },
        "item": {
          "id": "827030b0-8cb1-4afe-9b41-d11c7a3fc22d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e57488f9-cc7a-4e3c-90b8-9399a869531a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d8edbb-a51f-4fc0-ac73-f66351c38f9d",
        "cursor": {
          "ref": "d024536e-685b-466e-92ee-6c491833e5a2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a1964d2e-cc52-4b10-9383-57d56be5330d"
        },
        "item": {
          "id": "b0d8edbb-a51f-4fc0-ac73-f66351c38f9d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "58472868-7ae0-4188-aa3d-6142dba42858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b2c637-5118-48c7-ac4e-d95df72a4004",
        "cursor": {
          "ref": "9e2df519-c796-40dc-a2b1-8e088a7da54a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "70720f48-738c-4a2d-a6da-43905a6b7e99"
        },
        "item": {
          "id": "60b2c637-5118-48c7-ac4e-d95df72a4004",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6640dd9d-1026-4897-889e-dfbd81685665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4769e073-13e4-49a9-a04f-a18c32b4f34a",
        "cursor": {
          "ref": "36a718fb-e2fe-4d30-b288-4d3cae60daee",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "faf95a14-29ff-43b1-997b-1aa52418c22a"
        },
        "item": {
          "id": "4769e073-13e4-49a9-a04f-a18c32b4f34a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1df0a634-1327-4804-bfea-f7ba9c679126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7ded43-833e-4cee-8295-af4c8a01775e",
        "cursor": {
          "ref": "ae655e45-a0d4-454f-a476-256d012862cd",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "68fcfeac-1881-4e83-8f8e-7e36a32e4edf"
        },
        "item": {
          "id": "3e7ded43-833e-4cee-8295-af4c8a01775e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6e474080-7a85-485e-91c9-1ae59d7070e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cedf6c-da6e-4222-a70d-56f0e301740a",
        "cursor": {
          "ref": "f39aa40d-20e6-4aba-bd03-e08752eb6e88",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c7c8b472-46df-4550-86ac-9de03ff4f21a"
        },
        "item": {
          "id": "38cedf6c-da6e-4222-a70d-56f0e301740a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0f259dcb-19d4-48a6-89c8-0f58e130871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30623a53-e003-4c2e-8c65-f66566d3ca3e",
        "cursor": {
          "ref": "e2aed0b5-e00e-459b-b864-e39e9e2838df",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "780de9ca-1b63-43ad-b6b5-ddd3f2ca5f0e"
        },
        "item": {
          "id": "30623a53-e003-4c2e-8c65-f66566d3ca3e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2166504a-6f05-468b-8213-3d5cc932c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376154a2-7d54-42dc-9c7a-b0757d16c44f",
        "cursor": {
          "ref": "44c15151-6702-412c-83fe-123c14a7c1e5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "693d5955-03e2-45a6-8826-aa695a2d1277"
        },
        "item": {
          "id": "376154a2-7d54-42dc-9c7a-b0757d16c44f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6c222d15-8ce9-49b0-b5dc-9e882fa25d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f652dbbd-609b-49ae-88f8-54d4e9d99ec8",
        "cursor": {
          "ref": "69b214e6-1e65-43b6-b49f-68dbe8b129f4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e73d54b8-3909-4217-a6d3-9d752f2f047e"
        },
        "item": {
          "id": "f652dbbd-609b-49ae-88f8-54d4e9d99ec8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2e267e1e-6dda-40e4-834f-012b6cd1c588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc00ee-51da-4d65-8535-f61a146ddc1d",
        "cursor": {
          "ref": "f68c1249-c05c-4205-b05c-8e2c69910aab",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1c9ab27b-d135-4128-abd5-07239e34528f"
        },
        "item": {
          "id": "69bc00ee-51da-4d65-8535-f61a146ddc1d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e63e7482-2cec-417e-953c-f53beb4bb3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb9d82f-5ea5-4757-aff6-aeedb99f144f",
        "cursor": {
          "ref": "5997d14a-b132-4c3b-89e8-51dbd9cab2cf",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ddf6c377-8ef4-4ae1-99d6-113954da6f01"
        },
        "item": {
          "id": "2bb9d82f-5ea5-4757-aff6-aeedb99f144f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e96e40fc-e5dc-4991-b17c-df8d8dded047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a1ee89-3189-4ab9-a5fe-479af448d109",
        "cursor": {
          "ref": "261e6520-d3f4-49a7-aae5-a69cbcf3331b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b1e6a56e-70d4-4c52-aa5a-d6d80bd22728"
        },
        "item": {
          "id": "a8a1ee89-3189-4ab9-a5fe-479af448d109",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "822e504b-a877-4f28-8d27-b0388c4296c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431e11e0-07ec-46ec-aabe-4a7cc76193d6",
        "cursor": {
          "ref": "8b70077a-234d-4f99-b1d2-346056e6eeb5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a7ca6980-c0f4-4d3e-8612-d268fdc16c2d"
        },
        "item": {
          "id": "431e11e0-07ec-46ec-aabe-4a7cc76193d6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cba7d87e-728a-4944-90b2-1e9832e0274d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e4f7ec-3dff-4b15-8341-bcb8cf6b1646",
        "cursor": {
          "ref": "410912c6-8548-4dd1-8551-5bb7cd844538",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0d6f7ced-66e9-40a5-bb20-a9409670f011"
        },
        "item": {
          "id": "03e4f7ec-3dff-4b15-8341-bcb8cf6b1646",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "da56eb55-2137-4ad8-9124-66e970b52f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ad169a-984a-4980-b079-9b74567817bf",
        "cursor": {
          "ref": "38832931-2700-4caf-95ae-bc47ce6f6c2d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3313bdf7-5875-46ed-9847-3ddc8790f09b"
        },
        "item": {
          "id": "95ad169a-984a-4980-b079-9b74567817bf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dfb8b855-90d8-45be-9c7a-6ea845469d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d3c668-4524-410d-a998-79637f89b38a",
        "cursor": {
          "ref": "d98f8e91-451d-40bb-b45d-34f7971c34b3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1fea1c91-73d2-4b61-8feb-12da2064e068"
        },
        "item": {
          "id": "01d3c668-4524-410d-a998-79637f89b38a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4102fe7-6c00-453a-9b3a-2601bd6a9a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99c9a6f-15f8-4115-8d78-e9a9ecb3fe74",
        "cursor": {
          "ref": "ceab69e2-6a02-44d1-b34d-088b1ae4d2f0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7b72a579-6141-4ce9-a62d-1467d3245dc0"
        },
        "item": {
          "id": "d99c9a6f-15f8-4115-8d78-e9a9ecb3fe74",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "320977fe-4463-4b13-8e52-d10281ad59b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e321e22-98cb-4bcd-ad6e-23175bbadb52",
        "cursor": {
          "ref": "0876aec9-2b04-4fa9-a2c7-57e2e4895cbd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "05b00205-7b38-413c-9efb-671907df9854"
        },
        "item": {
          "id": "2e321e22-98cb-4bcd-ad6e-23175bbadb52",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c138e4a6-da68-4be0-ba8f-3aee2cac8743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3f9617-ffd8-4414-9d24-333840935044",
        "cursor": {
          "ref": "47ee98e1-2bc9-4b74-bc79-37ac0697914c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0ee07916-c2a5-4500-a979-ce7e24352c09"
        },
        "item": {
          "id": "cc3f9617-ffd8-4414-9d24-333840935044",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c72fe947-5b51-4409-ab7c-2a28b27691ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1c95f2-9fcb-441b-84a9-c6cf95e4cc2f",
        "cursor": {
          "ref": "f9c7b588-fbda-4a44-84c4-42862f6ba6ed",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "95f7f953-013f-4b1e-840e-aeba7f9a745e"
        },
        "item": {
          "id": "7d1c95f2-9fcb-441b-84a9-c6cf95e4cc2f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cd452c28-5931-4532-bf1a-d66d0d00a781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895adf2b-2a5f-4445-9cdf-8e9e730908bb",
        "cursor": {
          "ref": "f3851029-3672-4793-b85b-e202b78f396d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "063b685f-c33c-4f9d-a0c6-0b3dc8854273"
        },
        "item": {
          "id": "895adf2b-2a5f-4445-9cdf-8e9e730908bb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2c56705e-5403-4d67-bf16-da8b713b0030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab3d3a6-411b-4df8-a22d-0a98733169be",
        "cursor": {
          "ref": "9ed0da09-b5f6-4dbf-8048-63b6dbbd8005",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "caefe79e-9a79-4175-9c75-36211fb77029"
        },
        "item": {
          "id": "fab3d3a6-411b-4df8-a22d-0a98733169be",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2e5237d7-20d5-4a4a-82c1-8987353ff2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d02ebe-fbf0-4dcf-a77a-1d2ea281d3fc",
        "cursor": {
          "ref": "a38bee1e-dda7-4385-b1c4-7cf758069f46",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cb792088-cf51-40ed-90dd-2615dd335af6"
        },
        "item": {
          "id": "a0d02ebe-fbf0-4dcf-a77a-1d2ea281d3fc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f32d67f9-93a0-4260-a495-1319bb647fe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9803e459-a59c-4845-a323-5460d7efe3ef",
        "cursor": {
          "ref": "090577ff-a47f-47e0-8b2e-cafa421a937f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ed121900-d5df-4345-8bb4-0ab72253b0ba"
        },
        "item": {
          "id": "9803e459-a59c-4845-a323-5460d7efe3ef",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "af8bbcda-955a-4d9d-a1c5-1d8fa83e0e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8a1dfb-239f-4b67-8ada-12e75505a44e",
        "cursor": {
          "ref": "23b7a771-f739-42d3-b04c-9993f8da0100",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "95131683-b11d-43b0-873a-c9f004588388"
        },
        "item": {
          "id": "3b8a1dfb-239f-4b67-8ada-12e75505a44e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "acac9181-038a-4f8b-821d-5904271e3861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa05082-d728-4f43-97ee-9409cfc3c9d5",
        "cursor": {
          "ref": "a082e5ba-9182-48bb-81f8-3a6041d2b974",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "723d9851-51a0-4bfa-8025-bb674673b036"
        },
        "item": {
          "id": "0aa05082-d728-4f43-97ee-9409cfc3c9d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "81681ea8-b3d4-47d3-8f37-a71bd46dafd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615e2bf6-f1fa-4bac-a6e1-dfd9cfa0e764",
        "cursor": {
          "ref": "09cc91a4-28f0-4f64-9422-fe08d90da844",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "002e15e5-1af3-47ae-8e92-f93a81c3119a"
        },
        "item": {
          "id": "615e2bf6-f1fa-4bac-a6e1-dfd9cfa0e764",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "99a19065-8a1b-4020-b98c-660c2b0e2753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d50f060-c730-4f08-b13a-81db73ecf181",
        "cursor": {
          "ref": "4331fcfa-4c75-4712-a300-5f7476b8086f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5a995bb2-125f-47f4-a6d2-61ec722a2c3e"
        },
        "item": {
          "id": "8d50f060-c730-4f08-b13a-81db73ecf181",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a33c6f81-343e-4a3b-bcff-26f7523839b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996b0ce7-5b8c-4280-897d-e6fa9f690911",
        "cursor": {
          "ref": "122a20ac-f303-4bb9-9500-a63863ee5f91",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "efef23c2-f763-4c4b-b3a7-3daaa5acb62e"
        },
        "item": {
          "id": "996b0ce7-5b8c-4280-897d-e6fa9f690911",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "70d18840-f92d-4cf1-bce7-bd210fd6fccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82f71be-b185-4e0c-9340-64a66a0f2c3f",
        "cursor": {
          "ref": "e3cc300b-e29b-408f-bed7-022f4d0371d5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2c161bbe-c953-4f20-b20d-7e9d37037be5"
        },
        "item": {
          "id": "f82f71be-b185-4e0c-9340-64a66a0f2c3f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "67c4a935-eb01-4d11-a828-e8512f885e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03345245-884f-43ee-8fd6-c157029a6e0f",
        "cursor": {
          "ref": "49bb945e-d57f-42b4-a764-5fe9e68b852c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1d383725-c490-497b-b763-a4b76eaa9ce1"
        },
        "item": {
          "id": "03345245-884f-43ee-8fd6-c157029a6e0f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "800986f8-01a2-43b9-9ee7-ad337d88c5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d7f99e-9be9-45df-adec-17ff18cf2d97",
        "cursor": {
          "ref": "5fa09367-f669-4875-a381-77c1f01cca74",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8ce08d19-81f6-490c-8a2e-52e12f324bdd"
        },
        "item": {
          "id": "75d7f99e-9be9-45df-adec-17ff18cf2d97",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5a1d7b6f-a2a2-477c-89f2-56aae6feda65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231f5833-59d0-42ea-99cd-17c953959ff6",
        "cursor": {
          "ref": "76834f6f-ed53-4f6c-9f6f-994436693f9d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "70ac6fb0-592c-443e-ba23-3883aeaa0fb7"
        },
        "item": {
          "id": "231f5833-59d0-42ea-99cd-17c953959ff6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "95c07b31-20b9-4f04-8f8d-75f8b1e1b173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d9287c-5062-4b0d-9d24-2675defa5ca2",
        "cursor": {
          "ref": "10ea82de-558a-4edb-8b96-40fceae84f92",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "126d4d54-4095-4265-accb-8fefc10b45b2"
        },
        "item": {
          "id": "77d9287c-5062-4b0d-9d24-2675defa5ca2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "24a190e8-94e5-4731-890e-af5adfb4da3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e341b89f-fe54-42ef-8d1a-d45551eb60ea",
        "cursor": {
          "ref": "171d29b8-d7b7-4fd9-8026-f71d2dd5b131",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d5e7d08f-08bb-4fc0-b37d-592e117ac816"
        },
        "item": {
          "id": "e341b89f-fe54-42ef-8d1a-d45551eb60ea",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c36edf7a-3d86-448b-ba89-832c2e0b3adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29d3e65-9c0e-44fc-b537-2bc57dbcccee",
        "cursor": {
          "ref": "9c8da00d-10d8-46c9-80f1-fff6718b1fe6",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "24da1b5d-2335-4211-9874-7b29ee3e2c33"
        },
        "item": {
          "id": "b29d3e65-9c0e-44fc-b537-2bc57dbcccee",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7bd64df6-eac7-4ac4-9b4c-c3cffc35fd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88944352-c338-4a0b-8aef-551de1a11110",
        "cursor": {
          "ref": "56eba0e3-0dea-4944-8898-3198c00c1038",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d4601671-4358-47f1-a56b-0e20fc3b861d"
        },
        "item": {
          "id": "88944352-c338-4a0b-8aef-551de1a11110",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8fa087ef-3a39-47c9-9fef-7e811752ad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e529fb53-b29b-4b4a-bbbb-3b7fe8536c64",
        "cursor": {
          "ref": "d19f06c7-f8e0-4a04-9fb6-7a1e9d2c2fe5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c58ff490-bcbd-41c5-95bf-c5f3dd3b44cf"
        },
        "item": {
          "id": "e529fb53-b29b-4b4a-bbbb-3b7fe8536c64",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "909395c7-3825-4a3d-a734-5151de21fdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f473e003-6b3b-4fd7-9bdc-21491f54cd3e",
        "cursor": {
          "ref": "a0238fdd-3a44-484e-a45c-7aca7886e8a3",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e3caf462-47ad-41b1-aae9-6c86bbfe061f"
        },
        "item": {
          "id": "f473e003-6b3b-4fd7-9bdc-21491f54cd3e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "99c02750-d627-44fb-93a5-1a7c382ee7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6d0d57-7d6c-4250-ab19-f8b655c863ab",
        "cursor": {
          "ref": "0ae73ec6-2421-4bae-b1eb-749bd699453d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "283bb10a-6957-4e51-b836-d3c2ddfc2cfa"
        },
        "item": {
          "id": "1a6d0d57-7d6c-4250-ab19-f8b655c863ab",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a2a938b4-8e45-4c13-9aca-f855d8cb8081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c11892-6cd8-41a2-8cc8-875e3d911868",
        "cursor": {
          "ref": "8a572dad-d1bb-4246-a223-591a8fd41ee9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5233a755-2b00-496b-83ff-34902ecddc85"
        },
        "item": {
          "id": "43c11892-6cd8-41a2-8cc8-875e3d911868",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f5d0797e-c885-48e7-a162-c0b630240378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161b3fdd-ba98-4c5b-8947-e6787fa45718",
        "cursor": {
          "ref": "0bcc4ca7-9f2c-466a-af06-0a322bb4ed5c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3e247bfd-c28e-4930-bfc2-c49ed3bc3baa"
        },
        "item": {
          "id": "161b3fdd-ba98-4c5b-8947-e6787fa45718",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3e73a433-b98f-41ac-bc17-d9c8d29260fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c5dea5-381d-4af2-9e3b-bc829c60b90d",
        "cursor": {
          "ref": "31f1bb6d-96c9-49cb-af94-a7e410884de5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2afa8b6b-cea0-476f-a6c2-23edde3a877c"
        },
        "item": {
          "id": "a0c5dea5-381d-4af2-9e3b-bc829c60b90d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d90f3b0f-1c3f-40cc-acff-89c5b1eebb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccbde97-36f7-4bb9-952b-da41250dcfa2",
        "cursor": {
          "ref": "7bea6fdd-e3d2-478e-bb8b-d43205c13bac",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "360ff060-fe8c-47e5-9d7d-c523d4d48dbd"
        },
        "item": {
          "id": "5ccbde97-36f7-4bb9-952b-da41250dcfa2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b2ec8bcc-e0c5-44a3-b8b2-d805fc6d7f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7e905-9976-49f0-9ed7-f5eb4781d3b7",
        "cursor": {
          "ref": "72b678e0-3ece-454e-8e2b-bd03f7635612",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "25b11d9f-4509-4f3c-9ea5-a02576e3fc84"
        },
        "item": {
          "id": "dcf7e905-9976-49f0-9ed7-f5eb4781d3b7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b4aa510a-c5a2-41d3-9790-991c85c2b012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab4a2cc-03a5-466f-aa92-30699f8e3756",
        "cursor": {
          "ref": "02d93cce-37ae-49a0-bbba-7af58a660399",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3a7fd567-d49d-4fcf-a7da-bf7ea2f44eec"
        },
        "item": {
          "id": "cab4a2cc-03a5-466f-aa92-30699f8e3756",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "997f60f6-318f-4529-aa1d-fe22cc054d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7137fe8-cba9-4ef2-996e-e283dea43a34",
        "cursor": {
          "ref": "0628a2a9-7b4d-45c8-97f6-bfbb2b268855",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e48344f5-cb1f-4988-99f4-e3c8613827e1"
        },
        "item": {
          "id": "f7137fe8-cba9-4ef2-996e-e283dea43a34",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9c1a70b4-abee-48ce-8d89-2b5dd3dbe0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7ac6f9-ff02-4351-8169-1bd90df986e1",
        "cursor": {
          "ref": "941596b0-edb8-4b4f-b16d-caf455cfaf83",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6ebd5032-047e-4902-beb3-983f19e08b54"
        },
        "item": {
          "id": "0e7ac6f9-ff02-4351-8169-1bd90df986e1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b9e1079f-4f2b-43c5-93d8-c535c4907ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e80e19-1872-4895-baee-48825b1c34bb",
        "cursor": {
          "ref": "06417b0a-39cd-4c24-8df5-0f9c9382bd45",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9158dc97-fcac-4e16-8497-3119eed6f950"
        },
        "item": {
          "id": "61e80e19-1872-4895-baee-48825b1c34bb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "42b846d3-0635-4550-86f6-6c979e20e49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23321d07-d856-47ee-af5d-1e6f5e18c0db",
        "cursor": {
          "ref": "9d5119ff-42b8-4eef-9d76-d48b3d9ffa12",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "56ac4923-f3a4-4566-bb31-57e5886c0272"
        },
        "item": {
          "id": "23321d07-d856-47ee-af5d-1e6f5e18c0db",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8f388b61-f7ea-4df8-9960-8b435b36bcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cdee04-b5f2-4cd8-8c19-d02374507dac",
        "cursor": {
          "ref": "11e39d6a-d077-4cec-9d13-a6c7a4a5f90a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cda9038d-c7ed-46ef-a175-a33622df048a"
        },
        "item": {
          "id": "d9cdee04-b5f2-4cd8-8c19-d02374507dac",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e29e9b52-5c23-4e9e-be61-e369961290b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83611ceb-adc5-4411-bdf8-46d2275c18cc",
        "cursor": {
          "ref": "889779a4-75df-4f6f-9ca1-e3d9f0fa9cf5",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "127429e6-8299-4c6b-ba36-3c7354bafbc5"
        },
        "item": {
          "id": "83611ceb-adc5-4411-bdf8-46d2275c18cc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab30f935-b647-46d5-8d8e-22212f24379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6353677-678b-4767-b20b-cf8015bede8e",
        "cursor": {
          "ref": "4020077e-39d8-4126-b4a8-cda2bfd9fc63",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5dbf7cce-c9a3-4e56-80ec-2726c2b89f37"
        },
        "item": {
          "id": "a6353677-678b-4767-b20b-cf8015bede8e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "80b0ba16-f5ac-49f1-8f7b-698e58ef7782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf31dcd9-78f4-4e3b-8ace-6c21c5100c03",
        "cursor": {
          "ref": "2704e751-97c2-43dd-ac1d-4e24f02c0cde",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f80ece51-072b-45d6-b70a-df3dc598c67d"
        },
        "item": {
          "id": "bf31dcd9-78f4-4e3b-8ace-6c21c5100c03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "266eb21f-6fad-4973-8a77-5d7faf4081d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c152fa-019d-41c2-ae63-dbee661113c6",
        "cursor": {
          "ref": "e7c303e3-7866-4f78-81ea-b003b75be035",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "243daf47-8a0b-4b17-90a4-07a0f32bc06d"
        },
        "item": {
          "id": "99c152fa-019d-41c2-ae63-dbee661113c6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ca916949-8430-4b86-a35e-c485115f6dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082879ac-04b9-4a1b-bae9-fc1abcecb7e5",
        "cursor": {
          "ref": "b2ad8708-6696-4cac-b035-89d975b974a0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d152d649-cbca-40c5-9616-d4eb26642481"
        },
        "item": {
          "id": "082879ac-04b9-4a1b-bae9-fc1abcecb7e5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e1ce72e0-20a7-4370-a100-123733c8cb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a430b896-bebb-4a5f-aba4-3e875cc1d063",
        "cursor": {
          "ref": "584d3e29-7436-48f7-a056-0ece71c9c01d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6036c46d-4f33-45d7-bcb9-9337830bf253"
        },
        "item": {
          "id": "a430b896-bebb-4a5f-aba4-3e875cc1d063",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a723ae12-6480-49c9-a457-9990e996a01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b298322d-e12a-4a08-b436-3e64406f6568",
        "cursor": {
          "ref": "680a1b55-c317-4de3-bd5e-ce983c8b618d",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "451dff06-856c-4481-8a52-dc7c96b2c1a6"
        },
        "item": {
          "id": "b298322d-e12a-4a08-b436-3e64406f6568",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f4412f79-4ee0-4e5f-aea6-41cab94a104b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359de27-796f-47b3-92a1-5c16fb61d942",
        "cursor": {
          "ref": "d338346c-f1b6-42ac-8937-3fa7e4b6b7cb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ada5fb75-a653-4516-8f1a-aafe6699338a"
        },
        "item": {
          "id": "7359de27-796f-47b3-92a1-5c16fb61d942",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8279fac1-55cb-49f5-9d04-71ddc3f836ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485ab55f-160a-4207-bf03-52393ab4d950",
        "cursor": {
          "ref": "144df2b6-123b-4db6-9cc5-705c5a26262c",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cdbd76de-4e3d-4043-ade5-7af47594e422"
        },
        "item": {
          "id": "485ab55f-160a-4207-bf03-52393ab4d950",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3400a579-e540-495c-b068-0a0f864cfa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533cfcf9-b369-4682-b641-639478157f63",
        "cursor": {
          "ref": "7f16e70e-4077-43b3-93c4-71922cfe66ec",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "11377165-c9ef-4b62-8b4f-9fe7c9fba7a5"
        },
        "item": {
          "id": "533cfcf9-b369-4682-b641-639478157f63",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3490bd6d-f9e5-46d6-8a88-fe199cf0f038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d945f5-779b-4288-a69c-6979c206b94c",
        "cursor": {
          "ref": "8d38cd9f-6cfe-46cf-8b50-5778aba76b4f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "925415af-2b77-4fe9-8153-4450f760d943"
        },
        "item": {
          "id": "10d945f5-779b-4288-a69c-6979c206b94c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9908f07f-5471-4db0-9ef6-9953cce91201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5e27ab-9c11-4cef-b0ef-3c6ee793e22e",
        "cursor": {
          "ref": "d89708df-432c-4673-aa87-f3fb7f0515c9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4c213da4-e34d-4a7a-ab9c-b0f06c9f3875"
        },
        "item": {
          "id": "ae5e27ab-9c11-4cef-b0ef-3c6ee793e22e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d83027b5-b1ed-4850-be93-4cee496bbdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918b1101-f097-405a-b865-43941ba79773",
        "cursor": {
          "ref": "d92f4cb5-63a0-4d09-9415-b71787861855",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "baeaf537-dbde-4be6-bc99-701f8e15f669"
        },
        "item": {
          "id": "918b1101-f097-405a-b865-43941ba79773",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b4719d4a-f015-4b9e-92c8-ed6afac97efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719ffa04-d64a-4070-8faa-51baf5b9a364",
        "cursor": {
          "ref": "5d53f15c-a42b-4579-b648-23a5c31a5fa9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9d5b7145-4fb4-460b-952f-eed24a660f7d"
        },
        "item": {
          "id": "719ffa04-d64a-4070-8faa-51baf5b9a364",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "58c69b08-b882-45da-aeb2-deaece69edf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d79b1b7-6f3b-4cc9-a795-a33024e64494",
        "cursor": {
          "ref": "eb010766-3447-49ce-aced-61e788e39d26",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aeaddeee-b11f-4c42-82fb-ecf3e814da4f"
        },
        "item": {
          "id": "6d79b1b7-6f3b-4cc9-a795-a33024e64494",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f85b78b6-713d-466c-8fe0-0d4f81844891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb98c71c-8f65-4591-8e93-c38b6a9baa1f",
        "cursor": {
          "ref": "67a17307-948e-401c-9751-808e892b8164",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "645b507c-96c2-48ea-8110-e8f89fb809ce"
        },
        "item": {
          "id": "cb98c71c-8f65-4591-8e93-c38b6a9baa1f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7346d898-d9b6-40da-a1ea-e57612dc7364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d45947-66ba-4594-8220-c00fc16a36ae",
        "cursor": {
          "ref": "3c35e743-7888-4819-8b59-e9430966de77",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "97eee035-40f5-4ae9-b29e-044a134aff6a"
        },
        "item": {
          "id": "92d45947-66ba-4594-8220-c00fc16a36ae",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f42abef7-ffce-4afe-9d4c-0766098ed301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebe504a-ddb3-4d76-96a0-0b80e5666e4a",
        "cursor": {
          "ref": "2f9f8ae7-3d40-4d8a-885e-2df803c5b219",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d2723ca8-c40e-4a45-b21d-2fe295ccf560"
        },
        "item": {
          "id": "2ebe504a-ddb3-4d76-96a0-0b80e5666e4a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "92e87b5e-922a-4783-b724-b8b18b27fe74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7f08dc-7a3b-46d3-a1c5-a143de554b2d",
        "cursor": {
          "ref": "1e5402b5-6548-47e5-a35d-c10b126eaa6c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6f994f59-4653-47b0-bb41-72298f8f8682"
        },
        "item": {
          "id": "cf7f08dc-7a3b-46d3-a1c5-a143de554b2d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "37ad21c9-eb88-4035-9a17-455e3d8210a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8b6055-f238-46e1-96f1-b14a6ba59f18",
        "cursor": {
          "ref": "08e3292e-4dcc-425c-9ca2-12ebbe71ef22",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b265e5c8-3259-4ffe-a1f8-2c704e8e6ed3"
        },
        "item": {
          "id": "fe8b6055-f238-46e1-96f1-b14a6ba59f18",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "589bf3b1-caaa-4ce6-a83f-1c0b35b3b2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9719a13f-c6b1-4d4a-867b-578f9486fa3d",
        "cursor": {
          "ref": "422eaa8d-44dd-4fd0-b0d8-a046945216f8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b1ee309e-864d-47e6-a86f-6acca81232df"
        },
        "item": {
          "id": "9719a13f-c6b1-4d4a-867b-578f9486fa3d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "30a643de-11ee-487a-be0a-c5258433f2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e93cd3-173b-4510-bc90-51eaf2837042",
        "cursor": {
          "ref": "48c2d1f9-2969-4ed6-b077-02eaeaee18e5",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1b712cd8-9f8d-4136-a9a5-72e8d7822f9a"
        },
        "item": {
          "id": "44e93cd3-173b-4510-bc90-51eaf2837042",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "84b5f0af-8b04-48cb-b237-62db0f3f091d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ef01f6-8dc6-48bd-b8f9-a1942a1b90e5",
        "cursor": {
          "ref": "31fd0cc7-cb13-4095-95ba-e3c6e3c7baef",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4f08fa71-ca50-4185-803b-5e60f57f4842"
        },
        "item": {
          "id": "b9ef01f6-8dc6-48bd-b8f9-a1942a1b90e5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5f747993-9133-473c-a0a5-9c13022b8eb8",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "279b4dc5-0aab-4d38-8496-6bb3f0a83318",
        "cursor": {
          "ref": "0d3fe54a-6ec0-4327-ab0d-3c27c4b02a20",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1f1bcceb-158d-4081-9f6b-85827f6e59d1"
        },
        "item": {
          "id": "279b4dc5-0aab-4d38-8496-6bb3f0a83318",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7d47b192-d649-4ca3-b05d-05e059febb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6697b6-65fe-4003-85ba-1b9ad0c31ffd",
        "cursor": {
          "ref": "d370cb25-97ff-4c0c-8125-a5e41c097f43",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3fccc5a9-10b6-471f-8952-12c92a6ca11a"
        },
        "item": {
          "id": "5c6697b6-65fe-4003-85ba-1b9ad0c31ffd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "459007d6-1f17-4700-83c8-fa7d59f9480e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658dbb3a-a4e3-4285-b351-efbbf382bc65",
        "cursor": {
          "ref": "dd7a70b6-bbcc-4958-a99d-b507b4791812",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "91d7a4e1-813a-430f-be66-d20b27fd494c"
        },
        "item": {
          "id": "658dbb3a-a4e3-4285-b351-efbbf382bc65",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "064d12da-ed76-442c-8978-60631e097830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e7013e-479d-4da3-b5cd-8ce135b78b9f",
        "cursor": {
          "ref": "f2c77a7e-427d-4bd3-8b9d-987ece734e44",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fd74f06b-2d25-493f-9b1a-180c52660af7"
        },
        "item": {
          "id": "96e7013e-479d-4da3-b5cd-8ce135b78b9f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "435f5c97-d470-4835-b193-c3dd300cac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccecb4b-d573-42d2-9b3e-97e1d291e3a3",
        "cursor": {
          "ref": "0ff045cc-5a41-4f53-866c-61a531c8f917",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a13fdba8-59fe-4e39-aafc-bada4a1302b4"
        },
        "item": {
          "id": "bccecb4b-d573-42d2-9b3e-97e1d291e3a3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0418a3c3-a07c-4c8a-a1c4-94d5377c838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d7608e-d0dd-4cfb-9137-65d47534fd03",
        "cursor": {
          "ref": "0019aca0-e58b-4b1f-8dd6-5d2093358f74",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0d3db5a5-11be-43fa-84a7-b176a91dda39"
        },
        "item": {
          "id": "05d7608e-d0dd-4cfb-9137-65d47534fd03",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0a5c5693-bd4f-4f37-add2-bea257ff3ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6cf1f0-8ef3-4cd7-a5f2-491de0c57676",
        "cursor": {
          "ref": "0f186870-c29f-4c8f-ab85-36e12a1025fb",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7aadc2a4-0066-4e31-b23b-367af745666c"
        },
        "item": {
          "id": "bb6cf1f0-8ef3-4cd7-a5f2-491de0c57676",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1bf5c88e-9a3e-4358-85c2-f0bf67966a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275c571b-2b50-4c36-9b10-2570404ee294",
        "cursor": {
          "ref": "be604f8b-580b-474e-960b-bc07ee3f9900",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5ce88ac4-767f-448c-a5ae-2fe3b67de7fa"
        },
        "item": {
          "id": "275c571b-2b50-4c36-9b10-2570404ee294",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7d85fd8d-7623-4b52-aa21-215c0fda8124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c213a8c6-b44d-4e01-a12b-d46a7a8743d6",
        "cursor": {
          "ref": "075945b0-8c48-4625-a737-c17e89e33828",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "426de3f6-c7b9-43be-b0db-944bfc3664af"
        },
        "item": {
          "id": "c213a8c6-b44d-4e01-a12b-d46a7a8743d6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0e3708fe-ca60-4a77-bec0-0ca7dbf46de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee7981f-0778-47f5-a242-e508c4ebc3e9",
        "cursor": {
          "ref": "b1d1a9f3-0b3d-46d0-b56b-1380eeba9b7e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1b65c1b1-d0d8-40f3-ac92-98855248cddb"
        },
        "item": {
          "id": "7ee7981f-0778-47f5-a242-e508c4ebc3e9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4082bd27-755a-4992-bfba-1e94797333d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7bd2d8-01f5-4682-a788-e567dbca25dc",
        "cursor": {
          "ref": "e4bc69b8-ef6f-46dc-9eaf-e0dbd3327167",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6b4e1a11-e10a-43e7-a2d5-193cd230be84"
        },
        "item": {
          "id": "2f7bd2d8-01f5-4682-a788-e567dbca25dc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b3184ce1-74ef-4a71-a821-58cb8ce79cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f345d6-98f5-4de5-9fb5-f44cdd8712f8",
        "cursor": {
          "ref": "10bb3369-73e4-48b1-8f84-78bbe82acca0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7492bae7-20cc-4a40-9918-2888def8fe30"
        },
        "item": {
          "id": "c7f345d6-98f5-4de5-9fb5-f44cdd8712f8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a0ed96bf-eecc-4a58-8c9e-09d45c4ee389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c377db9-3bc0-4a10-a1b4-2e8e3a464293",
        "cursor": {
          "ref": "9ab0a37d-f87c-4609-a3c2-a7d279befc21",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5019b8a9-8bbd-4769-adeb-f22330199387"
        },
        "item": {
          "id": "2c377db9-3bc0-4a10-a1b4-2e8e3a464293",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "df268ae0-3670-4633-910f-be2c2642146d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cca2bb-05b8-4a31-b5ec-2a7a74f77b7e",
        "cursor": {
          "ref": "f665418e-a2ab-4935-b79e-b77c57e91481",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9d2841f3-d57d-4333-9e16-dae7e3f9d5ba"
        },
        "item": {
          "id": "36cca2bb-05b8-4a31-b5ec-2a7a74f77b7e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3582264e-9a27-4155-a211-a8925c45de56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85f7a29-adde-45d2-a060-9dd711970c5d",
        "cursor": {
          "ref": "d5605f9f-2e09-4de9-97e0-0dbb766f0908",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5384f0a3-25cf-4f4c-bf83-0c0a87b71db1"
        },
        "item": {
          "id": "c85f7a29-adde-45d2-a060-9dd711970c5d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "202524d5-c509-4ebc-8001-4e07f299b8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcdbb69-81c9-4fc2-a957-4cd8aa8c5a3f",
        "cursor": {
          "ref": "134f3854-27a3-4f38-933d-758610524f24",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3be67a0a-e195-4b9b-86c7-e12c54135e4c"
        },
        "item": {
          "id": "6bcdbb69-81c9-4fc2-a957-4cd8aa8c5a3f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a484d315-e7f0-437e-99a8-5b08d2494130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30db236e-77fc-483c-9a81-5db4eed22c95",
        "cursor": {
          "ref": "3b90467d-6a9d-48ff-a1e8-8b57ea33cf6e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "40ae7f47-40fb-45a2-808e-f0054291e905"
        },
        "item": {
          "id": "30db236e-77fc-483c-9a81-5db4eed22c95",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9f76673d-63ff-4c8b-bed0-c111329334e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7371ae94-ae17-482c-9dfb-987f3700846d",
        "cursor": {
          "ref": "08070f16-0866-435b-a89b-5a3d0bcbf1c7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6841502a-d46c-4d1d-8296-0d581f75a403"
        },
        "item": {
          "id": "7371ae94-ae17-482c-9dfb-987f3700846d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4a68537b-c9d0-4144-87de-4e0c38adc53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f53d8a3-a4e0-4566-9bcf-3023abbfcb99",
        "cursor": {
          "ref": "ebed0cee-5117-44f3-9b0a-d263931472f8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "466c306b-e035-4238-9220-2b272b1983db"
        },
        "item": {
          "id": "2f53d8a3-a4e0-4566-9bcf-3023abbfcb99",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b7634c2c-5332-4efb-9762-e294e12c5804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd74df36-aabe-4ee4-afda-241ef296c3ad",
        "cursor": {
          "ref": "7d4f0c94-3f29-45ba-b825-5237e51b512c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d795dbc6-c9bb-4d58-90a7-65301d122553"
        },
        "item": {
          "id": "cd74df36-aabe-4ee4-afda-241ef296c3ad",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2761b81a-c884-4635-b1cb-f93698aa8134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171c0a0c-b360-4290-b413-5413e578256d",
        "cursor": {
          "ref": "65d1ff98-4d4b-40c9-bf98-c132060474f2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a6dd167e-81db-4abf-a570-43d94cdcb941"
        },
        "item": {
          "id": "171c0a0c-b360-4290-b413-5413e578256d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "93924545-4523-40f7-a11a-4612f492a01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20017c22-6e28-401b-a6b3-1f2ce538bbfb",
        "cursor": {
          "ref": "f95ca68d-b59e-4311-9ca2-7f902f250aad",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6170d2af-9724-435a-8b6a-7141b6ed85ea"
        },
        "item": {
          "id": "20017c22-6e28-401b-a6b3-1f2ce538bbfb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "01c92e9a-853b-4a15-b7e7-69cb4630e14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db0e0b6-5e14-4237-ad5b-eba472e196a7",
        "cursor": {
          "ref": "3873206f-6c10-4b2d-aa6c-c1c127dfe036",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5808d58a-e6b8-4403-85b3-2b8c7db68bc8"
        },
        "item": {
          "id": "5db0e0b6-5e14-4237-ad5b-eba472e196a7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "509e3961-8e0f-4c46-b857-7af34795cfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0085d3cb-47df-4550-93a6-98915e23315e",
        "cursor": {
          "ref": "90f5ee57-22fa-46c3-9dcb-84b03492d963",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "feab6d59-442d-41ef-9c4d-d491b6445e81"
        },
        "item": {
          "id": "0085d3cb-47df-4550-93a6-98915e23315e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a90e6570-ca84-47b5-9289-8478278442f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96429f4-54cf-4ccd-842c-5ee40477b64c",
        "cursor": {
          "ref": "7df498e5-ea16-4d35-8ed1-02965d542059",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e3c092ea-e347-4481-808a-71676e3ef3f5"
        },
        "item": {
          "id": "e96429f4-54cf-4ccd-842c-5ee40477b64c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0996c7d0-9e5c-4778-82e8-75d5bcc5d6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11031a8-2ade-44b7-bc75-8e891e76ac3e",
        "cursor": {
          "ref": "dd7110dc-cac6-4045-ae0c-306baf820c23",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ed2f1e0e-1718-430e-b7b3-c4a16a63317e"
        },
        "item": {
          "id": "d11031a8-2ade-44b7-bc75-8e891e76ac3e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "08f4d52b-2843-4f04-b373-32191c651c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61265a6b-bb09-48d2-a52a-d422450b7cf9",
        "cursor": {
          "ref": "3d5be40d-0c50-4453-b586-6db894ef7e00",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8a818949-2304-4d89-9915-7d41bc572733"
        },
        "item": {
          "id": "61265a6b-bb09-48d2-a52a-d422450b7cf9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2c91ff52-6c65-44b1-9702-6868110a6985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd1eca0-35a7-4047-b120-898a38d2e6f1",
        "cursor": {
          "ref": "c4afb87d-5e13-44a1-b360-465c525c3b53",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b599c1dc-1904-4c59-8815-8dea066bea21"
        },
        "item": {
          "id": "dfd1eca0-35a7-4047-b120-898a38d2e6f1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ab0ce4a3-589b-4690-8f3a-135b9487fa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695cd409-6228-4901-8bd4-a4c5ddd951d7",
        "cursor": {
          "ref": "d9f49321-8da6-492b-9630-9e2bf75865a9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8ec8a179-5db0-4789-b435-46523a1b0c2b"
        },
        "item": {
          "id": "695cd409-6228-4901-8bd4-a4c5ddd951d7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0505a8b4-c191-4f35-b03d-00a2168df5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e301b4-9097-4f90-a0a1-6ce73cccc3d9",
        "cursor": {
          "ref": "5e0f2d00-81d8-4d29-b84c-2eb25233b94a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c222270f-bb67-4613-ad3c-ce5c8514f484"
        },
        "item": {
          "id": "80e301b4-9097-4f90-a0a1-6ce73cccc3d9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a083759f-d580-49fc-83c9-226e833d6810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4006c08-380f-4eb0-9e4a-79c068506317",
        "cursor": {
          "ref": "add9b40f-026b-4a05-9ca1-6caf2988da4c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6311747c-c9d3-4134-9e62-49cb6f7f4097"
        },
        "item": {
          "id": "a4006c08-380f-4eb0-9e4a-79c068506317",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "23847227-123e-46ac-8f0f-46e4302c87e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325a9ab7-e204-46b0-a478-c28d6e630b6d",
        "cursor": {
          "ref": "8711f228-7c4f-417a-beb0-6b92ba6d094e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8d8c219a-c9aa-4c72-a9a4-60b7c89c6076"
        },
        "item": {
          "id": "325a9ab7-e204-46b0-a478-c28d6e630b6d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a9f36352-b7e3-483c-b0bf-002cfeb8cd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b53c29e-af0c-4743-bb8e-092db71a0e5a",
        "cursor": {
          "ref": "b7aa1ff9-8e88-4907-9b73-1c52ab14e5bf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a7526fc1-2538-428d-b2ee-6acbe6ae4b91"
        },
        "item": {
          "id": "9b53c29e-af0c-4743-bb8e-092db71a0e5a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c8f3bcc3-1e6a-4b1b-b0a7-cfd968384ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740420a2-8603-48c3-a712-df44bcefddf8",
        "cursor": {
          "ref": "a08f170e-330b-4f3f-85bf-a1b56c87b97d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cda23bcc-e798-4cdc-bc08-5e963452f9ed"
        },
        "item": {
          "id": "740420a2-8603-48c3-a712-df44bcefddf8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4218f1d0-6579-4e03-9861-f646358ee431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5be4640-bd29-4009-9b34-56644989ecc6",
        "cursor": {
          "ref": "d6f32c1d-dc5f-4b3b-9ff8-11e954b935f0",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e293d269-6068-482b-ba1d-fd656a430af1"
        },
        "item": {
          "id": "d5be4640-bd29-4009-9b34-56644989ecc6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4b21e160-538c-40a1-b1ab-4dd077f7278d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ca39d5-0f97-4f53-9ad5-7a952ab95ead",
        "cursor": {
          "ref": "63b0f1bc-8353-4363-a6b4-add3b70dedca",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "feede66a-572a-43a7-bdd0-b19534583c38"
        },
        "item": {
          "id": "a8ca39d5-0f97-4f53-9ad5-7a952ab95ead",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "822becc2-c4d3-4d16-b831-5ca648902eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45f504a-57f8-4aa7-94c5-65e143a4ca75",
        "cursor": {
          "ref": "1725a231-a7df-430f-975a-52f7beb27bc0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "79c29612-b06d-4de1-ba03-9db485ab9a34"
        },
        "item": {
          "id": "a45f504a-57f8-4aa7-94c5-65e143a4ca75",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3cbe7677-9d6d-4778-acd8-2ed9522c940a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8540ed-bbed-437c-8ac7-a30812ac4ce4",
        "cursor": {
          "ref": "524fb704-ce85-4576-abeb-74551c46454a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b61c6273-648e-4d23-a88e-90c7c7ca653c"
        },
        "item": {
          "id": "1e8540ed-bbed-437c-8ac7-a30812ac4ce4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b3187f83-b8f1-47b0-a824-ecd3be24594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db912ea8-059a-4308-a6a5-daa026ffd164",
        "cursor": {
          "ref": "896248dd-78f8-4989-865e-7b2cf873f32a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ffa6f209-4b1a-4038-aa18-7dcfd766836f"
        },
        "item": {
          "id": "db912ea8-059a-4308-a6a5-daa026ffd164",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fee828d7-2c8b-432a-9168-d78859b918dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dc13e7-def4-42a3-8d64-79d563187365",
        "cursor": {
          "ref": "44d52732-8561-4ed8-aba8-323f1ed24882",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "130ea78e-f5fc-4531-a12a-7e7682f00480"
        },
        "item": {
          "id": "40dc13e7-def4-42a3-8d64-79d563187365",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5914c6c3-c9ab-4ad8-8731-71a1edba2dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26d39d9-7546-46ef-8d97-97d3fa9a8b81",
        "cursor": {
          "ref": "fa8e4081-d449-493f-b011-ad05e73a18ed",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b2679c99-f973-46f1-a4ef-809c0d5238ef"
        },
        "item": {
          "id": "b26d39d9-7546-46ef-8d97-97d3fa9a8b81",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6529b92b-d820-49e0-8d54-57989a03ee72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c1b846-2107-445f-a773-de3a80b0c9fa",
        "cursor": {
          "ref": "dac8e2ea-2d40-42ac-ae60-7cb5e873befe",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cac62359-888d-4b51-b919-b553a4df46a1"
        },
        "item": {
          "id": "71c1b846-2107-445f-a773-de3a80b0c9fa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "099ccafc-5769-4817-a237-db7db67c2497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c08116-21b6-4627-84a6-8ac491e064c7",
        "cursor": {
          "ref": "30a3426c-d20e-433a-9687-e3978cbe272c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c5ba568b-fcd0-4e4a-9439-01931ae5aeed"
        },
        "item": {
          "id": "d3c08116-21b6-4627-84a6-8ac491e064c7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4cd13dd6-46ce-4d24-b9f4-64ffe2f9755e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0716e8e2-03b7-4fe2-ab06-ba4ca77e8e38",
        "cursor": {
          "ref": "553a378c-e59e-471b-9589-36422c28e837",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e45f7305-de6a-416b-979a-ef2e099e72cb"
        },
        "item": {
          "id": "0716e8e2-03b7-4fe2-ab06-ba4ca77e8e38",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e5740403-8f2d-401e-987e-0d44dcd7e0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb61295-6852-440c-85e9-5ef9e0b93f34",
        "cursor": {
          "ref": "c7bec7dc-d0b2-4ceb-9c20-fa5a8a43962c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e0e97e69-0707-4883-8f0a-2aedc9e34a69"
        },
        "item": {
          "id": "fdb61295-6852-440c-85e9-5ef9e0b93f34",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "511e2284-e821-4f90-9752-847480dff3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2620a1-3d9f-4123-96a0-d493b286f2f8",
        "cursor": {
          "ref": "01f7857f-ddbf-4dcb-aa32-b63c39d25667",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fdb64819-d31b-43e9-8e58-491a198e8301"
        },
        "item": {
          "id": "2b2620a1-3d9f-4123-96a0-d493b286f2f8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "345077aa-a53a-4ce5-93ee-8a10bccc4fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62cab19-2ea0-415e-b3a2-1bab3c48a844",
        "cursor": {
          "ref": "d6dceba4-d166-4be4-9a27-ff01e1b6950c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6b842466-0fd1-4ee2-877b-87b17b4b0cf8"
        },
        "item": {
          "id": "d62cab19-2ea0-415e-b3a2-1bab3c48a844",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1b5580f9-79b5-4256-9d07-369564c55b59",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fdf03c-088a-4c6c-b1a6-60a9b8ff7b5e",
        "cursor": {
          "ref": "9977bfa8-ba4c-4c47-8e41-a830437cc4da",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "70377b26-180b-4d79-81e0-eda81bddf644"
        },
        "item": {
          "id": "66fdf03c-088a-4c6c-b1a6-60a9b8ff7b5e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c95d172-a002-4063-8443-e60b07417c8b",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "652d0c55-c3e0-4c7d-9a32-dd960d41e1cd",
        "cursor": {
          "ref": "4592b0fe-6700-441c-95e6-642ba743d805",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8def6747-903c-4da1-b7a8-1a3cdf56b44c"
        },
        "item": {
          "id": "652d0c55-c3e0-4c7d-9a32-dd960d41e1cd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e49a3222-4a7c-464f-a26c-bb601ba6626d",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6273b3ef-f120-4592-818a-b4f8a1abecf6",
        "cursor": {
          "ref": "c5632917-beb1-4065-9046-27b66551489b",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5764c067-439a-4a96-9935-28fc423ab1a5"
        },
        "item": {
          "id": "6273b3ef-f120-4592-818a-b4f8a1abecf6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c5f94e63-42ad-46bb-846b-d169d487b1e1",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e36f4f-a110-4d04-9d58-d60de853d160",
        "cursor": {
          "ref": "92d983c2-c85a-451f-8b23-2c3f96b0d57c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c427d062-7465-4ce3-8821-ab72f3ee059f"
        },
        "item": {
          "id": "07e36f4f-a110-4d04-9d58-d60de853d160",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b0d6cda4-c84b-4efe-ba83-26833fbf6784",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e36f4f-a110-4d04-9d58-d60de853d160",
        "cursor": {
          "ref": "92d983c2-c85a-451f-8b23-2c3f96b0d57c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c427d062-7465-4ce3-8821-ab72f3ee059f"
        },
        "item": {
          "id": "07e36f4f-a110-4d04-9d58-d60de853d160",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b0d6cda4-c84b-4efe-ba83-26833fbf6784",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117636ad-be09-47e3-b0b1-dbe6c6b07cea",
        "cursor": {
          "ref": "63adcf87-aace-45e3-97a2-cce9c5685b8e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f01c1626-440a-4a5b-a505-45c2ef5e9a90"
        },
        "item": {
          "id": "117636ad-be09-47e3-b0b1-dbe6c6b07cea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5d1164f9-bd7d-4fa2-a800-3553b137b711",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d043e2ba-2961-4950-9d8f-ae4b5ad88cea",
        "cursor": {
          "ref": "c6da419b-87ad-4066-9d40-68932ec04a8e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "6c8a2d56-ef72-4688-b99d-d1562602b100"
        },
        "item": {
          "id": "d043e2ba-2961-4950-9d8f-ae4b5ad88cea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a0645c6b-aa4a-45ac-ac0b-7dd088347bcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}