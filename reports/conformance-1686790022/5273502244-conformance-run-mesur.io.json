{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4262133b-f91d-41a9-be83-d40aeaca9d04",
        "name": "Clear Cache",
        "item": [
          {
            "id": "650a2402-65be-410a-93ee-1d49899d6e28",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2432cc49-d9c9-42a7-a39c-2e751445efc4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8ad3709e-cbe5-4cc5-98f1-98650e002e51"
                }
              }
            ]
          },
          {
            "id": "5e5e06ff-0ca0-4664-a820-6b2b2cb72d4f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09130e3a-ea38-4bb1-af59-9fb4df79d876",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "658b5225-2c99-4b62-8ede-92ad9e13ef40"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "164acf15-138d-481a-bc64-872af3e44177",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "547f95e2-a92f-4328-a926-aca1bb40a617",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20257539-1440-495d-8539-a97da815368e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8261ae60-7da1-4ba4-8c14-fff6daecc7ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a049b8e6-2d4f-48c9-895d-f65986efaf3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cd00c8b7-e458-412e-b134-f4ad7da835e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e540ac41-3266-4ffd-82a5-c8730f38a2cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9d276791-5e51-420a-a57e-3e465adb1155",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe7a83f5-b98a-4ac0-bf33-4bd718013b81"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f997abb-c52c-41d5-b155-2643eb48da70",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8e99073e-23ae-4609-ab0a-2f41a14b4488"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c10181c5-148d-4769-b79c-153b0d4ddd4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e77fee2b-cff9-4d99-aac6-ef577c2df983"
            }
          }
        ]
      },
      {
        "id": "f4874d3b-664d-43d5-b547-9e9baee744f4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75619858-4aa0-45dc-8ef5-951012eb5971",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd64a09-36f8-485a-bb3c-b7c07922e954",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c04b80e-06ef-47c8-8623-37bdc3329a18",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3587d160-83a1-401c-86af-873436b25010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0282c9e4-efb2-4cf8-9217-fa222d6b235e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41a06d1-8cd2-4fe2-9ca6-8374d7f3234f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a23ce7d-b151-4e6a-bd04-1de8113f5c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de252b6b-064c-450d-8684-d87dc1bc03f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70c77e6-c741-4718-b403-8db734ef9ba2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5b0637-9172-44e2-8025-0db4e7f54aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b9495ed-a5c2-46a5-abc0-64dff72530fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a00cbae-e95e-4ffc-96fd-bf2cd6e42b27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af7b8642-4d95-4c91-bd38-4055a3eb86f5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db005b33-9b21-4efb-a31c-02ae89a9ccde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f44faef9-6e0a-4872-a0e0-873f3fece99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95e7a3c-3cad-4b00-828a-2e261b38bf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1f7654-e17c-4690-9e7b-3f6faaa3d850"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "18a19dec-33dc-4377-9085-72513074cae3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c91ae08f-9167-4d5b-9fab-8c1d8b9520d6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cb7547f-48c6-4df9-ae27-d1d576d08bb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7597e2e4-b32f-4e15-82dc-90b56b3c68d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "310d01d3-99d6-4ab1-a730-c308f0f5a4de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "71609e0a-5cb7-45b3-ae17-736f3b30b069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c4e2d0c-b677-4a22-b1fc-6b0809dc6259",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3524d958-1f4a-47b1-9355-8831fcfcf3fd"
            }
          }
        ]
      },
      {
        "id": "7b970ba1-6cc7-49e0-8072-5a8735664366",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3523e1d5-5939-4d1f-a921-95a10b7e8772",
            "name": "Negative Testing",
            "item": [
              {
                "id": "952a36a8-fb5c-4b5a-904c-1ad174e7c000",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4dd1d7ba-d881-489b-993e-14fc0b7230ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b2e3f5-420e-4c0e-b9b8-80e0db71658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37001d62-eaed-4997-b8d8-17662a72625a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2924eca6-d3c4-4313-aef2-4e7c6d9b3968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5050e643-f4b0-4e5b-a243-073fb5b20c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed6e5db-6c9d-4eba-93c5-4f0de27861c1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd7bc54-001d-4e16-a19b-05d20b258ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4491935-4543-49d1-be6f-a5a38f2e0142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad387d36-f1ee-4c68-956d-afb17044fe54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1ba581a-9572-4049-97ca-5244aa04d5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0748f3f9-78a3-4018-b00a-74ceb3ab9958",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8547a7d9-6cef-4bf3-ba3e-c5b07261fb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d4a989-0835-4bfa-bb66-522000b577d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf3fda0-1040-45eb-b10c-acd407c4d1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "861a1f1a-35d4-4ec8-986d-e14b6384c28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b1d0ef-412f-4000-8c49-4b122ccc70b3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd083bd-09df-4b98-9f3f-ef2f1bcc6615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78486000-ec80-414b-8849-168fd31553d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54ed1f7-0412-49ca-9399-1fa2459bb020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c23474a-80e8-4936-88d5-d272b9e42ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d0e2e7-ed55-4362-80bf-f5668ec203d3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b73276-a33e-49f6-8546-4339cda7e788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b8e8b0-a729-4874-a6a4-8f5508e1945f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33da2f60-79e6-4525-9522-76b011c6b3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b249f9f8-d024-495a-bc83-8f852a7efa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547943c1-fe15-4c42-bf3e-910472c19b9e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd22c70b-7d40-429e-a16a-235460d4701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3f770a-71ef-477c-bfa2-42bb179f0869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a265d6b-c37e-404e-b3eb-2d74083d783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2531306c-5b62-493b-a97d-4bcefa04a12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7658532-d51f-4f27-a748-b4299c16f5ec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c557ac-a55e-4dca-934f-9f9b1fd977ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d216288-991d-4541-88cb-09ecfd7df3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb18f50-84e6-44a5-99a0-62021c77464e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3ae59b9-c442-4150-94c5-6167867fdef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a694bfe5-2b44-4134-aeaa-bb82cbdd85e6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f3a980-1340-4bd3-bf3e-6ab72c948334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b77bbd3-9dc6-42cc-8439-cc4232dc22a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8c0fdb-b564-4f97-b063-7e4e4d1b7654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eed53771-3b40-49f0-ba7f-6b9aa736c2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652e3b8b-0ed9-4ce8-8a95-b23c9f053748",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0162c75-cc03-422f-b4ad-3a5623880d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a3aca5-09a3-47ee-bac4-375d0a8bca9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af55b039-47c8-4b27-8abd-357d900303d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5374a708-0aa1-4f6e-938e-c4b2324f58e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b98134e-74cb-49ae-baf9-da5b95b1c26f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a61d631-e72e-4400-ac13-29fbfe5be1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b137b942-6ed2-41f3-956c-5ccd4a01a474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa63f72-3882-4080-a322-35fcbc5e7f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "441b9e8e-a7a8-4937-b840-0834a20ac48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51906fb-a1b6-411f-9ee7-c548c46a4818",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cd5551-e0a4-4e5f-8d66-e59a3efc3870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d7d5ba-6487-426b-a789-ac6465766a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e6fade-d850-4eb9-8620-285d8931771f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11686bd6-f21f-44e5-b3e5-4af232d8d629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb047fb6-e3e4-45c4-8baf-935d0c4a6bd6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a04ff6d-539c-476c-8e9b-adc34676092c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caed9f15-ec50-476d-adbb-a5c16c1fbd66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ba2049-dc6b-49ec-a7ee-0613a2b6e417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbe51dee-6293-4fd0-b563-fb47fa9fae82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae8dcdb-3f5b-4e18-b1be-eba447fabc6f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e586cc-4954-499e-b3da-840bd5825a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f422153-e455-472f-baae-47ce89824f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbd8d50-0cd2-4047-ad50-913837910340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c001eb2-d291-47a8-b7dc-e395bb078c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f0a280-a69a-416f-af6f-894b7d1316dc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da11025d-ba23-4a88-ad49-e75327cecc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6504343-54dd-403f-8f8b-cdc2f63b89ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68a8640-496f-4a8d-801c-411e8865071d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca68d39e-0d0c-408c-82ca-999c87dea92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f695324-acf5-4dea-8f5a-0301e625ade3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912031b7-3de3-41dc-9583-93e5d82388ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b12fcee-c329-421c-8f54-ffda66d4721d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35af270c-235c-4b5a-bd05-881fdd7163cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81129f72-10e9-42ca-ab07-84c61c084c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20cdc7f-6539-4ec2-9f76-5fd50155e024",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2d3785-2b83-4bfc-be27-3f6d4bb70441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8df2f20-0d5d-4855-a292-679bbafa4c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22307c98-940f-4620-8d6a-cd77edafa275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f8def02-fc67-4dc9-a9bd-a3cfe792afbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8a931f-3119-4d2a-adb0-783ced141e4b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8498fee7-d7f3-430b-a7d2-7aec85655b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038bf964-03f3-4914-9b18-cb39113d1bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7ae05f-7028-4f9d-bcbc-f14636a83cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de7ac0e9-d685-4478-a34e-6dd33c507c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b049c1b5-f62b-4dc1-a42a-dd13b181fda0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e805b6a3-acb7-4be2-b9e2-256db78dfbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1e6c57-ab86-4d5b-bb27-724a37cba7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c20be1d-94ff-40e6-ba31-8987ea1afdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "baabc35c-9711-4cce-b1fb-4df85dcc2d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc1b6c9-a278-4b0c-97d2-7f7e9162cfb2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7730a6de-2571-42e6-a1c2-693f29324b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492dd643-223a-487a-b4f1-0982f58f5ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4662690-3eaf-41cc-8754-aa443e026752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc408b4b-0998-421b-8255-d4a4b9a134df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fc4ef6-edb0-42db-b8a5-b5afdbc28f97",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8c83f5-80c4-4c2c-a47f-774ecb7db950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0257731-4280-4e36-ac4e-7d46d7362197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9db35c-7dc8-4c4a-b6ec-91c238fcfbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87067f7-d795-4a47-9155-6b7d50f4a03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a46c5d-abba-440f-8460-297347503110",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa17dc5-2dcc-40d3-8b70-de81a048e3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401a30ba-8fde-48a1-bf39-b7971b5dee46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248343b2-f986-4591-b40d-4a0b97c97da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9130db8d-7614-45a6-b554-accaf7138244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb3f127-dc42-478b-88c8-0fe443a2bc85",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3177c55c-d0ed-4594-9b13-a63d540b5f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6952999a-bbb2-409a-9535-3939aaf0db43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c1e46-dffa-4f90-8a1e-b7284a6275f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8c5d78-dd44-4e04-8709-aae9b552ee83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fbfd69-6033-45a4-af76-eaef495d942b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9201d8-74fd-439f-9e4f-e8b81a64e6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7988137f-0c47-42b4-87dd-3a84b8897b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a0df94-e798-4a4b-acbe-112c438a47d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ceec26f2-f2f4-4136-a3d7-b7c6f3c6b299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb620bb8-3a74-4c43-861f-f080edc06312",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e71f44c-e53a-4cad-bc2f-c309ec8c3feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2db911-29c7-4529-a30d-8fcd1303b449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b037822-3217-4afd-a084-267ae3028454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "38f420a6-17ce-4a22-b93d-1c5ea1659ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f92ed10-2eb8-48dc-a222-2f216ad195c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c48010-fe65-4cd8-a22d-1610b064038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eef452b-d150-4e90-9b77-2310bebeae33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075109ea-1ada-45f9-8934-99bbd44064b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0590df-9096-470a-8cb5-91a96673b0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e13945-459a-4810-81b9-bfcfd4edda55",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f45127-1563-4a6d-970e-4a3b3c49d110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80b4545-f531-4307-b8c6-6278ae629d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d50e1ce-21a3-4826-8059-44d126c4b1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9166731a-b70e-4edc-83e8-fec54d8ef6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8604656a-41e5-47b2-8f8e-0ff840519833",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5afb8a-b87b-4939-b3c5-b207e2ac19e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6999aad-24d7-4710-9c82-b04a8324920c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e66da62-9721-4c59-a1ff-fbbe5a8ef4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb31632-85a0-46b5-8670-1d8e2f82931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f83761-92ee-4da0-a353-da517dd9ab19",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff27810-d88e-40c1-b0ca-d0c89aea3bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d19d94e-596f-44f2-b5ab-70b483286fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4df805-57a2-4a42-80a2-6a80570837a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "edd1747a-125f-467c-912c-f86d1512df9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb00adc-2fac-432b-b9c9-062397cac4b5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c37c64-7477-410e-af07-0f2538dcc44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13560681-d819-4b1d-8d6e-ea33314d03da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347e3e53-8c6a-458c-9bd1-55b0e7fb3cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf15e78-cb8d-446c-96fd-ad58685c3808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ccc49b-8815-4206-9825-594b992659c8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39818e7-bbb8-421c-8600-dc81b13651f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000ad987-3ae5-4d98-95d4-3ecf730f0c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d1d9be-8da5-419b-9ae1-32554ef56a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "825c589b-dc69-418e-ad7c-8686e6b242b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8593c45b-2f19-4543-9129-db5bfb27cbe9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c56fdbd-5fbf-4b1d-858b-916e702ce8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2175c26-1ad6-4f76-85fc-58f1224f393a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d8f3af-1e64-46cd-ae18-3dea782acdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a85a3a6-9de9-415d-96f1-7eafb308305b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895b63a8-1d14-47a6-8049-8029b8f4ee6c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4871b64-5eb5-42c7-bf07-db68c0152a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d259050d-a4b5-4c84-b922-2308e907847a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38499ab9-2f46-481b-b02c-40cfe9f4e629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3fd51e1-ad05-4a15-b359-75abdea48f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0333e4e8-ba75-4b57-9039-44f56bb7fd46",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dad670-c21c-4906-8bfa-5650777716b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd0063e-4706-4794-a88c-5ec0374e82b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ae6a3b-fe79-4e32-bc4c-8a50f70cec8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "026f7e4c-af81-42fe-8ddd-3982a3b3c7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe8b454-dd31-47f1-97c4-9a21997ae1a2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fd80ec-65df-45aa-981c-aae4e6d90d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258c3022-5b6b-4859-bb09-63f2e071218b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e2e3ee-200d-4504-a577-b4ecb2161c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff4fd3f-b4b1-41a5-9012-75ed37501e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011f7cf4-25fe-43ca-b1ab-92a80ea7c2f2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5447c553-9b1f-4146-bb6f-e0ec86c715f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b181097a-a776-4bdd-ba11-dcf6a3db6abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac9e354-2380-4217-866f-ca5d39a542b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "57fda166-7a25-45de-b461-422a126cb2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7aab8b7-e05d-48c2-af83-349083f3e0c5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b392b6-808d-40b9-a7ac-b948e6b733eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eea39b4-8870-4075-998c-251243093c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e79a97-06d8-43c6-aeaa-a60351b6084e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "510bcf13-02d9-4ad4-8bfe-27e79b1ee821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f60f9e9-5019-4ece-9f12-7feef223e744",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbb3b1b-ae0a-4a57-a799-c2761d7e8c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f28cf0-6e28-4591-8ada-4b0905720050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e243bea-cea5-473e-83a9-6f80b9652184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "500e7fab-469b-4460-92ac-7e6205d941a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1509bf-09c2-4d17-a434-d4419c24a29a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a05e89a-a41c-4230-97a6-3365665ae57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85418a47-badc-429b-9ccd-b18a60bc10b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758859c-7281-4cd1-a06a-5e26a81e2dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a82ae70-bbd9-4cc9-ae0b-8da6e7aedc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a70b0a-e77f-41a6-9704-8daff6e023da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dc2c2c-57b1-4050-a7fc-ef88116fd0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6386a91-b9bb-452f-8d62-5dfb4f556afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979ea3cf-2958-4389-a04c-17657c743567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10f8168c-076c-4cbd-9610-da2e9598167d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220e5205-4ba4-4fbd-8e30-9692aeb43ec4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165d6823-05f6-4978-b294-5c0880055961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec153b5-8570-445a-a9c9-8611cf77f485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6fa43d-f4c9-4bf3-b028-f82d234073a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd5f052-8199-46e7-a703-0c859337dab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5634b69b-ee2a-4c07-9a61-6a7796f4630b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4951c8-ed16-4d43-903c-1d17276d1bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35db5cef-4607-41b4-91b7-59c2e4e71de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23740fb2-9ab4-4cee-9135-7d5a167db21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41045237-b8be-4ca8-b8ba-be725994a5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38fd3284-226c-4a48-9772-f086a6e43777",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e825ba3-1855-46a8-b9e1-5e78c6b2bbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9fc79a-f8cf-4998-89b5-b70c21756513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85661aa5-1809-45bd-aed3-570906af45f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "62ce2b96-473c-4029-aa4c-47035511bac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0217faf-ad53-420b-a92b-b84bfcdcf111",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7b1305-71a6-45ed-aaca-a4d3fa3804bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7975f20-6f97-4fd5-8a4c-e35824ee9755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845b64e0-089f-473e-a684-66129b2c8ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68f7f88-7605-40de-b215-874d4a45ad33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60518c9f-e74a-4d5d-a4e4-d196907d6227",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8049b52-099d-414f-92bb-99809155bc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b74b455-01cb-45cb-b1da-bc67d7107ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ff1173-5c3c-4ea9-aaae-ebd2ab80a63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3d976f-2daa-40a7-8dc7-4bc06b016235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad29426-9ca6-4469-b1de-7c8af740a4b2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3f5b22-5884-4136-9702-52add78510f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acef59be-ffa1-4582-91a3-52a5075e4e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436fff39-efdc-4d07-91f6-71f01d2aa6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9b16e5-7d32-46f4-925f-cfe77f75357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a289b32c-562f-482b-a626-e40346512c79",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e570f34-5e48-4dbc-b3c9-2003fb9505e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba409200-2f62-42c1-a32f-6159160723b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8081a77c-a0b7-4fa8-bbd8-e1d969741b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85cc5d1f-a4c6-4145-8c0d-4e0ad896d3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf343248-586a-431b-b0eb-a807547e2cbd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1390b408-5532-4b05-9f7b-064e4a5e3f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b237347-b92b-4cc3-87c5-3c8f7c5282f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2398e7-80f2-4036-8540-b1b7807faf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fce6591-8bf0-41f1-aad4-5d4281c60114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d33245-72c8-480f-acc4-1c037b053499",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d0c54e-764b-48c8-93fd-260b8b72b883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9ac275-cbd3-4b4a-bd50-915c490f9b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9d721a-0506-42d3-be1e-6a8a16633053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab4a240-1a7a-4c57-ada2-b23c18e8dba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f28978-d01e-45ed-81cb-42368c7912d8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43561e5c-923d-4f3d-a7da-1b1c8d1764e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c032bd0-7e64-4959-8692-6fe8df0bebcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c740cb94-072e-446a-9110-0bb846b7e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "166c3514-c314-40ab-9b47-c14cd9a41f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f04b98-c48f-4ecd-8a19-097ef423223a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20db781-f443-4c50-9b8d-69c402828dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab96788-052d-406c-935e-b7bfc9ec6c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecc7f74-eac9-4c14-9e3e-ddb28e7f0bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51d0dca4-2890-4f04-b9ee-085d82498b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104c658f-0ce2-48d5-bc85-58a56be35e8b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0706a1-7ce5-408f-bd79-fc257446cd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7695ac81-c887-4948-9c25-60f0b71c22a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c214fe9-93d7-4017-b1fd-7ca71b81a787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c1021d-60a8-4aa6-bc34-fa81016751ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b734d87f-3f69-4ac3-8d64-8e745d95b632",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6814a25a-c4c5-4eb4-aa0e-852b685bd0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b0691e-df3a-42ca-8e47-81c31712a1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc91e08-3c20-4cf2-9973-1f45979adeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1640e03f-f777-417c-aa67-6ef073c33524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b517eb-ae66-44eb-a303-21941304a34d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee031fc6-964b-445a-ab3c-16fdbd6d3121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27f4adf-8f67-4f79-99b5-a3428c5f845d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590847ba-dccb-488f-b8ee-46b916aa8dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5a6c15-2d14-43d9-8eac-45cbf3aff3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1e3d25-baf1-4f11-9beb-c8a505e69d9f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfe9c56-a769-464c-9b58-230686079889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3883c86e-5e49-49f5-90c7-99061e17f43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4ede8e-58c3-4e85-a1ce-a55b9c607d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "721b457e-6a93-4348-b655-4b0985d73d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285553e0-d99d-4415-b254-4db3346bbe3c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b8e691-5eb4-4136-8422-968750a8ad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc7d7a1-1b9d-4621-955f-68df05a455f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3139ff05-c5b0-4798-a5aa-c83de821d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "893846aa-8362-4e81-b3b3-2967f2147f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e25562-3098-479d-b136-0f9665e8bdf5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e216ca92-aeec-43b2-a8bc-97a4371fb54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cd1f57-4a2d-4d39-9c06-6c84b13ffa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7288cfc-c5e2-4c6f-a9d6-7d868123b1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdfa3b3-7092-4c7b-923d-4322a1949001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dd9460-9714-4fb1-b4c5-3f781d3f2461",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462c0579-a5a9-4185-88e4-2baf0a863148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05159c7-ef45-4358-bcef-f7d4b390c1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54af3062-f446-45df-9c11-acca953dde8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "58fc787f-4351-4e5c-b1dd-813a49cf212c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073e9893-ed61-47c6-afd6-46e36ad32773",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96228049-71c0-4bf1-831b-054e241c8379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9f655e-c1a9-4fce-849a-af9941c630cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b34cb20-f756-43e6-a073-6e0ce2b8c950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "afb27033-59c9-4d2e-ad3f-7db9f316ffde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dabf114-6eb9-47b6-989b-86583be61d77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd478c4-f220-4b17-984c-f467c3f51e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e89096-4461-4281-b0cf-8eb7a98a1085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae35f37-bf11-4a13-b2f0-6f3fe07289f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c5640f-844a-4a1b-9bb0-8a48c2e3c3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078bb621-361b-4151-abc5-490dba4088b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da5df3c-a1a5-49f1-88ad-a953d7dd2110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b49e62-7549-4a33-973d-eb8906fa518f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bb65bf-fbdc-493e-8807-d2de2e22112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "feace4f0-4d89-406f-b345-44444fb60895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630c3d4c-098d-497c-b5a4-4ea87acb6b74",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55e13ac-0ed6-4938-9558-c0b3de6b664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e996fad7-a7c3-4fff-98ed-847de02a6cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18f46b1-b441-494b-a6b5-670d7cc1df98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaab0441-a534-40a4-8c25-637233b5b805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76763cb5-ce2d-41ea-8d7f-29d6e0569010",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fdf5db-6cde-4bcc-a5d2-df22f4ae5d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdb7f52-2458-426e-9b6a-ee9c4fbbccce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3d9de8-e37c-416b-9bc6-daf04d91817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "82163680-b2cb-4a2b-80be-37f03fd491ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb31a251-01cc-4fee-8c59-04b5969205db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830a603a-0d8b-45ef-a054-695a3a785fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a04b02-6dcf-4457-a37f-1d3c02f29a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1569ca49-632b-40f5-9d1a-780a3e459319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "722a0902-2cdf-4b0d-a66c-bcf6156c7e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42022c2b-76ff-4b9d-912b-b36bd4fe9949",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec488604-e1bc-4526-8d4e-ee453fbd68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9196ede3-5122-4488-82ff-3ed918dfc0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f39bda8-e65e-4a08-846f-9d888a2b4512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e748d34d-b7c3-434f-bf60-c3da5d61b283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9602e374-b29d-4c4a-a474-0442180b1391",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f45abf-2f86-40fb-866f-8481ce4754d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364ca4b1-4156-4b71-a207-572fa6091544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f783e5a7-9d88-4b71-bf17-8dbe1270d27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2980ec-717b-4be5-9197-b89f6311967d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb04090-c237-4a85-8ca5-21e512ab60ac",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29586c4e-ee58-472a-a665-f880fdf68c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4361be-2c32-42c9-8c9c-f9033277ae07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f477535-66c3-4a50-8571-30b70b151165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ed07c6-613b-43d4-8ff1-387d1243e1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f875db99-5cc1-49f8-bc66-4a6b8efbacc0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd881dca-21f6-4f9c-978d-be26ad82f4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bf7de6-90af-4cb5-8669-1c0e57c87da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48f41f1-160d-4f95-a415-8b7d4ac746b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bcb894-aba1-471e-8320-3baaec421d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e294f2-1c7b-42df-81d7-4f6dd80a81e6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f8259d-2c95-4d63-b9f8-2004229168e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac49cda-ddd1-49af-b0cb-1bf65be5d8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb0487a-74ea-4a1d-b3fb-53af4d9b5a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7a1c10-68da-45b6-a65d-681753daabfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0310f16b-5ef2-4e3e-9ab9-e835e0791c7a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fbdf04-561f-4bee-9fdc-ff3d946fea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff3235e-c1cd-481f-a849-f6a61ce3d054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a6324-5cf3-4082-8c79-09390a378664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d46c7c3-f06d-48c6-b8b6-5cbc46eda3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3dfbea-3d9a-49b5-bced-70d09faf8d47",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36396c09-725e-480e-9856-14c98907fbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6d98bd-b583-4988-a425-0c4ce4406744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf3d5b6-91ec-460c-aa33-7c1f15435faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe8d928-e3fc-4e98-8136-b7bac1eef44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763be8ec-37fb-4ab4-bd0d-5bbeafa3e538",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b89c22b-aec0-4066-b5d1-63950e6ddb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24529edf-b07e-40eb-bfa6-2fa8547ac025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c88f386-e435-4b4a-b2c1-925598033d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "334cdf52-fcc5-4c06-b1f7-f662dcae3417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae98081b-2fe9-43c5-8244-142a28071e9a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cccf91c-aa86-434b-9dd4-94b0b1d3e7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9ef949-8bf5-4a49-959f-5c085b6bb120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcee3f4e-cd7e-495a-81c8-db976db306a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33fa26c-b37f-4773-9012-9aa688f17c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba99487-7a79-4622-935d-b707150aaf8f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4682c388-8a05-4085-81d8-28442335d33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d2fcf8-8ab1-42a3-bd83-5fd6001e5377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02efc8f-f6a4-48e8-9e75-ffb40516212d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1bec35-8b25-4ed2-9650-b43cb55c2912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81ac999-bd07-4fe7-8d73-b8a68d74401b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc3e672-e95b-4cc8-b5f2-b999f655a44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52572e5b-280f-42f7-b6bf-eb06020a23b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f80113-2193-4c4b-9007-fe697321ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f15b2e41-d8f4-4fa1-8325-b31307ef69b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9abcf5-4711-47b5-80fc-cf50184b9f99",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6f71d5-885d-4fd1-97dd-094fd00c81e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3640af9b-4443-4999-a65a-97837f5efc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702870ed-78d5-4d0c-9213-2d825b185924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "266a97f9-110b-4ee8-a57d-411dd5824321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831cb580-0d98-4e3b-b4e3-db0f6c408730",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08407949-d850-4036-8078-d7fda98c1e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9bdcc1-4bcc-4908-a05c-6be3ed35bb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685b5681-99df-4db9-b11a-234dc63088eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad47dd61-e078-4f70-ae4a-ea290d52e9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30fee6c-6195-4c61-84fc-8e2819b4dff3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1c2c33-a951-45f7-9b52-5c35d3cc56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1478bded-845e-44c3-802e-b3fbeec72cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f99fe87-7e16-456c-80c9-2a55286e3976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f188bf4-b398-4d5c-8329-4f2e7515664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096caf54-da31-43bf-bd48-7f7ff06aee6e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bbe14d-b05d-4a45-b49c-3dec59547f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debe2ecb-61e7-4f8a-81e0-fd6391046fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af0701b-58dc-407c-83f5-5b648fce4864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adaca80a-8aba-4ace-8361-c3c7aebe51a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6c4657-dc9b-4528-a527-5f4f6fb381df",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d148b-28e2-41c7-b464-1e48c3409d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547da2ce-c3af-413c-b9a9-854b382cc7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72536b42-b2c4-4160-b3b4-26ad35688709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc293a1-2181-4277-b299-38e8dbe4531e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e61035-97d9-4749-b15f-111af189bef6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5550c7f2-d8e0-4568-85f2-75090a75a7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2df3b1d-916b-4199-9ea9-6d4f28df875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a25b907-e3eb-4265-8f22-9fe5b2a6176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74ca5fa9-8165-4061-a964-66ca607cb6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72652861-87e9-4d46-9400-06e7cf949098",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17d94fa-8d24-4afc-80e3-8d6cb402c517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d8dccd-ead5-4f12-936b-01266ab782de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2702ab95-1ad6-4f8c-8bef-8f02aef5d950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9708593d-ebda-479d-8aac-55a48ac46d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8331a83c-fc50-4339-9d94-ef6b3c39cb27",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca19e4d7-0f91-4867-8350-85eda5616faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f032db-bc0d-438d-9e08-b9240acb2ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a34d23-bf5d-479d-8bb5-81c850470365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb93d343-b433-430b-aa24-632939dcbd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eec4c2-5c92-48fc-9124-4af73b1b6e50",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef6b05e-ed62-44ac-9f8f-be3a4fa414a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae90ef18-c41e-4521-b31b-36c9d4794542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774808aa-1256-42f0-83a3-1a43f9218b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b091e7f-92d2-4145-8893-25833bf4bf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c947d5a4-0dca-4a4a-bf49-064d2305a135",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc73448-c941-465a-b716-1956e4169cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abb0ee8-e14c-4e04-b38c-e06b3532a2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3627f8-0261-4a10-8f78-c6e80ce44424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35fc410e-46fe-4831-a88e-d91e1b9a5037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a1348b-2c3d-4f6d-9276-d9968aff736c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3957cb09-93b2-423e-bf92-60289d82cc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb472cc1-f04a-45b1-b1b2-7a7a1bf0e74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c782ee9a-73c6-4909-820d-82df2630b5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cebe538-d9ee-40b1-882e-9d594c172ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc054f5-f81d-4a3e-80a1-525a73360aa4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc820ab8-5d7f-4bd7-b0fa-6e6336f2b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb82975-0f15-40a1-b2da-f46c78897ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d7dcac-d802-4826-97f5-cd8ef6d690b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "311315d6-5e4a-4ac4-89f2-60fd14cfef48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb43d0d-8e2c-4a11-b809-f0f8da33b733",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c410598b-3359-4a45-ae5b-e23c944ed707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0317c238-0651-45e8-adc0-54f7d42757fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25187a25-c497-40c5-80df-837b161fe8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "546c7479-4196-4389-916c-1546c8d683a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d4927b-6582-4ee2-a68f-f5a8e05ab86a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a17d5e-70f1-4270-bf8b-5aedcb8ae03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18462a6-2572-4c05-a672-c6467a6777d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4803f0-4c30-483c-9b41-19fac8968e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92b1bb97-d061-47f1-9d0d-13354bfb4dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1798e52-fea2-4f44-967d-ad3ee427a528",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d15759c-b6f3-4903-a7df-e543c23207a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85825df0-87c0-4da2-8d0c-8483a871e329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93a92c1-f4e8-47df-8c43-8449d5c1e69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e83f24-de7a-4b1b-9edf-a3bb0639007a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48ca26e-c3bf-4f5b-b7c1-cc180f77a34a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec3bb48-0b26-4d1d-864e-b1dac8f96f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ae3809-5f5d-47b9-873b-87fa3df51a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f134b2a-c109-4dbb-9d6a-145034fb4a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca11be69-daa5-4368-8ed0-f24510c1146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5302ad42-5ede-4790-9668-3a9ae094f338",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb03407-64c0-4f0e-947a-dba9412f520e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac29aa6-c363-484b-9a71-b04f5913b458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db94e937-9339-46ee-9db3-4155a744f14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cadc60b-3195-46f2-ad69-23ad482efcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7342f797-373e-4e35-8f34-5cedbb28b829",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60939f50-d75c-4ee7-aff9-490bcbbc4559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e61932b4-29fa-429f-9c9b-bc934365da0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46054fbd-f13e-4db7-8edc-3c743160e40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3bd77b-d8d4-43c4-b946-01adc0e1d4ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c6f5640-3f9b-439c-982a-cf35718ea971",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "562b11d5-b121-4902-8f27-82974fb7fdc0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f54a9ff-34e6-464f-9b3d-b862b39f73b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93bd2b96-4bb0-401f-9379-19aa1333dd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee6441f-f33a-40c3-89b2-10a75add1788",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c592568-6923-4331-acc0-ca90eb46da02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68051eec-389d-4328-9b8e-7af051d3bf09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff97d366-06f1-480d-9cc4-fd3001588ca4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "760fb7f1-90a0-4225-9c55-f381b0b89e69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "715cdee1-b361-4a12-bb75-fe0bd94d4aca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "613511cd-d729-4bf9-a8d4-7d2ffe8434be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e1a9972-a896-4afa-9d26-41575c1cd506"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1de68c74-adaa-4476-a53b-e6d412f8158c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5327b805-601c-4bcc-914d-edefcc5f75f4"
                }
              }
            ]
          },
          {
            "id": "864214d0-bdac-4686-bebc-1917d9713e14",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd939b0e-4220-4739-a161-bcb528476d1c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9d6343c-eb8b-4674-a2e6-bdffeced6c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68a4d91c-3b40-4d08-9e5e-b1bcb2392f65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cb56fb0-abe8-4fd5-800c-492390ff7f6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "516d9302-bc46-4fa7-8b3c-76334487e86e"
                    }
                  }
                ]
              },
              {
                "id": "9378c48f-bd4c-4fe7-b871-3041e4798363",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "731b075e-8cdb-443e-a502-da8491bdcff9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd33ace2-7238-4490-a2a5-ee64c2f1f231"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2458e3a8-596a-4c05-8c54-7838c3e7a307",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "292aa52d-9f99-4a6f-9333-b4f0b1c05037"
                    }
                  }
                ]
              },
              {
                "id": "13721655-038c-47a3-b164-e0e3ddb52869",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5a129df-4b89-4ecd-b184-2bf558b11848",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cc2b2db-bf0c-446f-bc77-294f9a742594"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdc0771f-552a-4a7e-8af0-7e40bf01fdff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73fd870a-df6d-40bf-896a-dc630020d883"
                    }
                  }
                ]
              },
              {
                "id": "06696cb5-0f38-4c68-a92a-6d5d18c20fcf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fb3358c-674b-483e-89cd-01344ad2a466",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d089e6c-db84-4bef-b96f-bbfc8cc1d718"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a7a2fb4-f9b7-4d11-94db-1dab6cc64fff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "805a2a22-ce9f-43f6-92e3-6ca6b4482ca7"
                    }
                  }
                ]
              },
              {
                "id": "e741a318-027c-4c87-8c24-d2b344b0c77a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a21e4a0-9120-41ce-84bc-213a58cc1fc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74476ca1-76be-492d-a000-9382159c99f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbff9835-1030-49f9-9b3a-72373deecf27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "767637a6-6179-4dfe-9a5e-85ad0b991e93"
                    }
                  }
                ]
              },
              {
                "id": "c417229a-401c-4171-bfa4-51e74b0ca40c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "081ab5de-aaff-4bf0-96fa-78678390d0d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6696b6af-3a01-45a3-8817-2c4884a92a79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d381e4c4-94fe-4487-a119-217f74cdd9b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77b36173-3a11-4a2a-acca-4c4fe7948cd9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2000568-deae-49b3-b033-791da99db9cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28cb878e-efd6-4922-a72a-30edf8c5c48a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48c86eb1-bd76-43da-8aab-14ae1bedc065",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5179cd19-e05e-410d-aa73-f9b5b98bd55d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13bd9128-d366-4fa5-bb82-bb9d27b8b658",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "556276ec-c515-4a03-8742-22017d0f3c93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dea3675-7a56-437d-b381-5114fcdec138",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5db570c6-88f8-47aa-8642-73ffbef8b79d"
            }
          }
        ]
      },
      {
        "id": "56548fb2-abd6-462b-bcee-71b458b46f6a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "15716d89-d422-4c1c-b543-90273ff23315",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d8ad411-008d-4549-8297-31a12ecab7ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5db39401-8540-468c-b879-1acd015ae9d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a0db30-67fc-4143-bd01-312c1beb3bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88060569-e687-478e-88db-0bd3581ad7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1d2359-552d-4af3-8222-da851d68e0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "633b9caa-e44f-4af6-a0f5-47849efdb6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2f0606-256b-49ab-9874-42d687a7e692",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154b37cd-db1c-425f-9049-083abb7988c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd969a40-0320-46ee-b710-63608bccdc5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2966d77e-befb-41db-a656-3473d31caf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f818ce84-2034-4600-921c-c8d880480be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53458b8-3533-4a20-b72d-7176e494dc13",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5410c74d-8bcd-42c4-b6bd-2bf5939c477c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2e4b21-d80f-4d17-bf58-649a6e30ddb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc06790-f756-4404-b6fb-77ea64178728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dde5660-c36e-42dd-ab18-2859795d4482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859bdc1a-0c10-4ef0-aa21-d53a26d475c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d7c309-bd73-4ae6-9b87-88ce8810a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f396e6-d3a6-44e0-bf4f-5d4c5ad413b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44575a35-7641-4c40-8b7c-fc9f1eb73db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0949bf-8d43-4a75-b4b4-025d2da4f654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d65a5d-f5b1-487a-b34b-760c7602ca08",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eac440a-28ae-472a-a4f0-361a4319ba8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1b207f-4025-4956-8ee5-791819ef6588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469f75c-dbd0-4c80-8619-71f18affa883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b4afa5-2245-4f12-ab7b-88327a5b1d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f16c9c-880d-41e7-959b-13603c68b676",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edab8a5a-9c43-42e3-9f1e-929f1d4587ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df1280a-fda1-4e9e-9f09-f74486c097ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c828b7c-a6da-49b2-bea0-ab22ac28f92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab71793b-03f0-452f-be64-c2014ea94cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ced297b-0c53-42a2-abdc-d26a6db6fe6d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7f2a47-c048-45fa-aace-41be9262a8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a4136f-8c26-41b4-81d5-deea3ae9fc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aa142b-a299-47ce-a3b3-2a11ea47e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0242a7a6-9f89-4ddd-9b1e-3b50efe067a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ce3080-5db0-4c29-87c6-b58c89cc151e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4bff40-630c-4478-b343-bebc4acc1bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae18a0b-1660-4c9e-9ca5-c7e117ea152f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4aacff-651a-4c93-a098-f90db7ae0ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7d9190-d14a-4f6a-8a6f-951d2fa1fd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb579b7-5546-4c1a-9bec-178523552186",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16524cd9-8168-4125-94f9-50edb54203ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d233a6fb-7033-4d62-8c5e-1e75e5572ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec73ce6-6938-405a-bcb1-b5a5422cef52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f0cc71-a323-4f0b-8eec-2b3246aad715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b7a8f5-11fa-45bb-bf50-b51659c6f26e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d087ec-c2e3-4603-8479-bd38859cf34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aade3e8-8c67-483b-af93-13a995ed988b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6750576a-bd44-4920-bb3f-d1cd136126fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "215f7850-e13b-4df0-a828-3e5676e2bd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4783f4b5-9393-4060-84dd-242b8413260a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09625454-609d-454b-8fba-ff08ec65f830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321ba700-4faa-4fa3-af41-5887a64590dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fad257-773b-4d14-a938-eb8008143106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "da7c31e9-3f26-4e40-b3e1-09828a705cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ab6085-57c4-4792-9fbe-44a0cd377668",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ab860d-e1b7-4325-8fab-09bb102f8875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b066c99e-395c-4328-8236-282a45dda8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbce2e99-266e-45c6-a44d-f703d4b512a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d6961e-f5c7-4334-8411-031b6c5ac5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a3376f-3167-4447-b875-91b90d26fd8b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aa6eae-0856-4971-80b2-0310930c3f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3043c941-d5f0-428e-8fe2-afc136c1a38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b7ee6b-0875-4161-bcfa-91e67723fb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f78d69-cf3f-4370-99c6-3999f4b85eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd5b1bd-2e20-42b0-be46-ca1fcd307d93",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0621c8-31c0-40a8-8ced-3e91917fd28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6912af83-6571-4cce-9674-0856d1e8af8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102dcf82-fe28-4e0b-83da-3107a2ee4cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ae7791-a87d-4669-b9c2-c6b10436c3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d163f423-e2c6-455a-a074-7abd7d084d3f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a992cf-618b-43c8-a3d3-8c1651dc763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7717bee-f9be-46e6-932f-7a87a6cf76d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de3b4eb-6ed9-443a-9582-d191e14392ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0aa412c-a038-472b-a350-63e3bfd9d790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f7b835-a4ff-4d8c-a501-eaf85218c1cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde69eb6-1193-445a-bcf2-fe6fec5fbd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6cba70-28f0-42d4-89d2-4dc67dab1231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3a342e-df61-497d-a5c8-7474fc409282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "23dac232-3eaf-41e7-88b5-50e4fd7d7011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36490aa3-0679-4d2e-99f5-3d47be9889c2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b36571-fb1b-41ea-aac5-f915b3cc0f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7418ce5-41be-49df-877b-1b60eb9d5103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80ce37e-9389-4b9b-92d8-76afb1352308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd8cf1e-be36-4715-b283-254a6afe3f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da054c8e-c087-40e4-85ba-9cdcbc3caff3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4440c13-9f90-4d9e-97a1-fc9d2df4722a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61603d80-4d88-415c-bb42-e46ff19433d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9ddf91-4779-49e6-b2ef-a523f2aff515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87336602-d295-47d1-a2f3-ef65bd0dd9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8033cc7-6282-4bc2-923b-77714d166d29",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5d9ac8-83a8-4725-9390-dbb419d5fac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92188246-a09e-4fc9-97b7-925b78345ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664225a3-fb48-418f-b6f0-dfee473093d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0e84a2-abf3-49cb-a79e-6747d43fd11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e3a635-8b4d-4486-a323-97e5376aedab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb977b1-b1f3-4339-a44b-9e77f876fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbc2374-4e25-4fb4-93c9-1ab7ebe33867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c378577-e4f3-4b63-bf61-a42e15b6690c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d261d7b-4ff1-4181-907e-0835a6b1e5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa18962d-12c6-42cb-8048-680c61033432",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1007f70-cba1-436d-8998-b1dc728f3223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40aec43b-26d2-42d4-a1d0-2f3a9be45e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773439e1-9446-41e6-944a-4d31efc8bef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c565272-7a0c-4552-b447-cfc772c5ebad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85eab0e0-df0e-4609-a0c1-c78ad7ad7e54",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f45f3c3-ee09-4360-bfbc-4af54affcd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280c9abb-7fa8-4354-8066-a114562093eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef31161-3c10-4aa0-8280-0866247acc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c95a78-ef64-4ce1-89e4-931eac16c807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39f3e97-5d77-4233-bbbb-f417473ea78a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55021cc2-623f-40ca-95ad-0f8ee00fda20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6a86cd-4cd2-4f71-8d22-f0496192f62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea5d32b-23db-48e7-911a-44f896c69e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0485202-b708-4be1-93fc-0810646f7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e3a9c6-b625-4d98-85e0-fb0d29ef12bb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceac5f2-0062-4530-b389-46a9294d0619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c04ac65-58c7-4515-9f5b-08f7b0b5bfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae53c65-5763-479a-b4ee-0e8e049995af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0d18ee-c615-4168-a2d8-08d2b57f33ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add0c86d-a246-44c1-b2a4-c936f4975bc0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56272c6-fa4d-4b3a-96cb-15dce8aba3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4800ad6a-858a-40ba-a289-5018991aa36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174ba415-2b86-4674-a729-add30d38d872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "373a3c00-998f-497d-975b-dedbcf3abba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48c6f51-66ca-41a9-91d0-837c948c731c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ab877d-5b42-450a-a3fc-a370dbf5277b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c313ca8-eff4-4b4e-800f-ca48b01e1658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3211dd1e-5675-4363-b483-9db5fe7a35bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75838fb0-1f44-44c1-a714-f92b126335a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea413c6-f38e-4259-a9de-570399e9f30c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a74bc69-54d6-468e-b443-92e0c8493d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a8a2f2-bec9-4d50-bd26-40e4299ed17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac404b4-677a-4832-91b2-3a02a0a0b65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87ba79ab-991c-4a80-8f40-7a29f7f47141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868e1a1e-7aab-44a7-956d-4d2859f254cd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d37d1e8-77cc-4607-bc88-b46479c3b17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a92f35-4ddf-4a67-8bd3-5c3199212a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95865a76-f25d-40c5-b4e5-e5d15cdf9e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0912187b-15d4-41a4-bb27-b707fe16d39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa8e804-6140-4d58-b56c-09bdeb8bcf71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdaa226c-e2e9-4744-ad22-52bb12ea0685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e2fa16-d7f4-4fc3-a936-646428cff9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9b1c94-e55f-49b3-86d3-06bfc574c159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d7187e-b088-42fd-8ce9-e0240ff3b6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4e4e8e-dab2-43a0-a1e4-634eefada656",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2628e231-59aa-461c-ad34-f20a1897600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d78dab3-b367-45fe-8758-1e479c03fd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af42290-7557-469c-bc9f-cea6c462e5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb686a2-9e5f-471c-81f8-a466d50cafcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90edd4a2-2299-431f-90a1-96d894d262ad",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883df38f-f04a-4801-8a5d-d2ec263c8f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472dd626-1ed0-46b2-a57b-3fdad36f6131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442f1544-5b25-4c82-804a-c2943780bdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f427872-e7ac-44dd-9a80-df915f059f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd745a10-c911-40f7-86fc-8b255a40b766",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c253fe9d-f47e-443e-b3fc-2fdae20435eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f816c0a-57ff-434e-9858-e5565776324b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc205b00-86f5-49fc-8e97-cbcf6363f3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28af644f-fcc3-4404-91f5-1cc01b8b2f60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80ce9fe6-e6f7-453c-90c7-1ff8b0077953",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13903f99-9529-4fd0-b807-a52413a2a9f8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497ba857-aeb0-4f48-b5dd-a7d95fadfce9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d67ea802-2e95-4205-a1c3-9503eecfbbed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034efa0d-ed00-4a6a-ac6f-0d413ee12429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad3c2b32-6c75-4df1-b7d1-c7f5c03706f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a7e319-82d3-4ed7-8bcf-91de42af8635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14e7e50f-eea6-48ef-9c5b-fb9e7dcd4f69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5cec005-a35b-4e23-941b-c0b05804eee6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6699a83-f6e4-4cff-9632-7eb2ebfa9e2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4c298c9-4999-48ff-bb13-480553100336",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91188d53-c263-4b24-b740-4f76cd558b18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14f9c054-7c04-4154-9150-32e3665b2d65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7d66483-1b08-40d9-a7de-621e1ffb7ca2"
            }
          }
        ]
      },
      {
        "id": "2a5e8bc6-dcea-49e4-85bc-dbdbd0825c6b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fca0e696-173a-49cb-be93-d5372899663a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7ed6e5f-f127-4dec-8487-2d7c93243b94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ccedb451-fa49-4ae1-838d-238ecf459bdd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc21017-52bf-412b-9cf7-4b4870aa0bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ef28ab-ccd2-403a-9296-96d2098f8bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ed2359-2d1b-4fa1-80d5-315217c73b7b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99107baf-680c-4d2f-aa57-113053e70ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea937224-058d-421c-99b6-a5e7c4f887fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bee990a-a264-498d-a50f-02d954f2349f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2000c28e-59a2-48c2-b669-ee4c36ddb680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e7f54c-4ed9-4a3d-86f5-4bb813c995b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d024aeb-c045-4cea-9209-e25e3877bef6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e443bc4-8847-44c3-8bdd-435737edcdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e4f6b0-1a1c-4f65-9858-229c7cb147c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce47ac93-7492-4cad-8564-a006212edeb9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709aaa8b-7650-4a95-bc14-500361a612bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e788b5-42ea-4851-8daf-666051ebc00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d3d6ff-e83e-4aba-b08f-37f24d7b3a3c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b689c8-e379-40b5-a3ff-baa921cd9f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6583cfe7-b2eb-42a2-b514-39292e65810d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e4434-b868-4df9-9f47-82e90c763ea4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694cf021-a2f3-41f3-819d-b5860f6eead5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52225bb4-caf9-4ed1-96ba-a75858b4c081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb8b1d-1b79-4707-8fd9-dfcea00e2bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9fdcbf-115c-483d-a4b4-8e4de13aa165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e43c0d0-1e39-485b-9966-c7e77b445cd1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e430621-b6bb-40e2-8cc5-60fb38019085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22af9cb-5792-4f16-9b2e-72ffc8eeb014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1b21de-4de7-41a7-81ba-9520ac8c2e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea2ee78-4343-426d-b557-0d16a8b5e908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27f6341-acb7-4929-8317-103de31bb868",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde911db-421f-4908-aa00-dbb6a5f8774f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5101ad9f-19ff-4c94-bc4c-98f3adb321ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52f7068-6219-4605-bb63-4cfaa1d4f4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5e4d39-c690-4c36-9872-d2c90b81b304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f1b40b-469b-4fbf-baa0-e7558ab01e9e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ea1c32-c6ec-4a50-bda4-6ab595deffeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4a658e-a50c-4169-9a77-de02347b231e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7e55ce-c9a9-4920-9adf-5cbce4b7bc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcaba7a-3801-4a4a-b653-5c6118e445c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55503e7c-1c32-4139-aaa0-7ad241727898",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a525d100-ab8b-4305-a80b-5a643daa320f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd277b06-95b5-4ed2-acaf-b0349ea186b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa7e94c-73cc-4e98-87e6-b0adf6a3956f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aae2d5a-85c5-49a5-9c0d-a70ed8c8a0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7464b79c-684c-4d5e-93d7-29f9f219929e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77375ed-97c1-4cdf-a63c-26c14bcaba82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383008fe-82d1-4df8-9d06-39b917eb9641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae53aff-e08f-4530-9966-e8d279e6efc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9226296-ff5a-4469-b632-0e8a2c361e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a845cd-397f-44b3-8797-47793f20b4be",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fe1360-69c0-47a9-b3b8-79bd4d9c9097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92256ba3-faf3-4f0e-a600-a980d89c51b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8dabe2-fe90-4d9c-b991-dd1e8c69742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d98a4f-5d19-4e4c-bb0f-6d7f3be5c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50278263-5884-49f6-93cc-4d7c7da74c44",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bc1f46-035e-4ea3-b313-a4ec96bf435a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6038ed4-d4ac-425e-bb67-fbe03946e34a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c238d8-e53a-4298-a705-2e5789ecd3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ba7724-2549-4ca5-aff9-e873ec9f03f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668f9904-a2df-42b6-b747-6fe7da9ee355",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d00453-af48-4257-ab1b-ddd9e2045546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86cee78f-0ceb-4206-9e50-7001acb0f702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528be5ee-5a8b-42ee-b660-99420f02bbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51988bc-813e-4394-962c-e8deaf41c916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7a0c28-f1e6-4f9b-89bb-c331e1f0c237",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871886b1-4f97-42ab-8a63-c2104ba4663e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a88853-bb55-466e-9adc-6911181adf30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984cc879-8ee9-4611-8386-8b1b984d69ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ba05f8-4ba9-42d7-bf63-5f32a3700d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daca811-daa0-4028-9680-6169f6aea484",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5299df0a-b74b-4345-ad51-9f4bdb4c354d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905681cd-bdad-4eb6-972c-64121b9fe94d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2557fd8-c8aa-4a66-a173-bb64d9dc9fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f567438-158c-4e9e-9b68-95c5be7e8203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08a8951-e41f-41fa-8acf-a0c9bed3717c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985a5ad7-556d-4a5b-8fa4-4db645746fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2328bd38-bfa8-4ad7-9ca9-8a13a0442f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dccc4a8-840a-45ae-ad9a-2796be205c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ee24d4-62e6-4024-86f7-29ef097b319c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8082e31f-4f3d-4b0b-ac30-a0f810cb4945",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e587389f-f17b-45f3-a757-a4c52ec79ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b45f03-79e5-4b27-ba9b-d1f83b9e686f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4ab020-b2f2-4a4b-8591-382784ca6800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902718bf-7784-40a0-9643-16e454d80f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd2bdfd-f73f-4fe7-a139-ece6d8895dae",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04004eb6-8d05-4181-9dcd-cc535bb359d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d9bf01-b80c-4fe2-a723-d57975cf1978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2008d8d9-9149-4a8e-b837-33cb3f8bf50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42615a49-cf8d-4b6f-9d11-b6efb796ff57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9041c4ca-8508-43fe-b277-b97d6125d4ad",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4d0869-1d66-4eae-84e9-aae9455c302c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882b037c-753d-46dd-bcd4-c308cd406d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf90ede9-770a-4189-82ba-86bfc7a62473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19f4997-8e99-4bfc-9499-0072b7b4fed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7966f5a-fdbb-4df7-924d-e445285b878c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6619d73-479d-4ed8-afd8-3b2a9e91cbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6f1a47-30c9-4b8a-a26d-f90769ec7f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da848a1-598d-45de-a51d-fae55d121849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4a903c-0ada-4338-9c3b-a761ef6fc2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a119fdb4-872b-4ef7-8732-708faa8141a5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ea551-43f6-4634-8412-b3e041986b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1869deb7-a25d-46e8-8cfb-5f6776ac45f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7eb256-84b2-4071-96db-60860de9e2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80f749c-8524-4339-b326-c834a69bb173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953077fa-6439-4e17-9ba3-bb6d100c230c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda50ca0-29bd-4689-b0b8-f1e7d0ea587c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fe9d686-74d4-49ed-bf19-d6799263685a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0c1289-61e8-4484-b66c-d5fd7e6348ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64618634-2f8f-4cb1-96f2-42b58c32685b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e157f4b2-fa2e-4d4d-9ee4-f0f3d57a7193",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10529487-17d1-4bf4-a21f-e679cc1b8896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf96316-91c4-4784-943b-1325e992a3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b53d40-3020-4134-9eb0-07e358fd5278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66291d1-0891-41e4-b087-2726c163ae14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b97b0e-08ca-4d76-b9ec-bb4110bc0062",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f47801c-c4e7-43b0-a35b-e4253e119023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e181aa-fdfe-4bd7-9b4a-aecaf6e09c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "228faf06-2c4c-4b19-93c1-88b730265d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec5bf97-5ec9-4bae-856b-e7bddd0ba2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e370baba-9fc7-4cb2-aa92-2744f84d5633",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a09f15c-69f9-4fcf-a2cc-0dae62004869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059a2ef5-e628-4296-a203-f26e021c79ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92774cc-578c-41c4-b4eb-601df05c2b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312fe9f0-dbbe-49e4-8685-c342d9822004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd345a78-da2f-4112-96f3-f4ca21f1b443",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e458a21-794e-42f3-a148-3f2b8c4ac220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3927739-17f0-467f-9d2f-030e4efc007c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fa7bf4-dd4f-4983-aa3e-df73e37daf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6ac6d0-d503-497f-8e4e-0b767e3f93c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38347796-24be-45df-86b5-2b92340854d1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce78501-000a-4ecd-801a-37d71043d053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd587ce-9919-410f-b814-a5039caf1204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef7f410-5c8a-4300-b6e1-b0a8334ca634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fb4abb-03dd-4e15-b3ae-ea6aecb276f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c64a74-9b0f-4011-b88e-8aea803a0866",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d2d4ac-0d65-41f1-a240-e56002da956a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e7dd1a-9caf-48d0-8e88-3c0f75d44e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0994ed4c-72af-4a87-bd84-99d458222bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8baeef-e6a6-4d66-9b38-15f75807dff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59b7ac2-ad93-43dd-9acc-86b41c1f1570",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b240387c-edb1-4bef-9576-ef07e1e1ffa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c4e0f59-d6a1-439b-93a1-2fa8d573e265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bb7a81-f32c-437b-858d-ae925d9ae1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817b0051-9384-4318-b3a5-bed707850e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b25ece0-2f67-418a-946c-24fc6bb40bca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3ae273-6ac1-4a24-91a3-5a3aa7c2d3a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855b36cd-d881-4aa4-80c0-6dc61b4e5246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0fc3f7-5c39-4e2e-af8d-18349ff04fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6a3b8f-8a1f-4487-b793-5401e5fa71af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8460ece6-cdaa-4715-a4bd-ffda8ab2027f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa095ea-6144-4bd3-a6dd-8f049f5a7197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73642856-a827-4790-8c3c-f60d3b2750ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8e4536-fb18-478d-a4c6-78d813e74750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9532d1aa-878f-4833-961e-ce1d27e2ef7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9eec04-8d73-4c17-a5c2-22a455d09809",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23764645-b520-4c48-93f8-589719517ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30743b88-91f4-4771-8d5e-58e64cc2a20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f6a231-8306-4f86-95ae-35ef65114450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1714169e-9e0f-4d73-a4ae-e5019285a10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61055d69-d0a3-4f19-bb08-d7a1cd810d2e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009ef996-9b1a-40f8-8306-91c11e2839bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e3d278-c170-446d-ba5b-df445933dcbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907f24cd-c828-4bb1-ba03-729ca4e0e3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa9e955-6360-4a60-b870-4e5ccc3c2ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78094cf-185a-4a04-8c12-5942c0c31499",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bdce35-cfe1-4650-ba69-dec5c9708a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0423348e-60f1-4145-a6c1-2628da13a966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a8de03-07f6-4e57-b56f-c9831166d617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd510f8-287e-4135-8f6a-4b4ddb5f8f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e8920c-2769-4201-98c9-57e116eb0f2a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c490bbe-4144-4d02-b2e6-7a6b8485256d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecdfa93-fb6d-4f27-b651-0fe0b0a65993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a58258-8b02-4e03-b025-6be9fb103ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96deaf18-0f78-4b3e-93e0-8a2904bfbd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30161915-3e5d-45af-968c-792866d1bef7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4ce2a6-9d93-4658-87ca-a99d357e9b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e301df-6538-4270-a1d1-c45088f53175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be471089-1513-4bee-8920-9ebe853db211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38c5997-a258-4f92-8c79-7440ab5eb461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699292e8-ed74-410e-ae93-3af4a04e8097",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438cd605-02eb-4061-aadb-b0435847ee85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9234a6-fc15-40e4-9b48-c1c3263d17f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fbf634-d1a1-431d-8890-d05e72e04105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f42b5eb-b48c-42ea-9a6b-d2b3af82042d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788c7033-3202-445c-b0b4-a42c62017875",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4956e604-7ad1-4f37-9b34-99c0bbb23d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bbd924a-06b6-4aaf-a9d4-bfa38fd51d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9396c3-940b-488a-953e-c846c569ad14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263d32b1-7b95-49f7-be9a-86449fc25ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f51d94f-38be-4eb5-9153-c19ad3e47c68",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d98fb5-88ea-45a1-b4aa-10f30f1e4c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9b9dc3-1857-41cc-acb3-ae393f01845b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93076ed-019f-4163-be2d-d788e4a03c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373ad164-6d3b-4e94-9e88-7fc287998181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f66f94-b3d5-44ae-a794-46d59cb8cb6b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb9dec-71f8-4115-8f4a-08738ee8ddf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7139ccb6-941a-4f6f-a329-410510d084f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaa045c-d377-4155-b8a5-a3d3e9ebab11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad5659c-988f-48e1-92f3-aeb5a8520056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d261b48-1acb-4763-a4ca-659465222d53",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6310e414-dbe7-4c19-99ae-69e55cbde2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fc9884-bc4e-4668-bab2-11d894c8bcf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3099ac39-887a-49fc-b7b1-6f70cfdfbab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16effd20-d263-4f42-b229-304ac1cfb440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3dd75e-688f-4d35-bab8-14f29093ca85",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068a6a5b-e214-4242-abe4-76f085491778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5da3d0-6c5a-4010-9400-ca5783d1ed07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3abc2b4-6105-4ebb-8e2f-e4ae64d40891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca342053-ce89-47aa-88c9-8043cca210af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83967c8f-badb-4843-af1f-8d72c9761405",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64a766b-5ba3-4b26-90c4-3708cc2d9d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c57e1ec-b344-4871-bc75-0d17e2a9206f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "109e1394-d662-46be-b9ef-a0475a311704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2a28a5-1d51-41cb-b149-0b32e9a896e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a23f72-3847-47e8-b67f-eafbd40b0ae6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57e7f52-bd13-4264-9279-aa5e1074b525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7039bc0-17c1-462b-904a-2525fbfbf26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbfb8c7-6cec-4d4e-be0e-9a0057723f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea055b89-e93f-4c9e-9d98-9282ed944688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7738978-aa29-462d-8726-97576c1a91ab",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2f8cff-8fae-42f9-bc95-77c28828f161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e8d598-c496-4b18-baeb-574a3c9848ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a73ddb8-81d9-45dc-b550-4eccd2d392d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2a3ec1-81b2-4cd6-bd91-0a3a0240b6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a23e99-3520-4212-a388-ea5ea31b8bcd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a23b3b-ad3c-4037-902d-eaba58519e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4dc6620-0a74-4fab-b8b8-94566024c248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8c1fef-fde1-40b5-8595-5791d3ded386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51176a5-fdb2-446f-b513-3411f98accf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88a719d-ea19-4c47-a080-57ad41269beb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99352aad-1050-45c5-9473-234bb8a169fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7693cf-4745-40ba-90b3-3ff2a17464db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bc6de1-d1c9-4daf-bcae-4def794035ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666b9ffd-cbe0-4660-8b3b-9cf887cb5518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5bec34-f958-47dc-af36-c5cb924d74d2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9826141d-433a-4594-b202-e8151948a1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8af2714-1be9-4269-9d1a-a7bd3f79d96c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12866e7-a971-4b57-b970-6f4c7b074605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6282a06c-d45b-4f94-b577-6d58d842f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecf3d61-1ca5-4f46-903e-64a062996004",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a743a18f-93cb-48ea-8d80-81fd27e8ff66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779141c5-3b09-4a0c-a42a-125d954ea606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac71926-a40e-4d35-a0a7-e55ee93fed0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eed23b4-b2e1-4753-8637-cf70b3b7c382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ca7d19-5b1a-414d-b069-22dc18bf87fe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe7328b-0945-4cc3-9f6e-fc66eba28436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac8e83b-c659-44ae-ae9d-24fe8b162174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147a0c80-d0a1-4e63-91ff-a737d6d776ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1650a20-6cc6-45b6-8b23-f73c3f2e8828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93420ebd-47f8-4cc8-9a39-2eec79c7ce1e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea2e8f-d69f-4172-b968-a8ae36a69b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5797592f-4ad6-4040-80a3-0e7adc024860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381c692f-cdd6-4799-98d0-69a3bda9134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e0c0f7-35e0-4d14-84f9-2a99433c2477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019ba9fd-9775-4033-9321-748f936e557c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82b9cf9-7715-4e1b-a1c8-c528c52ec45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a6ef46-712c-4134-8411-712465de7033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289fda68-381c-49f0-8351-2ac09681787c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd717b3-555b-430b-90e5-415009460c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ed4fd9-6e8a-4a13-bf08-2f03e99d389a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d787e36-aace-4e93-abbe-4618bc7895d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db79e369-c397-4d8e-a054-ebb097574a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0686c88e-99c5-4b86-abe0-b030665ba523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25991888-87ea-4562-9742-90a0a18150d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8020f9f3-7473-42e6-8261-2894eae98455",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b153b-9031-4382-885f-e19a0e7c504f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7ea1bb-a457-415c-9b2d-950e38066390"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcf0928-c0db-4ef8-b16a-96d2cac81367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d812d7e5-5d61-480e-9d04-853efc597fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bd13d5-252c-4aaf-9436-b95c412a9caf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c4faa0-a292-418c-bcf5-d3417972f971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93aadcc7-5517-4f59-9625-0ac6bf712370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bfc710-20e2-4086-96ba-63a469b50832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c158ec6-9a8e-4043-86fe-0ee275e3bb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec52fc9c-235c-444e-8312-f19eb422260f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d24e143-8c63-416d-8c48-33a39631f1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0573c6b-7ad8-4f88-a12d-d694b695a219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcf95f2-c178-4e03-99b0-184d08611bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dcd7f6-199a-4423-97f6-7da5dd2e583b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1904a0-c081-467f-b6d6-614eeb5c62a3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2db5c0-17ba-4ab2-a296-9d97ab289d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e5dfbc-5db3-4e78-aa96-d44a0d54be96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49a2cc7-ef7f-4d70-b91e-7079711509bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37d36be-ab68-4578-b73c-c132ae1f3bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26b37d3-3fe5-4314-bda7-8239c12bd2f0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bb6279-4758-4876-a5c8-b71ebb33ec83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d985313b-0406-4b45-b2eb-597246b1be5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b6c853-f210-4eaa-80a8-ff4a316894ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bfbd4c-2322-4281-951e-67cc755facc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649758a6-5ec7-4827-b14b-e8dde470dffe",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61be21e-2b2c-4fed-bf34-01d99411c0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63df81f0-a53d-4a98-a94b-fd62c05fd2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d0786-aa1b-4340-b117-025b3060b2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ad176f-e548-4ea3-8f79-2f9fb18e40a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d66445-12f6-427f-8304-83ead75762ce",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc23dae8-9b4a-44d5-aea0-c86a17377768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84711d28-660b-43d5-8afc-791109d391ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2825794-6165-479c-bc55-bc44c59eb2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ae7e18-f6eb-4da5-8839-e56892b05d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d08d0d7-933f-4f98-85a2-28bd5bc78aee",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511352fc-30b3-46cd-8178-a90664099b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb51c4e-9f06-4fdf-b514-3848350d89c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed0b463-9cbf-495f-b7b2-1448996b2c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f75f4c2-aa91-4f42-b004-a821c6e7347a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8787b3-6860-4dcf-af41-51ea65579b76",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81549483-104d-43fa-bcaf-345d9346486f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6caa4a-458c-49a5-b730-ec3d93d2bafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e030d32d-8d9e-475d-aa76-f73e3beed98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71565ff-2c36-4d19-b7ee-f14ee5528ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01518dcc-c95b-460e-b31a-554615ed3607",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81293b3-e398-4b40-899b-2b142b34f595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56dc667c-8541-48db-b2d8-c553821c8794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a9ee64-662e-463d-bf34-729b226727ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24cb718-97a5-4c63-8cc0-3ae5e1b571a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a940aee6-ae74-4fda-afae-8865261090a3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46acde81-e83a-400b-9737-5a224e350dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae1cbdc-72a1-4271-8101-d7ec7dfededd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb94b4b-1bcf-463a-b618-0b4ef4f4ca24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0375ac84-3f9f-4ea8-967e-e56be096f190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c51a540-5301-48aa-bfb9-29cb7b9702e8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a199d58-770d-42a2-bd5f-bb27202bb229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e585088-5090-4b74-8bcf-0ae71cd96c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc50ae2f-da30-4177-b3c7-8a55bf8ddb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a4251e-3b3a-47b3-a9da-72d285d7ac5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44aad934-a112-4135-8756-20c9a191f31a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dfd67c-2def-4f47-8f62-7e183845016b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7696c59-db9a-419e-abb7-7f1134d5f1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85d3ee0-2e74-45b7-b22b-23b40801e779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b9c6d7-efc4-498b-a797-7c45e523a7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70247ad-d136-4e16-98ea-6c35363ce56e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b7cf7b-9da6-43c9-b256-6cf10b17a165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1e3568-b009-4948-86cb-4b643dfd7054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20020737-0045-47ac-b65b-0e584600f33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1be6e5-e1fb-436e-afbf-1afdff21f365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6047df3-c24c-49fb-9efb-479b7c5cd203",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b906aa41-019f-4c8e-a6bd-24511426fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a20c778-e251-49b1-a726-331fab64279b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81a5779-d626-4088-b780-1e72b5219f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f3723d-dc71-4ed2-9940-5ee96eeb7d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b647d9d7-7863-4736-99d1-dc10bfec99d7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f056fa57-89bc-42bf-83a6-a0070e201f4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af4be51-20d5-4e6e-890b-4b5feb0c3096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24323081-2035-45d7-9ec8-630af78e9a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f0d3b8-4a2f-4d11-bb95-883b5857769b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ec9ab4-f3f1-4104-8bcc-504fad3aca25",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240c65a6-1d02-4c60-9b70-ac76a05e8f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d628d0-b0a3-4ff6-921d-3a7d2fd413a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f96bbd-60f2-4004-a746-8b76035a6c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b4edcb-a081-4720-837b-8193bd85457d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beccd96a-5926-4492-b7fd-7547db71b116",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfcf122-aa03-45f9-9756-5734cd980bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "277e777a-9f33-4df2-b786-01fcf6565bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485c0a7e-3837-4f0f-9626-faccaf53a0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f2c461-0b7a-4a7f-9348-167fdf187dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f35d724-7985-42b4-a9c1-abe593394142",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a856c21d-9cf1-4f00-b794-4515b047f981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9af8f55-67e5-43be-a555-98bea869f14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdd08ae-d4cb-4d98-8727-23919efe8868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a322b12-4517-4d29-b9c0-9acdf557a10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0321aa6c-bc0e-4a96-8d5e-230e06115aa0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7afa4dd-ca3a-43b9-9fe9-989bf2fbe444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25cb00c7-7958-4895-9af8-8c8f58c93856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29f1a69-c770-4148-b588-1c7078f2f25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bd4615-64bb-45af-a83c-a66d1f1059ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4e88cb-87ac-4d74-9c8f-217ae464aa32",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d95b4a-de71-4509-94cf-692f43442058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7382b6c8-1b20-4e80-a24d-7cbf4ac13459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50357207-7180-44ca-bc64-c7ebb68adfc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0addd5ee-7eab-4fb4-8726-494b03d0757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca521ee8-5b2f-4ee2-87dd-a75e502904a3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04da712c-a2eb-408d-ac20-cb2b9f391b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58509199-98d5-4220-81d1-b37af742cde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6805d5-d212-46d2-9086-79e2ee4d2be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa31742-d544-49df-a54c-a3818efc0b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def106cd-3124-473d-81af-b4f85f455bf1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad5c9e8-5fd8-4616-b5f9-005a20a51e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c085593-f000-4a5a-8e40-09b89c3a3c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ce80a4-3f2f-462a-9ea3-03f7d6d0a2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f275ddd-32b0-4474-b276-c034e09913e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0e3d7a-bb39-425b-bfe2-312e5ce2a466",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b2ef85-6d57-4ec2-ae52-f9fcab76efc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08049392-fcf5-439b-837e-0ce3c8453c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f142b9-c7dc-46dc-bd67-4628eb6312e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52343a75-debf-4a46-b900-11cbf00cfda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1034dfd9-868e-47d6-a854-0f1289e5ffd4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ded3da-e73f-4519-8069-2f91dbdc5964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6702e59f-1165-4dc1-8e4b-04a6e2286495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bea1397-545d-4468-b1b5-ae52a131ba2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4440f088-e150-4897-a9ae-f4ffc0e54988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b1212e-1776-46ba-8cd0-e1472dc7485c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7c58b0-722e-468b-97c0-fe178956f725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae18565-6d25-47c6-b1bc-5291b8bba3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bafa749-0521-45cd-97e3-0671a35b94a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c2d8d1-01e0-4260-aee3-88f2252a7384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b31a24-55f4-4f9d-aedc-7c0415036180",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5edbf5-5c29-4fc3-9208-76fa508749e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67eac47e-8863-42e9-b156-fa3bd9f83c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314e8ab1-9ee8-4cf4-84dc-ea4dad927a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1edc8d6-7db5-4ead-9dab-629b306dd47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cef438c-e339-4e08-b70d-2d5aefeaf315",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c8ff1d-2d90-44a4-9cfa-5dab665dcd7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e42b17d8-6cd4-490c-b96a-d2a974b38d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0d9e71-98a0-4739-a7c9-b7d757d228cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27475b6-3af0-4dea-85bc-f16fc68431f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fc010f-82e6-45c7-a150-ec875c228c25",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec1f7c5-990c-4e79-bccf-a05ef1708581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c9466b3-2479-4561-9812-201622da2d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f87697-d030-454f-a7de-54b9b2e46b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24bf1df-d224-4811-be47-c32333e76264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d071d3-67c5-4859-8986-3219fa62b252",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4469031-4fcb-4aa5-a86a-383c7aff987f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e59e870-0a13-4b94-bc3d-3aff8371003f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab29097-53c9-4bb8-b9a7-a822faba5047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68548618-7a28-4bf3-9b45-90be79b2fef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e468e6-bdfc-4c4a-9778-d3d099764825",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d45d757-30ec-4978-a73f-1337e6f557ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e2799b6-d20f-4556-a94f-cc82ea8c1156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aaef21-0f90-48c1-9e99-ecf1cbb0a007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3c9939-5bd7-40c2-8227-00f18837a96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f32159-2d64-4375-9300-96741ba67d7d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d182c925-902a-4ba7-a829-411b21ab347b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba2aca0-f9f9-4b66-a951-861230f1091e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7f13f3-0e27-472d-b138-439338cf83d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7c3516-fe3e-48d5-ac76-32197f2bb625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a11da9-06d5-4d5b-a94c-0a3d69fd6e4f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102d2938-a46e-4c61-aa20-68e07ca00ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3215089-b84a-491e-982f-76b21aacffec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985232ff-a394-44a9-a0ca-c4ada91960b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191ebd12-049c-48e3-9d82-3a72df848f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039bb02a-3d95-47f9-91ba-63cbc04cec53",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3f7288-8221-4567-a7e6-b9856910390d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf9fc08-0723-41b0-9db8-8a623c57b4f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55197a6-4ebe-48c3-bb94-2f9fba2ae3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377e125f-d19c-4c85-a132-41c90cd11c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46692799-1b29-4c50-ae25-b936c8927782",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95e9580-3ef6-48d4-83df-c6cdaada52b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6422fb3b-e122-4582-968c-76ea7ecbff0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655fe293-54ec-4375-b81b-e84658ededee",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e03a00-5a63-48d6-a432-d7fb82cf507d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe0e7a5-62f0-474d-9f10-46504755d385",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cced6f-5c3e-4fda-b8b8-d4491f5d03fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa116d7-3ff5-4e82-a46e-3bfafe9cd7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2319a9-f748-433a-b15b-710b5ccf1285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fbb4a4-c23d-4bae-bfea-881e9f8cff3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcd5096-f557-4f5f-add8-ca418528044f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cce257-2f10-439e-8fe3-9691ad94d4be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bcee21c-5912-49df-baca-d03e9e88de7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db74e5b-a789-46e7-9026-ac789d6cb122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d05bf2b-fe44-407c-af44-c4fed04cef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c96e4bd-8517-4377-946b-d4b2ab65b011",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16db44dd-7269-492c-892a-4706b084ecfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93035e57-7f7d-44e5-9cf3-b514df066b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a680dcf-5fde-413d-8991-b06faef3e021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd480b4-6299-41c6-aa04-2bd702c0dd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b0f994-f66d-44e9-ba4f-0f7338bba4b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdcf1a5-41a6-42c3-af5b-04e4ee08dceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cade3c88-43ae-4496-a66f-30deae1d4a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d9786-2678-43c1-8d88-30af2087f544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533197eb-1b74-40a5-9dc5-c96a1c2dd8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e9bdc6-7162-4e36-bbc1-7d2790d92543",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770b4f33-2bc9-4f02-b93f-8538673814d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a00298d-e156-4da0-9f38-3191e4139428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654d3b53-6625-43be-9cb6-5620a0cc045e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be37eed1-1d0d-4fa8-9045-45cc39153326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbacec46-1b5a-42dd-801a-69232ddb874c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13ea882-c031-4908-ba66-4757edc44087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0301088-4ac4-4162-85ae-af130f3157ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8086ab6c-704f-43c4-8435-a8e8d3c08d22",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f38e403-ca8c-486e-b2d5-55754d0ae8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbbd57f-4c95-4f6a-bb28-02dba8dc8c24",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77630c5e-c51f-4ee6-a950-0b72ae4a4cfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e77ea0e-7177-4208-b6db-63ff795d09ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb70b26-e12b-4739-88c1-5ef6ea977302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aaf415e-ae38-4c4e-b998-3e57a0206bcb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1807a502-2006-48d0-9f14-962bd27d710a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d6a640b-48fd-43a2-9774-00bac83a50a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f168c869-8175-4b78-8928-f8ebe0da9480",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "865dece3-7825-4b1b-849d-2b4cc4dde1ab"
                    }
                  }
                ]
              },
              {
                "id": "5e3827fc-cf85-4d24-9e34-18613addac84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eda16aef-a408-489c-bd69-ddc676948e29",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4550358-ecc7-4fb8-a393-9cf31c66838a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e3dd3f6f-8358-4440-8851-4ffd82decb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898c35ad-04a0-4dad-9ec4-290b916b562f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a16753d8-27a2-4017-8ec9-056dfc39bab1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39385f4e-fb66-4470-b3b3-b2598f11a1a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20227a24-865d-4b07-8805-8502ee556cd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ae5f4ad-4260-48b1-bd72-bdaab39901bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ef7b020-edcc-4be3-aa7b-7766fa5ab964"
                    }
                  }
                ]
              },
              {
                "id": "c8f34329-5700-4603-902d-1166a3ab8297",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3bc5e4e6-3a40-4374-99ec-2f997380b876",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32917b6a-149a-4dbe-88ce-c0a81d44fd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0fd2566c-5255-4c08-8fe7-1a5194f8cafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246bf5d2-1801-4956-8774-5d552a339254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387f298e-5231-40e7-bf16-f1966ff104ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f0f574e-8222-4879-a400-6f13df1a5215",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68b3a7a5-cfb2-4d7c-ab25-285b4a417a97",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cb535e2-404e-4fc5-9b2c-652d8f5c4786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "523789c7-defb-4de9-ae71-f6e326e91a22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea6b01b7-f152-4fc2-b04f-87d95a9f4547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b41f533-c687-41a2-9835-14848c0fecec"
                    }
                  }
                ]
              },
              {
                "id": "38286f2a-5fb6-449b-9ae2-a1239cc7b332",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4184f7ba-005f-401d-a7e1-cc542c3342c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3cf3163f-b7a1-40e4-947b-5a062f0f51e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d44dcfb-9151-4aca-8d08-f2fb34762178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e1fea8c-aa1c-4a6d-86bd-d5dd8fc088b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3de93df4-7d23-4121-ac2b-101ca44a2525",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2795e376-fabf-4406-ba88-845c4a53efde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07e065b4-d539-4cc4-9c91-54f0bb627042",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d62f689-bac9-40f2-b539-92ad721ce693"
            }
          }
        ]
      },
      {
        "id": "2874c50d-0862-442a-8632-d51561e9f211",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "585762ad-1fd6-45af-9db1-8be6a4157f66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd0a8878-8267-4038-8f04-df0e2a1b3617",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a87c10c-0789-4429-81f9-f8cd093baeb6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83355b12-6458-49fb-9421-5c8b98e01fc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c3a1a4a9-53ab-4d96-804e-340b095c39e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232c5d19-755d-4a68-a52d-f152d3b5e07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e97124e6-5aa4-40d6-ac67-ae9a9dcea956"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa5f67ac-b623-4441-abb0-892fcc8ab898",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b83bac9-3894-4518-a5c6-f5382b887218"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ab51c10-f4b9-45f1-83e3-71b09d8f82c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bdf57fd-14c7-4a1b-8030-5f56ed4475cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15d19996-cdc8-4276-8043-55de8326fd87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "65f30cf2-ab5e-4bc7-8ab1-a1af9cdae937"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6752502c-09ea-40cd-bdfb-87ddfdf2986d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17795865-21ee-4473-bd84-1a2acd5a4bf1"
            }
          }
        ]
      },
      {
        "id": "a00c9fcc-e35f-492c-b81d-e57ba659f3d5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4f827ea5-27d2-44a8-b2e3-48024f6de109",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea72537d-e182-4731-98ef-e3aad3553a53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b43eef0-6fd7-4baa-9a82-df83aa35901b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f3cc5f-e7c9-42cb-a8e5-12a5b96a9e8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "864949a5-3974-49cb-b05e-c0e72af99497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0919cc99-6a6f-4cac-8fe5-8e7e02aa7d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "557d1238-8744-49bf-bb1a-d6b713cc4535"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a16a1dcc-15ef-4b87-82da-5146b2298836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3d3bb31-099b-4a82-9d0f-c909f1307789"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5736c5c0-b0ab-4ece-bc04-a4588d83e35b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "028e8b75-b0b9-4590-8962-8799915a307c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56f88f2a-b8e5-417b-851e-b4765d2e07b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "327a91e1-80d1-4197-b89f-f8ced50ab7de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdac121d-9eb3-408c-9b70-cae266c09d2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1259688-a410-465d-9e78-249685adb3e0"
            }
          }
        ]
      },
      {
        "id": "266f3ceb-fd50-4790-a1bf-b3d09a8c4186",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "12961705-cade-4628-b023-6b1157ec59ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4ca108d-8256-462a-a0fd-fa6f2cd42e76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5a11aad-8d00-49b6-abfe-28f99147e713",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22d9b05-71e3-4052-ad37-db11ff716b05",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a16035-327a-4d17-a51f-d559e7760d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5349f431-607c-41d6-9c01-ed38665e15d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ae1e8a5-5ddf-4c5e-9128-9078e5b41103"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03abad5c-d120-4996-bb61-1c4d9c7fd329",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "553a7ac4-bc5a-4d3d-a301-a1827f020092"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8ee36f3-7ecc-4c4f-b474-a334084cfc1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fcff26c-476d-4610-a506-75d014f7e699"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98c73014-8371-4165-b8a0-1d204541a56f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f7180d3-3681-4dc4-abba-635427a43d98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "581c9a0d-cc79-49e4-9294-6bc1845caf26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a871a366-1b7e-4c67-9714-9ce40b39ee5a"
            }
          }
        ]
      },
      {
        "id": "26434270-1c7a-4131-a605-5a8f6d06e76f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a5ffb6a-c893-4443-bd79-12e620d1f289",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ee8d5b6-ae1b-47a0-85b0-b678ba28196a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7e4d5e57-377f-4994-9cf8-c726e88e53df",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "050dd97b-c8f3-4045-ba04-7167012a1880",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "674674b2-a18d-4c68-9cf5-bc4239a24a31",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.86178861788616,
      "responseMin": 15,
      "responseMax": 277,
      "responseSd": 22.427960628177008,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686789706651,
      "completed": 1686789727385
    },
    "executions": [
      {
        "id": "650a2402-65be-410a-93ee-1d49899d6e28",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bd6d1837-54b6-4e0e-855d-8821523fbdbe",
          "httpRequestId": "0155a553-20dd-4cfa-b2f8-86d015d276ca"
        },
        "item": {
          "id": "650a2402-65be-410a-93ee-1d49899d6e28",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "92bc1195-bcac-4a81-aaf6-7c56943094b5",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "5e5e06ff-0ca0-4664-a820-6b2b2cb72d4f",
        "cursor": {
          "ref": "bf597f7b-8660-458c-8722-f4f23f12c9bc",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4f925cbd-8b2f-4a3a-a883-f07c130ed866"
        },
        "item": {
          "id": "5e5e06ff-0ca0-4664-a820-6b2b2cb72d4f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8d96a0ff-33d1-4ba6-88dd-f23c59608a1a",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "20257539-1440-495d-8539-a97da815368e",
        "cursor": {
          "ref": "6c86feae-2c2d-421c-8836-f2b9f0296e4d",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "773641e6-68f8-4e67-96b5-1d13babac644"
        },
        "item": {
          "id": "20257539-1440-495d-8539-a97da815368e",
          "name": "did_json"
        },
        "response": {
          "id": "2b7999ce-3458-4944-a991-842237e8f73e",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c04b80e-06ef-47c8-8623-37bdc3329a18",
        "cursor": {
          "ref": "4ba200cb-bdfe-4072-938f-6425b4a765ea",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e4373f7-7dfe-467e-ad3d-9ac5af1752ea"
        },
        "item": {
          "id": "5c04b80e-06ef-47c8-8623-37bdc3329a18",
          "name": "did:invalid"
        },
        "response": {
          "id": "77e2a707-0620-4537-95ab-82affa86f830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c04b80e-06ef-47c8-8623-37bdc3329a18",
        "cursor": {
          "ref": "4ba200cb-bdfe-4072-938f-6425b4a765ea",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4e4373f7-7dfe-467e-ad3d-9ac5af1752ea"
        },
        "item": {
          "id": "5c04b80e-06ef-47c8-8623-37bdc3329a18",
          "name": "did:invalid"
        },
        "response": {
          "id": "77e2a707-0620-4537-95ab-82affa86f830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41a06d1-8cd2-4fe2-9ca6-8374d7f3234f",
        "cursor": {
          "ref": "e99ce410-49bd-44ae-9b87-6541d0d2e855",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a4f77453-f536-4bd3-9166-67022c7b7ab7"
        },
        "item": {
          "id": "f41a06d1-8cd2-4fe2-9ca6-8374d7f3234f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "76afbef3-ec56-482f-8877-0fe2fc1b0ae8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70c77e6-c741-4718-b403-8db734ef9ba2",
        "cursor": {
          "ref": "3c2e58a4-7cd4-4247-9a7c-63206e5b4d16",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7dfdbbb9-c641-4107-b052-08b6dbea7f36"
        },
        "item": {
          "id": "d70c77e6-c741-4718-b403-8db734ef9ba2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c615c41f-5fd3-4da5-aafd-c9024bfe4bb0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7b8642-4d95-4c91-bd38-4055a3eb86f5",
        "cursor": {
          "ref": "50a1bf42-a94a-412f-a0be-0f28dbb3e71d",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "07cc9e3e-2c33-4c2a-894e-640b4bd3f4e8"
        },
        "item": {
          "id": "af7b8642-4d95-4c91-bd38-4055a3eb86f5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bb0fdd3f-8588-42ae-b257-16ef406bd5e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91ae08f-9167-4d5b-9fab-8c1d8b9520d6",
        "cursor": {
          "ref": "2cc596e5-c863-4499-8d6b-be15799626b4",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b9b2dc52-5fb6-4b2a-810d-14f962ee4e68"
        },
        "item": {
          "id": "c91ae08f-9167-4d5b-9fab-8c1d8b9520d6",
          "name": "identifiers"
        },
        "response": {
          "id": "7a16f5ad-ae2e-49c1-acbd-2e269b7a05b5",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd1d7ba-d881-489b-993e-14fc0b7230ba",
        "cursor": {
          "ref": "2438cb1a-c59d-4b57-9256-343ad061383e",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "852092a2-e6b9-4168-b512-de5342d6416f"
        },
        "item": {
          "id": "4dd1d7ba-d881-489b-993e-14fc0b7230ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "55baf285-2131-4cc7-b202-b6fdc6f35eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed6e5db-6c9d-4eba-93c5-4f0de27861c1",
        "cursor": {
          "ref": "0cd673fc-2b50-42b0-91db-d31fd529cb3b",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8d95245f-fd29-4702-a20a-c0749e882ce0"
        },
        "item": {
          "id": "bed6e5db-6c9d-4eba-93c5-4f0de27861c1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "32440004-ca35-425e-9c4e-e3e9a379ac02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0748f3f9-78a3-4018-b00a-74ceb3ab9958",
        "cursor": {
          "ref": "58df9c7c-51c2-421a-b8b2-f8067219cf33",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "265b323f-99d0-4f97-bb55-eb8000f7110d"
        },
        "item": {
          "id": "0748f3f9-78a3-4018-b00a-74ceb3ab9958",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f696dc75-0312-4986-a729-4fb92ce44bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b1d0ef-412f-4000-8c49-4b122ccc70b3",
        "cursor": {
          "ref": "075e6c3b-b02b-4f63-8273-490b7cd503f8",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f69bb40a-2636-40e5-a192-7f5f901a49f8"
        },
        "item": {
          "id": "30b1d0ef-412f-4000-8c49-4b122ccc70b3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5a9c9f2b-bcb5-4bd1-a8d1-b0679d5bbbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d0e2e7-ed55-4362-80bf-f5668ec203d3",
        "cursor": {
          "ref": "b0b2becb-2a6b-4b73-a8bd-054f1c332fc9",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b8fe4d6c-7844-41c4-a4b1-84da7ca48743"
        },
        "item": {
          "id": "27d0e2e7-ed55-4362-80bf-f5668ec203d3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6955ecc9-919c-476c-8bed-f0e5c97bf60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547943c1-fe15-4c42-bf3e-910472c19b9e",
        "cursor": {
          "ref": "0a620d79-5768-40a9-85cc-aa663023d052",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ef85a57d-8c05-499b-be04-56bddddf03bf"
        },
        "item": {
          "id": "547943c1-fe15-4c42-bf3e-910472c19b9e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "86436d80-4b61-4d47-8887-5d2dd4021e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7658532-d51f-4f27-a748-b4299c16f5ec",
        "cursor": {
          "ref": "e63e3f00-e384-4bed-8f16-b09e24f0c248",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eacdf58e-8246-434d-9b03-82970679049e"
        },
        "item": {
          "id": "d7658532-d51f-4f27-a748-b4299c16f5ec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c07491c6-bd89-4dde-a1c4-50d9f13fc58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a694bfe5-2b44-4134-aeaa-bb82cbdd85e6",
        "cursor": {
          "ref": "345eb335-8762-4abd-9992-7096a4d6b637",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "70d1b60d-5fe1-4ba3-8cbc-0f1e1dfcf645"
        },
        "item": {
          "id": "a694bfe5-2b44-4134-aeaa-bb82cbdd85e6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9a96b151-eb10-4c25-9e2c-acdb2e1dcab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652e3b8b-0ed9-4ce8-8a95-b23c9f053748",
        "cursor": {
          "ref": "63e90e1e-0cf9-465a-8041-4d94753a573a",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "91d53062-7b15-410e-a500-c18428d1635e"
        },
        "item": {
          "id": "652e3b8b-0ed9-4ce8-8a95-b23c9f053748",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f3a2f5ab-1113-4046-ac68-b6421771d00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b98134e-74cb-49ae-baf9-da5b95b1c26f",
        "cursor": {
          "ref": "fde3336d-9947-4f2a-8b94-3d8295bc6a53",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ef7b40d-b39d-41d8-b325-b348d3f5205e"
        },
        "item": {
          "id": "2b98134e-74cb-49ae-baf9-da5b95b1c26f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "393bdfad-e231-4646-89c0-83d8ecb123c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51906fb-a1b6-411f-9ee7-c548c46a4818",
        "cursor": {
          "ref": "7124d0f9-675a-4c1e-82b5-7be240e33123",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "06bd899c-1677-4ee0-9d3d-827ad14b6a80"
        },
        "item": {
          "id": "f51906fb-a1b6-411f-9ee7-c548c46a4818",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fc8da831-d188-4375-a902-94ad20d59072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb047fb6-e3e4-45c4-8baf-935d0c4a6bd6",
        "cursor": {
          "ref": "702f5923-2ee0-4d4f-bac9-0349c9b7de02",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "737c2138-f687-47a0-9dde-60e432c04b58"
        },
        "item": {
          "id": "eb047fb6-e3e4-45c4-8baf-935d0c4a6bd6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b6fe8ab1-b627-45f3-abb2-c0920b585859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae8dcdb-3f5b-4e18-b1be-eba447fabc6f",
        "cursor": {
          "ref": "a8660037-d2b8-44a6-8105-9d48a47ed663",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "533cd7f6-5a1a-447f-9f07-3e64921957ed"
        },
        "item": {
          "id": "aae8dcdb-3f5b-4e18-b1be-eba447fabc6f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1c3d6406-4d9d-4578-ad61-ba39e30a738c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f0a280-a69a-416f-af6f-894b7d1316dc",
        "cursor": {
          "ref": "10067c6a-4a7b-4534-ab90-f6b43b45b9be",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "50945879-51cf-48f4-9a1d-ce56a4bbedac"
        },
        "item": {
          "id": "51f0a280-a69a-416f-af6f-894b7d1316dc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "579ff6a7-0285-4b81-89c3-08d914e71dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f695324-acf5-4dea-8f5a-0301e625ade3",
        "cursor": {
          "ref": "4b485007-f96d-47d3-a07a-6d4407c6a034",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "98b8c27d-b612-4eed-833f-f803744ccd87"
        },
        "item": {
          "id": "8f695324-acf5-4dea-8f5a-0301e625ade3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "32e583c6-bd75-4379-915b-518cc6df020b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20cdc7f-6539-4ec2-9f76-5fd50155e024",
        "cursor": {
          "ref": "9d88a48f-f219-41a4-b2a7-3a48f1c98e1f",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "78f78b46-1d44-4a05-80ce-f4ca6c219d6e"
        },
        "item": {
          "id": "c20cdc7f-6539-4ec2-9f76-5fd50155e024",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "90916aa1-f98e-420d-87f8-8e43626650a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8a931f-3119-4d2a-adb0-783ced141e4b",
        "cursor": {
          "ref": "854b5cd1-732b-4a40-9fd6-c98fb933662a",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2fb6f77e-355e-4208-93bb-c65326009660"
        },
        "item": {
          "id": "5c8a931f-3119-4d2a-adb0-783ced141e4b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e861fba2-0df2-466f-8fe9-5a426a6d4608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b049c1b5-f62b-4dc1-a42a-dd13b181fda0",
        "cursor": {
          "ref": "74f71b52-2fcf-4e48-9f68-03c81c9d0d3e",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f00694c8-bf36-469a-b5ec-72f16214251c"
        },
        "item": {
          "id": "b049c1b5-f62b-4dc1-a42a-dd13b181fda0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "272eda47-02fe-449e-99e7-6bca976ebd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc1b6c9-a278-4b0c-97d2-7f7e9162cfb2",
        "cursor": {
          "ref": "9c417c6b-5352-4826-b5d7-253ff6af35b5",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "33e2b073-f082-4f56-9410-63bd3b0a80c1"
        },
        "item": {
          "id": "0bc1b6c9-a278-4b0c-97d2-7f7e9162cfb2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f554f6e5-2b21-4298-9803-aa38387280b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fc4ef6-edb0-42db-b8a5-b5afdbc28f97",
        "cursor": {
          "ref": "452caa91-ce4b-46fb-970e-7daa96ea0ac4",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9a07107-1f5b-4d42-ba25-1dd30174963c"
        },
        "item": {
          "id": "74fc4ef6-edb0-42db-b8a5-b5afdbc28f97",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cd8ea07b-3db9-46c5-965e-a27bb220de04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a46c5d-abba-440f-8460-297347503110",
        "cursor": {
          "ref": "c32ac95d-76e6-4eb3-a8ba-03c3bb0ca9f6",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "324d7b71-a5b7-4961-859e-b59b60e90e7c"
        },
        "item": {
          "id": "94a46c5d-abba-440f-8460-297347503110",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "78d13e19-2d12-416f-a5a8-9b686d08f430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb3f127-dc42-478b-88c8-0fe443a2bc85",
        "cursor": {
          "ref": "847f9c54-3e31-403f-abbc-53c789d2812c",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bc048282-09af-4396-b1da-1b23dbe383ae"
        },
        "item": {
          "id": "0eb3f127-dc42-478b-88c8-0fe443a2bc85",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ee1dc81d-65aa-40a2-8164-7ef0dad1c1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fbfd69-6033-45a4-af76-eaef495d942b",
        "cursor": {
          "ref": "3cebd188-3800-43e4-8717-0a95dc1caf8f",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8be63709-18ae-42ca-ac85-4f68fda36e19"
        },
        "item": {
          "id": "a2fbfd69-6033-45a4-af76-eaef495d942b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b2925819-a072-41bd-858c-30058ba7cde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb620bb8-3a74-4c43-861f-f080edc06312",
        "cursor": {
          "ref": "ae124c7a-beed-4269-8c0f-399bfac2cac7",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "023da462-c260-4603-b3f0-b44895c023cc"
        },
        "item": {
          "id": "bb620bb8-3a74-4c43-861f-f080edc06312",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0a5540e2-55cc-4e57-97f0-6a28df360080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f92ed10-2eb8-48dc-a222-2f216ad195c3",
        "cursor": {
          "ref": "40331812-8fac-4aef-9886-e7c04af3e7cb",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "55535348-c09e-4794-8cde-5f8c2b4f93f0"
        },
        "item": {
          "id": "0f92ed10-2eb8-48dc-a222-2f216ad195c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a720ca2b-ff02-4f80-ab25-f7ed7a16b136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e13945-459a-4810-81b9-bfcfd4edda55",
        "cursor": {
          "ref": "ed50927f-b22a-49f2-868b-1ee138ff3d4a",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7d12bdaa-0bb4-4f82-8f64-e77e180b4f30"
        },
        "item": {
          "id": "87e13945-459a-4810-81b9-bfcfd4edda55",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5a0bd019-26f1-4542-9884-9a6c6d748f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8604656a-41e5-47b2-8f8e-0ff840519833",
        "cursor": {
          "ref": "d0188e92-b2fe-4df7-9c17-680bdac91565",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0010a642-a009-43e0-9380-6cf826a7c06e"
        },
        "item": {
          "id": "8604656a-41e5-47b2-8f8e-0ff840519833",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "151d2532-d3c1-47c0-9a05-5845d20378ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f83761-92ee-4da0-a353-da517dd9ab19",
        "cursor": {
          "ref": "a8dc0f71-8c63-4eb7-ad88-ea51357a0945",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cdf5a3e5-b7d1-46fc-8e97-4ba039d36217"
        },
        "item": {
          "id": "91f83761-92ee-4da0-a353-da517dd9ab19",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a206b7c5-b89d-4275-b293-8db0d810a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb00adc-2fac-432b-b9c9-062397cac4b5",
        "cursor": {
          "ref": "b0c2272c-dc9e-4563-8aed-fc5518d7d8b7",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7ef61640-6ca1-46a7-895b-cc1aea59b6c3"
        },
        "item": {
          "id": "ebb00adc-2fac-432b-b9c9-062397cac4b5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "60a19aec-60d3-4276-b02b-4bdd32a51f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ccc49b-8815-4206-9825-594b992659c8",
        "cursor": {
          "ref": "8c8c9c5b-06a2-4dc3-a978-9f638bce1c42",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ef54c332-e58b-49eb-872b-da2abe1b6365"
        },
        "item": {
          "id": "33ccc49b-8815-4206-9825-594b992659c8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7db79e3d-67c3-4b8a-bdcd-28ffb695cb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8593c45b-2f19-4543-9129-db5bfb27cbe9",
        "cursor": {
          "ref": "9c96fb92-71a0-452a-bc00-d2e3c0ed5430",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "86ed38a6-711d-40e8-a66b-130dd3e3f851"
        },
        "item": {
          "id": "8593c45b-2f19-4543-9129-db5bfb27cbe9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "29c4aa53-b039-4f17-9d1f-5e6517702be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895b63a8-1d14-47a6-8049-8029b8f4ee6c",
        "cursor": {
          "ref": "95d9b6d7-17f6-4ccf-b665-0413f8eff53a",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e429664e-6b97-49f9-ad2a-19a5af741e78"
        },
        "item": {
          "id": "895b63a8-1d14-47a6-8049-8029b8f4ee6c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f0496b44-9738-4cb9-bf63-269ab705dce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0333e4e8-ba75-4b57-9039-44f56bb7fd46",
        "cursor": {
          "ref": "f76eddf9-cd69-46ef-8861-ff155dd72619",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5a66b027-a723-41d7-90eb-2b07c03a70bc"
        },
        "item": {
          "id": "0333e4e8-ba75-4b57-9039-44f56bb7fd46",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a02873ad-ac1e-4cd6-a2f7-5f553c1fe3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe8b454-dd31-47f1-97c4-9a21997ae1a2",
        "cursor": {
          "ref": "d7d31402-9ef0-452b-b2ab-564cd1ecbec4",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b878e597-8a3e-42c4-a3bb-8fad2aa5900d"
        },
        "item": {
          "id": "abe8b454-dd31-47f1-97c4-9a21997ae1a2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "683f495b-8a4a-459f-99bc-493c5f295b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011f7cf4-25fe-43ca-b1ab-92a80ea7c2f2",
        "cursor": {
          "ref": "6081dc59-1948-4d3d-8a47-29074fe45165",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e5cf99d3-fd4b-4a13-960f-aa28e05196a2"
        },
        "item": {
          "id": "011f7cf4-25fe-43ca-b1ab-92a80ea7c2f2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bb07fd92-5d0d-4d8e-81e4-9358ecdab172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7aab8b7-e05d-48c2-af83-349083f3e0c5",
        "cursor": {
          "ref": "a7a24fc5-c30c-433a-ba7e-677c481bbc5e",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e9dbf7e6-dab2-412d-b5dc-230e3dda4635"
        },
        "item": {
          "id": "a7aab8b7-e05d-48c2-af83-349083f3e0c5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fd1ef579-0966-4c28-8fe9-845de6f461fe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f60f9e9-5019-4ece-9f12-7feef223e744",
        "cursor": {
          "ref": "7daa6f60-ba41-41fd-9650-7372122b99cd",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9c2e3d99-b157-457e-8a62-f15594564f3d"
        },
        "item": {
          "id": "6f60f9e9-5019-4ece-9f12-7feef223e744",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5760f1b8-23d2-4ac6-8940-cae6c0c0de42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1509bf-09c2-4d17-a434-d4419c24a29a",
        "cursor": {
          "ref": "755c3981-438a-429c-83d4-84e14d72a35f",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1a56c30f-fbfe-4447-8f2e-fee5ba9413e0"
        },
        "item": {
          "id": "7d1509bf-09c2-4d17-a434-d4419c24a29a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6031bba5-56b0-48ae-b625-f5268e755c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a70b0a-e77f-41a6-9704-8daff6e023da",
        "cursor": {
          "ref": "2ee90b7c-e721-438a-841b-4ec4aa9ce1f3",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dca20b44-c47f-4fe0-9cb9-b152c738d9dc"
        },
        "item": {
          "id": "80a70b0a-e77f-41a6-9704-8daff6e023da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4cadd7e5-73a7-4c9d-8491-ffcdd015d597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220e5205-4ba4-4fbd-8e30-9692aeb43ec4",
        "cursor": {
          "ref": "ac82e829-c01f-4d26-8bd5-1bd47a1eeaf0",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ea63e164-454e-425f-823c-63a2d7b36a27"
        },
        "item": {
          "id": "220e5205-4ba4-4fbd-8e30-9692aeb43ec4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c769c32c-278f-4a23-ba1d-fbec1bc32a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5634b69b-ee2a-4c07-9a61-6a7796f4630b",
        "cursor": {
          "ref": "8a0422f6-6078-44db-a090-61cc635f61bc",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8b0272be-c39e-4579-b325-a28bd04022cb"
        },
        "item": {
          "id": "5634b69b-ee2a-4c07-9a61-6a7796f4630b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "daa6f8c1-98b0-42ad-b8ec-c699ab9a7611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38fd3284-226c-4a48-9772-f086a6e43777",
        "cursor": {
          "ref": "f68d951c-8262-4e8d-abef-9bc3ef402b93",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c38aa69f-51c2-4ee1-adaf-83bf39ff6a29"
        },
        "item": {
          "id": "38fd3284-226c-4a48-9772-f086a6e43777",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ce6f4177-6a46-4e25-b7c6-177788cd35ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0217faf-ad53-420b-a92b-b84bfcdcf111",
        "cursor": {
          "ref": "bdf475ce-a5c6-43bc-a7a3-a0901a4bc035",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "59a62e26-12ec-433c-8a1c-65214c1c3a16"
        },
        "item": {
          "id": "a0217faf-ad53-420b-a92b-b84bfcdcf111",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bbcca91a-1010-4f0b-82a3-6ba2b550ffff",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60518c9f-e74a-4d5d-a4e4-d196907d6227",
        "cursor": {
          "ref": "67d369f0-a1ed-4760-b923-3a244c62f72c",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "238ade6f-7570-4b73-99c6-de7e8ad90b15"
        },
        "item": {
          "id": "60518c9f-e74a-4d5d-a4e4-d196907d6227",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "966e9e1c-0df0-42b8-b00a-1d6513fc9856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad29426-9ca6-4469-b1de-7c8af740a4b2",
        "cursor": {
          "ref": "61c0161c-ad7e-4144-a769-16b5f46d892a",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a453df16-c13b-44ba-b97a-38471ad00fb2"
        },
        "item": {
          "id": "7ad29426-9ca6-4469-b1de-7c8af740a4b2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d5e22cdf-4362-4264-8f49-c21700bb4f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a289b32c-562f-482b-a626-e40346512c79",
        "cursor": {
          "ref": "ce0d46ad-959a-48c0-8ff0-e12970c23faa",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "87935e5e-325e-40de-889e-cb44be7a66e4"
        },
        "item": {
          "id": "a289b32c-562f-482b-a626-e40346512c79",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b60896f1-95ce-4b02-9065-643be635bfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf343248-586a-431b-b0eb-a807547e2cbd",
        "cursor": {
          "ref": "6dcac94a-f3e7-410b-90b0-3090f7e215d5",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2d2ef75a-43f2-4741-bd14-4f0350d9abda"
        },
        "item": {
          "id": "bf343248-586a-431b-b0eb-a807547e2cbd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c90dc814-3184-455e-aa8a-061de2218876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d33245-72c8-480f-acc4-1c037b053499",
        "cursor": {
          "ref": "cad0c98d-4ad0-4192-99d2-8db04b2b756d",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "523720ee-12b4-4fbb-9152-c33fb310264e"
        },
        "item": {
          "id": "78d33245-72c8-480f-acc4-1c037b053499",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8e755a00-2648-4417-bf7b-4fdaf5ab57e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f28978-d01e-45ed-81cb-42368c7912d8",
        "cursor": {
          "ref": "946c6cc8-1061-4d88-93ba-0ee9cf962b3c",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "12a42ea6-7db5-4b74-8d20-044cbfd5e87b"
        },
        "item": {
          "id": "18f28978-d01e-45ed-81cb-42368c7912d8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "61c84ec7-5227-417e-a33c-6c94d368e481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f04b98-c48f-4ecd-8a19-097ef423223a",
        "cursor": {
          "ref": "2cfbe2bd-b15d-4e83-903a-abc9aea803d5",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6174fc97-5340-4bb6-8b40-c9048726f76c"
        },
        "item": {
          "id": "a6f04b98-c48f-4ecd-8a19-097ef423223a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "317d629a-3949-4363-8912-ed804704cd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104c658f-0ce2-48d5-bc85-58a56be35e8b",
        "cursor": {
          "ref": "7dcf8aae-8476-40bc-956c-ed99594900c2",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6fdf39e4-6a24-4b85-a037-3fb015214bc2"
        },
        "item": {
          "id": "104c658f-0ce2-48d5-bc85-58a56be35e8b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "554bc148-e099-4c6e-aab9-12ebe6fa5bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b734d87f-3f69-4ac3-8d64-8e745d95b632",
        "cursor": {
          "ref": "30f4fcf5-5d87-428e-91a5-a8c46a32dd25",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e4599d6f-e974-421d-94f9-3d2a3999f9ff"
        },
        "item": {
          "id": "b734d87f-3f69-4ac3-8d64-8e745d95b632",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7d75c572-4851-4b1d-ba4f-c03430316046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b517eb-ae66-44eb-a303-21941304a34d",
        "cursor": {
          "ref": "8ff860cc-d075-4ed2-9ce1-cc3e48225b91",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "19f84f12-598d-4cfe-8b84-ce0fe704b778"
        },
        "item": {
          "id": "48b517eb-ae66-44eb-a303-21941304a34d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "de4f6e7c-78fa-4b52-8129-f9462687706d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1e3d25-baf1-4f11-9beb-c8a505e69d9f",
        "cursor": {
          "ref": "e9fe61c0-5462-4aaf-a9c3-bd489f165e82",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "192a3485-4b23-4248-b895-3724f438e2ca"
        },
        "item": {
          "id": "9e1e3d25-baf1-4f11-9beb-c8a505e69d9f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c0f6b999-7706-47ff-a009-9eb6e03e94c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285553e0-d99d-4415-b254-4db3346bbe3c",
        "cursor": {
          "ref": "d06681b2-4632-45ea-bf69-c08e754902bb",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "082991e7-55a6-45f5-8498-0f5c6a98d0a9"
        },
        "item": {
          "id": "285553e0-d99d-4415-b254-4db3346bbe3c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4dbe76f2-0903-4571-85f5-7535cb25383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e25562-3098-479d-b136-0f9665e8bdf5",
        "cursor": {
          "ref": "68517107-396e-4105-92c1-17ea5429df3e",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "55993ce4-669d-4f02-9d6f-978b6ce4cb61"
        },
        "item": {
          "id": "03e25562-3098-479d-b136-0f9665e8bdf5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "46e1c81c-c028-4c4a-8c04-1621d7e40db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dd9460-9714-4fb1-b4c5-3f781d3f2461",
        "cursor": {
          "ref": "d86861c7-4d7f-4492-ba38-2d2321ac6ae2",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "98b894da-8003-4e1d-807f-17bee6306528"
        },
        "item": {
          "id": "82dd9460-9714-4fb1-b4c5-3f781d3f2461",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9ccca7fe-1317-4d92-aedc-5d99c24ca407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073e9893-ed61-47c6-afd6-46e36ad32773",
        "cursor": {
          "ref": "4e7565ba-a6a9-45c5-8617-09d726cbfb60",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "81739f74-9c23-4537-89f1-c07a36dc5808"
        },
        "item": {
          "id": "073e9893-ed61-47c6-afd6-46e36ad32773",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4f6886a4-2b86-4195-b11a-7fac03acea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dabf114-6eb9-47b6-989b-86583be61d77",
        "cursor": {
          "ref": "5850c300-9d33-49f9-9e4c-edc65011fd11",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4e8ff8a4-bff0-4f2d-b635-b87941e6145b"
        },
        "item": {
          "id": "1dabf114-6eb9-47b6-989b-86583be61d77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1eedab2e-cc74-4935-b84a-0ab91c2796d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078bb621-361b-4151-abc5-490dba4088b9",
        "cursor": {
          "ref": "78fe0b04-db25-4cbf-9259-e9e101f431e2",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d37a94b7-9711-48e8-906a-fa2a2f06d9f0"
        },
        "item": {
          "id": "078bb621-361b-4151-abc5-490dba4088b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e6e01de0-c2f8-4021-be5f-4c6cd9e3feb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630c3d4c-098d-497c-b5a4-4ea87acb6b74",
        "cursor": {
          "ref": "587c9dba-cebb-43bc-8116-cb522e3694d8",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5bbfd2d9-738b-4e2f-ae57-8dfc09e36b51"
        },
        "item": {
          "id": "630c3d4c-098d-497c-b5a4-4ea87acb6b74",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "508b6fd1-9c75-46fb-9d24-b3a3777c8e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76763cb5-ce2d-41ea-8d7f-29d6e0569010",
        "cursor": {
          "ref": "df66d092-65a3-49a2-9781-99086501b6ce",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2da73522-bdf5-4f64-9754-f472bf9955a0"
        },
        "item": {
          "id": "76763cb5-ce2d-41ea-8d7f-29d6e0569010",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3ecd4406-b689-4719-b040-ec2e8da12cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb31a251-01cc-4fee-8c59-04b5969205db",
        "cursor": {
          "ref": "c46ff6fd-21d0-4808-b020-67eda19e3ca8",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "da48cc5f-1baa-4204-89cd-e0ad93398ad2"
        },
        "item": {
          "id": "cb31a251-01cc-4fee-8c59-04b5969205db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0d9f780e-6406-4edf-92a7-6bb80a4472ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42022c2b-76ff-4b9d-912b-b36bd4fe9949",
        "cursor": {
          "ref": "c17c39c4-2f98-4ade-9a3f-0c6758af854a",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6109a786-be25-4245-bb4f-21ce61b8c49f"
        },
        "item": {
          "id": "42022c2b-76ff-4b9d-912b-b36bd4fe9949",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0b6271b3-8152-47eb-93a9-c33a6300c6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9602e374-b29d-4c4a-a474-0442180b1391",
        "cursor": {
          "ref": "2811476c-3e44-4210-b27b-4cda130ac757",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c594c358-5eba-4e8c-b7d0-d110c27e696d"
        },
        "item": {
          "id": "9602e374-b29d-4c4a-a474-0442180b1391",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8489cd4a-66bd-4491-931d-5a80bff54453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb04090-c237-4a85-8ca5-21e512ab60ac",
        "cursor": {
          "ref": "117eacfc-a744-4c45-9d2b-5cdb5ef3984e",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9c843d80-55ae-47c7-8db2-6220e6c13bd3"
        },
        "item": {
          "id": "5fb04090-c237-4a85-8ca5-21e512ab60ac",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e7703c03-e4fe-4885-8277-af3bf043df88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875db99-5cc1-49f8-bc66-4a6b8efbacc0",
        "cursor": {
          "ref": "6b710fe8-909a-4ed4-9c87-c65c99841007",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "894f39b7-c048-4999-8960-957d64130ace"
        },
        "item": {
          "id": "f875db99-5cc1-49f8-bc66-4a6b8efbacc0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5327c8bf-a4f5-4824-b624-a7260fa83cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e294f2-1c7b-42df-81d7-4f6dd80a81e6",
        "cursor": {
          "ref": "5502eb95-ab7c-45bf-8931-4b25c8c22793",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "454179e8-17c9-4025-91a9-1c15549ef9ec"
        },
        "item": {
          "id": "69e294f2-1c7b-42df-81d7-4f6dd80a81e6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ece87de9-c529-41c2-b801-64fcbe4fa3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0310f16b-5ef2-4e3e-9ab9-e835e0791c7a",
        "cursor": {
          "ref": "563f3803-38b1-4ef4-89d7-acc69bf96ef1",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "abad96c4-d3a7-4375-9627-85a0767d81a8"
        },
        "item": {
          "id": "0310f16b-5ef2-4e3e-9ab9-e835e0791c7a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "85f7502c-6228-4403-a65a-162ef63199d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3dfbea-3d9a-49b5-bced-70d09faf8d47",
        "cursor": {
          "ref": "1b36fb96-2207-4b4d-84b9-ae08be68b37e",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a71f3d9f-9b72-4b37-b7cf-25d5246218fe"
        },
        "item": {
          "id": "0c3dfbea-3d9a-49b5-bced-70d09faf8d47",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "96341636-3e2c-4950-8d9e-5c4a461732ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763be8ec-37fb-4ab4-bd0d-5bbeafa3e538",
        "cursor": {
          "ref": "025f978d-7747-4a97-aded-843193ff3512",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "17eff843-95f3-40c7-b525-78d0e58f12c3"
        },
        "item": {
          "id": "763be8ec-37fb-4ab4-bd0d-5bbeafa3e538",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c50944ed-2b3c-432b-8fa9-41fc03a9b033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae98081b-2fe9-43c5-8244-142a28071e9a",
        "cursor": {
          "ref": "d284d991-c7b1-45f6-85af-e8e18be45512",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0eaded7c-78e2-4bb1-a864-583e9ecdfe88"
        },
        "item": {
          "id": "ae98081b-2fe9-43c5-8244-142a28071e9a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "892c546f-d64f-466c-bd2d-345efa0de5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba99487-7a79-4622-935d-b707150aaf8f",
        "cursor": {
          "ref": "64ae8969-91ed-4ee6-8d87-51fe82e87aee",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8cb8ff9f-f7da-49a4-932d-dbafe654c208"
        },
        "item": {
          "id": "0ba99487-7a79-4622-935d-b707150aaf8f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b3ddffcc-419d-4f32-b449-40639f75db0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81ac999-bd07-4fe7-8d73-b8a68d74401b",
        "cursor": {
          "ref": "18e08ba9-0d3e-41fa-b0e7-530f18069149",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b4f117bc-8098-4e1e-a8ac-57da287b4f0b"
        },
        "item": {
          "id": "a81ac999-bd07-4fe7-8d73-b8a68d74401b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ff0994de-6742-4a73-83fb-4804d6ac6213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9abcf5-4711-47b5-80fc-cf50184b9f99",
        "cursor": {
          "ref": "9c1f7183-617c-4a89-a8d3-181b69a5c3ae",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a2958228-9286-4572-b61d-709873b8f4be"
        },
        "item": {
          "id": "2c9abcf5-4711-47b5-80fc-cf50184b9f99",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e2263a0b-b3de-4c57-8cb8-acb2abac414e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831cb580-0d98-4e3b-b4e3-db0f6c408730",
        "cursor": {
          "ref": "25a53e45-8d01-493e-91bb-6d22c2efb9ab",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a72ba510-3454-432c-988a-563e7052003c"
        },
        "item": {
          "id": "831cb580-0d98-4e3b-b4e3-db0f6c408730",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "758bd5ee-83f2-45b0-af65-f093734e46f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30fee6c-6195-4c61-84fc-8e2819b4dff3",
        "cursor": {
          "ref": "b2a1cdd9-800a-4612-9013-3924c39ee5b4",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6fe1de4b-5f6f-41d4-957f-517b8c2cba93"
        },
        "item": {
          "id": "c30fee6c-6195-4c61-84fc-8e2819b4dff3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "25e2fdd4-b985-48d8-9e76-90536b159484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096caf54-da31-43bf-bd48-7f7ff06aee6e",
        "cursor": {
          "ref": "f686a0ed-8711-4123-a183-52b123bc530e",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "84b3b521-bc97-497e-8a26-d13c005653a3"
        },
        "item": {
          "id": "096caf54-da31-43bf-bd48-7f7ff06aee6e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8ef123a3-3364-439c-8d0f-f1c7867ab227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6c4657-dc9b-4528-a527-5f4f6fb381df",
        "cursor": {
          "ref": "f16f31d3-50a0-48dc-9972-f1bd6eb38de6",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a60136cc-9dac-4f81-9330-7196de0c479b"
        },
        "item": {
          "id": "3e6c4657-dc9b-4528-a527-5f4f6fb381df",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "229336fa-ad8a-4e5e-ab3c-646bdd0eb035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e61035-97d9-4749-b15f-111af189bef6",
        "cursor": {
          "ref": "560b9b73-fecc-40db-94a9-d9b9a71dc512",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "260f96fc-3017-4579-a3cc-94488fc966ce"
        },
        "item": {
          "id": "d1e61035-97d9-4749-b15f-111af189bef6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0bc5bce4-7904-458b-a571-77ef12a8d0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72652861-87e9-4d46-9400-06e7cf949098",
        "cursor": {
          "ref": "d1511e07-a8da-44e9-9552-b5f51e89b05c",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "948536b8-2987-417f-973a-0bcf003d7bfa"
        },
        "item": {
          "id": "72652861-87e9-4d46-9400-06e7cf949098",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cf624cba-38c1-405c-98df-78681200a8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8331a83c-fc50-4339-9d94-ef6b3c39cb27",
        "cursor": {
          "ref": "cf0e8e66-1ed5-40bd-8f37-3f3227f22f01",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9c8a921f-5189-42ea-8657-965d86fc7bd1"
        },
        "item": {
          "id": "8331a83c-fc50-4339-9d94-ef6b3c39cb27",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a0d83642-51fb-4b45-86cf-7f8c379c50fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eec4c2-5c92-48fc-9124-4af73b1b6e50",
        "cursor": {
          "ref": "fcc87dbd-6185-4150-9ffb-1fb4eee37c9e",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "14192ab8-3e40-467e-a3cc-0fad7e4da0cf"
        },
        "item": {
          "id": "a8eec4c2-5c92-48fc-9124-4af73b1b6e50",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1751bcf1-bc5d-4aa0-9a1c-f66b44c50d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c947d5a4-0dca-4a4a-bf49-064d2305a135",
        "cursor": {
          "ref": "a87fa2a4-5a44-402c-8738-549a316e1278",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2031307-056f-4577-84cb-f9712eed2c5e"
        },
        "item": {
          "id": "c947d5a4-0dca-4a4a-bf49-064d2305a135",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "67c7dc24-4158-4408-afef-ef1f9bf4dd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a1348b-2c3d-4f6d-9276-d9968aff736c",
        "cursor": {
          "ref": "0f959248-5436-4c74-ba26-72208500b1f2",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fe8cf351-9181-4bc0-b22f-d6393727e847"
        },
        "item": {
          "id": "31a1348b-2c3d-4f6d-9276-d9968aff736c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1afd79a3-ca2e-417b-a931-6956a09ea3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc054f5-f81d-4a3e-80a1-525a73360aa4",
        "cursor": {
          "ref": "ae474f39-bcd1-406e-9059-bdfcc215f7d2",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "757e13b5-1782-4a31-9cf2-244cf0072ba4"
        },
        "item": {
          "id": "4dc054f5-f81d-4a3e-80a1-525a73360aa4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8e902440-f71e-478d-b50d-73ea708d5e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb43d0d-8e2c-4a11-b809-f0f8da33b733",
        "cursor": {
          "ref": "f0cd3e96-e4eb-4dd0-97cd-ab0b527bd3c9",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "efa613e6-b810-42d5-8ab3-dfc8b827574d"
        },
        "item": {
          "id": "4bb43d0d-8e2c-4a11-b809-f0f8da33b733",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "93396147-89c1-4978-9ac1-24a831a8d8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d4927b-6582-4ee2-a68f-f5a8e05ab86a",
        "cursor": {
          "ref": "ea69a5e2-c9e9-4d74-9046-f85fe40976b2",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4e87e8db-fa85-4a3d-b077-726c339da0b7"
        },
        "item": {
          "id": "18d4927b-6582-4ee2-a68f-f5a8e05ab86a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e45db75a-f5d0-4bd4-8ac0-84c22008d5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1798e52-fea2-4f44-967d-ad3ee427a528",
        "cursor": {
          "ref": "fc709ae7-9b61-4f8f-949e-7009ed807d3e",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "51bde58f-21a9-4e21-95db-95edb5d926bf"
        },
        "item": {
          "id": "a1798e52-fea2-4f44-967d-ad3ee427a528",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "febdbd7f-2da9-451a-8773-3a2bc55e9c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48ca26e-c3bf-4f5b-b7c1-cc180f77a34a",
        "cursor": {
          "ref": "97d6ea33-e4c6-4f5f-8f38-4f6e9edd1bba",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ba29262c-eb20-4214-9aa4-910dec1deeee"
        },
        "item": {
          "id": "b48ca26e-c3bf-4f5b-b7c1-cc180f77a34a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d9cd8b86-1047-40d1-a461-cf696fae5b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5302ad42-5ede-4790-9668-3a9ae094f338",
        "cursor": {
          "ref": "8dbbdcc3-82d1-4328-adb3-f38f11520045",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ed49e703-6edf-4992-90a7-c32109c3b974"
        },
        "item": {
          "id": "5302ad42-5ede-4790-9668-3a9ae094f338",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ad5cd495-7be8-43c7-b8bc-895da4518fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7342f797-373e-4e35-8f34-5cedbb28b829",
        "cursor": {
          "ref": "29cb8899-add8-4b2d-99d2-f2f1a5519151",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e65913c7-d3cc-4939-8699-a6b408988f2e"
        },
        "item": {
          "id": "7342f797-373e-4e35-8f34-5cedbb28b829",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3bea1e43-6b1c-41c8-b511-894cec54f39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562b11d5-b121-4902-8f27-82974fb7fdc0",
        "cursor": {
          "ref": "7d287863-e549-4f79-9691-278709757fd1",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e95af4c3-77c7-49e2-a435-93138ded630a"
        },
        "item": {
          "id": "562b11d5-b121-4902-8f27-82974fb7fdc0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "66d1415b-33de-45d5-ae59-22eb48921668",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd939b0e-4220-4739-a161-bcb528476d1c",
        "cursor": {
          "ref": "9e53bda9-f483-4078-bc25-b1a2829a33d9",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bcb357a3-f3cb-45e5-82a2-8d659776141e"
        },
        "item": {
          "id": "bd939b0e-4220-4739-a161-bcb528476d1c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "feec55c5-49db-4e5b-8f0f-c3a1c9fac7a2",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9378c48f-bd4c-4fe7-b871-3041e4798363",
        "cursor": {
          "ref": "0aa2e715-d3ff-484a-80af-ce70f6303afe",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "04ba78b2-5760-452f-ae14-25163d328680"
        },
        "item": {
          "id": "9378c48f-bd4c-4fe7-b871-3041e4798363",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6aca6a6d-e6c1-484d-b672-e9e52787410f",
          "status": "Created",
          "code": 201,
          "responseTime": 198,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "13721655-038c-47a3-b164-e0e3ddb52869",
        "cursor": {
          "ref": "42617299-8a60-4de6-a05f-93ce8c808b9b",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "17e95827-8c4e-4083-bb20-b04903de9d36"
        },
        "item": {
          "id": "13721655-038c-47a3-b164-e0e3ddb52869",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cd456518-1b3f-4ab2-a6ab-5717dfc5791f",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06696cb5-0f38-4c68-a92a-6d5d18c20fcf",
        "cursor": {
          "ref": "ab2560a6-f2e2-4bf9-8b0c-25a4f37a1459",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "35162b78-8ee8-407e-8642-cd42006d6485"
        },
        "item": {
          "id": "06696cb5-0f38-4c68-a92a-6d5d18c20fcf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "067623d2-2314-4cc3-8b99-79190bda137a",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741a318-027c-4c87-8c24-d2b344b0c77a",
        "cursor": {
          "ref": "3bed7e14-e136-4c5c-97ee-d6c1ec898b65",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5107ba28-96fa-4de2-abdd-07118c9650cb"
        },
        "item": {
          "id": "e741a318-027c-4c87-8c24-d2b344b0c77a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b2944a96-03f5-428c-a35f-3e1a1a1442df",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c417229a-401c-4171-bfa4-51e74b0ca40c",
        "cursor": {
          "ref": "cac17314-4966-45c9-b771-7e4f694a546f",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e0ce035b-1292-4507-a693-cc083b13bfae"
        },
        "item": {
          "id": "c417229a-401c-4171-bfa4-51e74b0ca40c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0d423589-9755-490d-ab99-e4d79454eefe",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db39401-8540-468c-b879-1acd015ae9d2",
        "cursor": {
          "ref": "848b735e-2fec-4f3a-a585-a4c745a60f7a",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bbc80f0b-0e7e-4521-b17b-30baff81cffb"
        },
        "item": {
          "id": "5db39401-8540-468c-b879-1acd015ae9d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7c48d9b0-3ff1-48fb-9b45-f3b531976897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2f0606-256b-49ab-9874-42d687a7e692",
        "cursor": {
          "ref": "bc0907b1-14b8-4145-a9d6-b6f3769410ee",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "36b1ed3b-b7ad-4bac-94c0-bbae6d934c3c"
        },
        "item": {
          "id": "de2f0606-256b-49ab-9874-42d687a7e692",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d602714d-4052-41d0-8d30-2df4e6e099ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53458b8-3533-4a20-b72d-7176e494dc13",
        "cursor": {
          "ref": "406166f6-1c3a-4fc4-80fc-919251d86874",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b0d62a12-3bc2-4360-8ee5-cccb7a8f26c9"
        },
        "item": {
          "id": "a53458b8-3533-4a20-b72d-7176e494dc13",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d60c7e0b-37f4-48aa-8435-2e293eac2684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859bdc1a-0c10-4ef0-aa21-d53a26d475c7",
        "cursor": {
          "ref": "c53993cf-e405-49ae-8a42-342e3a7a77a5",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dc9e35d6-28b7-4fbf-a1d0-30b76358169b"
        },
        "item": {
          "id": "859bdc1a-0c10-4ef0-aa21-d53a26d475c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6d65ab4d-9655-4930-8d6e-528d2f165688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d65a5d-f5b1-487a-b34b-760c7602ca08",
        "cursor": {
          "ref": "f195ad72-59fc-46cc-b09a-570d056fc0d1",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7fad3b8c-3578-4e14-ae15-e2a7c96493a2"
        },
        "item": {
          "id": "11d65a5d-f5b1-487a-b34b-760c7602ca08",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "19c69f91-075b-4b80-ab17-cc4e8c7488fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f16c9c-880d-41e7-959b-13603c68b676",
        "cursor": {
          "ref": "8c5a2888-fa31-4e41-8319-fdde786af49e",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dabf7172-00d4-4d22-b8a7-f98b112ef2e2"
        },
        "item": {
          "id": "31f16c9c-880d-41e7-959b-13603c68b676",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5eaf1962-6064-4bd6-9b79-b39260fe0fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ced297b-0c53-42a2-abdc-d26a6db6fe6d",
        "cursor": {
          "ref": "bf9b7bb6-b121-44f0-b4bb-c784d88e6b17",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f29e6bf3-7669-4eea-8e30-d453433ebd3a"
        },
        "item": {
          "id": "9ced297b-0c53-42a2-abdc-d26a6db6fe6d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6db79a09-ac97-4394-98e7-c605a0bbc9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ce3080-5db0-4c29-87c6-b58c89cc151e",
        "cursor": {
          "ref": "d38e9c4b-ce25-45fa-af72-388a5ca3bacc",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bedfa7c7-ec27-488b-a345-70047f52648a"
        },
        "item": {
          "id": "79ce3080-5db0-4c29-87c6-b58c89cc151e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c9aaad8d-4f2e-4ec7-ac53-1e1550d42864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb579b7-5546-4c1a-9bec-178523552186",
        "cursor": {
          "ref": "986bba99-5633-4ef1-b325-2f50e5a85287",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "71657adf-83a5-44fc-b6e8-66d30d517adc"
        },
        "item": {
          "id": "cfb579b7-5546-4c1a-9bec-178523552186",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "09a76800-3a4e-4383-866a-dba4cdb074bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b7a8f5-11fa-45bb-bf50-b51659c6f26e",
        "cursor": {
          "ref": "afadeba2-3734-4ade-b541-df1a1bdad0ed",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "73c0cb8d-1024-418b-8b86-c965c28488eb"
        },
        "item": {
          "id": "30b7a8f5-11fa-45bb-bf50-b51659c6f26e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0be19e46-09a5-46ea-b375-7a83aed90e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4783f4b5-9393-4060-84dd-242b8413260a",
        "cursor": {
          "ref": "b680c8d0-1c4e-4442-ad32-6f3a0e7f4241",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "21fb000b-0a2a-4873-805d-d33c6e49e3b1"
        },
        "item": {
          "id": "4783f4b5-9393-4060-84dd-242b8413260a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "df0813ef-c3d2-4fe1-8c6f-e4acb30ab323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ab6085-57c4-4792-9fbe-44a0cd377668",
        "cursor": {
          "ref": "42ab17c5-201e-40cb-9390-5a37d7ad3758",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4a8e0aa4-9532-41ba-a932-f09036f6e17f"
        },
        "item": {
          "id": "b6ab6085-57c4-4792-9fbe-44a0cd377668",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "732b55c0-2abb-491d-a2f5-94132980375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a3376f-3167-4447-b875-91b90d26fd8b",
        "cursor": {
          "ref": "eb1bd7d7-3790-4417-ae3c-840133721fe9",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "088d7827-5f85-44a9-a096-aa6341e7bc14"
        },
        "item": {
          "id": "c0a3376f-3167-4447-b875-91b90d26fd8b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "86d99f0c-a4c2-4d2c-96ca-e87bc5c53f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd5b1bd-2e20-42b0-be46-ca1fcd307d93",
        "cursor": {
          "ref": "4c6db5fe-b052-4b68-89f9-b09e81536cfa",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "59c2afe7-dcff-4950-86bc-9eaf1194ad77"
        },
        "item": {
          "id": "abd5b1bd-2e20-42b0-be46-ca1fcd307d93",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "568ee649-6c74-4fb1-9fe7-b92fec8866a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d163f423-e2c6-455a-a074-7abd7d084d3f",
        "cursor": {
          "ref": "6b44fe6d-a3c6-482a-9f4f-78b628455a5c",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d6a6868e-1848-431d-974e-ff7dc084d844"
        },
        "item": {
          "id": "d163f423-e2c6-455a-a074-7abd7d084d3f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ffad434a-d156-4ebe-ac60-4cd782567b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f7b835-a4ff-4d8c-a501-eaf85218c1cb",
        "cursor": {
          "ref": "d364c088-b527-4ed1-8eed-af15160472b5",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "98c21f93-3c4a-4810-ad4a-5692f1852f53"
        },
        "item": {
          "id": "b5f7b835-a4ff-4d8c-a501-eaf85218c1cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0c21df2b-d27e-448a-96f7-377d77b456cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36490aa3-0679-4d2e-99f5-3d47be9889c2",
        "cursor": {
          "ref": "e41adf26-3c95-40dc-bdb4-7aa8c7ee74bd",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "37497367-a931-49bc-8bb8-9d0e3e581eef"
        },
        "item": {
          "id": "36490aa3-0679-4d2e-99f5-3d47be9889c2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "02359ec1-727e-4d50-9b1b-5a2102a8b94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da054c8e-c087-40e4-85ba-9cdcbc3caff3",
        "cursor": {
          "ref": "715b3f63-ea46-43fc-8bbf-4f328a06ce21",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2c17e2da-cec4-4a0c-a50e-3bc7c15a75cf"
        },
        "item": {
          "id": "da054c8e-c087-40e4-85ba-9cdcbc3caff3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e0704d42-7dbe-442e-8eae-9dfe52bffa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8033cc7-6282-4bc2-923b-77714d166d29",
        "cursor": {
          "ref": "fab48c6c-2462-4012-8185-4943feaf4ea0",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "73b6f7ee-d53c-4a86-8622-926702d2a729"
        },
        "item": {
          "id": "c8033cc7-6282-4bc2-923b-77714d166d29",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e8768860-48c1-420c-ab37-05f4d409863a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e3a635-8b4d-4486-a323-97e5376aedab",
        "cursor": {
          "ref": "a83475cd-338e-4f81-9bcb-9c516bd1b137",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "14495ad2-3724-477a-be49-12418999cd2f"
        },
        "item": {
          "id": "c3e3a635-8b4d-4486-a323-97e5376aedab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "032965e6-7d58-4974-847c-0475ba19cfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa18962d-12c6-42cb-8048-680c61033432",
        "cursor": {
          "ref": "d742c8c8-3a67-4736-880f-830f70f2aa5c",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7e99855a-0d5e-4898-8086-f03f78d8355f"
        },
        "item": {
          "id": "fa18962d-12c6-42cb-8048-680c61033432",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0f5f7d45-a5d1-4ee8-a6f3-521df1781abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85eab0e0-df0e-4609-a0c1-c78ad7ad7e54",
        "cursor": {
          "ref": "f44cff40-23da-45fe-b171-b2a7cf3a41a6",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f831e5a5-7c3e-4c42-872c-cc08846a4c5b"
        },
        "item": {
          "id": "85eab0e0-df0e-4609-a0c1-c78ad7ad7e54",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7519789d-a722-452d-b4ae-9c842838bca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39f3e97-5d77-4233-bbbb-f417473ea78a",
        "cursor": {
          "ref": "28829e32-a56d-4dcc-a567-b60f9a0437c4",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4f7cc80d-178c-4b88-b8c9-30c656c5d67a"
        },
        "item": {
          "id": "d39f3e97-5d77-4233-bbbb-f417473ea78a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "90bb8e1e-1bfd-4d99-85b0-e9c29682440c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e3a9c6-b625-4d98-85e0-fb0d29ef12bb",
        "cursor": {
          "ref": "86392841-5d6d-4555-aa10-eb92e0e4deed",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a96b5b21-d5c2-4244-a075-c3a11c4f026c"
        },
        "item": {
          "id": "65e3a9c6-b625-4d98-85e0-fb0d29ef12bb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "173283b4-16e2-46e4-9cf2-6a187afece96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add0c86d-a246-44c1-b2a4-c936f4975bc0",
        "cursor": {
          "ref": "94ccb3a3-66c9-4062-9ab0-8f06438b3ce2",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bf871f6d-4c2b-4f20-9645-7fdeb24874f6"
        },
        "item": {
          "id": "add0c86d-a246-44c1-b2a4-c936f4975bc0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0ee09c2e-96d3-4e24-b7bb-6d33edcdcff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48c6f51-66ca-41a9-91d0-837c948c731c",
        "cursor": {
          "ref": "9dd075f0-8f40-454e-9a0d-6cc1c877f59d",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3e386087-918b-45af-873b-c7d52c962f30"
        },
        "item": {
          "id": "c48c6f51-66ca-41a9-91d0-837c948c731c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e4d01a2a-c274-44a5-9faa-bdca0023b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea413c6-f38e-4259-a9de-570399e9f30c",
        "cursor": {
          "ref": "e207e617-4411-4a12-96a5-b6876cb8cd21",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "aa79dfd6-ea34-4e79-a273-95c75ac005bb"
        },
        "item": {
          "id": "7ea413c6-f38e-4259-a9de-570399e9f30c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "25f55643-86ec-4efa-afaf-39be9bf4b79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868e1a1e-7aab-44a7-956d-4d2859f254cd",
        "cursor": {
          "ref": "0e9a2d7f-d597-4e88-a54d-27288ff1f576",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "75c69996-bb7c-45d5-b9e1-0095f9aabe20"
        },
        "item": {
          "id": "868e1a1e-7aab-44a7-956d-4d2859f254cd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "289aa184-4b9b-43a1-899f-c230f7d52a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa8e804-6140-4d58-b56c-09bdeb8bcf71",
        "cursor": {
          "ref": "f9964fba-5edf-4ad1-bc4e-0e4d47e5673c",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "67fcdf2a-db8b-4173-9790-112eb9fc237c"
        },
        "item": {
          "id": "cfa8e804-6140-4d58-b56c-09bdeb8bcf71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57306f18-2fe7-4537-b69f-e82314eab825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4e4e8e-dab2-43a0-a1e4-634eefada656",
        "cursor": {
          "ref": "8d44f73e-de08-41b6-b36f-12be1b631c8f",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "80fb16ac-17a3-4328-afd1-3eba89903dab"
        },
        "item": {
          "id": "8b4e4e8e-dab2-43a0-a1e4-634eefada656",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "de8243a9-35ea-4cfe-8e39-dec505f9c4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90edd4a2-2299-431f-90a1-96d894d262ad",
        "cursor": {
          "ref": "0548f2ea-a52f-457d-800c-a419605bdfe1",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "096e6211-953c-4c95-8a18-419579c9e7a8"
        },
        "item": {
          "id": "90edd4a2-2299-431f-90a1-96d894d262ad",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4482f00d-133e-4e25-92d8-1355a03a217e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd745a10-c911-40f7-86fc-8b255a40b766",
        "cursor": {
          "ref": "ba5d88d5-14dd-4d80-8d7e-aedd824969bb",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f7f9123-a6ea-44f1-b73d-67290d6954c8"
        },
        "item": {
          "id": "bd745a10-c911-40f7-86fc-8b255a40b766",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9b45e018-7315-4506-bedf-3d5463a51956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13903f99-9529-4fd0-b807-a52413a2a9f8",
        "cursor": {
          "ref": "6a3dc2aa-d153-4a74-ba48-b7a024bb48b6",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "564ba023-553b-4e4e-9d38-a29a6d10381a"
        },
        "item": {
          "id": "13903f99-9529-4fd0-b807-a52413a2a9f8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "332df687-d990-4e90-83db-3871ad87871b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccedb451-fa49-4ae1-838d-238ecf459bdd",
        "cursor": {
          "ref": "bf3333d8-3288-4f86-b232-2633c64dac3e",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3fd88d55-8069-465c-abb1-95c755d8ee20"
        },
        "item": {
          "id": "ccedb451-fa49-4ae1-838d-238ecf459bdd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3a6869ae-c618-4e20-bdfb-4c3f7b6af9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ed2359-2d1b-4fa1-80d5-315217c73b7b",
        "cursor": {
          "ref": "d05899dd-d61c-47d8-8914-3287a059b15a",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4439a977-dce9-4629-a392-22a101cb1255"
        },
        "item": {
          "id": "a9ed2359-2d1b-4fa1-80d5-315217c73b7b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ef82364-2d7e-4655-b9f3-4497bc9bde8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bee990a-a264-498d-a50f-02d954f2349f",
        "cursor": {
          "ref": "da17cb64-111b-4e4a-9ab9-93ca773b2bd2",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8a3757fc-945d-44f5-bf2a-1d7921354f1d"
        },
        "item": {
          "id": "7bee990a-a264-498d-a50f-02d954f2349f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "601f41ab-f4e5-492f-a0c5-56c13fb4f0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d024aeb-c045-4cea-9209-e25e3877bef6",
        "cursor": {
          "ref": "fcdd8d49-8796-4540-88d0-bef2432b8321",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6777aba6-22e7-42c6-829c-7e9479e7ed0a"
        },
        "item": {
          "id": "8d024aeb-c045-4cea-9209-e25e3877bef6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "96a92928-a601-4c84-8578-f7ee49e5f903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce47ac93-7492-4cad-8564-a006212edeb9",
        "cursor": {
          "ref": "26ceb74d-21e0-4a67-9eb3-de28e2bc546a",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "157a03bc-527f-4f8c-88b8-ba05849b527e"
        },
        "item": {
          "id": "ce47ac93-7492-4cad-8564-a006212edeb9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9a919275-1dac-4bf2-a91d-dde90f4e9a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d3d6ff-e83e-4aba-b08f-37f24d7b3a3c",
        "cursor": {
          "ref": "47f3d40f-71ef-49f6-ba8d-0990744c47a0",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "903c5ee1-a0e7-4950-a4f9-20a0aceb496c"
        },
        "item": {
          "id": "a0d3d6ff-e83e-4aba-b08f-37f24d7b3a3c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ed72730f-7d68-4e39-b467-1db751458313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e4434-b868-4df9-9f47-82e90c763ea4",
        "cursor": {
          "ref": "c4a81c86-3d6c-49d2-8411-b8c5db415626",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "95041940-5133-4dcd-a116-5a9123267c4c"
        },
        "item": {
          "id": "ff6e4434-b868-4df9-9f47-82e90c763ea4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "517995d0-ea41-4fe0-8bc3-c8a9c42e32d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e43c0d0-1e39-485b-9966-c7e77b445cd1",
        "cursor": {
          "ref": "f3cdf761-9fdd-4d05-ac9e-f072155bb6bb",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5ab662e5-9b32-4992-9226-e42ef6b8559e"
        },
        "item": {
          "id": "3e43c0d0-1e39-485b-9966-c7e77b445cd1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3900e11-6fcf-4878-9618-49bb240d0f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27f6341-acb7-4929-8317-103de31bb868",
        "cursor": {
          "ref": "1545bfbe-ec4e-499c-8f58-6e17b7497097",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2fed8c82-2b66-4166-86ee-543a5ef97185"
        },
        "item": {
          "id": "e27f6341-acb7-4929-8317-103de31bb868",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c06b8557-055f-489f-9781-0518ae2e54f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f1b40b-469b-4fbf-baa0-e7558ab01e9e",
        "cursor": {
          "ref": "997b7a22-56af-4d48-b058-c4350dd99ccf",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1c5ce5f1-2ba8-49bf-908c-0d2271ee6698"
        },
        "item": {
          "id": "b9f1b40b-469b-4fbf-baa0-e7558ab01e9e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d45410bb-79b9-4051-984e-8c5688c520c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55503e7c-1c32-4139-aaa0-7ad241727898",
        "cursor": {
          "ref": "881dcb4f-baf2-4657-927b-ebaaa1638139",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "821ab061-0dd6-4577-a328-6835f7a9ec43"
        },
        "item": {
          "id": "55503e7c-1c32-4139-aaa0-7ad241727898",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "52aaf22a-662d-4442-ac8d-ac52909e48e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7464b79c-684c-4d5e-93d7-29f9f219929e",
        "cursor": {
          "ref": "aed45b2a-d95b-42dc-b1dd-560c6523a3a6",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0443fc9c-23bd-429e-aa03-78b4ac1abeda"
        },
        "item": {
          "id": "7464b79c-684c-4d5e-93d7-29f9f219929e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b86efbe2-524a-4080-bbad-22c37c9adbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a845cd-397f-44b3-8797-47793f20b4be",
        "cursor": {
          "ref": "ede39787-4f54-4098-a298-ab329e43b580",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "11fd8be8-3be5-46d5-9a34-175485275543"
        },
        "item": {
          "id": "67a845cd-397f-44b3-8797-47793f20b4be",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b074c2dd-daa7-4ff9-b844-446026cd7c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50278263-5884-49f6-93cc-4d7c7da74c44",
        "cursor": {
          "ref": "9c7b894a-d30b-40e3-af96-6057a9cafc14",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9cda250a-5ec4-4367-ad36-41dc76fd2972"
        },
        "item": {
          "id": "50278263-5884-49f6-93cc-4d7c7da74c44",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "76741c59-208f-4dca-bdf4-33c39bd70f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668f9904-a2df-42b6-b747-6fe7da9ee355",
        "cursor": {
          "ref": "2dfc2b05-0ac3-4dbe-a546-27054b372138",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1b360870-0593-4ca2-896a-b546c12c5157"
        },
        "item": {
          "id": "668f9904-a2df-42b6-b747-6fe7da9ee355",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b96bf106-a0b2-43b0-850f-ff73c991014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7a0c28-f1e6-4f9b-89bb-c331e1f0c237",
        "cursor": {
          "ref": "48389853-201c-419a-a6e7-9667737bfa69",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6e4524f0-7c2c-42c1-8818-85693ea865c2"
        },
        "item": {
          "id": "ba7a0c28-f1e6-4f9b-89bb-c331e1f0c237",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8ed3d9fd-bbf5-4f9d-84be-97552f6715e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daca811-daa0-4028-9680-6169f6aea484",
        "cursor": {
          "ref": "3de42df9-653c-4ec4-af4d-d1c8810f2db5",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0d3c68ce-0e9c-4abd-8ec8-82c9c2b4c3f3"
        },
        "item": {
          "id": "5daca811-daa0-4028-9680-6169f6aea484",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c3fc10c1-7653-4933-807c-e3c5996c473c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08a8951-e41f-41fa-8acf-a0c9bed3717c",
        "cursor": {
          "ref": "9f5caced-b0f7-4829-b048-c207ced742fb",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5f75f6b2-a650-4309-b7ef-2489002e3b66"
        },
        "item": {
          "id": "d08a8951-e41f-41fa-8acf-a0c9bed3717c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f8e7b9ab-6b97-4816-8e7e-a4dbfb522b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8082e31f-4f3d-4b0b-ac30-a0f810cb4945",
        "cursor": {
          "ref": "8479b521-fbb9-4846-aa6a-b33de7712660",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d94f6802-e2df-4936-990b-bf7c0cabcec5"
        },
        "item": {
          "id": "8082e31f-4f3d-4b0b-ac30-a0f810cb4945",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d3b6a401-2b27-435a-a326-6088b23beee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd2bdfd-f73f-4fe7-a139-ece6d8895dae",
        "cursor": {
          "ref": "ae69a5c6-4adc-4621-81eb-00077ae91bbc",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c2740565-a78b-4a4d-a546-b14b6b7b454f"
        },
        "item": {
          "id": "5dd2bdfd-f73f-4fe7-a139-ece6d8895dae",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "20d2b787-cc1f-49c7-bb94-e0c0e5471e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9041c4ca-8508-43fe-b277-b97d6125d4ad",
        "cursor": {
          "ref": "cc3839a6-9145-4a8a-91c3-84e4a137b125",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f9d278d5-109f-42b2-a687-f733f57c6654"
        },
        "item": {
          "id": "9041c4ca-8508-43fe-b277-b97d6125d4ad",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "25c48bd5-096a-4935-be9c-aba539806dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7966f5a-fdbb-4df7-924d-e445285b878c",
        "cursor": {
          "ref": "327f6d78-02a4-451f-8f27-29c86fbe0502",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "efa4c45b-6ae7-4f14-b5bc-c34abdb72c25"
        },
        "item": {
          "id": "f7966f5a-fdbb-4df7-924d-e445285b878c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4bf86327-4e5c-4d51-a1ee-57eed50214ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a119fdb4-872b-4ef7-8732-708faa8141a5",
        "cursor": {
          "ref": "8a7d5cc2-0a49-4fb6-b576-0bc27e0afc8e",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d2eeebf-4544-4984-a7e2-3c44958ccac1"
        },
        "item": {
          "id": "a119fdb4-872b-4ef7-8732-708faa8141a5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0dd4e027-c697-4c28-95a8-dfdc5f9289f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953077fa-6439-4e17-9ba3-bb6d100c230c",
        "cursor": {
          "ref": "1e52506e-2387-4ca3-8cb8-38c045f37520",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5ef85c3a-1f12-4568-a45b-83cbc472845e"
        },
        "item": {
          "id": "953077fa-6439-4e17-9ba3-bb6d100c230c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e93f3fbf-3899-4153-bb75-aa0cb0fb9d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e157f4b2-fa2e-4d4d-9ee4-f0f3d57a7193",
        "cursor": {
          "ref": "e028c4c1-a767-4c4d-81e6-23688cfb5b32",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b5b7331f-d98b-4c95-9c78-21309cb92753"
        },
        "item": {
          "id": "e157f4b2-fa2e-4d4d-9ee4-f0f3d57a7193",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cd2bb642-7d27-4519-9019-881900b8e21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b97b0e-08ca-4d76-b9ec-bb4110bc0062",
        "cursor": {
          "ref": "77a525ed-9859-4d49-9bbe-078c64106272",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "557fdad0-0a6f-4c7a-a3c3-97680e9e5f33"
        },
        "item": {
          "id": "e2b97b0e-08ca-4d76-b9ec-bb4110bc0062",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "623b8e8b-dbb5-4778-8e66-d572c3066549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e370baba-9fc7-4cb2-aa92-2744f84d5633",
        "cursor": {
          "ref": "bc89cab7-09e6-4ef5-9e9b-77ea6da9044e",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e57ae60d-9ead-408d-af53-b11770ac5460"
        },
        "item": {
          "id": "e370baba-9fc7-4cb2-aa92-2744f84d5633",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "88e7da77-ea37-4219-8cb4-1d374f350e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd345a78-da2f-4112-96f3-f4ca21f1b443",
        "cursor": {
          "ref": "c16c5e57-c2b0-440d-965e-6938b7e557da",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f3c60e91-12d4-43fa-8004-d6a3564292ff"
        },
        "item": {
          "id": "bd345a78-da2f-4112-96f3-f4ca21f1b443",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "898c919a-5058-443c-9b27-aea1177f4bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38347796-24be-45df-86b5-2b92340854d1",
        "cursor": {
          "ref": "3562af9b-141e-4ff8-ad75-54f49b13ae8e",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "24f51d26-6e19-4999-8936-0cd190726d81"
        },
        "item": {
          "id": "38347796-24be-45df-86b5-2b92340854d1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a52a4370-628e-4408-8aa5-ec93c9c99836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c64a74-9b0f-4011-b88e-8aea803a0866",
        "cursor": {
          "ref": "846b0245-bbaa-46a5-8662-074578242422",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1b54ba7e-60c5-48d0-bf56-b5b7711511cf"
        },
        "item": {
          "id": "01c64a74-9b0f-4011-b88e-8aea803a0866",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7232ec57-cbbb-4ba7-b82f-6b13f19a2f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59b7ac2-ad93-43dd-9acc-86b41c1f1570",
        "cursor": {
          "ref": "2fa810b0-5a44-44d1-ab67-8762f27af944",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6db70bb9-8784-48a9-9f32-38ffa4daf153"
        },
        "item": {
          "id": "e59b7ac2-ad93-43dd-9acc-86b41c1f1570",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a5a912ff-c85e-4fbf-baab-eb5a33d3286d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b25ece0-2f67-418a-946c-24fc6bb40bca",
        "cursor": {
          "ref": "2e524882-3afb-4a38-9866-dbd2c5a52e6b",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dd96c7b2-0b10-4c7c-86bc-1d60593767da"
        },
        "item": {
          "id": "7b25ece0-2f67-418a-946c-24fc6bb40bca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "384cdc96-6946-4209-8840-056efad450b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8460ece6-cdaa-4715-a4bd-ffda8ab2027f",
        "cursor": {
          "ref": "b9601602-c93c-4e83-94b5-e6b8df626413",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b80e6648-f5b8-4411-94c8-194825c4d80a"
        },
        "item": {
          "id": "8460ece6-cdaa-4715-a4bd-ffda8ab2027f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e9dac931-cc25-4330-aef1-fd6656c8e521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9eec04-8d73-4c17-a5c2-22a455d09809",
        "cursor": {
          "ref": "34aba8f5-c2a9-435d-818e-b471740da66d",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "317aab6c-a846-4c9b-b685-a8a0ee9252c9"
        },
        "item": {
          "id": "3c9eec04-8d73-4c17-a5c2-22a455d09809",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "14d09ce0-fe7e-4730-a61b-b4129585e9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61055d69-d0a3-4f19-bb08-d7a1cd810d2e",
        "cursor": {
          "ref": "8114b86c-59cb-440c-996a-aa4e6b762ae0",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c38fc597-d4ed-43c9-9964-a8489981bbb9"
        },
        "item": {
          "id": "61055d69-d0a3-4f19-bb08-d7a1cd810d2e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ac7638f9-6f0c-420e-81d6-5a923c4657bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78094cf-185a-4a04-8c12-5942c0c31499",
        "cursor": {
          "ref": "8ff79f58-9ac6-4a5f-aad9-0e8ff47ff776",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "da6973e6-d05b-4957-9e1c-3add8b530f3f"
        },
        "item": {
          "id": "a78094cf-185a-4a04-8c12-5942c0c31499",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ec11dd6b-7aa3-4355-b7e0-6d712c9b616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e8920c-2769-4201-98c9-57e116eb0f2a",
        "cursor": {
          "ref": "3541721d-bb3e-4267-ab71-ea850e6d9201",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ed26e1c7-d044-4cef-b20b-050e71ebb3fc"
        },
        "item": {
          "id": "90e8920c-2769-4201-98c9-57e116eb0f2a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "aeafe107-7e70-4862-8fbc-bf8abb5c3b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30161915-3e5d-45af-968c-792866d1bef7",
        "cursor": {
          "ref": "888cf24d-8cbc-41e8-9756-d728064a9699",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "23fd6f17-1d33-400b-b0e4-1893f189d896"
        },
        "item": {
          "id": "30161915-3e5d-45af-968c-792866d1bef7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "52d2901c-7404-4bb0-9ae7-df28dc63c6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699292e8-ed74-410e-ae93-3af4a04e8097",
        "cursor": {
          "ref": "908235be-d0b2-4080-a351-add0aaaf7ad6",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0a5d6b68-954e-4526-b0e8-9631fd0f7f86"
        },
        "item": {
          "id": "699292e8-ed74-410e-ae93-3af4a04e8097",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "031c8954-2a61-4cff-a1f0-d8f3ed78a146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788c7033-3202-445c-b0b4-a42c62017875",
        "cursor": {
          "ref": "f38867e1-525e-486e-8023-ccb1a2c581cd",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "73f03a95-089a-405d-b7bb-e2dd21b40a20"
        },
        "item": {
          "id": "788c7033-3202-445c-b0b4-a42c62017875",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5fc218a1-9189-4195-969c-66d0fc801d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f51d94f-38be-4eb5-9153-c19ad3e47c68",
        "cursor": {
          "ref": "a61728a9-3bec-4a23-8e02-575f9eadab8b",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "eba7596f-e544-455c-80fc-f9caa4099726"
        },
        "item": {
          "id": "0f51d94f-38be-4eb5-9153-c19ad3e47c68",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7c5d67da-937e-4204-b73b-ac1441e931a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f66f94-b3d5-44ae-a794-46d59cb8cb6b",
        "cursor": {
          "ref": "5e64aa48-8566-43b1-93e0-c31a8aa11930",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bd8bcd2c-f21a-4c76-b5e0-b5cb209feb1b"
        },
        "item": {
          "id": "f9f66f94-b3d5-44ae-a794-46d59cb8cb6b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "beace9ee-b3cb-4534-9363-77c42a78c293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d261b48-1acb-4763-a4ca-659465222d53",
        "cursor": {
          "ref": "0b2691de-cb9e-462b-a354-8b852f1fff1f",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c36925a4-5bc8-44bf-9bb4-58b9bac72f32"
        },
        "item": {
          "id": "5d261b48-1acb-4763-a4ca-659465222d53",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "639b5ee2-f92c-413e-8184-0f6b38f6115b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3dd75e-688f-4d35-bab8-14f29093ca85",
        "cursor": {
          "ref": "d3237a08-6385-4157-b178-ecf5adad27f6",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "095e1cc6-7886-4533-aa89-4c3d8cd11136"
        },
        "item": {
          "id": "bc3dd75e-688f-4d35-bab8-14f29093ca85",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "59a1c0b1-9392-438d-b924-14338bb38e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83967c8f-badb-4843-af1f-8d72c9761405",
        "cursor": {
          "ref": "64c7bac7-411d-4567-a807-7291bb6e88c9",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "279f767e-6aa0-40b1-8c0d-b2bbaa842d78"
        },
        "item": {
          "id": "83967c8f-badb-4843-af1f-8d72c9761405",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "19c68876-3dac-43dd-bd5f-dde6412a0d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a23f72-3847-47e8-b67f-eafbd40b0ae6",
        "cursor": {
          "ref": "3aa7c3df-d892-4818-b463-8a229cf42787",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5cc4c092-2490-480d-a589-d17447296532"
        },
        "item": {
          "id": "29a23f72-3847-47e8-b67f-eafbd40b0ae6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f79992c2-6ed5-4ca9-8b6d-7700d8a2443c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7738978-aa29-462d-8726-97576c1a91ab",
        "cursor": {
          "ref": "ba1c3c90-32bb-4e65-82a8-7b4bd85e8bd5",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7c8278fd-3ade-49ff-88fe-d9f2110038ed"
        },
        "item": {
          "id": "d7738978-aa29-462d-8726-97576c1a91ab",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e071a0c3-1ea6-4942-991a-0dd0e025e647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a23e99-3520-4212-a388-ea5ea31b8bcd",
        "cursor": {
          "ref": "674ab166-938b-467f-838e-6b56489b8296",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1acbfe8b-b0d5-40a6-90a9-185144b174de"
        },
        "item": {
          "id": "e9a23e99-3520-4212-a388-ea5ea31b8bcd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "55c3156c-b1bf-4b5a-822b-9f1257798289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88a719d-ea19-4c47-a080-57ad41269beb",
        "cursor": {
          "ref": "3c161efc-660b-4699-b6df-9aaebd689efb",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3d6e5b19-4e50-4209-b44e-1abfc80f55e0"
        },
        "item": {
          "id": "b88a719d-ea19-4c47-a080-57ad41269beb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2b9ea6d4-d562-4335-821d-c9ddd8b48620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5bec34-f958-47dc-af36-c5cb924d74d2",
        "cursor": {
          "ref": "7c36f6dc-c908-4b9d-b71b-49b4bc54fb55",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a2e035f3-39aa-4200-9504-2ffd156c9345"
        },
        "item": {
          "id": "7b5bec34-f958-47dc-af36-c5cb924d74d2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8b8a67f1-8712-49a7-980b-e789eee26ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecf3d61-1ca5-4f46-903e-64a062996004",
        "cursor": {
          "ref": "9f440a6b-ce9d-45b3-a9fb-266a815630ff",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c45fc5d2-e60a-416e-aeac-26141520097c"
        },
        "item": {
          "id": "6ecf3d61-1ca5-4f46-903e-64a062996004",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7efbd9a3-c454-4644-98a9-ae9278c8b96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ca7d19-5b1a-414d-b069-22dc18bf87fe",
        "cursor": {
          "ref": "414671f9-4e09-4078-b17d-a002604fabe5",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aae101e3-11ce-4c74-a56f-c9f1c3ecfc7d"
        },
        "item": {
          "id": "89ca7d19-5b1a-414d-b069-22dc18bf87fe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3969210c-4bd6-4907-b2fe-f04ccacdd9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93420ebd-47f8-4cc8-9a39-2eec79c7ce1e",
        "cursor": {
          "ref": "b291e187-81bd-4d0d-ad26-58b9d79d87db",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4c298356-acee-4be4-a4af-556c252f8856"
        },
        "item": {
          "id": "93420ebd-47f8-4cc8-9a39-2eec79c7ce1e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9f3cbfa3-683f-4791-93f3-9dd7406cd2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019ba9fd-9775-4033-9321-748f936e557c",
        "cursor": {
          "ref": "fba518a6-0eb3-4834-8fd5-ac21cbb02da3",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a3ee9fbb-aa1c-4e6b-85f4-c8a041c8529e"
        },
        "item": {
          "id": "019ba9fd-9775-4033-9321-748f936e557c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4eede13b-eee0-494a-ae1b-1a8b9a82a8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ed4fd9-6e8a-4a13-bf08-2f03e99d389a",
        "cursor": {
          "ref": "cb693078-5225-41f6-a0b2-265cbfd355ef",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c8412df2-4473-4ef3-9a08-221bfcf756e4"
        },
        "item": {
          "id": "16ed4fd9-6e8a-4a13-bf08-2f03e99d389a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "17fb9de6-219b-4361-a1e7-027927389845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8020f9f3-7473-42e6-8261-2894eae98455",
        "cursor": {
          "ref": "f98ddc97-43dc-42ce-a7ed-4719ba16e22d",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3a19c0b8-dd25-446e-9b08-a8a3c94a957e"
        },
        "item": {
          "id": "8020f9f3-7473-42e6-8261-2894eae98455",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7cf856e3-6cff-4c85-bc7b-331fa758ba6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bd13d5-252c-4aaf-9436-b95c412a9caf",
        "cursor": {
          "ref": "8d997a72-d91a-484d-b78f-696e982d189d",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a45bb18d-195c-47bf-83b6-e206b4ab9492"
        },
        "item": {
          "id": "04bd13d5-252c-4aaf-9436-b95c412a9caf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45bc326c-03e7-4302-a15a-3dc186970972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec52fc9c-235c-444e-8312-f19eb422260f",
        "cursor": {
          "ref": "3db7def5-bd4e-4eb1-a391-40cfc0dca295",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "de0908b8-d3de-424d-8274-b3a08024f862"
        },
        "item": {
          "id": "ec52fc9c-235c-444e-8312-f19eb422260f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "66636f29-a786-4eef-a9a8-2692c6e47675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1904a0-c081-467f-b6d6-614eeb5c62a3",
        "cursor": {
          "ref": "49d62b08-9383-4328-906b-070084e50017",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "655aeb33-d3d1-4ffc-a730-1f043b0886d3"
        },
        "item": {
          "id": "fe1904a0-c081-467f-b6d6-614eeb5c62a3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "617013aa-9d14-4034-b9af-62d612cd8b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26b37d3-3fe5-4314-bda7-8239c12bd2f0",
        "cursor": {
          "ref": "4f2b815b-5c1e-458f-ad0a-62456076b11d",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "531a11b6-0b1e-40f3-8bbd-4d2aec1238c3"
        },
        "item": {
          "id": "d26b37d3-3fe5-4314-bda7-8239c12bd2f0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fe012a85-da99-446f-a1ae-53712469753a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649758a6-5ec7-4827-b14b-e8dde470dffe",
        "cursor": {
          "ref": "bf155bca-0972-45bd-88b8-92ad3ee273b1",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "44dd2ff6-ad7c-45cd-a686-39bdddb5bbe6"
        },
        "item": {
          "id": "649758a6-5ec7-4827-b14b-e8dde470dffe",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3f30c1ff-1a04-4abc-aecd-05e1d1f0adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d66445-12f6-427f-8304-83ead75762ce",
        "cursor": {
          "ref": "de22d3b8-df1f-455b-8d25-e2330e2a5c83",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9639cbc0-2d59-4c58-b4f9-c3a27d130989"
        },
        "item": {
          "id": "86d66445-12f6-427f-8304-83ead75762ce",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "04ac392c-6847-40fd-9219-69cdfc60a603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d08d0d7-933f-4f98-85a2-28bd5bc78aee",
        "cursor": {
          "ref": "c8e582c2-f9a7-42c1-be0e-84e27b0ba1f8",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "306792f2-ce19-4c3a-81ea-550fe880c3b0"
        },
        "item": {
          "id": "7d08d0d7-933f-4f98-85a2-28bd5bc78aee",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c35eb34e-8d0c-4d22-af56-e6ff6a446b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8787b3-6860-4dcf-af41-51ea65579b76",
        "cursor": {
          "ref": "3aabe250-8448-4bd7-9a19-1c6b767ebc10",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aa78f364-7669-4390-9a43-d6ecd1abb017"
        },
        "item": {
          "id": "9b8787b3-6860-4dcf-af41-51ea65579b76",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a7d6bb78-e794-45b9-a6fe-10a66b2fe896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01518dcc-c95b-460e-b31a-554615ed3607",
        "cursor": {
          "ref": "d7aed45e-2038-4234-a31f-6f588b3e35a1",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a2309924-8947-4e42-a732-e1f3fe354769"
        },
        "item": {
          "id": "01518dcc-c95b-460e-b31a-554615ed3607",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "eeb5d286-54ec-4ae7-8abf-27c4a522a686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a940aee6-ae74-4fda-afae-8865261090a3",
        "cursor": {
          "ref": "11655a75-af3d-476b-98f2-217d5c9df6bb",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2c62ca87-22e0-4ace-b3cf-30e4629f07e5"
        },
        "item": {
          "id": "a940aee6-ae74-4fda-afae-8865261090a3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "30b910d2-5118-423e-a8b9-9dc47b26c317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c51a540-5301-48aa-bfb9-29cb7b9702e8",
        "cursor": {
          "ref": "5fcb839c-045a-4f10-89a1-8c0ba5154b35",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b5a35922-b3f3-454e-b5f5-4ccb6ef0ab93"
        },
        "item": {
          "id": "0c51a540-5301-48aa-bfb9-29cb7b9702e8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2d3eeff7-789c-42f1-9199-5af97836fb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44aad934-a112-4135-8756-20c9a191f31a",
        "cursor": {
          "ref": "c7b0f1c1-81c5-4598-b132-6edab55b13c8",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0cea07eb-3d8d-4f8d-83f5-0736c68b2560"
        },
        "item": {
          "id": "44aad934-a112-4135-8756-20c9a191f31a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "faa27281-aee2-4928-8c34-227bdec6487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70247ad-d136-4e16-98ea-6c35363ce56e",
        "cursor": {
          "ref": "ec850d51-c84a-4f20-82b5-42ed3e5b716c",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6b18fed6-14b3-4711-ac36-e821d599ded5"
        },
        "item": {
          "id": "b70247ad-d136-4e16-98ea-6c35363ce56e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f18f2d55-5925-4c5a-83d6-974be5ae7056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6047df3-c24c-49fb-9efb-479b7c5cd203",
        "cursor": {
          "ref": "bd1cd852-b2dc-476c-b81a-046b006cf362",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "331da931-4e08-490e-8fc7-50ab31841780"
        },
        "item": {
          "id": "f6047df3-c24c-49fb-9efb-479b7c5cd203",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6cc5a1ff-0a1f-4262-8993-17593304bce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b647d9d7-7863-4736-99d1-dc10bfec99d7",
        "cursor": {
          "ref": "962ab830-1f5b-4e31-93ff-667d4634f739",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8535e68a-4eb1-4da5-87f3-34932fafe4db"
        },
        "item": {
          "id": "b647d9d7-7863-4736-99d1-dc10bfec99d7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c272ad57-b0ca-419b-8fae-8de7046ba792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ec9ab4-f3f1-4104-8bcc-504fad3aca25",
        "cursor": {
          "ref": "c74795f6-36ba-42ea-b37c-657c9d0cd521",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1875cf95-dc30-4757-b910-3056c262a121"
        },
        "item": {
          "id": "07ec9ab4-f3f1-4104-8bcc-504fad3aca25",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d0004a27-8ca6-4033-a5d5-3f18a28140c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beccd96a-5926-4492-b7fd-7547db71b116",
        "cursor": {
          "ref": "51ba964d-10ef-4abc-a209-51067653fa22",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e4f1b334-d0cf-49d9-91d8-d0c9c37473a1"
        },
        "item": {
          "id": "beccd96a-5926-4492-b7fd-7547db71b116",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ba8c064-34ec-4933-9a86-604867b307fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f35d724-7985-42b4-a9c1-abe593394142",
        "cursor": {
          "ref": "d49cf072-a576-47ed-afd5-87b2bbb90f87",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "63301af9-54ea-49fd-a4a4-3c12c4847a23"
        },
        "item": {
          "id": "5f35d724-7985-42b4-a9c1-abe593394142",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb10c3bd-85db-492a-a860-b931e2619c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0321aa6c-bc0e-4a96-8d5e-230e06115aa0",
        "cursor": {
          "ref": "a47ff112-544c-4ea9-ab68-144f6df4d9ec",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dce03c4c-c5f7-4ac5-8ce5-f3b3a21f70c0"
        },
        "item": {
          "id": "0321aa6c-bc0e-4a96-8d5e-230e06115aa0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c50708ae-ca60-4c2a-a6ee-50005ff82afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4e88cb-87ac-4d74-9c8f-217ae464aa32",
        "cursor": {
          "ref": "b638e012-a884-4d4a-b022-d17a4e4f8c15",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "27a320c9-a232-4d89-a742-4b44e6ae47c1"
        },
        "item": {
          "id": "9c4e88cb-87ac-4d74-9c8f-217ae464aa32",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5da3541b-797b-4919-994a-4e26f3f0b149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca521ee8-5b2f-4ee2-87dd-a75e502904a3",
        "cursor": {
          "ref": "00f01b97-a3bd-44d9-a911-b98c962e05cb",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b843c1ab-2c5f-4ddc-92f1-a708b8375acb"
        },
        "item": {
          "id": "ca521ee8-5b2f-4ee2-87dd-a75e502904a3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4c4bacb1-a35d-48be-b86d-23765d4f94cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def106cd-3124-473d-81af-b4f85f455bf1",
        "cursor": {
          "ref": "c1c10328-ffbb-4a10-9da4-c495c2d8adcb",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "64e70c23-01f0-4db0-b529-58934aad1fc6"
        },
        "item": {
          "id": "def106cd-3124-473d-81af-b4f85f455bf1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f64523ad-c4cc-433e-9ad1-55ba3c812a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e3d7a-bb39-425b-bfe2-312e5ce2a466",
        "cursor": {
          "ref": "9d7d379c-1050-49c5-803b-37d0862a2895",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "de218f69-6905-4e43-827d-8ab5bc93a38a"
        },
        "item": {
          "id": "bd0e3d7a-bb39-425b-bfe2-312e5ce2a466",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3282d6cd-7153-4548-9099-dda97f7eac0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1034dfd9-868e-47d6-a854-0f1289e5ffd4",
        "cursor": {
          "ref": "e7153bf0-c185-4015-8363-4a0962259ff0",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "91481b19-f500-4477-8874-00eb63b57899"
        },
        "item": {
          "id": "1034dfd9-868e-47d6-a854-0f1289e5ffd4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "79d73a53-cf81-4534-b939-36d278186528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b1212e-1776-46ba-8cd0-e1472dc7485c",
        "cursor": {
          "ref": "2d0d7c9d-cc4f-43b1-a2c2-c0abb8f9078b",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "776ab088-506f-4770-8229-a14ee05df3ed"
        },
        "item": {
          "id": "59b1212e-1776-46ba-8cd0-e1472dc7485c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "69bd9915-076a-4674-b4a3-f0f24f179b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b31a24-55f4-4f9d-aedc-7c0415036180",
        "cursor": {
          "ref": "f42266fd-7e62-4d2c-b043-176f18ecac54",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "06e72a3f-3ace-4aaf-a90e-4c14455a9cc2"
        },
        "item": {
          "id": "e9b31a24-55f4-4f9d-aedc-7c0415036180",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e488f5d2-d303-41af-b3d9-4c02df3b9265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cef438c-e339-4e08-b70d-2d5aefeaf315",
        "cursor": {
          "ref": "77a89f2c-4657-4b05-8908-bdc0124721ab",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8f9240a7-f474-4e91-90a5-f77afb87e92c"
        },
        "item": {
          "id": "0cef438c-e339-4e08-b70d-2d5aefeaf315",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bf29877d-d4f7-43e0-83b9-c0f928b5c77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fc010f-82e6-45c7-a150-ec875c228c25",
        "cursor": {
          "ref": "4792d1a3-d61d-427e-8df1-49f62b6eabf6",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "903982ce-c117-4f85-bb87-807e9fbc0487"
        },
        "item": {
          "id": "e3fc010f-82e6-45c7-a150-ec875c228c25",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a022ebce-07a0-4799-9d98-9b00cba02aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d071d3-67c5-4859-8986-3219fa62b252",
        "cursor": {
          "ref": "cc442f01-868b-49b1-9136-a40010197eb3",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "951438b2-5e26-4ecb-a558-dd907c88ff2b"
        },
        "item": {
          "id": "71d071d3-67c5-4859-8986-3219fa62b252",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e15920ff-2774-48cb-844c-a950f53dd350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e468e6-bdfc-4c4a-9778-d3d099764825",
        "cursor": {
          "ref": "16098035-da2b-4fc0-bdee-ff81faaf802b",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f2e9ca70-97ec-4b96-9dd4-0d8722be8d6e"
        },
        "item": {
          "id": "69e468e6-bdfc-4c4a-9778-d3d099764825",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "69b65bbe-2a01-414f-9972-7609dbede173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f32159-2d64-4375-9300-96741ba67d7d",
        "cursor": {
          "ref": "6a93618c-c5ea-41e8-b8ee-76ac3449e90b",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "84c34d2d-9966-4571-a655-d6f29c6acd7b"
        },
        "item": {
          "id": "92f32159-2d64-4375-9300-96741ba67d7d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "683d9fa7-993b-4ebb-b381-c2823735ad49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a11da9-06d5-4d5b-a94c-0a3d69fd6e4f",
        "cursor": {
          "ref": "ec472291-c347-495c-9f8c-53663b35ca96",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6895a79d-2a9f-4977-8d28-8806833de8e0"
        },
        "item": {
          "id": "78a11da9-06d5-4d5b-a94c-0a3d69fd6e4f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "40f15b5e-3881-4484-9551-120291b9e031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039bb02a-3d95-47f9-91ba-63cbc04cec53",
        "cursor": {
          "ref": "75bbc5de-3725-40cc-b452-b32b0ef398e7",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "88e1d752-5dc0-45b5-97de-fdb0b6593173"
        },
        "item": {
          "id": "039bb02a-3d95-47f9-91ba-63cbc04cec53",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "671e65da-271e-4eb8-a4fe-117b0dd392c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46692799-1b29-4c50-ae25-b936c8927782",
        "cursor": {
          "ref": "3aaa5b48-2b0e-46c7-bf8b-87447e43f83e",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a1767cbe-821b-4454-a520-a404570fdf67"
        },
        "item": {
          "id": "46692799-1b29-4c50-ae25-b936c8927782",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "64eb5dba-adac-4a5d-a62d-d5b51afafe9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe0e7a5-62f0-474d-9f10-46504755d385",
        "cursor": {
          "ref": "dc7f46a6-2d91-4d93-9cc9-bf9468457c9a",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "61633827-0089-41bd-9730-2cf32956d7e7"
        },
        "item": {
          "id": "4fe0e7a5-62f0-474d-9f10-46504755d385",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "79bf9b9b-611d-4463-baa4-217ad9c31cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcd5096-f557-4f5f-add8-ca418528044f",
        "cursor": {
          "ref": "510e3828-8c77-4cb2-b719-f34a7e5c8bc0",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9c9be97d-7700-4e08-a7b8-0985ad262613"
        },
        "item": {
          "id": "2bcd5096-f557-4f5f-add8-ca418528044f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7116ab16-c83e-4c55-8f85-a788c19cae23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c96e4bd-8517-4377-946b-d4b2ab65b011",
        "cursor": {
          "ref": "1f3eaf02-8983-410f-be25-8ce06eb6bf67",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "16da88d4-5c45-4770-af40-b8e74c56cda4"
        },
        "item": {
          "id": "0c96e4bd-8517-4377-946b-d4b2ab65b011",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "030165e8-81ef-4c51-8ee3-74acba5503b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b0f994-f66d-44e9-ba4f-0f7338bba4b8",
        "cursor": {
          "ref": "701d9660-190f-46cc-9116-e755b278da39",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0f3abac8-c3a1-4023-8383-be52c0cd0ed0"
        },
        "item": {
          "id": "30b0f994-f66d-44e9-ba4f-0f7338bba4b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9ca1c488-f45f-425c-b57f-4a0e6277fed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e9bdc6-7162-4e36-bbc1-7d2790d92543",
        "cursor": {
          "ref": "65ee7f43-d2c2-48fb-9714-7a2313c46903",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "deefc04b-9260-427c-8747-94a46ece802f"
        },
        "item": {
          "id": "a3e9bdc6-7162-4e36-bbc1-7d2790d92543",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7d739087-f1b7-451e-84af-c534691696ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbacec46-1b5a-42dd-801a-69232ddb874c",
        "cursor": {
          "ref": "f9257b3c-b9e1-4957-953e-f9eb9e420842",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5327269a-a7fd-4320-b72f-007aeaf6e066"
        },
        "item": {
          "id": "fbacec46-1b5a-42dd-801a-69232ddb874c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "aee8f973-9a22-4727-bd82-a4bf845d0a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbbd57f-4c95-4f6a-bb28-02dba8dc8c24",
        "cursor": {
          "ref": "13c68ff8-0afa-4c83-bbda-b78f81d72484",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eaef844d-0c6a-4701-b549-70fd5d1b637e"
        },
        "item": {
          "id": "1cbbd57f-4c95-4f6a-bb28-02dba8dc8c24",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e08f3d20-6412-4041-8fa2-bfe6f0ce0723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda16aef-a408-489c-bd69-ddc676948e29",
        "cursor": {
          "ref": "f6d1e78a-ccdc-41cd-8df3-a08b3f1c5421",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b0cde2a3-88ab-4a44-b707-287946c57354"
        },
        "item": {
          "id": "eda16aef-a408-489c-bd69-ddc676948e29",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "22d7e835-8801-48c1-aa47-6626612ddefc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc5e4e6-3a40-4374-99ec-2f997380b876",
        "cursor": {
          "ref": "6f31394e-91fa-4e7b-b3ef-783044957792",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "93d310f5-f341-443f-b42b-e3a3ca221a78"
        },
        "item": {
          "id": "3bc5e4e6-3a40-4374-99ec-2f997380b876",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3aa55c62-1da3-4444-ad59-faf5b4a20f42",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b3a7a5-cfb2-4d7c-ab25-285b4a417a97",
        "cursor": {
          "ref": "6388d518-75e8-44d8-9268-664f02133e3d",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "47b91640-cbf2-4597-9d2e-9d19b5e88437"
        },
        "item": {
          "id": "68b3a7a5-cfb2-4d7c-ab25-285b4a417a97",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5d77afed-4d24-483b-87fb-bd62e96ff6a5",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "38286f2a-5fb6-449b-9ae2-a1239cc7b332",
        "cursor": {
          "ref": "4b08a62a-dd01-486c-8d31-9563d05ec4b7",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4e96d330-63b3-482e-b008-2baed0c06bde"
        },
        "item": {
          "id": "38286f2a-5fb6-449b-9ae2-a1239cc7b332",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "02e74f48-a93d-41a6-8380-e2f373973c01",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a87c10c-0789-4429-81f9-f8cd093baeb6",
        "cursor": {
          "ref": "76ea091e-c192-4913-9a25-be8d2739c722",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3787fdfc-cc09-4593-94f4-c0d9b019b350"
        },
        "item": {
          "id": "4a87c10c-0789-4429-81f9-f8cd093baeb6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3440a5e7-d8a7-4a92-9bec-924fc8f2d7d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a87c10c-0789-4429-81f9-f8cd093baeb6",
        "cursor": {
          "ref": "76ea091e-c192-4913-9a25-be8d2739c722",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3787fdfc-cc09-4593-94f4-c0d9b019b350"
        },
        "item": {
          "id": "4a87c10c-0789-4429-81f9-f8cd093baeb6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3440a5e7-d8a7-4a92-9bec-924fc8f2d7d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b43eef0-6fd7-4baa-9a82-df83aa35901b",
        "cursor": {
          "ref": "a1cce41e-5460-4428-b669-a752af05af9a",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dbfd5bda-0a31-4492-8652-3d8480b2037e"
        },
        "item": {
          "id": "7b43eef0-6fd7-4baa-9a82-df83aa35901b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "263853cb-e879-4596-9753-6953f15ee450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a11aad-8d00-49b6-abfe-28f99147e713",
        "cursor": {
          "ref": "513afd1c-784c-4995-b21a-5a9b83ba9c4b",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "26ff4613-5d4b-46c6-8680-41df0fe70420"
        },
        "item": {
          "id": "f5a11aad-8d00-49b6-abfe-28f99147e713",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3949e5e0-a9c9-4693-8de3-1f0f5abbe343",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}