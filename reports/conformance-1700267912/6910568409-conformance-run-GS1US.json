{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "034c817d-ef86-4c26-83a1-170831715fed",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3bab273d-0038-468f-a564-35283a69dfb7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4c41ca7-5dee-4c20-abaf-4e703a6b7ee2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7fb5c0a9-50c9-4972-acfe-79fb5fe65c9a"
                }
              }
            ]
          },
          {
            "id": "be4d6c0e-65f5-4747-88da-8b1110206dc3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cac652f-7002-4a0a-a1d4-eb7711c92828",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a32300d1-7030-47c0-9e91-c93b3afee1b5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d3e6c2f1-9071-49a8-b36c-a71f9a579fd0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "34766933-07d1-45cc-89aa-ebc52f234f31",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6650a273-4558-4eff-a3d7-07b8d7ac780d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49cda0dc-3a7d-416d-9811-beec9d48ff6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8786ce40-af79-46f8-a111-4a82b159687e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00516710-4f12-437c-bd3d-5eb7c4c6ec98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89d02084-f7ec-407a-9455-f7d2ebf5c4de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27e461de-9e55-4175-a6dd-7531d963bc4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83ce4842-3f77-40b0-9e6c-39e96794bcc7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "615d6214-6643-4b4e-85de-9415f730594c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3b433c60-dd5b-4612-9b6e-1f937b6fd1cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e58538-5ea9-488c-84be-5b393cc1e82f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02c57525-9c7f-4d9c-9a43-6d9fc1079264"
            }
          }
        ]
      },
      {
        "id": "b6f3d175-86e4-442d-b162-1b4511672858",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7e7ab32f-fc4b-4dd2-a71f-03a190eb54fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4f13b0c-e097-46ad-ab32-f858626bd0b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebe76d51-8228-4729-8d8d-b4f7ddc36112",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884a9501-305c-41c2-adf8-b158e835b095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "680f8031-deba-47ff-b5b3-f962b368531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b5d1e7-1aff-4e97-8f2f-6bc3dfffbac0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b40db48-da8a-4efe-bdde-090536208238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53c94f7a-aa96-4055-ad3c-cf4ad10070a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a03f85-2860-4098-bf42-fe57777e766e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e4039d-4d6c-4255-90b1-2be95a3ab9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67b242d1-eed1-4770-bd4a-d25f3c9b4971"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "184f3040-d666-43be-989d-7481469c9afe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29230a7c-975e-4943-a021-3a1d3e8a866a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31120f95-72b6-40dc-946a-ec113c976464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d54ba05a-85e0-41e7-a4c6-ac77a8b46b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7767e7-0872-49e2-b9de-81c7978f8e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd28ce43-2625-4815-bb73-0416c61c71d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81189cc2-0bce-4636-bbc5-73dcfb847db5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02ed44c9-46be-4a4f-9ac2-0003ab4d9132",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d154d15-f83d-4fd3-86e0-34c4bfad2c1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bc8a5508-ff07-4a61-92b4-9bdf95f4e942"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87b2009a-2801-48f4-88dc-f65a1aa685e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5f5f8ba7-0836-4dce-a209-799b50d0153c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17468532-d663-43eb-8f3a-2459849fc400",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c07aab6f-7254-4e8b-9487-87b9fafa597d"
            }
          }
        ]
      },
      {
        "id": "b8350262-c71c-4fc4-8e29-204ee12c8ea0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "deddeda0-79fe-4508-8180-a05456eb6550",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e2e70bb-8409-478d-85f0-113d7e559555",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ea88d2a9-1567-49fc-8c67-7078114d2a88",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e902738-3ad4-49bb-ac27-6d7afd44f3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8694b949-0aef-4b71-8774-7a15078be8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecea1eef-e21a-4287-b438-96542a19cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2770992-0834-4f86-b0e9-78472ec0a178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa0253b-1e91-48bd-b6a1-9c24e48e492e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57f91f0-5f46-48ac-97d2-6b8558edf0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9f82b0-34a4-42ac-af5c-28b745801144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883fc7ce-b12d-4faa-8f0e-6a951e259edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8260894-f0ce-43e2-af4d-5fa492cacbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf40637-de3b-412e-b880-fd3663cd56cc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75210b2d-c92e-4b6b-8c66-1d4b8e80888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318d7929-7613-4d20-8f9f-de448b4bafb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d891a6-0744-4004-b82e-7f98614967d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4721f19-96e6-4b5c-9504-ef37dc572fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33041ba-b93f-486f-aabe-b091d9395353",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4af63ac-7f73-45a0-bba1-9998edf1b2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036a9272-b1c7-4848-903f-fe317f335576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5f4a7a-f1c1-4e90-8de6-2f5961fe6084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c58bed4-bb12-4c13-8a03-80dbb7b1fa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40288a9e-6d24-4e2c-be8f-27e590129481",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4ecbdd-12d5-4317-b92c-4e8ffb4c0d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f821db-681f-4baa-aaa9-eaf643f97b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3089de18-5d3c-410b-b7f5-db7aa1263b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbfe4baf-5d40-4040-a3cd-73201f9f8082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9e2d67-6e24-42f3-b702-5a6a53aa6840",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1ee63c-bb34-4070-81dc-5218f12e8472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f6707a-88e5-4cee-b84d-d2aaeaef92e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4b5332-017e-4a7a-b990-96ae048020f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9dfa5d9-13f1-4dd6-9c3b-cc1f772501f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84316286-ba28-4396-b410-1f069edd0cdc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571d75aa-458e-4f28-aa1f-7c46cad35807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b559f6-1838-44a9-8a3c-00f452d54530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7272aaa3-4bb5-4a0f-9d67-d1931ac86fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bc14881-4486-4d4f-af41-9b9eeb7e8862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c40603-0977-490d-819e-d85e4cf8ce0e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00e9000-132f-425c-8dc5-c5cb5447f275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f6c082-50f6-4c03-b702-fff34189f49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35255396-eef8-4ee4-907e-67d16c5c32d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "930726cb-b8d2-4241-aeeb-9cac53cf6c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a107a2-c695-4497-8078-6096449dd8fa",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af54da5a-7e00-406d-94bb-ec19873b8c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e36bae-c972-409d-8508-069f6b4e9b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a342f0-cb62-4a3a-9333-92c2ed3eb297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc871aa8-9ee1-4765-9beb-1036c37a544c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a616efd-9332-4fa9-863c-68f746cf3f44",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de455bb-0049-44d3-9d64-3e5e5a04d077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385d9438-ca59-4770-8750-7cccf51ec39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665316b0-1f2b-4ebe-a06c-7d0d4ca3c2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9d363e6-a713-4fb6-bbc5-7926c1c3f97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a116c8-e3a1-40e4-aa34-dad782afa625",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a0acce-7173-43aa-aa69-8e0232d07ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180718ae-3c46-445b-9fd8-3b2cdaede8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c391a6-e725-4569-b726-da0361391b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f27621d1-d1e4-4bb4-aaf8-1435d9c04576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a605135-a8a4-447c-9a64-50b1d72fc620",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2bfe26-bad9-462d-a80d-dd8d2494784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8296b0-32ca-4aab-90e6-f26859795f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ea290-2023-420f-8af8-1e16a958d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fec9ff9f-a143-43f7-bb05-5e94c9f9d104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e15a182-dff0-4651-a1bc-9c7bbfc9e632",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79418279-f97c-4b33-847e-e3dd5a740736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eeade43-79ca-4fca-be9b-20e0c8b6077f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b6e8f8-33e4-45a7-b022-da0ade7411d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84f1764b-3e6a-437b-8996-b89ef32bd1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d816fc-0835-4f2c-89de-1e123f696761",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f85fdc-f2e1-4d16-96c6-04a283bce737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47442b8-d761-48f4-8957-de9375797e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cb7bf2-8034-41b1-89b1-52caa9739988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18df8f84-94fa-4469-8beb-a1547fe04a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f61fdb1-498f-4d0c-8c86-8473e37ae5e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678b49dc-f761-4acf-9a89-4e5996ee115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bcc1e61-623f-44c5-a998-6e22e9ba2568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7c11b1-8f0e-466b-ad4a-6ec9d7460338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c54c0cf8-0d72-49c9-958c-5dde6baa923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cb50a5-d9ad-4a56-a66f-9ef6015f5554",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd3e06c-04f0-4471-b0e7-f9a9db331d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1ee4d1-af3a-4966-9f38-acd6586f4019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a75a329-c84e-4759-b6e5-444f155df8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "911a505c-e894-43c8-9547-5291b2e31b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436e3ce8-8ada-438f-ba7e-4832565c36e3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fe6f5d-0230-4671-bd6b-017ecdc86ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40482045-f913-4a5c-a63a-4a8a71cf589f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8e0a51-22a0-4182-b096-af56e6fa6e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d109b75-5a7d-42c2-98c2-6f2eef330782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644b72b0-cc7a-4ebf-8a8f-914ca238cb35",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57311548-3b4b-4e30-9ffb-4180fa87e622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234dc38c-3d07-479e-9393-d6da2f79ab15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7df68a-fcbb-4002-94f8-105b154ac8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3cb94b-4616-4f3c-96e4-59e3450a8620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e23ab4f-3efb-48a2-ae34-1ff0098e1e09",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0ebff6-e1dc-4843-ad70-020a8a749d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56eb0c6-7d82-4651-935c-c804febb0a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c99ebd-7043-4eaf-adcc-d7ec9e116fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcce7db-65a9-490c-9507-1b8570c61f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1994d38-b476-4e2a-b236-29df1462a0ff",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85219d11-e635-4b8c-870a-e667916f5e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8876a14-868a-460d-9a10-840f31e6151d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a7f76f-81d6-4a04-b6a6-5e5a1554d352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "289602a0-1561-4b07-91d9-157982a96df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42edca9-4278-4f34-bf63-44e2cb68308c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490b7cf7-3a6f-48c8-839a-c0c9285db6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45631cb1-9a88-4ca2-83e9-f5d9295f623c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd6b6f1-6833-463e-aaec-6e1817a6b668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd1aa63-fada-4845-99d2-e6eb6f80379f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309c6733-3c7b-41ca-b86b-25cb4d93375a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd7e03e-e7b0-4c28-a5b9-990c30881666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99988cb9-c927-4ade-a607-33ca5bedddaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1b89d3-c676-435e-9d31-39e5f5686c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f63f3b5e-2648-431f-8b21-97c2043a97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579ed92e-0984-4142-9ade-790c3cd788ad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c004017-b51b-4c2b-9f4f-dc0009ba98fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32784cb-8dd0-45b4-ae0e-35af4c5dd2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046e4b29-f059-4353-ab32-774e4643773d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4415dce8-b4b1-437b-8049-520050006bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ec2342-2db3-4601-95e1-eb9ef1f87c19",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca2870d-cd50-4e51-8a1e-5e5bc695b37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b6f712-fe0a-4515-8a67-df034cbdddea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6458ef8a-3f89-4440-a7ca-4957c54b3926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3f1a16-0298-4005-8901-e7ffbca6db65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8e1daf-2d3a-4395-9155-0e5d296072cf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b7865b-35ba-418f-9ac5-e314ee12374e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad97fa9-d4b6-4276-a416-7a1c91af0246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eccc997-67a5-4756-85d7-8d5c4f6b2e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b13d68de-4752-4339-bb7f-b6baf7f7d3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3088b307-c284-4097-a473-f14b5ecfe92f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db5183e-5854-4b37-8425-e0730b570d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a3afad-ef9a-4037-b9ca-3d7e80df9d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73dd728-b5b3-40fb-a5d8-732274554d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9d9b67-2c81-44e1-bac4-fbc6d154a91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28475fe5-1de1-40c7-a0c4-9f5568007524",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917279e6-02d8-489b-ba6d-45af29ee1a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a001ce-6124-47a9-a161-3e6ec81de183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2591f8-3797-4c9b-9196-4e0767d48fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc16cfd-bda9-44e6-bd43-5cbbd30e2b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7344e02-4a24-4874-8878-5c6f4fa032e4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c907b7-7a2d-472a-a6e2-d0bd24ce51a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3bb8c4-83be-4bb1-9cba-15aa602b0ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65945f4e-971b-48d8-b799-405ef9f28178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55d9689b-c569-48eb-bccb-d4f897357b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a949d195-edeb-4231-9298-18ac56d34653",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117f56cc-8c34-40b2-bc9c-d99b12237e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a526368d-4cf3-4eac-ac88-d54a8d78c8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca036e9b-d6d1-470e-ab60-a656b2930a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02c7577b-4e09-4e5f-8038-1dffe0d37993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d11a140-a23a-4c19-a206-82813dfc792b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52c68c1-4d2c-4a57-8f54-e6c2fe9cc220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7ceaa5-5b21-4f0f-ab9b-80fef230cb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70751106-6384-4c4a-820e-0e1a51cd7c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "51370d75-c802-4462-8434-a2beb69266a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0674699c-d758-4c28-84b2-099bae5cb4fb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7e91e0-b269-4b4e-94af-71eed2e955ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b4caa4-a0dc-4b9c-af6a-a3595703ec76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad42b19-f09c-4976-a9fd-f329a3d26fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c271262-7f7b-422d-a61a-112780716cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e6414a-f3d7-4ae6-b1c8-f26a600ca4cf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969ce6ef-00ce-4871-a9be-0e9944759ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ab9fd9-2c40-4db1-96a0-abc09e574fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b64109-3348-4b0b-a963-b5fa37f4165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7012e4d5-aab5-4332-aa34-a2d0e3125cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4954fa06-3058-44aa-a837-596cfe634e60",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf207924-f5e0-4fe5-a597-7d41cc95f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35100298-c4e4-4991-b70f-b9b45bdc594c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb93674-96dd-443c-b385-35dbc2d9c502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e654a88d-25b1-457b-8723-da1e4f548a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953f48b2-120a-4e60-ba30-d863ce26145f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43548f57-3ba1-4962-aba9-1ddb7b6e6653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2e3906-a702-4c2c-8560-7cd8899226a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92d317d-163d-4565-9eba-59eae48095ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cd2516-58ac-4bf2-b024-b59a23466cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a882df-ce37-4f78-a0a8-f245cee3f23b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dcfd44-ee97-4ca2-a848-f0706f9f679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601c567e-092a-4fc7-aa4b-d02998862954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7441e0c4-b6a8-47ec-8a0e-86ec5d996f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a663c1ae-1e49-4cbb-8376-52a37dfd3761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4b987f-0b7a-470f-b1e9-de7ba25a09f1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baad688-56c3-4732-8c08-c7942ebad48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61d69452-0160-4e3c-adbf-ebb3760d530b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2487acd5-23df-48f3-b814-90ffc0fcbd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d45faded-d780-40b7-a0c6-1ecea0ae8843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087883b4-67ca-4e6e-bac2-b506578e99a6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7bcc5c-d45c-41cd-a8bc-42142d052b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ae566a-d293-44a6-bf99-8e77d91bd20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1757c5-107b-43b8-872f-7a8e4994475e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55500cb5-9173-4e0c-b8d5-7d0c6299a028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d51280-511c-4fea-991d-cc443a9d4b0d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7b1c16-cdb3-4868-a81d-4b75b58a8111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0582dd8-27db-4ee2-803c-b35312fd5a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1362627c-c721-4c3b-8c51-313e5303b524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d302bdbb-033c-42a5-803b-c98f103dab71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47e2070-7ab6-4fb4-9073-4432a94a6752",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fc8b24-6b93-4a71-861e-7168cb44560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afcd7888-5cc7-429b-bd7b-68e86c3c91d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e5f059-b3a8-4d18-be94-2c8f5f975613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a018fc0-b5dc-4d15-82b0-298b2841a2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d8d802-7593-4ed9-a9ea-694158edd607",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3a62b2-a91c-41bb-948f-d5927edc0655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02a98b9-3e6c-485c-a1b8-693f007aca2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4102adfb-d2ab-4a81-8011-d60e7ef81cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65568296-33aa-4127-b138-54c2f44f82a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec56642d-7736-4a69-a7db-24b1fd786d76",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bded17e7-dc45-4800-9249-3db235df6182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36b268c-cf7c-48f5-b80e-e4f7b0254dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e885e7cc-8ccc-41fb-88be-7487bdad5a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a09e2bb1-5266-48d8-8e99-daee8a08b6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1129e4a4-2246-43aa-b4c4-7a1e5c6f824e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1976bfd-707b-4c28-b278-039b085a54a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9a7540-a1b1-4496-bd18-b515cbc5e0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5bfa26-8fe0-48a8-90f3-5e4aab5b451d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "15fac181-20df-4ecf-8bf4-c389b1eb5236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b335140-72bd-40f6-8a6e-872de36f26c0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61720b46-5e97-4f19-8089-cf3057fca5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2606f20f-4bd1-412c-a001-7603922a8283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f73473-600d-4f25-83bf-4b9dd20ceaa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "128efa44-2c6a-4649-a909-9c5c37d32635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5e0e8c-f4f7-4e2c-a3cb-8dd589fc0834",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ec474f-d8fd-40b7-9a7f-ad09b543ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eaeb507-6bc6-461d-9fe9-cb8fcb136e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59930fc-a519-4787-a744-e83845c6a99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0473c5-e247-401e-b620-57ae978aff9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa85358-465d-4daa-aafe-933ba8dd6047",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a1cd44-3838-4d61-8001-39ea29281735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e79332-bf1d-48f1-9b50-82c28ed43bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2779e932-dae0-46ff-9745-d645186c28e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0870ce08-7f95-429a-a1d7-75350ae308fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fb0212-cd8c-43a2-be8a-3dff631e8c39",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6007758f-eaa1-49f0-b0b6-32c8160ddebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb9326a-d555-49dd-8ea9-1d97e3e88ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d86c09f-4e9d-4a61-9e04-46465d4b6a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c343bfe-3614-4cb9-9554-975dd22a645f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914ed55d-6547-4218-af8d-f3991a512294",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a935b9-8ca7-4d96-88a5-21560f1a5926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "387a0b72-b688-4cc4-9980-3bb566d20d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d129e875-4928-4529-bf9d-8bab3baade23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfb2737-a3d8-4539-a61e-f9f22fa764a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b39bb4-7d28-4801-b76d-50bd70ff802e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935a506a-19ba-4be3-85a8-60165b4df775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a74805b-6b01-4ae8-883c-dde3a3ad6704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5094fc-f990-4ec2-853d-a3b47416d300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a54ea98-8aae-4e39-8bfb-905c69567b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c981652f-e382-4668-8a5f-6207488483ac",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5407903a-8f6a-4e73-bf58-0fb476cb3b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78be927c-4c71-41c3-9b42-59612007b7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a46fcef-e09b-4384-8354-794ad9d8dc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f67850-3554-41f9-a9c4-b74af29a417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db158ea-63b0-43a9-a79f-0805c4bfe182",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d426e79f-75fb-4e05-ad69-b8557478669d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a14b307-421e-47e4-8ff6-f80db5ae01f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7821e04-076d-4fb2-9de2-9be607193fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb700c49-d131-4a44-986e-e261f5a1c639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f6a183-db02-4bb6-9a00-88b1063717f0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7c27e9-a33a-4dcf-9593-9a796011f484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592d1a50-861f-4eaa-b7f6-2a770643ce08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e41b477-7f24-48d4-9382-40d45582ae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd9e19f-b32c-4e2d-80dc-532d982a8270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60fadd4-6179-4185-a50e-152f91b7e0b6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3581d76e-5c01-4645-ac61-0e8011dc6223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd0674a-dc1b-4598-8ba6-59fc9fdc3c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0502255-c365-4eb9-b991-e0e2da4b60c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4a2f57-54e5-4cb9-99e0-fba23ee6be0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405ae6e4-a752-44f3-a66d-26e6251f1ee5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eaa566-d620-4bff-a53c-ebe7a163f19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56780ef3-4b7a-4e84-a2b7-404f855c585d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74835870-7fa9-45a5-93e9-253b8d7a02c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8577dad3-7445-4ba3-8273-288eb8ba07b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c06b437-12a9-4ce9-9899-ad6d7770c13e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9db167-7e72-426c-a1df-afa0a29df1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6eabc8-7276-4738-9e71-1470fdcbedc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01252e59-361c-41ec-9c30-3b76b70c517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23383602-a42b-4504-9956-874e8dfc4d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d27dec-8932-4154-b816-f07ae7d308a5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0353f3-dd80-40ef-803b-078e59852320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cf0a2c-5593-4b10-bb78-3b5b6f2e0901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e746d9dd-650f-4542-b550-5ccf4afe4109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d134cab0-c5af-4977-97c7-bef65e8bb2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a0e076-fd24-43b8-8e93-2d0393458071",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae238a9-95f1-43c1-92fa-2836e7085ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7dae60-ac77-483c-8f03-dabc857bb56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876322ca-1600-4255-9fbb-7f427c43f671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "de067e92-d535-4fc1-a187-23a15d276104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c7d4cc-c6c4-4445-8d4b-563e57c7d912",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c8cc3e-ff42-4077-aca7-8989f85c99ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc4cc1e-122c-43a0-894f-5d515642f73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fe1dc3-d781-441a-b849-29680629e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c22105e9-6df0-416f-9541-e035ee6b4c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d55fc93-8ff0-4e61-ac8d-88b0c9c1a719",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64b0ce2-439e-4265-89f4-05bd143ec607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d35de2d-e520-4594-9af9-cb15625624d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426244f9-f33a-42d6-9aeb-0c4ab45eb273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09db8dfc-1cae-4208-a566-248fe75a3633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2244d0-96ad-4d8c-8fc3-05f46a1f0f51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34fbaa3-7d17-44bb-808d-1eea578ff679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9f8b37-5a12-4e09-a857-411b09517a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a891dd-2ccf-4b2d-9342-dc52b1bfb2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0ff114-3331-42a9-bdea-842c05f22f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec27697-018d-4c78-9954-baadb47a6d17",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33898ce-1e3e-49ed-a339-b1e7555679a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf942e7-c0d6-4c0b-b58e-e9035ccb2899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5136b32-8822-4774-a13e-c1d92ec7a449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8a77bb-fbc7-4a09-aefc-cfbdd98811af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46170dd4-9c2b-46b5-9a3b-90cc8f73a57f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677a964c-c134-4a63-8059-68a2aa05b2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839cd703-bd23-4427-9d02-55af36fa35a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc2d248-f901-4d4d-baf7-8ad1f2e15334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0008514-881a-4982-a585-fc3da0da7757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a54e435-cc8e-41c3-b8a2-a9266083d790",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d093be53-b7ac-4872-9600-eeae999c9029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7340a2-2332-4a7f-b5ae-59f9a26098f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d649fb2-8ab9-4dc8-98e5-5af144d2bfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a5c0b1-7adc-45dd-aec4-ad83dcc2c033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b822ff5-c359-4e65-a747-64922b3cf56a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a10d90-e2ae-41cd-a211-8fc7b058f0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8958755-e19e-4e8f-b48d-44b2405dc1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ea7cc9-0b78-4b92-9274-d4d8730154ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6b8b93-6bbc-42cd-8763-bc0f24744340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed9b044-a455-40a9-8c0a-7ae082d3da90",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e4e9db-4d8a-4912-9877-756b1e740388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c953daac-6370-42c0-a938-4152133d3cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b9a2fd-b99a-4f26-83a7-09d955a4251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3380d6c0-f8f8-400a-a758-f017c75f9d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f74dea-33ea-4596-8110-ed3364e50ffa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f23102-460e-4809-ad99-b09c79e51e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb1fbf8-bb29-43b6-91ce-5393592cf990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067d8849-18bb-4e89-a0e5-7afb13755195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d03a9b-676e-40d6-a65f-a4984b6d3650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f904e0-2cec-4a2c-9734-74aed77d9876",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29adfede-061e-4acd-90fb-d8bf9a324a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2f3428-a246-4281-beff-7013c9c99030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897138cc-0c5d-4648-ae6a-22b1229659cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a97224d5-e5dd-40f9-b26d-e555895a08b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882e2746-76ef-44aa-b922-06b0f3e555ef",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e865cfa-4fd8-4c65-b10d-8cc17f255abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b399337-4739-4ba4-b399-9026c8b3ecaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fe6fbc-65f3-4d5e-9ba7-e3b65e87009a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "269d1efe-5ce1-49d2-9ca6-370cdfb852ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb0a4b4-c127-4859-b2d2-4fbddfe519a2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e88891-c036-4a24-bd0c-e32fc0ae5aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a255580-5aaa-485a-aa8a-a28f6f3cf039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c69749-c9f7-4a0e-a664-34287463181e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a472afc-82c1-488f-a691-7462db414bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac04f249-0c8e-4391-a05a-2160293d4713",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573dc1e5-9e76-4e68-8727-48ffae7d90d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4c4cc3-5974-40dc-b35f-b5b6bafad201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08d7307-51eb-4516-b0d3-514f9b696bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e095ee8-2027-48fe-9fbd-8969e3a198ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dfe072-11de-4a4a-986c-f35598d17409",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abca905-519a-48bc-9b85-5b1dcfb314bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888f2a54-b872-4065-ac27-f0c087ba61a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c3b2fe-ccea-43a8-994d-c69677b80eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92049e0e-d787-4ea9-9daf-f259fd98f260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34057b2-e721-4cde-b86c-6badca06ae8b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118d9180-da37-4cbd-b357-110d2989d750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4b3155-2cbc-45d8-94c9-b65d66d8b840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df20ea9-ab92-4036-bbd8-3fcfff9d05c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3f2e74-a06d-4f74-b7d7-cd49394fb9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0056023e-7074-49a4-a30f-88359e21be46",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb75d686-4398-45bf-9478-6085ac1d1ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540bd297-f095-4953-928c-f279aa129ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58b981d-5377-4e43-9e19-bf05c39b1d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d88f868d-0164-4fa5-a9ab-2e886a26ae8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced11bbe-5606-446d-b253-d2bfaa5eff33",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f0de86-3d1d-4db1-a1c8-37581daf1256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cdf0fc5-032a-4533-ab89-f296d33a5fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c05f04d-291b-4609-b166-ebe23f179778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c9314c-2637-4fab-b080-cc18128e2d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41362aa-790f-452e-8e5f-5f8184e68851",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2e5880-ca5a-4350-9148-f9508fd870a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f358eff-eb83-4171-8685-8ce18d915dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5017d5-f06e-4fc9-8a7d-13e0ef97a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "93dde2ed-7007-421a-bbc7-318f5d60b222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0b8abe-ffe0-4572-b70a-fd0e761b9728",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ad8a34-1149-4167-afdd-185cfa8e4884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34c5950-7345-4a96-bf3c-7bbee629435e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b71a91-2797-4a22-aeab-f0e4b72dc388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea80392c-d4d0-4b9e-a700-d271f87306c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5165d72e-03fd-4adf-bf94-c1f6681c5b65",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5e76fd-6cb6-48e9-bdae-a40736855667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea41ff8e-5571-47e4-91b2-718a78a66c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b167ac-c8e7-4148-9c05-cbf5bbb4bc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d40759-6296-4751-aeef-30b05f225f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e747dc83-fb60-4998-99fa-a97a704b7970",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da97f8ff-d771-4afd-af01-8b7e40a7e980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2dc7b6-22bb-4b5c-84e4-1517c8aad947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5733c581-ae17-4ae3-9ae8-08def6b88be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb90da3-907a-475f-9a54-8b53acfa9291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41476bd9-434c-4c8e-b138-7d20d0bf707e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb48a40d-24b2-43e8-a121-452b6bb1ff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0574d85b-5d96-4603-8bc5-df901741fca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5ea2f7-4109-446c-be56-ffb426906d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5c57ab-7751-4bed-b957-a617b8ef2781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053960e5-e001-4971-8cdd-fc07767884fa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c51496-d7c3-41f6-ba70-7bbd0ccd341e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a6d08f-88fb-41c1-a3ca-9ceee3221247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2dbba2-891d-4133-89c2-8f856afb46cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa02f53b-98de-42d3-ad19-811b73358579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3c6a1b-1116-4efc-b482-ad7049276bf1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d17d146-205a-4ac5-8a00-00c798aaf692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83998852-786d-447e-b4cd-99d1f3edecc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dcb75e-4735-4913-9566-42ee3934a465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1516402c-a2ab-4dda-945f-2bcb14ad44d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2959e5f-3201-4f35-936f-df177c72de1c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb5f99f-f697-4740-adaf-1ee7f4deac18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aced5a0f-d092-4d77-9f89-bb85267a688f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9709e013-0744-46ad-99b6-f2436154520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "812ce099-a6cd-4aa4-816c-3485470e10d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a094aaa1-bb1a-43df-b4a8-3f3937a70b0a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad0b89b-3fab-411d-a3bd-9e55f6f2a977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60120c5c-bd62-436c-af50-802896f97ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567f23e9-3add-419f-8327-0a8322c882a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e4a506-4026-431c-a608-4fce5c41dbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac85b4f1-cc29-4bfc-bc4d-fc1b19a0ba85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f40f85-bc29-4345-8845-d2b5839c2013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969f3d06-662d-43c2-8fbb-eef69611c270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4a9579-f388-4d6f-b4df-0b2e8680cacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "903b3385-5115-4593-a517-eeaf5081e2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8293fb28-303d-4aaf-bcd8-b59d72b688c2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517987cc-a6a8-407a-a1c1-6b1405dd9f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af0e2f6-dbd9-4233-8459-d3d3e6dc225f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe8cd40-0dac-4bae-a202-80e8205ca227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee13759-2583-4f79-82e7-03772681634a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ae7805-31aa-475c-abcb-5d92572ad7b1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8f57d6-e106-41a2-b1c5-1672a97c64fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d1d295-8ae3-4cd2-af9f-adf297a0d5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173ba3b0-8806-4ae5-992e-8a657937cd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a145533e-a714-4272-857b-ad72923b1d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698c6d47-9500-45cb-a90e-9f759644fbd8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78657790-acac-4fda-af8c-74ffdd8da9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333abb31-01e5-4016-83bb-c5f28110ca1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146a08b0-a07a-4f2a-a940-3f3fdd7428b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e007d9-6294-434c-9162-8dc8ff4ed048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab08e79d-b35c-422b-b643-592bb0def547",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045bcbf8-2bda-45b2-a743-b555db4dde0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b984d265-eb24-4bd7-9228-82b89354e565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94397ee-f14c-41e2-b57a-c180582ebd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa81ff5-6b2b-4295-bd8c-36413db89103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ce7c71-2961-4654-8d4a-cc2a2a0a51ad",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed6665e-3266-4c10-94dc-f759d7adae26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e872b0e-7ee4-4495-a799-df9146ccca54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c40e26c-7499-43a0-810c-1657932e23b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1a1b94-6310-4b4e-b744-42f94fe6ba73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29648c4e-b273-40f5-8add-854151f90991",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1f12a6-66bb-45fb-b02d-5a4dd8458b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43a5e4e-3a83-4658-9cb9-07970a93ed59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f17fb2-5c89-4af3-b2ee-7c3c53ea1cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af5fbfe6-3c5e-4015-9bb8-0659257de7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5ed9a5-1af5-49af-b14b-b6780a3cfa62",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09116a26-1acf-499c-92d2-26009389e255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c599ae44-45e2-4226-99b3-5b663c5d99b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90347ec-af18-47d8-a622-7a8a0a1246a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3b557e-970d-47fd-9b48-87a5589bcc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b32bdb-7d74-4fca-a3bc-b7046b858711",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6143a11-7447-40dd-b503-dc1a8d1377ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ab535e-891a-4345-9a0a-5194302d4887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba8fa90-a0d6-4c5f-b91d-dee747c0a3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad6f1aa-a766-42a0-8655-b1cae2d185ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87ea8da-773b-40c5-8a89-d62ab05ad7c2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33238b3a-6dac-49c4-9934-b9ef1a044f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a0d7ccb4-dd3a-44a3-8027-bcdc96670c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a552e5-b575-4970-b9ab-59faf5896e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd88c1f6-0242-48dd-b5f7-c41dcf44a44a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af376260-523b-4ed3-a313-f7feba5e540f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fa17572-241b-4a09-8184-d1313e0e106f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25639048-6c78-4bf8-9bf7-f6b1444d4c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b90e80ed-605a-4cab-af56-f1cc633d1d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe27e95-4e22-427e-ad4a-9ffff8804df4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f6ab71f-85d0-4e0c-a11f-2a3a0ac7e5b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c904841-9dd2-43a1-9605-ab039b36fcc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08f8dbe2-f9c9-4921-a8a1-f2adf0b0a292"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be85a736-b472-42ac-ba77-593c5c21bce4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a982cc68-5a5e-416d-891c-2e6451be80a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ef5474a-b598-49e3-ad52-bbd80fae56d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b393559d-b8f5-4149-822e-22067564cb14"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb53bc35-c448-4d09-9e89-5879b0d87e2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5aa0ba0f-3b9e-48d5-8558-7779700419db"
                }
              }
            ]
          },
          {
            "id": "b3706596-092c-4839-ac34-2472b408f0cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "03d1d43c-5f97-4f14-8dc2-fdd00a528f7b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7f590826-e354-497c-bddf-a7d11ffa5feb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4d56d1-baa0-4024-b8d6-386c22546b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0b453975-0013-4d80-9712-8f0ab6ee9cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ff36de-67fa-4532-a115-e7a0ae5d9118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6ba073-ecb4-418b-a7cf-b6bf2dc5e735"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7240f1b5-799d-462a-b51f-2b26f74af488",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d6da1d8-8d2b-43ba-b58b-39728651c0fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3eac4015-57ff-483c-b5d9-746f402a0217"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2666d06-452e-4a98-9b4f-5278b24fdff3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6b35788-0cb8-4537-bfe9-8922cf50bdf4"
                    }
                  }
                ]
              },
              {
                "id": "74b964a9-fccc-4d93-be67-fb556954c2bd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67789ccc-93f5-493b-8101-39097282f93c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6837d76-f644-4b8a-b9e0-384c546fbcd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6b8fadb-fc65-47d5-92ce-8bd3d7eb5d36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6edd25eb-d8c6-4b78-a1a3-c800e0b5ebd3"
                    }
                  }
                ]
              },
              {
                "id": "2816205f-2a9b-4220-8690-4ed9b6d2b980",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c2c8abd-f7a0-468d-99ef-32f8f512d2b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e599eb9-af38-4067-8696-629ae5db3004"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1dba77a-813c-4be0-ab6c-afa024f3dc58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61ec43b7-b05e-4187-b6bd-51510d6a6170"
                    }
                  }
                ]
              },
              {
                "id": "54e24f21-78ae-43c7-b761-00389b0d3e8b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc24fb96-8e68-4ea1-98da-a8a962d97a2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "002706f4-54b9-4c29-908f-696fe77b3adb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d34608e-eba1-498a-90da-667e4eb11ec9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4be9f440-cfc7-43d4-ab81-dcce16b86fa3"
                    }
                  }
                ]
              },
              {
                "id": "ed8864cf-3029-44db-a118-92f3da1aa81d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1323d4ec-176b-4f15-b7d2-faaca13f0a5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e762d411-6e48-4b8c-9046-1a13e63193a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5134e950-9a88-4e6c-83cd-6b92f3b34e30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "88891c14-6119-4c82-ba24-53456c1f15ef"
                    }
                  }
                ]
              },
              {
                "id": "692c8cde-0a77-4f4b-85c3-255c59483530",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20ce6696-f2ff-445d-b434-76e5520c1782",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49d6cfdc-1125-4338-aedb-578a806c483c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd102f49-36a0-4e3a-b034-1d85a6a14d4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "758d9842-5521-4acc-8ddf-ff00398d922e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fba989a-b44f-45ca-bc04-5b6f2abfb833",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d8f039a-a4a1-4ba3-b1a1-feaa60869ece"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8991be8-93ce-4e02-bf1a-08324b3b1a66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d7c5d03-717b-4f7d-b2b8-8b3687846f6f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc46249d-bf76-419c-9320-e6080ea0fa34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5874dc91-6145-45ac-8f99-4a54aff88c7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aff4108-9af8-4ce7-aef1-3cdf2a6844ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d1e0a27-95fc-483b-900e-8a32070f0ad3"
            }
          }
        ]
      },
      {
        "id": "fa572fe2-bd77-4b76-98b3-0718d344ffb4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bae9019e-bf4f-4d54-9d77-829fc5abd893",
            "name": "Negative Testing",
            "item": [
              {
                "id": "904b017d-625a-4ca2-a762-0ffd80fe35e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cd7cd3e-fcc3-44fe-9033-737dd26355d1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d28d90-4477-4760-8933-7c3ceb6f74a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f99c14-917d-4e11-94f6-96c0a8a415b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa6ed20-fe50-44ed-9c22-e62021be06af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c542f08a-8832-4f8f-a643-1a297975243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b89a0-9abd-4220-9d9a-2bece9f0c09b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d891c82-7ede-4d0d-bf1a-955a6196223f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2761c839-f8c7-45af-b0b1-ea215210c5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65f5432-9fad-4bec-aa66-f4d28f57bed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4ef1a7e-253d-4082-9c21-19b8724710ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1837f9ae-4dc7-47f2-831c-021e62b44e3c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f4fa23-7bcb-4104-8d53-55c95c460dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48359b83-5250-4f6b-a4af-42b6725abdb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b716a129-fe01-45f6-ad11-ccd8cf6f24fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59ce879-b540-4c73-8be9-721bd2ebd99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c584a83d-14af-472e-8dc9-180c712655dd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81597b39-4d1a-4cf1-8b1a-003a5124f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35969db1-12d5-44a1-be9e-107ed14f9933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a8b81c-606f-4b36-af4e-ff32ff36a0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3aa5129-0daf-40c8-a45f-8b9672118210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6bd794-42f7-47c7-acf3-54545b988df2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fec73d-5f4d-46a1-ae67-164f9e92da9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0749a58-c127-4613-ad53-eac8a68a9d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd0ea73-9934-4560-83a4-c9ce44d92fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb12759-5d4c-4a4e-865b-709d4d1f05d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b290285-a771-4e91-ab63-882f48b2903d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1046d088-ea4d-42bf-8a30-da8f84b5fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59b6c72-ad2e-4f90-a396-964438d349d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eab452f-d63b-4cfa-8e0d-5910f7152e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9512bd-0ba3-4d5f-9b9a-cef627caef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe7a5b3-db63-40d9-9a07-86c1ac1cf542",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42151dd1-af36-40ef-9567-51f7a8c86a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286a2612-f5e7-4724-9e1d-a670f6538d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41410c11-5866-42ef-a8d5-d7c9a08a0efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ac6319-5656-4b99-86ac-a71d3c6abb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437be296-3eb3-464a-932d-17aece246a51",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea0237d-612d-4162-b6a9-0f61e8c56049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5adaa78-9977-4d87-8ced-5489eb7b5129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0cbc4f1-5c4b-4e25-9a81-b5a3e23c67cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "091eb051-4f0c-4cad-8176-d53b4dcb9076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a50e051-aeae-40bc-a388-0335a4a221fa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b25b56-f2d3-46fb-aa00-41d10301cb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491ad476-1ec2-4be7-9636-9f20538c8009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9e7650-7e4d-4973-9fb9-3e3477438c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f583e3f-8e3b-48fe-bdd3-a6f08b71a902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b5f3a5-9e55-43f6-bbfd-d3fcd7cb4003",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746f7864-10e3-463f-a4d3-6d5c6579ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a351cab-6444-40f1-a9b5-f287cf0d8cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e220564-3f5f-4475-b2fb-565fdba19e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b9b745-92a8-46df-8237-bff4958334cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88101542-f5f8-44b7-9f5a-7ea3eb189aae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7bddd7-829c-45f4-a9d1-c57c8e7127f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048fd6d3-5c92-43b3-94a0-9f2cd9593eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19f0661-47ec-43da-b3aa-e9de425c7756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7588e84b-ec71-415b-8aa5-f11caa1568e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142f4455-f6a4-4b96-a4a2-e30f66f70cd9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7a183e-2637-4347-9519-f1fd0e392e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70b860b-5deb-4b91-9944-fafe7a478727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d76355e-036a-44c1-b516-41b2db856b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a61fae2-a003-4fda-9653-cd5a1917f681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4663ab0-9a15-44f7-bd9d-a6ea4f9e1502",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e861f9-0e4f-46be-9a9b-c9eac8ef9b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76826291-f720-41b9-8d5c-0bdff10292eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27df092a-98f1-42a4-a9c5-63f6af3c7011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d172665-1cd9-4fb5-a0b9-a9960fdc9364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cf4a7f-73dc-46e0-af11-9b7f255b86a4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5dcbe8-5d64-40a5-ba6c-bbacc5ce6b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54222967-025b-4899-96cb-d4694ad97813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c8304c-ad5e-4d64-a590-0455fdf2f2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac99ed35-06a0-40ad-917f-5bb14119867f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba240d1-42d5-4ab9-9b29-9d685d6d0eb3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c4c4ac-5a5a-4326-bdff-4620f87359d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a275590-fde2-4408-8117-636b942f85c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c3caa5-9554-4568-8ad0-c1ce7beddcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a33a231f-a8fa-472c-b484-1a00d596d499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13ae3d7-cc71-480a-8dec-76b64ff3f4a9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb04059c-54ec-4659-97cc-15c506df9851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a9ca7f-1be0-4c62-a1c3-e3f2b544adfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7407c301-5872-4aed-8ab8-ca22594167ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b955274-d32d-4c35-9ce0-9fa147e9b449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc1fe8-cddf-421b-af51-4c191f96b8c2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921a24d6-c592-48bc-b705-57cfcbcb14c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ab2b32-6b7d-4778-a03f-45f20a7724ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8688ed9b-f6dd-43de-8730-b97873eb72a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b68ebda3-98fe-458f-86ab-139f184267f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f673f635-ec42-45c8-ae2f-57d81126b20f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7172fb0f-04ac-413a-b3ba-c9573f99d3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1342307f-2649-4b9b-98a2-676bcb661213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8297f951-6502-446a-a5d1-965cfe5409e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b38e63-923e-4238-ab5f-89b2e99b55cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f639217c-35df-4dd6-b348-d7deb235f237",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f36149-24b9-417a-9db1-24f3186f4ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d98b030-694a-4f95-b743-6e9014c5b50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f668928-20a7-47e5-94a8-586e111d93c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3159945-0f1c-491b-8346-1ca29ab85ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004cae6f-0118-40dc-899c-1b70f15d5d7a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fdeae2-5b8d-48d2-83a5-1fb8f724b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daccb7b-0c45-44cf-b364-3fcfca6999eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2246191-4bc8-448c-a8ff-d89c101fb16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ddeab8-20c1-4ca3-8043-3572d179564f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6af31c-1adb-49fe-a835-b96702c4c023",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cf9fe6-829d-4715-a539-84e6dee3a37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1a0de7-1030-4a8b-8df5-6b45498448fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa09f187-9264-45e6-b2c0-0738e2215c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6a8b47-0b90-4187-9879-8bc8e041a1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b21d21-7e23-419f-9a31-ba6393171fb9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5599afe-6150-4e3f-ac04-e50b4f4b83c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a97cd4-216f-46da-8ca7-a72e45f8969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8b38a3-5eda-45ea-a1c1-fcc45ec41f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d81d4c1-4717-4a49-90cb-b1154e64ae98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148be109-b357-4070-8eb6-db6e2527c5c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c83a19-645a-4cae-b8a0-cfd2bbe0d907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1275e4-140a-4eab-9114-059e7ff0d485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3192a21-9184-4b43-b560-9108b5e271a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c27002b-1ecd-4354-ab08-af78fc9b7199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb8f85a-afd5-4f43-85b2-4b3efd9f88aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b78e25-5231-487c-9541-77a9ba0e1980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff8033d-1ace-4203-a519-02b7ca5b4a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fee4e1b-c766-40c9-8d79-1b0b99ccd7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398ff833-8699-4a79-884c-236fad1ca7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a54f4c-6e27-4ba3-a9cc-39f60fa4aaa9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f36a09-8de0-4eb8-9027-877fc21c9c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83845b4-f171-4ea0-bfd5-9495b9264627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50fae7b-d8d5-404b-a5ff-1c31ab374ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8882da45-d913-4962-a439-5b2b6522d5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fd29c7-d8de-4dd3-a45e-211499e1df93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e937d856-c9f2-4f10-ad7a-b82664a2ace3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebc7b03-284a-4695-bbad-4b3f6159c904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132dc686-d400-461d-a424-81093f0bda58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb609823-d1a6-444f-afed-a0b9497af576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e95497-2e8a-4b31-bb68-d9415c13ee89",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ebec96-6c62-4653-9f1e-e889a276bf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffd92bf-c036-4ee2-b9d9-41a3f47f369d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a116b-815b-41b3-b5aa-a9064bcbe1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98106fa-147a-4f82-80d9-4297e095dd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85e8d68-3792-4a6d-853a-dfa8e3b1b899",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef6274d-bbb4-4de5-8b20-3f4047009098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dbdc09-4006-43cb-89c5-29c8d7592380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb0f790-67ee-4594-975d-2522ea521115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "636dfbdb-b465-418c-bef2-a60596e0b794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48eb6ff-1fae-442f-80bf-8d3072a88780",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc48a28-9042-4bef-944b-5f70f64e11a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38107235-8164-4d9c-b85d-c2e8d4c9f952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b911aab3-3d50-4573-99dd-1bd629792028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a5c4a9-dc06-4046-aa8d-233cf7df101d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8d3a56-c4e3-4d7d-8dd6-d42ed4ab7751",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fe0120-d78c-47ba-9c81-3a2df0c2710e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9a1f22-470c-46a2-95b5-7781ef7623dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e924d2-db21-436e-9eb9-8478bea76246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af4e6b3-4eaf-42b4-bc43-5e64cb53a2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2e0089-9eb7-4c3d-b163-65c0dd8318d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acad8265-d1a5-46ca-8ad9-f3475e0be917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8e5243-a351-4460-b979-f1009dfbaba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf45e816-275d-44d9-9062-6718e9120f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f747dc97-ca99-4fe0-9a9b-c86d8093223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c259d2-d30e-47e4-b9ac-497feee88667",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c107cd-8635-4af0-a979-1c85d184dace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f364823c-e9e2-4e33-b508-c2790a3d0777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae89742-bc7b-4e08-89f2-b5490cdd2599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35821608-8a11-49b7-a88c-5bfc16327051"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "791fb767-3153-49da-965e-5e58d6604219",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "432b712a-9049-434a-a587-66c6cc9c476b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a583f437-b643-4f9a-b274-0dc8a98f4e15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "917cb383-6032-46f5-93a2-2cfa23a98cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75ec7ae-3c18-4a55-ac42-c3b13a00dc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bcb6dd0-3cda-460a-941d-8c4ff498172d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9fe50c8-1bab-424a-b65b-64016d7fe963",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbe49d02-8317-4e6f-b02f-8c9f8c748d40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00961af0-c46a-45dc-88b3-c121123ae539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08fc2e1b-aaf5-4846-ba09-06b5e3e7ad8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a600fb5-9335-4ac6-9d72-aa2013472866",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "655f4b09-05d4-4453-9387-216eed350a8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "910c992e-3c6a-46d6-8481-63fdb89dc478",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ec0ec0c-01d4-4ba5-809c-4f9d8f2ffab2"
            }
          }
        ]
      },
      {
        "id": "53e87b2b-910d-47e8-ae15-b5a765b47d95",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6b9fa5c4-9f3f-4ba6-8db7-ef04f7165005",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90f8d346-18f5-4854-9974-b90a8597e3cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "92d15dce-973e-4a64-a07f-3bc54dc7a1bd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ad1419-3ad7-4fdd-9e81-30c43c3f2c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb78bd21-419c-497a-96a1-63712b8f9a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f69dc6-9a5e-4ef5-9728-e89e4c546813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecf6f34-beab-4397-899b-093d0083ee8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3f2c7b-1159-43d7-9ca7-6ab595deb700",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda5f144-6ec4-41c0-80c2-32c11ce5794a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34180c2-580a-42e4-9738-c82cd14ab1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c0213b-2971-4e88-9ce8-b6018d2bde9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eec8248-5b9d-4f32-b650-7544b9bc5dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d676c603-8a5a-4658-9c5f-f724c2675208",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06c512f-dac6-4daa-a14f-d43ee0ebced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b54ac3-7839-47a2-9507-43e7cca20632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5382091a-2162-4782-9627-8875f4c8ed0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2e98a3-c1de-4cce-a26b-9f7de6470893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c3c97c-e46d-4058-960d-55f87e2c2f3f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8d1a7a-08bf-48cd-a6ab-40a52cc160e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16662df5-6a9d-4099-88af-e1881b143b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47cf5f5-8105-449a-a5c9-fc999dc80d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d2519a-6107-49c3-b7bf-9418613788f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13caf75-3a69-4703-a788-a773cdb1aab6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94546139-891f-4e45-b3c8-4925533cfce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6901217-bbea-4f12-9ad4-ada9a8e2f147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58365d31-31c3-40ab-9433-cfd05cdd79a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3965ed65-6d6d-4704-a131-021fc3923fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837ac0f0-166f-4e83-a47f-0f6dc331d884",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec779b3-b528-4f10-8273-a7bab83f46af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18492b8c-a414-4131-8ef3-c445e398aaf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b8eb5-02e1-44a9-ace7-8a9f04b019ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57b4653a-4759-4c2c-ba31-1b781b2efdd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5501a4-03b0-4df7-85c5-3ae9394dd434",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815fe818-b9ef-4562-bfa3-3b52da3f7598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f39e73-1322-4b8b-8bbd-a588e5d699f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbc5734-a1a9-4a5d-8d38-92e118e5db7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9709bd3-8d46-442a-af75-3c7b250037d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148a2f9c-d525-4d9e-8f26-35b80ae99368",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75de6e7-f64b-4f0d-bc19-e7e5ff86faae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98fb186-2a21-49a1-a6b7-29e23ed9ae20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0412bde-b1ab-40b5-b031-aab8445a768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81bd3dee-d73c-4154-9a62-0b0e36f75f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736a978a-e1f9-4271-81bd-76fb8e8442d1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab046052-e572-455b-825d-60028bf89ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfa0627-ea79-4828-a42c-e18a1767d4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadd1de8-22bb-4513-a2f9-e51ac042a1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef99c726-351a-4148-bf10-eb83f1f3b6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6a4c12-32f1-4f0e-af67-32d92338fcad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fa8a2c-685c-4325-8740-17b5323f8903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f612a6b-138c-4b5f-b8de-64510061c76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090c9c52-9e3e-4547-8b3e-8bd03cce9905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ae57bc-a05a-4dca-aefa-9b0fc522aa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7ad09f-2fa3-4de8-a88b-b9baa8f71acd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9041146f-4ada-4a55-a57d-1d4764ff209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23949a54-07a8-4f21-a980-4bb04275fda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f88292e-d67b-4921-92ad-3b0982cd277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bb95d0b5-004e-4ad0-897d-0922bfb752a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a5eb9f-3c1f-4330-9b6d-595fcc911fc6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e332f88a-5f8e-40fb-a75a-475bbe3e6e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099241f7-3b37-4eb0-b025-d4335267a45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a972dc8-2868-4435-a175-a6b31391f78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12943ff6-67a4-4c4c-90b3-485e2a503f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d3cf22-13e6-4422-98a9-f0a53d28ea27",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b42e20-6198-4651-94df-b67fb7c7b530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc44ce9-77d0-45de-804e-cd2837a188f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179de45c-f3ee-4fc2-816e-1bf111301aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8331c37e-4f88-4b9c-9359-06a9e850f98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0964f2eb-d5af-44ad-ba79-feb6bd95b7d5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bed228-e360-4200-a799-48090cdc42eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb2a4bf-f326-4c92-9408-08e74d292bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1b3cd0-6362-43f7-933a-2d2769362669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8ea388-5d65-4bb5-afeb-6aa7cc0f4162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfacbea-e99b-4a77-afe4-c73e1ab5e223",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c2f92b-e238-4e74-8541-ab9ea0551bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb95bc9-14c0-4570-9ec0-9c94da3abd74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171c9b1-9c6e-460c-82a2-40b5444a4f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "af51520a-6c13-4cc5-8760-e384e404fb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af09a07f-0447-4145-90db-21aa2269c1c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2552e8-035f-41d4-b7e8-e46fb24f454f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641c0de8-e310-4b5c-86a4-2aeaae0d3871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ee655-4062-4c2e-8c41-922ecdcfdb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bfa9f3-2bc7-45c6-8b51-638ffc011f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df0676e-eb27-4672-9a01-f1f6624db1ab",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede0d3c6-a752-4012-ba16-306456a7ec1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86be079-13a0-4008-a7a6-0178709cc1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31025a01-8b82-44ba-a606-63c56d33a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29995b6-75f3-4c21-bdee-bb11395f6573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08321f0e-2ed5-41e2-b8f7-8a9c19a6086f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab0889c-40cd-4a0d-b826-669de86aec36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db48ab8-4047-40eb-90da-fb231036a225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc38a7e-9be2-46e0-96d6-2870eb1a48c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "decc407f-696d-4fd5-a679-6104e78fc2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b898fdf1-a7c0-478f-8af7-48be6124f703",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d0aefb-60c0-4a97-a0b9-88ce178c4023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bff897-f396-41fa-9b78-4184429b95fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0620479-ad94-4c02-9f19-3654a7105a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf16474-afd2-4c37-b749-c29983225e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daab965-6d07-4242-8565-fbd7947990c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf9a326-df28-420c-96cb-658be80e698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e19d76-8dd9-4902-bbf3-8089450e6676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e46153-8fac-47cc-b7c0-fe47be5f59b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "670f294e-3d3e-4b55-a4ec-515149ed7340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf88b42-afa9-49d2-8763-ea9751b39574",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff3837d-4e20-46b7-bc1d-13d08e85eddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613a96d5-59af-4e79-8aeb-d77dbe350933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd42d9e-49f6-43f3-bdab-5d76e8eebe97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7acb85-09f8-47a3-9916-d5e7467b7f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f25b55-3069-4bc0-b978-7ed2152a3fe4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077aa368-39e7-4757-b0f0-544fe0206967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a1ecf9-b0df-4d05-8c4c-be3bd7552c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5fc50e-3b62-40d7-8499-557ffde364bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de68f632-0759-4f48-bbfc-961aa5ccf015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a57ceb-0148-4077-925d-5e94ffdd82fb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1554e1e5-9064-4139-b6cb-b1abc00b91b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28768f3e-0af6-471a-98f8-40ddc8d46f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439e6d46-bee2-48db-810a-6cfaf449f8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "431cd64d-e609-462c-8165-9790133b2cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8e0e1-7a9a-41a0-bc98-35d5cf16a6b8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8883d17-1725-416c-ab48-70dcb9f33f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d262e3b-0892-4334-a73f-c5ab0ce97858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e53e58c-41d0-4a7b-a622-b96c058533e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9bf539-9ac7-4637-a2c4-896ccd3ff37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c6ccef-388f-499d-b6be-1329b290a033",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b357517c-b478-4b5b-b2b1-fa7b28e40cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89ee8bf-06b0-42ea-be9f-c292167c994a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0aaf0a-1ff6-4819-877b-7c06a3682f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2d7694-0bf8-470d-a7ca-ac9afe4a28f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9a4931-a597-4e29-9706-1fbb9948f6c7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2eb17a3-bade-46d7-821b-f19b6396fa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93f6a6e-88f5-4367-8728-f16487ae8046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cefaac-1b00-4d82-b09e-807d6b276219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47993ee2-4cda-42c0-a3ef-897a8ca296ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a6c0db-072a-48c7-b50c-12485c128dfe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff77cc70-fb1e-4e5b-8406-7d3c04f1d1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d961cd74-6334-4779-93c2-4f2c42a98370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70235755-3561-4dcc-ad41-40a90bff738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc2ca7f-7d8f-413a-be2f-14d5c9a621a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad72375-df3f-457c-88d9-8912edc34174",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e497fce-0acf-440c-8eef-3a97d378f50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3ae45e-66cd-422f-aa4f-3b404790436a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86d00f7-438e-44c6-b320-46fd6ac6ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f80364f-8bb4-420f-bf00-e6491a53c3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a83493a-d7ee-45f4-a134-283c159ae99c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541f08cc-c7ec-4058-b672-50402e621870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b472ee-2bb5-4266-9165-2fc2646525ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb743ba-98b8-4071-968b-c8c2a6b5dd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761a5072-375d-4097-871f-58701d7611de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca8beb5-1e8d-4e67-acc6-4e175b4413d3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786e82d4-40d5-4008-ac8b-b9b73a3dbaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7505cfc9-d6e9-4691-9309-756972339689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acad7811-006a-4d26-bc8f-a8f8121b7180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8c50c5-4111-4082-95ab-afd51908237d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac57c41d-5359-4eff-ad19-98ca57ec2d2e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba187c52-3e36-4c50-967b-6015759b10c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04bf57f-17e8-4854-a7fd-cd0582032366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32578892-a8f3-4e68-b00d-36855dac8b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7454997-5a7e-46ed-aae9-803efefe693a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2dacea-4cee-41a1-a9ce-1e78f5561b57",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117994ec-ffc6-4755-9202-d38b5f974e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26612715-c01d-49f3-8409-e33753ce9259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad76c537-5f12-44ed-bc42-152d34897fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9abc09-9073-4b80-b576-d17de45d3c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df86498-3a2b-497f-b9f3-633ebe85bd4a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e170c8d6-d8ce-4b0b-baac-eae661c5deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f55bdff-fe2c-41bb-b233-538a9d5da681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac4a4bd-267b-4765-84ae-0474a1716cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf69f76-de19-45d0-8ed7-dea7fed91d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cfb0f4-55f9-447b-8bfb-8977603ae5da",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28004e8e-bee7-4d88-85de-6cec27b9866a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d6d4e6-5d2c-46f5-b3bb-b9e6664f752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0871c29a-40a7-41e6-b804-bbee6ed018f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89acd526-e289-42aa-bfe7-9d73dda868a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a2e4e1-5d7a-473b-9e80-539a28ba68da",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ccf459-20e2-4798-9bb5-4a11c20f62ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ae5c7a-d792-445c-b031-b6670596b9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75cbb9c-8a2c-4923-bc16-a40b32ea9b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce43f6b6-2543-4f65-a469-2ab59e4131ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b651d809-6a72-4901-84ae-f01a622408ec",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779a508d-cb0a-46eb-951c-038a19553d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c910a3-b5dd-4300-b22a-6057b8720a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0959e840-a188-4f6c-9b79-905e62ab9c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "131a80c4-5f71-4357-bd49-397a8d7665d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b84358-a3e3-4ec2-b2db-190d3bd578d0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6db00a7-1ef9-4e56-b82c-47ff4198476f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38da7735-58ab-4bd7-82ad-5dd8e71b7f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2284daa-080b-4809-be43-eab68b06a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23e9a6eb-cbe6-419a-8b40-c35675129e6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6e3665a-bb09-4464-8416-0c74c008c7bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6dc1ed9c-9455-4d56-96e2-dcbfedcfca30",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b3e346-71ad-46bc-ad42-02277324aac4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "787b2ebf-5de3-4f8a-b9eb-a7bde025c2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9082d8-679e-4675-bde0-4b375b99f289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63ef8431-ee39-4694-8d97-e118d6013362"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac721a25-e6d0-4b06-8c9c-2acb2059e842",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07aca6d6-ae65-423e-83be-690735485c6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f51291b5-f6d4-4e5f-b38e-6070c4946d51",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "926f7f2a-759e-4a6c-905f-6aee7c1660ca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fccad128-55cc-4055-9d2a-3161d44f5386",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be42df41-056b-460c-8f3d-fadd633def99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a20be3c-e88d-4927-b325-bc888731b618",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35f8d468-1dec-465d-becc-6e54525ede5e"
            }
          }
        ]
      },
      {
        "id": "ed485981-2023-4762-a7d1-5da0d4959ac7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "94ad76fd-a97d-4264-bb42-b9b4eb9b76c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c89be071-a202-4978-9fe6-62d8e8427d7a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0957d413-11c8-4ba5-bd1a-bce16521169c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3e92ec-75e8-4191-ba5e-62a44f129945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2820bdfa-e4a5-440a-af11-8fc726a50276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1aad0c-69e4-419a-8fe8-228c1cfc93fe",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947c00e5-073f-4982-9d97-dd7c01f30793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb841f83-6956-463c-8717-3f24f8097e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3555e7b5-ad1d-45c6-b841-e767402ab758",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be484d6-ee2d-41fc-883a-73ddcd305c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a128f5a-366a-4b13-9af2-ecd3bd1308af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444db7ad-57f1-4d06-b9d8-2d377de5332b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449c516-9bf7-4811-ada6-f500a0752185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e6a0b6-7fd5-4313-8ef0-58f9a7374b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881ade27-6568-4b51-82e1-416911225501",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a289d342-b944-4b8e-b402-c4ab166eba95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efbd77b-9d97-4356-a9ce-940d78de8474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaa6855-aafe-4f60-83cd-a8876e013569",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc817f43-d1d4-442b-9dcc-36c154a410e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fd2f5b-27d2-4390-a44a-36fb81833135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d35fd9-c208-4f23-ad73-ab6c097a7684",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf5eabd-933e-41c6-a194-6bdd06981f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef8de03-b104-4a4a-ace8-8c5ac641dbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dcc42c-8ae3-4548-b98e-9d3b7a24a63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e742e49b-a55d-4d7c-814e-e5358214d636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7c47ad-f33b-4d21-841d-4a078f9d63a3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec800d1d-d49a-4e8b-9853-3f4ec38f8325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2460ca57-3e50-4cd0-a84c-3f18376ca627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f41bbb-6e7b-462b-b15b-e81405acdc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6899e4-5cba-4a36-803c-38c53d8a6825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d054c3e-e666-4877-b3d5-b7c5e8ae019f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afba170-e7bc-4131-b0b0-7c87cdbd9ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f02b8155-d7f1-454e-9af1-d9011d49e527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1ff58e-0f9c-4432-8d14-952f6fd77bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d285e5-00dc-4ee2-bc05-be9efb9086e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ffb927-c01b-4d61-a3dc-3ae05664ed92",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6ab669-61b3-4cec-81d6-019a81855463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb611b84-67dc-46a4-a112-74e85d20565d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb86eac7-be0e-4104-8531-a18ab52746c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7b6336-4edb-436a-aaa6-9c2a0422c28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22c5509-65bd-46e1-a347-39e19984d320",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e72a3b1-edfa-47c4-b1a5-ab3bce139304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c56b0f9-d184-45a9-8e3d-7f4b49571ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f72bb6-31d3-4575-ae33-4a1019ae51c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cb76fe-602f-469b-8336-4d8e7d134efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7458da84-6bb8-4446-b60c-dec8277b708a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf23df9f-060b-475f-a196-b25dd69e1807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ced3e4-13a5-4670-ba19-9a7b69223a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29957f3b-95ac-4e87-847e-b0e92094d71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e2521e-3b42-4e99-8029-9c6223bcfbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d3879d-3208-4721-aa2f-5e365ec624b6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc47b14-f8cd-4d0e-8f37-b0840f9c5267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2348f45-16fa-4d8f-8cb8-6904a8bea593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6732bf-6fd1-4936-8cff-503b428e78be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660de867-b4dd-4400-a246-9a25e6dcf0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163b57ff-6d69-4cbd-a1ba-6ff830e1f96a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d89d33-01b2-413c-bffd-e9ac06c31cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c664931-e122-4e12-9c38-2c69bbbced27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cea874b-5a94-4348-a3d5-95e12b667a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5437d1-79f0-4947-863d-1304d77592c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee21dd4c-3b06-429b-8a8e-b8c56af3c132",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ea9a78-4c15-452b-817f-ef46d48ebade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ab0b28-cc57-4afc-81de-ce7916b7d673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1898acef-7237-488b-8d6d-5f9d6b980641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dde8105-785e-4440-b05c-284b84915cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acb9897-6788-427c-9046-bde05dbe49a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca5cb02-4321-4e4f-9c72-cdf034a578fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd10af41-c199-46bf-b686-6ef294dbf258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46753d4-bfe2-4d0f-bb11-d4fdea1578e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5984c75d-052b-4a76-9c42-f34d5f718c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2257c31f-810c-4e88-8e3b-afc9068439ac",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c6df33-6dee-4be4-aa62-47f41e438694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6294fb7f-ba29-4f8e-a741-6f55542e5c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad340f07-1691-4fb3-ad93-aebfa0a2b45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4555ad-4e46-470d-8fe4-945e13095353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66d6743-3163-4cf6-8da1-8e8682c6d96b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67823825-9328-4853-97a0-abed092d5136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea559f4-2152-4513-8350-ed0c95e28646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9982f61-c57e-4798-9944-375d6218b3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7796f349-bc72-4309-8828-880ef050d5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36223d4-22df-4d97-b421-63f8504e15fe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f896bd2c-5755-4c92-86cb-361ad8f9efc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be8b3ab-2f3b-4760-afd2-a0fe8376e4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afba02f7-6326-4091-921c-1cd0cd3e13b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de67e62-89b9-495f-afa4-8b07f0895166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f120b551-6284-43df-b36f-9bd636e23c95",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86edf84-283e-482b-8b1e-1812b7c38751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd26f3d7-3a45-424f-b85a-4a4ca3c32b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36abd65-bd6b-45db-bd31-af4a3fedbad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b236929-71ac-42da-b331-88435a5399c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac93726-82c9-4a86-9ec9-88ddc4de1575",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3953e2d1-3e6a-4c2d-8f7c-a4a287eddfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6973a8-9a15-4988-83d2-43d6fae6af01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a18a01-11b1-4c59-90b0-d9e41a38bb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f2fdea-d029-4da8-8326-7b5ca7beac1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d7f429-50d6-46ef-8c1f-0ca8860f49fd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62635614-915b-4959-adff-7a1ab4611eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15786842-ff5c-4169-8d56-54019bf9295b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211364e1-d2e0-4f03-86bb-3dcf337835a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910e70cf-f806-4c48-9d1f-c5acace8a8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2d6cde-90cc-47c7-99aa-9ea51686af13",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7766bf26-5c83-4c2f-9274-e3cc0eb53b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1308d6f2-492f-4cf9-a824-da74e2abd7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd3933e-aa4d-4303-b96d-d21824303fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22c11b3-cbb1-484a-abbf-97ed6ad1b50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76436f93-c4ac-4a1d-a659-fe9256690449",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2dc2e8-8417-4912-8472-5aa4628acce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844c755c-f867-454c-90c7-da9bd192dce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfb0fba-3762-443b-bbec-7a4e4fee7076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be96a8a-2486-433a-bb61-159364bd606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb562309-c20a-4c70-9fcf-eef4478b52f5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53a6e6e-90df-4e30-9bf0-f4645ad027db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c4a5df-cd1e-468a-a390-581f00036448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce6beeb-954c-476c-94b3-b5f9e3acaa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54f9a50-b274-4334-b2d3-44f71ede931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b95d1a-4a98-4afb-9906-82ff6cbc721a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a41220-512a-4838-915f-f540850bda47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39cb2e6a-206f-46e0-a611-16cf7155db9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ddd7d7-e3fe-4523-afa1-796d76eba187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf3e55b-aebf-4bf2-a71b-033931ad90ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c62eb8-a562-426e-a401-512469c34bc8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e68c44-4376-4054-860b-e836473a08c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363a159b-1afb-4f2a-a014-8717a7249b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332140d0-f9ee-484b-9cb4-b93a745a77b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9417ea-d9de-4346-a2a6-82fb74ddb7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce73fcd2-de60-4292-b64f-fd16f49656e6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93a028c-8a1d-46d8-bc48-f2b734ff9b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141da95d-a482-42ed-9c49-8d54639f858f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b41273-a0eb-405a-a069-848257f96c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf50967c-9f77-44c8-a5d7-fae3773e4540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874232c1-3783-48f9-a38f-257501fb339e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbee23b8-336f-4cb0-96da-67a6f8f0afac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8a7ded-6fe6-469a-84cf-bcc0c7a7916f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abacf80-54f6-462c-8aba-26d320357f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce284e1a-ca50-42da-aba8-d99a0a58e718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a8b90-d292-4532-8ef2-3864282e80e6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f987e6bd-5ae3-4ea9-bf2d-87c3dbd6d5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521992c5-ce80-4571-8fab-b961a7041e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018e5d45-caec-47b2-867b-f70b9c3503ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e25f93-b926-45d5-82b3-41c201571561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ac2980-ed3d-4bcf-9f96-5f8c04e37176",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bfd842-2a26-42b9-9b0a-99dee8759843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80535ff4-caf7-4580-aa05-dfa8412881b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99889aee-c1f4-477f-bae8-56d90fb404f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b487c6dd-f744-4c96-9a3a-986597edab73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15b0c31-afbf-4a83-8938-e4e20dd0610e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fce98d-03a3-4382-bef4-4f10edead959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3c6277e-db82-4099-89ff-a80068852129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ce987-5eb2-40d8-9cbd-e83a4fd89e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4742d568-6042-41bd-80de-b998debd5e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c3f433-1ddf-49e3-b551-7e0ac3b53179",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df15cd00-8a9c-4f31-9574-6483d409bda9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b935206-56f9-4260-a083-b573cb717a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fac8d8-33e8-4354-aabf-36069a561596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf9be1a-c877-4d49-aacc-342b56840f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b399bf8b-cf32-4e9f-9bfa-e43852f1035a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4cd1dc-8084-4c4e-9e57-626edf9ef205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bcd690e-93de-44c3-a0fe-4ecc08ec208a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60723739-0fc9-4910-9799-3630d65aaf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9686b9d-e501-45ae-a867-fbf809c84138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73cf9e2-e76c-4291-b0fa-2dd4c9d2df79",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776ab4bc-70ae-45d6-bd07-8f2af0110a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa9dbba-c55a-4308-8144-54aa21347c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedb8962-ac50-4796-8d6d-4ff4d1ac1310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d007bfb-591a-426b-9561-e3e5bb88ced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd5c623-80fd-4c61-8717-eb30cee8e6c6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b6349-3c73-4d88-a9d2-ff10ab946110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4707dd67-8e4b-4f87-9073-f2f0a0c29eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71d1df6-93f4-45ab-95c5-1c31c01c7115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c4d753-d823-4add-ae1e-979ba8580c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5715463-c6e3-44e0-a090-b26ea3d62c52",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ddca54-27c3-454d-ae9f-a243f262a427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c912cfe6-a33f-44c6-9100-93daf3ac0a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaef3c1-f5b2-4fe0-859e-80c8f6475bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24f24ed-46f9-4ed0-81b3-ffaa71a08f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec87b06-978f-46a1-822a-acf03018924d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5431b656-e287-41ce-bccf-296954ccce47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569749a8-7cfe-4127-87ba-1eb7cfca5636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62324f8-8b77-47fe-ad56-de93e252f06a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5049b61-8e8a-4604-8ca8-40e9e9162382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a99e05-33cb-4cb8-aed6-be84f9eb1002",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6b6dfb-b71b-44d6-9199-561d81462b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc545ba-c785-4506-996c-91e0578dd5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d1494a-5661-4189-81b2-f39af55d1903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d84d1d1-8902-42c4-93d1-2b9180b7da1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5d339a-4e57-406a-8706-9cd4c9cc3982",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9fd2a6-de30-45c5-acd2-f2f899a213fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3443f8-b0c6-4c86-9ac9-714012928443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68abeac-c822-4aec-8e37-4db7b0360b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981bdde1-871c-4829-8d16-96c170e02dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d6ce5c-07a5-474b-9d02-0ac669e4e2c5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99544797-e396-40c3-9ec7-d0405c53dd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697f3f82-faf0-40ff-83cb-cc232b0ca9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1496564-8eca-498b-b44c-795dbb40a2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42895ba-774d-403e-94a0-121e7bae47a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05fb908-0e00-40d8-8752-1db88cf72a80",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c4d5b0-e67a-4131-a1be-f9e723ee2c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60ba488-2ffb-4437-9f11-d44c6d898b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cb8038-8856-4d8d-b3b4-23d127ed78e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb779494-cdb9-4df7-b4bd-7ee844224116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe572fb-4ec8-463c-ae5f-82d30c8d601d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a3c87a-23e1-4b42-adff-064a01124e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b275257c-a377-4f91-89fa-2dc039624c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bd784e-5455-46dd-91cc-aa1882403231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ffb5528-98f0-4b1b-93b8-be1d3d094ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842881c4-933c-4c3f-a71c-71965a95a9da",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc85c05-2a05-4f97-814c-943f2cf1c511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db897e6-276d-48f4-9c83-ee413a3ca696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7502704e-8fee-4467-afbd-d03f8a20cfce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c2baf98-4948-4eb2-98e4-4a9946674bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ed4398-7829-4a3d-89e4-3d5d3142f2c6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7943ced0-7a9e-4b48-81d0-e78942e424ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206659a8-38c8-44ef-9327-86985d387a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678d84f-21f2-4218-b1e7-ff4676529a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4f41eb-e266-416b-ad12-a5c0e2327192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13130f6c-a4ac-4086-9112-180ba71bfaa2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a86ac9e-aa5a-4a31-804a-b0f538a1c2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f456f5b-0c94-49f0-8677-a692afade58c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bba5f7-5d38-40e7-b490-4e6c71fcdcab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca36a1f-dabb-4c24-a7bf-7cee819ae127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5daea3b6-0294-4b11-ba87-0f86af7d9a99",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcef7a3-eadd-4c1e-8d04-397123825a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce2959f-8c84-457e-afed-e0d5c54eaff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16f7476-e871-4840-a78b-d465ead6eac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38628405-eb0e-4bfe-af59-5f2b178fffe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f790a86-78df-448e-be9f-15ce5453be86",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4160c5fa-fe3e-44bf-b659-d7fe8e095a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2363ac0b-e876-47b6-80d5-088d35f136c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29e60ee-1c25-4fba-9f7f-f1c3f07d39a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1348170c-4bac-43a8-a8ba-40dc99b4093d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b92908-de3f-410f-b2ea-a899ce7f5b92",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5e775f-dff7-40ad-b6d4-d34410b03a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8408d8-9cbe-4b8d-aac6-1ca4654ed48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6cef02-7c68-4be1-8c69-03958aeadff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b4abd5-5386-41bd-8697-ec01dd8544d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06027506-1148-4071-b5cf-d6c306813fe2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7214ce7-5854-42fe-8eb5-251283fd93f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab116456-38b5-4f47-aa03-3886367f6dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f979dd55-ce3a-4af1-867a-2bea6316ad99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a19206d-c5c0-4e64-9a76-5158b6fa8a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad39c983-ff33-4350-8538-c78309bb714b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a147c4-9143-4d67-9444-7d2c6b539604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48c8e59-7805-4b6e-b83b-641eb7780e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c754fc-dc4c-4cd0-a3c1-04936ce5676a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed48852-b5df-4fa2-ba08-1fa898523582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6998c976-0f23-4ab1-86e0-3fc1356e79e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60640347-9ba4-4898-a676-c3c272ea10ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747a7b78-0fd7-4a6f-87ad-37153a922ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a83c1fb-9934-480d-82ba-b9991950ea53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8072cf65-5461-4b3d-a6bf-5895d73891cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745ab470-062e-4045-b620-ee6a5c8c8c47",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2dd527-801e-4f19-9688-268c1b176f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4c32b4-d665-487d-ae82-40e5df676202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef71d05f-fa89-40e1-8fa0-4a1244e9c8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71433834-0625-4c4a-84b2-a463b90049f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e9d29-0962-42bb-b33b-53992b090f9a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519c10df-cd8d-4fa8-982f-20b5c12af92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b8d824-2ffa-48d6-bbc7-85144707d3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d19c08d-dbeb-42b1-afff-72babe6d2262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace86d83-c639-4b5d-9e5d-91d66ddad4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1341925-67c3-45c4-9338-e76723477c8c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96080da1-c24d-4421-8dcc-26e176af50b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a431a5c9-8dfc-40f0-b117-4ef6e2a7628c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa418aa8-a701-4a64-a34e-e3a151aca238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c35d2cf-5811-4fe2-9f2a-ac134eaa9428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c10a2a-3ccf-4d2e-aeec-30d9c243442f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fc7b8d-8463-4743-a18c-801f52ff7792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25479ce-bff2-42fc-97e8-75e4a592ce70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c0b664-f481-438d-9899-17d4bda8a700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fec227-c90a-4b2d-b2cd-7a72aa1f21c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc7e951-d98e-42fa-accb-902fd668bd35",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb3b2a8-86ba-445b-a8bb-1720c1715b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f854d4-d466-4dc4-aaa4-3f64692aa60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f848c847-808a-4ed7-8f72-1cab22ce729d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c5e0e5-4293-4bca-b705-a01e8dacfb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe19160-9444-4c18-aa24-e19709a737dc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9fb5fc-9c30-4738-9978-a95e10bad2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c596cc-d700-472d-866f-e2c1dd0f731c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8228ac23-99eb-4372-9bb3-eb286b0dbbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8c1ecf-9aac-4bcc-995d-ffa2e8f20f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcfac53-f924-4294-9f66-ed06e7c70716",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a00d586-6313-4a32-93c3-5ff7194bfdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13adbff6-2c2a-4d3d-9ed7-fc37a4446c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e18468-d9c4-4f4e-a45a-aceee1e0d095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42ff737-cb28-4e69-bfb8-ed8f6bbec4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f53d3bf-f619-48eb-8b62-8219bc40bd2d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e389584-aa83-4450-ae29-0ad02461b8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6101229c-f4fa-47e6-9464-a24b89310d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e5c383-0c9e-4b61-9348-c07ad4d2fef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e9d8a5-d5b2-4f3f-bd65-76b13c69e3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe798ba-9910-4fbb-ae8b-58c31c1ce21d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4050e057-def2-4738-b2aa-7bd082c552c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56cdd1a-ad77-4aaf-b70a-2354dfd96f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cfff18-25be-4d68-a1b8-df6d13d67f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a40d31-aedb-46db-a7da-35875d0674c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b45685-b85f-4cae-a39a-fbe9c1d99238",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1fe972-6e1e-45f3-8aaa-4a0d982b64fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3b60c8-696c-4695-abb0-085d1688bfb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646117d7-8b81-42d6-bdf6-b5c8396aa1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f80cf6b-0c1a-4f2e-a5d2-778c93cd09bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d65109-edb8-4075-b12a-7237c3a98c6f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3092b37f-1134-486c-be00-f123c5c0c712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0295b6b-7ca2-4db9-869d-e0bb9205c688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47c61d6-f980-4dbe-af35-2b6bdcb737b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28065285-bfa9-4df8-96bd-730e697e7a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f107b5b-4645-4ba1-8925-3e46488951c1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f431c6d0-fde2-4839-b84e-22166a05d701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0213f7c3-408c-4d8f-b51e-ed98b2ef1b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f785f5aa-b46c-4e70-b418-042a553c3390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa97532-3541-4f44-9910-e6dad8509ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9e82ea-ecbc-4ab1-a348-e53b6fd42598",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d3f2d5-5208-4b5c-b08f-604356afce4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf5fcf57-1d2d-4e92-a51b-aa6a5ad872c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67956030-5d1f-4c57-90fd-26ab5ee7a491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243fe49d-3b76-41d0-aa0e-121f22fa74bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e3d264-99c6-47f2-b2f6-c7180c97619f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78ab761-df62-4db8-9278-cacc090f8a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c97cb7-1bcd-4e4c-ba02-4cf91424e201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23285206-fe64-46f9-b2a6-ab42c5d63c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63bc0e0-f6f6-4c41-9983-f6434facbd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f675e5de-ec96-4611-ab5a-a718897a0db5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f58278-a310-4ab6-89dc-08be4c0e5fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f30d26f3-4cfa-468c-a907-042cabf97e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bfb27f-3e05-4fa4-8e13-8ee420e2bc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feecbcba-9fe8-4b19-bf60-fff0da5b87ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b89941f-feac-4b0c-a627-3056acec4f9e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6241ffa-69b4-4fdf-91bc-4de70b72f0c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9191fc12-47fd-493a-abc1-aec0128ae891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276c186d-cddd-4223-b604-4efff3c7e938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8c971f-c385-4728-ad5b-3b0f17242496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85376cb7-4a53-4c6c-ad64-ead901f7ac26",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ae39c4-6b71-47aa-a54b-0af6e5af23a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54afc68-0dc8-4e5f-acd3-93a48546e25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdd5653-f1c5-40c5-85cf-fe7af45ace01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7703afeb-c0e5-4a67-8324-635e2c1f8aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bc3b26-70ab-472a-b610-d46ede14c3bc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475925f0-8757-4850-ba86-6e59efadce0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eba4044-5b89-4338-82fd-0b167fb82d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54278920-26a2-47c4-b8fe-f596b4e341e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db36a068-1da5-4565-891f-be3ee5290eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de3be66-9ef6-40c7-8215-6380e5d03e88",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adccb57-1105-41ca-92a4-43a11a166003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa7d3bd-4b7f-44a1-8975-c99f0579d47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c123582c-d697-4fc6-9b70-8edc14e4f734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e1444c-d804-4657-bd4f-c3e94aeeaec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6928b9-8787-49f2-bab0-905ad04a8a4a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c657ce-b87a-4707-9715-2e5906fce596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b5eb821-796c-4b6f-bcdb-3e0adc966588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5156173-9976-4cf1-bf77-341c94dbf9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9606d9d3-d215-4258-91d8-65ead6817dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f223dca5-a180-4a84-8ec3-edc391d535d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92388260-2b04-429b-9979-956ade183260",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efec4401-1994-4aaa-bc3e-9cee2c08bd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37efcc3c-819a-447b-989a-4031b1c31ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf03ca2-ea0a-4416-a1b4-1d39e422c972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa80e98c-c431-4709-a07b-2c9c6429c62e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8583ce61-1488-4085-9cae-355a8fc26cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35685a1a-fc65-4432-8a6a-240a692ee998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071ac1cf-9050-4abc-af1b-78d0c3006ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be29138a-a9c6-4f3e-8025-8fbf2d997093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6027f944-0008-4554-aed5-272aa33b9cd0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e404b9f8-0329-4f88-aa8f-bbf22391ef00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d19b9c1-f37e-41f7-8f76-a85baf5cc22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70929dde-bb70-4aad-a261-b7d3b8e304d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ff3bf1-b9df-469f-a23a-a860d03cee58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371bc323-b311-493f-89dc-2fa49c27fb32",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3493abd-2c6e-4c4b-9368-58a5183fbd82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb46194-a047-4e16-9702-bc85017f8481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6080a3bd-b590-4e76-99e7-2ef78b6edb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb826b54-b692-4e4c-b55d-e9eec273efe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15329921-97cb-4c4c-ad7c-dfe6c84b33ce",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e9b639-63a4-4653-bde4-1db7c6a81395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f963a917-e5a9-486d-b115-f2c9c313cb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e724c6b-27b9-41f9-844d-5ac2ac8f0969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba2e240-1113-448b-a56b-95890989a28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1461b96-f41e-4473-964a-32d916358201",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010c30b2-5c76-4e05-b4de-07ed057fc9b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d00a4a7-73c3-48ab-856f-656913f407df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bc3816-abfb-4f0d-a1e4-2e884324b7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0d7fcc-19d9-4066-b935-19d3b1b10fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e35a7b-8333-44d6-90af-e6a152cb1eb0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2ef688-4f4d-4b08-8989-86d06131105f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed905ec-29dc-4901-a939-2db2dd5fed34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a116a459-a694-4079-8654-85988cbaaef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da633a97-1bb1-40d4-bb64-3659159a69a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbe876e-d022-4e24-a009-e674dcf480b9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d39090-5b3b-48e5-be03-e9300a5561cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce23f197-b2b8-4bf0-b2ae-a5adffaf9443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdad0b5-fe2a-44db-b91a-e69b09d3b514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9911c4d6-0e20-489c-81ee-81ec2d724ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fc50fa-b8af-4eac-bb5c-8a14adacab0e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81c8d7b-da20-42f3-8b7e-7698d47d7659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156eea7d-7517-41af-8526-3d015d1f5642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ac2b7e-3579-476c-980a-6124c55d9b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfca10ce-af0d-4560-870b-734518c4e11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52670258-375f-411d-9bbc-3afb389702c8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23df831c-1fcb-4619-b170-09f1065ca094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec219be-db51-48c0-9ae3-df46f9598807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781118e9-ad5b-4480-85ae-4d129718b919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93486a09-f91b-4f2f-95b7-00c20da551b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c99f97-5e5c-4a2b-bac4-7913db6f1faf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18db2831-7e6a-44c9-8f51-085e95cdd97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "429d7061-2973-4884-922d-982384ec4370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ad103d-57a3-432e-92ff-e3a9f327a515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6ec2b5-eefa-4bc5-8630-c992853ee39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210d7635-968c-42ea-adec-ae4502e3852a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1804bdb6-ccff-411b-9977-bf317718acb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0258ce86-dedd-4762-b9c0-505c64d106ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e46163c-6676-4972-b961-b26f9affacf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53776984-ac8b-4a38-9518-b5e554f7a50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e3cb3e-5121-4924-bd7c-bd75f04a487e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8398034-2cf6-4e7b-b13e-efa4009b6249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79ba0823-2025-4d4b-97b0-4fb08fe0780c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae0d341-d889-41b5-b5cd-13bda820d22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031820ef-2c50-42d7-bb53-8c38c76c4759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9aee176-2abb-4b4e-bfee-9be7e966c35c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a53efc-be6f-40de-91c9-1edabc88c001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75192434-02de-4d79-bb9e-4195af529e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbdeb38-c7ac-44e3-8232-71a889a98fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc002ad0-f777-4d28-9e6f-6cce94cd7cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73e460f-6ded-4e79-8b6d-5c1647e336e2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcc6058-3664-4ca2-a100-554d21e3219a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e954d1a0-38ac-490b-9d7b-9d6a97b29871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fe24d1-8988-4951-9dc9-1a12d03b490a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39463b6b-cde6-4616-90f9-7f2bde63aad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87408d4b-2ed9-41ea-a2ab-7e5bd29c87a4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf4610-acf4-4aa2-b94f-250accc77e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ea89b6-bd2c-4523-8b5c-0272ce8b1a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d08f81-60af-4b6b-8986-abb19cce51f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f144ba61-8895-4aaa-be02-7705c2f2687d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bbea40-b403-4e76-b6c6-2da9a957965e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0191db4-bf3b-4f55-afa7-e705925c3bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b258884e-f46b-42b2-8447-910dd8f20bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac20986-fe65-4635-9a8e-3687bc007f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6233cb4f-a9ef-4892-8f2b-2315c85b0ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36827aed-73d2-44a5-9041-c857815fecf5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ee0030-55b1-44aa-87cd-c284406b8c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310d477d-0ffc-4537-8168-f1472829df4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb41da1-0004-44b2-8494-d7266ec89d6a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32579266-d7f0-4b4f-81a0-246ea17abef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c6176a-bd09-4819-b786-b0fad4164679",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58412170-e189-4d7c-8a20-929186b501a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71fb0972-7bfb-4e1f-bdda-356ca5e2dadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bee0ff8-433e-4e90-9111-bac86527b6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5d7a62-8299-4dd3-96b0-967a91159e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55a499a-4e44-44a7-82d4-42b538eac598",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b308ed0a-84b5-4b5a-9274-8cf68df0a46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7465e68-ac69-4a1d-b1ed-810bd67baf19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091f34d5-ecda-480c-814f-d3b84518c562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0f3644-3e6a-4ba1-8ca6-9e611f2eec98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564d12e7-f752-4c7b-8eef-97578c865296",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc72ccf0-b458-42fb-a39f-d44c92ad4f37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50327ff2-0398-4468-9d20-36247f37ac22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3277b9-e037-48bb-a53b-476f65b66346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a444f7ca-3e71-4afb-9f86-cc9f247063a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300824ca-b3fd-41e6-8568-39f3ee2254ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e95cbe7-43b8-4baa-a90d-521b99ad86e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b10f950-3538-4af5-b971-5ac04164bfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410f8991-96d6-47cf-9a75-7ab87040b2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e1ac00-00a3-4d42-b019-1c8b0c617667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403156e7-6bb3-410d-82ed-4be5ff9b0b74",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b41b01-5700-416c-9aaf-01fb4abee895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316b572b-5b02-4d74-b45b-93fbaaacc6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd33746-8ec9-4e5e-8d83-8f6a45566357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df1fed2-3919-4056-b45e-200d7b211e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530a4946-8f97-423f-b779-849192135088",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e5c50b-793e-4981-9a73-1d792b62a389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74be5277-045c-4917-995d-94812bdc8124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d4a589-4edc-4fe0-98ab-43ee8c001d18",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6fb529-785f-413d-8343-3dab00bfc31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ffe115-c8d4-4e34-98f3-e1c82842417e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad36cfe-6af7-40fa-91c9-3d3f9ec41cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb568cf-97e0-4c4f-adb3-27a30f6d9799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65935371-b65d-4910-8601-b6d051310038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7cc1c3-5da7-41ac-8b42-40e5487a0db5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10a9129d-fc43-4791-b3ff-f4d655ad75e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2781ca7b-179b-4ac0-99bc-64f248a831b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e6dfb83-385e-4492-9cc3-cfe972cabbd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a724447-edf6-4336-9b65-a205338871f4"
                    }
                  }
                ]
              },
              {
                "id": "1956ad01-85e4-42f2-a8fc-f0c8a367c4f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4424840-7295-49be-b641-21adddd09a62",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f0aafb-8ac6-4412-bcf9-c5420978381b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4f213f14-8706-4a89-8f56-53297129c494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb68c73-1387-40c7-891f-51e12582611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d17f597-0823-489c-a295-e6ca3b14e3f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1173c5f0-0606-4165-a3d5-744c10107104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d7d674d-cdc0-4a1b-9f4a-fa293a1c0482"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1de3c57-688b-4452-ac6b-c4b5ca35248a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca83b519-a795-4682-bb53-d79ab4629e1f"
                    }
                  }
                ]
              },
              {
                "id": "7817eb5c-501f-4ff0-8b61-ab45b3ec527e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d957d43-1893-4afa-b6f6-55c32e723cac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e4b7e8-6997-42af-bdaf-4db6b7737f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "64f5e5b3-4437-4f61-b8f9-845dfc4c4c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4b532f-0265-4650-be3e-96b160d5bd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95571129-4085-4a15-84f0-4a0e16960fd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "739e746a-03c9-48c1-9728-6f68c00e5255",
            "name": "Positive Testing",
            "item": [
              {
                "id": "596f2453-62c7-4f39-af36-a49d3895b3ea",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9646bf7b-f25a-4a49-a6ca-8d1660e58b0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7d9923cb-0ae3-4f7d-bac5-adb0d33900d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e1e58f4-a544-4e18-8f64-20cf944a9ca7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d906220e-90a3-4e23-a41c-70f79617cdc6"
                    }
                  }
                ]
              },
              {
                "id": "4cb8e533-f262-4ee8-ab86-a40b4651dbb7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4ff450c-338a-48a0-8885-36b576cf6e1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cadad54b-7171-405e-afaf-13c51e22f74c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fc8dd8c-b127-4499-8664-4cfcced99515",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b4165c5-719b-4b5d-a95f-04d73ce1ee47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffc3ec4c-32d5-4848-9f0d-a5396e5c568c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b9afcac7-159d-4a13-8388-de3979f27867"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c568499-0f5c-43d5-8911-91b0aae08791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "881dbfaa-c3ea-4255-aa41-b164dc3f3e26"
            }
          }
        ]
      },
      {
        "id": "eb71ed45-c787-4527-8b29-f70ad9e36950",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fffa914f-2cd1-46a1-ad5d-5a355130a685",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f83ac481-a53f-494b-9f9c-1ce4530bd35a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5de1b6c4-c07b-4d5e-8e66-a38ff86cf8c1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55914ed-50df-4ed7-a129-5b190a1acda8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b9e5722e-3dcd-44ee-b6a6-705d074e8699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43078f2b-38aa-4efb-b5dc-fe1e143eda6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3477ce47-0a62-414d-b3ad-a1bb3639e946"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38795447-60bf-4619-a4cc-8b8376c5eaba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f16e418-d200-44ce-b45f-c261a266a09d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "545d0868-3a9e-411e-b033-beebbc3b3111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c66c7040-3bb5-4698-8e52-4cbc784bb89f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6fc6708-77bc-4614-894a-bcca4d82c0e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "224e8337-2e14-4071-8395-0df47959ebfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb7c62c4-5592-4261-bd7b-1ec7dbfa89d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d213418b-9fbe-4ee7-bf10-863be55440d4"
            }
          }
        ]
      },
      {
        "id": "161275d3-9ab9-4d14-aa77-256bf270ef2a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9c6ee4d7-9178-431c-bb4e-3819d0268ce6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c105f16-a187-4530-a9b6-19a3feca9e62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef939609-0a7d-4747-a92a-0ed849f237ef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a134af98-8220-4361-a6b6-d0b4c3c8da74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a8fc5cb-0757-4f4b-81cb-b1047ef9e705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d5aa67-da89-4418-9950-fcfd637fa3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab14e6b1-7273-4710-ab75-b05ace442b9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5509e82f-cc83-4547-b5b3-b290f7a4b9ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b33b6f36-6778-4a69-a195-555f50cb64ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "052b4893-99a9-4ed8-b627-56883fefcd16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4203bdc6-65da-44be-a7e1-93683d0235ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9999108-7b52-435c-bafc-89870bea4b30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f945a667-b35e-4d99-9907-a6ecc9204228"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6be0631d-3376-40de-beb1-cccd3f3b7ba1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d450d6b5-3db5-4b0a-9bef-fb5fb35ec2e7"
            }
          }
        ]
      },
      {
        "id": "483d2396-ae70-4558-85a4-2aea71e3110d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "90318b5a-0634-4026-899c-887597533b33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e02e3724-b993-41b0-bcaa-451349abcce9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a74874cd-83da-41e6-88de-0d790076c018",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34b3325-fa1c-48d9-981e-d78ca27912c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68247e41-115c-4fe4-9007-d3fc06a6fea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a89e2a4-49a0-4ee3-82ab-dadd23fcfd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1926db83-7bab-404e-8913-054e54b5b5d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4172ae3b-ddce-4f48-87fb-4f59e6637426",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e241eec9-82f3-4b7a-8ebc-5727cc469cd8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dff01f1-37ce-4109-9296-d2926dcb41ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bd372fb-dc15-4a39-8eab-a1b25c3cf164"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce61ed43-3e2f-4758-8e68-feb3f6b15429",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a5248d3-62f1-47c1-ad1f-afc262046638"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69528b0c-b596-43e5-8119-7f6dfd3414d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "134a7966-440b-497d-a48c-74262929f06c"
            }
          }
        ]
      },
      {
        "id": "31f1046a-73e4-4c55-960c-c568a429d9fc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "832c9ba0-3acf-481d-8be7-92a46e1622f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd60c56a-8b7a-49f2-b5ab-87644dc081d0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a8a8baa0-8257-43bd-b554-154d0c9a4b0d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81747853-07c3-43ee-bab0-8f3198e6c587",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a17c42e-3745-447b-a6b6-81876d87a2f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 106.19298245614033,
      "responseMin": 9,
      "responseMax": 5624,
      "responseSd": 495.29525621385335,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700267680682,
      "completed": 1700267720366
    },
    "executions": [
      {
        "id": "3bab273d-0038-468f-a564-35283a69dfb7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b10ffe6-037a-4180-9266-38f3f96b0119",
          "httpRequestId": "2ab7f3f4-0be7-4612-9b25-6d0e459d163c"
        },
        "item": {
          "id": "3bab273d-0038-468f-a564-35283a69dfb7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9a890fc9-ea99-4680-b9c2-33597e7f3620",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "be4d6c0e-65f5-4747-88da-8b1110206dc3",
        "cursor": {
          "ref": "6a382e5a-c57f-448f-8dea-fcf2993d266b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5a751334-1ec5-4451-ac49-945662d041d7"
        },
        "item": {
          "id": "be4d6c0e-65f5-4747-88da-8b1110206dc3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "586fda71-5b7a-4a50-aa2c-3cb477020801",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "6650a273-4558-4eff-a3d7-07b8d7ac780d",
        "cursor": {
          "ref": "0bd02c3d-e459-4f09-a5fa-0a6d4892f8eb",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ba5e0926-e1dd-4d24-9513-de9f703bf0e6"
        },
        "item": {
          "id": "6650a273-4558-4eff-a3d7-07b8d7ac780d",
          "name": "did_json"
        },
        "response": {
          "id": "96ca340d-590d-4e0e-9de7-7e1adc97ad0a",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe76d51-8228-4729-8d8d-b4f7ddc36112",
        "cursor": {
          "ref": "64ed0459-220c-45df-ae1b-fd24405d88f8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5fea6088-d204-49ca-ad0e-89d316e4e82d"
        },
        "item": {
          "id": "ebe76d51-8228-4729-8d8d-b4f7ddc36112",
          "name": "did:invalid"
        },
        "response": {
          "id": "252fcd46-91ae-4943-bca7-6d76d595c812",
          "status": "Not Found",
          "code": 404,
          "responseTime": 758,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe76d51-8228-4729-8d8d-b4f7ddc36112",
        "cursor": {
          "ref": "64ed0459-220c-45df-ae1b-fd24405d88f8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5fea6088-d204-49ca-ad0e-89d316e4e82d"
        },
        "item": {
          "id": "ebe76d51-8228-4729-8d8d-b4f7ddc36112",
          "name": "did:invalid"
        },
        "response": {
          "id": "252fcd46-91ae-4943-bca7-6d76d595c812",
          "status": "Not Found",
          "code": 404,
          "responseTime": 758,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b5d1e7-1aff-4e97-8f2f-6bc3dfffbac0",
        "cursor": {
          "ref": "c95e8cce-bcba-409a-8312-bc59fb4e7c11",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e68452f-ef51-4f36-8196-74a91baf7680"
        },
        "item": {
          "id": "b9b5d1e7-1aff-4e97-8f2f-6bc3dfffbac0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6a4f3cf1-40df-4dd1-b1b1-5ef52a7ee02d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a03f85-2860-4098-bf42-fe57777e766e",
        "cursor": {
          "ref": "4f944ad6-c9e8-42a2-b29d-93ab3065130d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b52da73a-4eaf-4e25-99f4-4bf11f3f1a10"
        },
        "item": {
          "id": "39a03f85-2860-4098-bf42-fe57777e766e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ff6ab75c-18d0-48d6-b32e-af72795b43f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29230a7c-975e-4943-a021-3a1d3e8a866a",
        "cursor": {
          "ref": "808e1bae-d13d-45de-a4bd-de5b1a1f632a",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d046c525-41cc-4ded-a418-48597eaf9304"
        },
        "item": {
          "id": "29230a7c-975e-4943-a021-3a1d3e8a866a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "11bd11a1-b5f8-41ab-b2d4-008201fdcf1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ed44c9-46be-4a4f-9ac2-0003ab4d9132",
        "cursor": {
          "ref": "21dfe635-92fa-4684-a2e9-b9964d4cdb03",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bbc108fd-69ac-42a2-96c9-935a66cf4a97"
        },
        "item": {
          "id": "02ed44c9-46be-4a4f-9ac2-0003ab4d9132",
          "name": "identifiers"
        },
        "response": {
          "id": "e22f3041-f652-4861-b4eb-ee3be6e349e0",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea88d2a9-1567-49fc-8c67-7078114d2a88",
        "cursor": {
          "ref": "c052a0ca-f51b-45a7-bc76-c4bb91f8cb7b",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4a0bbe9f-21e0-4c84-8e91-7768ee31080a"
        },
        "item": {
          "id": "ea88d2a9-1567-49fc-8c67-7078114d2a88",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6ae3e66a-4b6b-485f-92b3-871264fafd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa0253b-1e91-48bd-b6a1-9c24e48e492e",
        "cursor": {
          "ref": "b4327ef8-2007-49ff-88da-293dbf19870c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "af8dbe05-103d-4ef0-a491-ce3911613ffd"
        },
        "item": {
          "id": "eaa0253b-1e91-48bd-b6a1-9c24e48e492e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "61eb2f60-75f1-45e6-b97d-bc59604f4dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf40637-de3b-412e-b880-fd3663cd56cc",
        "cursor": {
          "ref": "348d3490-0c33-4807-bd80-8d160c5b011b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f9195f5d-2c9a-4074-a95e-03f3c38ebbdd"
        },
        "item": {
          "id": "8cf40637-de3b-412e-b880-fd3663cd56cc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9c628d56-8ffd-4ff2-b17c-61276304b748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33041ba-b93f-486f-aabe-b091d9395353",
        "cursor": {
          "ref": "cbb14024-ce94-44f8-b0dc-7076a6dd5904",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3d752e9d-bdf0-4ea1-b770-0c75d8ba8837"
        },
        "item": {
          "id": "b33041ba-b93f-486f-aabe-b091d9395353",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4907631e-c19f-4a0b-8125-a4591e1df6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40288a9e-6d24-4e2c-be8f-27e590129481",
        "cursor": {
          "ref": "1ba507e3-738b-4f0c-abd3-fe5bd03162bb",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bc48b2ed-8faf-4181-b8b4-bc2c900867dd"
        },
        "item": {
          "id": "40288a9e-6d24-4e2c-be8f-27e590129481",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e3d538cf-5822-4b3a-aaf6-c88eabe355dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9e2d67-6e24-42f3-b702-5a6a53aa6840",
        "cursor": {
          "ref": "3319cae3-433f-4f3e-b047-cb16fe0dc92e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2e4b7b20-78ec-4805-a541-b6d6c8c250b1"
        },
        "item": {
          "id": "ae9e2d67-6e24-42f3-b702-5a6a53aa6840",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ad8f60cd-e2e6-4330-a0a1-424e38c67c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84316286-ba28-4396-b410-1f069edd0cdc",
        "cursor": {
          "ref": "6ff522fa-d50f-431d-903c-f98ae5d1c00f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dc5e4740-6d6c-4a75-ac98-9b604c0da390"
        },
        "item": {
          "id": "84316286-ba28-4396-b410-1f069edd0cdc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "95ddb52e-947d-4d72-be35-7885f7189a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c40603-0977-490d-819e-d85e4cf8ce0e",
        "cursor": {
          "ref": "d10e7aff-cc25-4e6b-a9ab-51ea1a45b287",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1f83b4dd-e087-4f37-834d-7690cc18a470"
        },
        "item": {
          "id": "34c40603-0977-490d-819e-d85e4cf8ce0e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4fda9c75-6df9-4723-bcf2-ea2f90c505c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a107a2-c695-4497-8078-6096449dd8fa",
        "cursor": {
          "ref": "9661b1ec-cbbc-4f0e-89c8-e8fe5cdb1c01",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4d7a5d0f-7539-40f6-a960-6e690657722a"
        },
        "item": {
          "id": "02a107a2-c695-4497-8078-6096449dd8fa",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "652e6e3c-006f-45bf-bcc6-c9f2b525c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a616efd-9332-4fa9-863c-68f746cf3f44",
        "cursor": {
          "ref": "f7e1acd8-7093-4692-9b20-f66c63c58d7a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b92e3d0b-aece-42cf-bdbe-54461ae3fc2d"
        },
        "item": {
          "id": "3a616efd-9332-4fa9-863c-68f746cf3f44",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "58058ceb-7cd3-4bfc-af26-d3b2931a30c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a116c8-e3a1-40e4-aa34-dad782afa625",
        "cursor": {
          "ref": "307aafe7-bbd1-4d42-814a-5fc684d0f413",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c3d5e182-86e5-48ff-843c-448a614c7fb2"
        },
        "item": {
          "id": "21a116c8-e3a1-40e4-aa34-dad782afa625",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "08a486c4-7be4-4287-bbdb-88fbf7f7f32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a605135-a8a4-447c-9a64-50b1d72fc620",
        "cursor": {
          "ref": "de050027-7ffc-4712-a2a5-cb0dcf6ae974",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "849f4c47-4b5a-42d1-bb65-de45e59d3f8e"
        },
        "item": {
          "id": "1a605135-a8a4-447c-9a64-50b1d72fc620",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "08d5c54c-d99b-4acb-93d5-67c6ee1490d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e15a182-dff0-4651-a1bc-9c7bbfc9e632",
        "cursor": {
          "ref": "28c97fec-dd25-46b8-ad9c-95c401c39309",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9a186335-aaa9-483d-b79d-a2c74e0c2f05"
        },
        "item": {
          "id": "6e15a182-dff0-4651-a1bc-9c7bbfc9e632",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1fe16d51-90c9-486e-b876-ea165381794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d816fc-0835-4f2c-89de-1e123f696761",
        "cursor": {
          "ref": "3889123d-ab87-47c6-a2c3-6e02971facd9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "965b1f27-5b8f-4eda-b26e-655dc1f6bf59"
        },
        "item": {
          "id": "23d816fc-0835-4f2c-89de-1e123f696761",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fd646843-3915-47a8-bfa6-a57faeb30f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f61fdb1-498f-4d0c-8c86-8473e37ae5e5",
        "cursor": {
          "ref": "98ff4d7e-09c1-4bba-aca7-f738cca736d7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "abb1a791-2da6-4740-9d5a-bc2a8b8e1953"
        },
        "item": {
          "id": "0f61fdb1-498f-4d0c-8c86-8473e37ae5e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4096bdd3-3f1e-4838-83bf-3c47234b8e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cb50a5-d9ad-4a56-a66f-9ef6015f5554",
        "cursor": {
          "ref": "31059fa0-74ac-403a-ac4b-8badcff71048",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6a4ae8bf-3a08-4c86-a5ed-607f5338880c"
        },
        "item": {
          "id": "87cb50a5-d9ad-4a56-a66f-9ef6015f5554",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9fadae1e-9427-43d8-81f2-ce3ba3fa6663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436e3ce8-8ada-438f-ba7e-4832565c36e3",
        "cursor": {
          "ref": "80498997-4b92-49f4-abec-8d8f8dd942a3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9f1d576f-4d26-41fa-bc32-100922c39b51"
        },
        "item": {
          "id": "436e3ce8-8ada-438f-ba7e-4832565c36e3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "73fa9d92-b863-4c52-9f0e-7151b599945e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644b72b0-cc7a-4ebf-8a8f-914ca238cb35",
        "cursor": {
          "ref": "267b01b8-824f-4fb1-b5fb-d321a93231d9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "57b8419d-a0bb-41bb-b984-043b78d4b4ae"
        },
        "item": {
          "id": "644b72b0-cc7a-4ebf-8a8f-914ca238cb35",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "210a5efc-464b-4308-876a-76c5d4a08c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e23ab4f-3efb-48a2-ae34-1ff0098e1e09",
        "cursor": {
          "ref": "1212a580-ebfe-4331-a26e-3c0c4ee33e4c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1b51c8bf-8819-4d01-b4d6-0da0db1d162d"
        },
        "item": {
          "id": "4e23ab4f-3efb-48a2-ae34-1ff0098e1e09",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "775aefa5-24ef-4547-8894-32707cf479a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1994d38-b476-4e2a-b236-29df1462a0ff",
        "cursor": {
          "ref": "3f869932-4891-48e8-b8aa-c39b97386c98",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "58c1c146-2ed8-4c8e-b7dd-25e6683dee50"
        },
        "item": {
          "id": "d1994d38-b476-4e2a-b236-29df1462a0ff",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cd163065-bcec-44a4-b939-4d4a8eb4f3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42edca9-4278-4f34-bf63-44e2cb68308c",
        "cursor": {
          "ref": "307958da-3108-495f-b99a-53781b7ea362",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1d31cff4-17cb-42cd-82b5-3ab1863bb995"
        },
        "item": {
          "id": "d42edca9-4278-4f34-bf63-44e2cb68308c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9cf77590-19a1-4706-8b91-107ccc6fa328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309c6733-3c7b-41ca-b86b-25cb4d93375a",
        "cursor": {
          "ref": "297d2899-707a-43bd-b72b-127335b21708",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9677aef5-89c0-40d5-aa6c-ecd39f6f16a1"
        },
        "item": {
          "id": "309c6733-3c7b-41ca-b86b-25cb4d93375a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "01b35796-fcf1-4ceb-9a29-ecf6d375c7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579ed92e-0984-4142-9ade-790c3cd788ad",
        "cursor": {
          "ref": "a68d88a1-e4f4-4030-ae37-16e280babc2f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b1ae6ba0-0367-400e-bbcc-bb7fdc8b44cd"
        },
        "item": {
          "id": "579ed92e-0984-4142-9ade-790c3cd788ad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "797f6fa6-ed58-4be5-9673-239d41c5d60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ec2342-2db3-4601-95e1-eb9ef1f87c19",
        "cursor": {
          "ref": "0b8c9be5-0972-4282-adb8-98b145423787",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8d1feb4e-0f30-4648-b3b5-fdc0235dbad7"
        },
        "item": {
          "id": "b1ec2342-2db3-4601-95e1-eb9ef1f87c19",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "07858cfb-8337-4faf-9d35-4dc902784e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8e1daf-2d3a-4395-9155-0e5d296072cf",
        "cursor": {
          "ref": "f3c8ea1a-7295-4a11-b0bf-55a06acdd8b7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7e27aad3-119d-4c06-9e2f-ef5cded16e41"
        },
        "item": {
          "id": "8e8e1daf-2d3a-4395-9155-0e5d296072cf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cdf9de65-849a-4d6b-9cfe-76385a914bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3088b307-c284-4097-a473-f14b5ecfe92f",
        "cursor": {
          "ref": "e3b3ab59-682b-4de9-822a-e6277c4d43fc",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b2fb9cc2-2fba-4dcf-bca1-ddec12596d9e"
        },
        "item": {
          "id": "3088b307-c284-4097-a473-f14b5ecfe92f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cf3f0f5d-a033-4b44-9779-4130bd38dcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28475fe5-1de1-40c7-a0c4-9f5568007524",
        "cursor": {
          "ref": "381ae393-5ecb-4ff8-9e1c-a00c68846d5b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "759d75bf-cd68-4579-94c0-a3cab4cc0d6a"
        },
        "item": {
          "id": "28475fe5-1de1-40c7-a0c4-9f5568007524",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fc9a7f21-231f-4111-b382-b6a087e9ee6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7344e02-4a24-4874-8878-5c6f4fa032e4",
        "cursor": {
          "ref": "0cac5af6-f20b-4e4b-b92c-3db38afeb875",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "151e6e4f-1739-4b2a-bd6f-55a7e15ed6c7"
        },
        "item": {
          "id": "d7344e02-4a24-4874-8878-5c6f4fa032e4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b24d04c8-142f-48fa-be15-56353d7dc854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a949d195-edeb-4231-9298-18ac56d34653",
        "cursor": {
          "ref": "035ebc9e-55d0-48ce-be51-191ff4e703ce",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a2c737df-193c-416a-929c-4ef006e41525"
        },
        "item": {
          "id": "a949d195-edeb-4231-9298-18ac56d34653",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b00b6e19-cf9f-49f8-829f-93bb4d0c41de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d11a140-a23a-4c19-a206-82813dfc792b",
        "cursor": {
          "ref": "6fde35db-31e8-4d94-ab81-108eec623e3c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e4f262ed-a13a-4ed4-81ff-178964479494"
        },
        "item": {
          "id": "0d11a140-a23a-4c19-a206-82813dfc792b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c9215149-226f-40e9-9d0e-4c95235cca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0674699c-d758-4c28-84b2-099bae5cb4fb",
        "cursor": {
          "ref": "f94e42a9-2260-4059-a57c-c1041b631b6a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "810ac67c-5325-478f-9633-87cf950921aa"
        },
        "item": {
          "id": "0674699c-d758-4c28-84b2-099bae5cb4fb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c6fc4b6f-a23e-4ead-a1c0-e5fac958a8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e6414a-f3d7-4ae6-b1c8-f26a600ca4cf",
        "cursor": {
          "ref": "c217d810-3950-4688-ab58-76d2fa466234",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c239258d-54c1-4e17-9d70-7b653be6e151"
        },
        "item": {
          "id": "e3e6414a-f3d7-4ae6-b1c8-f26a600ca4cf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c8793386-b3c0-42ca-80a4-fee1bd5d3daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4954fa06-3058-44aa-a837-596cfe634e60",
        "cursor": {
          "ref": "a9da935a-d812-49d2-9a16-5797a76028d6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d7c3b7dc-0649-40ce-81ae-09f728eaf42c"
        },
        "item": {
          "id": "4954fa06-3058-44aa-a837-596cfe634e60",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b8adb0e4-4e6f-4fb9-a1d8-e061ae4a0bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953f48b2-120a-4e60-ba30-d863ce26145f",
        "cursor": {
          "ref": "05c8537b-20eb-45ce-8c14-03400494f3ba",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fbf726ea-3684-4b69-a4a5-356d2fc94118"
        },
        "item": {
          "id": "953f48b2-120a-4e60-ba30-d863ce26145f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2df78724-a2e9-4e5f-9357-ede3c2004a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a882df-ce37-4f78-a0a8-f245cee3f23b",
        "cursor": {
          "ref": "ff1f5947-896e-40e8-8119-8d7e0af08741",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8a77fd19-a8c3-4b05-9bf9-fbfd60c8e5f4"
        },
        "item": {
          "id": "f3a882df-ce37-4f78-a0a8-f245cee3f23b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6bc3b788-7c03-4817-a579-54046958eda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4b987f-0b7a-470f-b1e9-de7ba25a09f1",
        "cursor": {
          "ref": "2e6039e1-05fe-4d29-b370-607875ac0113",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e94d64ef-4ae7-4721-a2f4-8cd34c38f4d7"
        },
        "item": {
          "id": "5a4b987f-0b7a-470f-b1e9-de7ba25a09f1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "763e1ed9-1967-4408-9f10-455317ba63fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087883b4-67ca-4e6e-bac2-b506578e99a6",
        "cursor": {
          "ref": "87472db1-a28f-4010-80b7-86ebeb6cf903",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0ec89b8b-0a20-490f-97f0-3620bdb8b62b"
        },
        "item": {
          "id": "087883b4-67ca-4e6e-bac2-b506578e99a6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1119bdd4-dcba-48b1-b093-4f8b1b35b531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d51280-511c-4fea-991d-cc443a9d4b0d",
        "cursor": {
          "ref": "4369b01c-2be5-40b6-a2a8-004ab8fc9134",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5fd6e401-6af7-44a5-99fe-673f7282b9c4"
        },
        "item": {
          "id": "93d51280-511c-4fea-991d-cc443a9d4b0d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f2d7907f-0d54-4d2d-8e30-a08be5243cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47e2070-7ab6-4fb4-9073-4432a94a6752",
        "cursor": {
          "ref": "9110bf3c-46df-408d-8952-8321821ab4ec",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3c9bfe10-dd0b-4103-8053-8b777d4c874b"
        },
        "item": {
          "id": "d47e2070-7ab6-4fb4-9073-4432a94a6752",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dac1a5be-43d7-4659-8791-c8365fdb2c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d8d802-7593-4ed9-a9ea-694158edd607",
        "cursor": {
          "ref": "03c6be63-26e5-4da5-bcc6-4c0e5c5d19da",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9bd7d39d-5b9d-44ba-a92c-787d0f780d8c"
        },
        "item": {
          "id": "b1d8d802-7593-4ed9-a9ea-694158edd607",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "df762dad-2d14-484f-bf0e-7d01b433fd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec56642d-7736-4a69-a7db-24b1fd786d76",
        "cursor": {
          "ref": "ec8fe7f4-ceff-41b4-9754-fd87dd9f0fb4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f096146c-6af3-48a9-b46c-ae392fefdc13"
        },
        "item": {
          "id": "ec56642d-7736-4a69-a7db-24b1fd786d76",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "76884ee3-d8cf-4207-9138-7f57a1c501ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1129e4a4-2246-43aa-b4c4-7a1e5c6f824e",
        "cursor": {
          "ref": "e237e968-3b5b-4d61-aedf-44e63697562b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "48f85427-bd89-4b54-b332-ea41f7377502"
        },
        "item": {
          "id": "1129e4a4-2246-43aa-b4c4-7a1e5c6f824e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "06465a7b-9123-452e-ab88-2df450618bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b335140-72bd-40f6-8a6e-872de36f26c0",
        "cursor": {
          "ref": "74f49343-9ab1-4b7a-b93c-c4fe81d401ee",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "826c3fd3-a955-4992-9955-94df8521e282"
        },
        "item": {
          "id": "8b335140-72bd-40f6-8a6e-872de36f26c0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "20a6b4d6-5cd0-457b-bae7-0c4037487d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5e0e8c-f4f7-4e2c-a3cb-8dd589fc0834",
        "cursor": {
          "ref": "db6086ec-234f-4b32-9d33-ac0ee01f05cf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fbf8e2f5-c07d-4409-a981-3fbdc04bdbe1"
        },
        "item": {
          "id": "7b5e0e8c-f4f7-4e2c-a3cb-8dd589fc0834",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c315b226-c557-4ae1-b9f0-ae8654dce075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa85358-465d-4daa-aafe-933ba8dd6047",
        "cursor": {
          "ref": "282c9709-0a2c-4b2d-908a-fd23e8d634bc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "15f0065c-d29b-42ee-ac50-3f272e5acd4a"
        },
        "item": {
          "id": "bfa85358-465d-4daa-aafe-933ba8dd6047",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5102605e-02ed-4fbd-89ed-3b8e4bc79295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fb0212-cd8c-43a2-be8a-3dff631e8c39",
        "cursor": {
          "ref": "1048a067-92a5-476d-a5f2-426682517f02",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "599555a5-168f-43fd-ac13-3e49dfe8ad93"
        },
        "item": {
          "id": "b9fb0212-cd8c-43a2-be8a-3dff631e8c39",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d84df321-a692-49ac-890b-b59f1a0d655c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914ed55d-6547-4218-af8d-f3991a512294",
        "cursor": {
          "ref": "ddc20cd0-d92d-4790-ac6e-da3a2d8077af",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "070c2832-5057-421f-b93c-137474ffcd0d"
        },
        "item": {
          "id": "914ed55d-6547-4218-af8d-f3991a512294",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2e9a5b1a-9ac2-4b5e-9b07-882084864eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b39bb4-7d28-4801-b76d-50bd70ff802e",
        "cursor": {
          "ref": "4d03c85f-807a-42f1-a60a-daeb5c10e2af",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8e5b8b22-c04c-4ece-ad29-213636b459a5"
        },
        "item": {
          "id": "b8b39bb4-7d28-4801-b76d-50bd70ff802e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ac651925-0938-4799-9ae9-559ff6af8a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c981652f-e382-4668-8a5f-6207488483ac",
        "cursor": {
          "ref": "8aea3ba5-aa12-4c33-9483-e19fa90d597c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8f257cc4-a7e2-4e38-9605-f04b093dd65c"
        },
        "item": {
          "id": "c981652f-e382-4668-8a5f-6207488483ac",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "79259bd2-0460-4054-bddd-5bc18ae4970b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db158ea-63b0-43a9-a79f-0805c4bfe182",
        "cursor": {
          "ref": "7779f95b-3f15-4f9a-9488-0bace3bc7a2f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b299097e-50b9-450f-a1b3-065052e44b74"
        },
        "item": {
          "id": "0db158ea-63b0-43a9-a79f-0805c4bfe182",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6d4393b4-abf7-47fd-b173-7d8900e4878d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f6a183-db02-4bb6-9a00-88b1063717f0",
        "cursor": {
          "ref": "8ddb742a-e470-49ec-9046-2b699c4e28ac",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f71362ac-9943-4d08-ac3d-7c8927ec2798"
        },
        "item": {
          "id": "b2f6a183-db02-4bb6-9a00-88b1063717f0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f3b78e42-7bfe-4f72-a606-78fdb76a3658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60fadd4-6179-4185-a50e-152f91b7e0b6",
        "cursor": {
          "ref": "91a3113f-73d0-462b-b532-47ab89edddea",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7dd3c476-e995-4db8-bcf6-051c785c58fb"
        },
        "item": {
          "id": "a60fadd4-6179-4185-a50e-152f91b7e0b6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4a667060-515b-4f52-9aa6-393a74313707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405ae6e4-a752-44f3-a66d-26e6251f1ee5",
        "cursor": {
          "ref": "21def72d-25a6-4525-9be0-62571295daf0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "54a8fea7-29f2-445c-a7fe-842cbb697399"
        },
        "item": {
          "id": "405ae6e4-a752-44f3-a66d-26e6251f1ee5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fc7cd1c2-7e06-42fb-823a-771bd775bebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c06b437-12a9-4ce9-9899-ad6d7770c13e",
        "cursor": {
          "ref": "f59300a5-00fe-4d76-9470-d864083505f6",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b2dda38d-e589-4b2d-8f28-f620c77f4dc3"
        },
        "item": {
          "id": "3c06b437-12a9-4ce9-9899-ad6d7770c13e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3208e6ea-c228-46eb-beab-f2c6a753a08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d27dec-8932-4154-b816-f07ae7d308a5",
        "cursor": {
          "ref": "3889335b-3fb5-4602-acad-d9b0b68b598f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "59e2fb18-db28-4ca4-ba6f-11190580c3e0"
        },
        "item": {
          "id": "a2d27dec-8932-4154-b816-f07ae7d308a5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "78da745c-5c40-4b43-8652-b7107769bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a0e076-fd24-43b8-8e93-2d0393458071",
        "cursor": {
          "ref": "cf83f8b1-2f22-4b12-ae66-91cfd5ef26f9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3f9ef65d-1dac-4ff3-9e7c-dac536260df0"
        },
        "item": {
          "id": "36a0e076-fd24-43b8-8e93-2d0393458071",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3343fde9-ffac-4a67-991d-cce684b0b94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c7d4cc-c6c4-4445-8d4b-563e57c7d912",
        "cursor": {
          "ref": "4833902b-90ec-44fb-9c28-e109abea5d6f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c139956b-1b48-4c6f-b692-ba9c928b02b8"
        },
        "item": {
          "id": "e4c7d4cc-c6c4-4445-8d4b-563e57c7d912",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "aa64efb1-a04e-47de-a57c-d33351926121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d55fc93-8ff0-4e61-ac8d-88b0c9c1a719",
        "cursor": {
          "ref": "5d62e858-08fa-4574-aa0c-f31e1234b959",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "81c7f20d-a66f-4e65-9c55-c0d38da83634"
        },
        "item": {
          "id": "5d55fc93-8ff0-4e61-ac8d-88b0c9c1a719",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe1a02a5-e37c-4976-ad9b-3c1659f8b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2244d0-96ad-4d8c-8fc3-05f46a1f0f51",
        "cursor": {
          "ref": "d2379147-fb66-4e97-a383-ea09e5183240",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3a5386e8-8250-4d88-81dd-6efe0f372664"
        },
        "item": {
          "id": "5e2244d0-96ad-4d8c-8fc3-05f46a1f0f51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6b8d6ab5-5d28-413d-a0af-a008747a6842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec27697-018d-4c78-9954-baadb47a6d17",
        "cursor": {
          "ref": "16e8a07d-47de-4109-a624-86f917e899eb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9a6c0cd7-480d-432c-a21a-7e11ab287c39"
        },
        "item": {
          "id": "9ec27697-018d-4c78-9954-baadb47a6d17",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "14fd85a4-8de7-4056-83e0-d19294842bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46170dd4-9c2b-46b5-9a3b-90cc8f73a57f",
        "cursor": {
          "ref": "e4e51fde-9e85-44d6-b65f-c70a0c05ddd7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d411c261-aa72-44f3-9920-240333fe9ade"
        },
        "item": {
          "id": "46170dd4-9c2b-46b5-9a3b-90cc8f73a57f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8f766768-a1c8-4457-af5b-4a6506d15b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a54e435-cc8e-41c3-b8a2-a9266083d790",
        "cursor": {
          "ref": "7d266705-bc61-4baf-8d29-dfd712fac737",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3092fa47-c989-43f1-a157-94bf190a9c9d"
        },
        "item": {
          "id": "4a54e435-cc8e-41c3-b8a2-a9266083d790",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cd8f0d4d-1ead-48e0-b544-0f580bfade2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b822ff5-c359-4e65-a747-64922b3cf56a",
        "cursor": {
          "ref": "78ea4695-4de1-4de7-87b5-5f812cf3f4dc",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bf014ca0-e667-49a8-9166-cd021d8581ff"
        },
        "item": {
          "id": "4b822ff5-c359-4e65-a747-64922b3cf56a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a5678798-ae4b-440f-97cd-eca311a67e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed9b044-a455-40a9-8c0a-7ae082d3da90",
        "cursor": {
          "ref": "3dcb8607-d7a8-4135-9e13-0b5fdc114e5a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3ffb8839-4a82-44de-a9ab-8cd52a8fdba7"
        },
        "item": {
          "id": "1ed9b044-a455-40a9-8c0a-7ae082d3da90",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "197c2ea6-9c5c-45f9-bcd1-53826952d381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f74dea-33ea-4596-8110-ed3364e50ffa",
        "cursor": {
          "ref": "f92fb1d8-c40c-4f1c-8bea-a90fbd0aa2ef",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "19f706b8-30ba-4b6d-a202-71e7fc9a067a"
        },
        "item": {
          "id": "43f74dea-33ea-4596-8110-ed3364e50ffa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2dae4b30-bb8f-48be-baf7-c19651e079f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f904e0-2cec-4a2c-9734-74aed77d9876",
        "cursor": {
          "ref": "b7b8876e-d4d4-4c83-b7f3-9c784a3fdb24",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bde95241-d49d-4a26-a8c8-80155f8f42e1"
        },
        "item": {
          "id": "60f904e0-2cec-4a2c-9734-74aed77d9876",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3af89d23-3717-4bbe-8524-e8a6545d22ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882e2746-76ef-44aa-b922-06b0f3e555ef",
        "cursor": {
          "ref": "ed42b2cc-fbc0-423e-af09-5e805f02619a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "afdac60a-011e-4a49-8cfe-bbd0ba8601e4"
        },
        "item": {
          "id": "882e2746-76ef-44aa-b922-06b0f3e555ef",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "68a844c2-cd2d-4fe3-82f2-1bdb38422458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb0a4b4-c127-4859-b2d2-4fbddfe519a2",
        "cursor": {
          "ref": "919bb570-4d51-499f-b178-a8eb6489f9dd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e1dffe62-871f-4630-9790-1caeedf5f7f6"
        },
        "item": {
          "id": "5eb0a4b4-c127-4859-b2d2-4fbddfe519a2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "60dc3359-c6f5-4ba4-97b4-447f90b0d03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac04f249-0c8e-4391-a05a-2160293d4713",
        "cursor": {
          "ref": "7d327084-5e21-489e-9f8e-e523b99fa50e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "826af8bd-0d68-473a-adaa-5b98c7f83938"
        },
        "item": {
          "id": "ac04f249-0c8e-4391-a05a-2160293d4713",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d1798c86-b8f8-4570-be09-6c23bfcb555a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dfe072-11de-4a4a-986c-f35598d17409",
        "cursor": {
          "ref": "bc58bdf0-8b47-4978-b386-d8f59b67c401",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "130e0b3e-f097-48a6-b210-3cd66d1e314e"
        },
        "item": {
          "id": "51dfe072-11de-4a4a-986c-f35598d17409",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "18100fce-886c-43f6-990b-4f1434869ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34057b2-e721-4cde-b86c-6badca06ae8b",
        "cursor": {
          "ref": "bfa78d7f-b0de-47c6-8647-3c4b12798877",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bd4087a0-f754-4e79-8f63-4677aacd4654"
        },
        "item": {
          "id": "e34057b2-e721-4cde-b86c-6badca06ae8b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cb8fe132-676f-4579-ad3b-cd9fa9ed7023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0056023e-7074-49a4-a30f-88359e21be46",
        "cursor": {
          "ref": "18925658-77c3-4f32-9a5e-caf5672302f4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "80653366-512a-414e-a239-668dad38efea"
        },
        "item": {
          "id": "0056023e-7074-49a4-a30f-88359e21be46",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eeeb3635-e0fe-4f93-85bd-b35d5e050b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced11bbe-5606-446d-b253-d2bfaa5eff33",
        "cursor": {
          "ref": "41b9271a-00eb-4c6d-9a38-97a7b062acc0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "263ed2e0-995f-4c63-bb2d-552e7d07a700"
        },
        "item": {
          "id": "ced11bbe-5606-446d-b253-d2bfaa5eff33",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ed98028f-e994-4e8c-ab96-121a7cb9df13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41362aa-790f-452e-8e5f-5f8184e68851",
        "cursor": {
          "ref": "10de1214-e46a-4d8e-8cb8-0795ad77b070",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3503e298-3bad-43aa-96d0-91b7309fc535"
        },
        "item": {
          "id": "e41362aa-790f-452e-8e5f-5f8184e68851",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ebee756d-7fc9-457b-8495-7696c1ed129d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0b8abe-ffe0-4572-b70a-fd0e761b9728",
        "cursor": {
          "ref": "d6f63468-eabc-41b3-999a-8751a7aa5229",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "257ef533-66c1-4e74-ab35-1369a8b7cd36"
        },
        "item": {
          "id": "5f0b8abe-ffe0-4572-b70a-fd0e761b9728",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e075fa4e-c682-4b22-a0f8-1f021144dfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5165d72e-03fd-4adf-bf94-c1f6681c5b65",
        "cursor": {
          "ref": "38cc4f29-8260-4740-8d1c-6a3f45cbd3ae",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "47ee813d-28a2-4c8e-acd2-da58ee517ff5"
        },
        "item": {
          "id": "5165d72e-03fd-4adf-bf94-c1f6681c5b65",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3c5adab6-4930-4563-990d-d7fde02a8d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e747dc83-fb60-4998-99fa-a97a704b7970",
        "cursor": {
          "ref": "808a061b-e2dd-438d-b836-2ca3dddcd342",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9fc9e2b8-8ad7-4ea5-be8b-88fbb2e4e695"
        },
        "item": {
          "id": "e747dc83-fb60-4998-99fa-a97a704b7970",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "137d9ebb-9819-4b65-bdbe-a4ec446d8022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41476bd9-434c-4c8e-b138-7d20d0bf707e",
        "cursor": {
          "ref": "e4140c8b-c04d-49cc-bf26-98f67f8414bc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "392a0d51-a036-4172-9ae6-faf7a26675a4"
        },
        "item": {
          "id": "41476bd9-434c-4c8e-b138-7d20d0bf707e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f8149d4e-bae6-477c-aea8-3c7c17f02325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053960e5-e001-4971-8cdd-fc07767884fa",
        "cursor": {
          "ref": "b71d6f8f-30f7-4758-aaea-ce27868071d9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "87c73bfb-b86f-4f69-83f6-06ffa1401de3"
        },
        "item": {
          "id": "053960e5-e001-4971-8cdd-fc07767884fa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0ca08fb5-4345-47b5-8421-6a09dfa251e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3c6a1b-1116-4efc-b482-ad7049276bf1",
        "cursor": {
          "ref": "c90da6bf-81e2-4750-86be-d0e08b65f6e2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8bda5692-cb02-49ac-ab63-72f3a369130d"
        },
        "item": {
          "id": "2a3c6a1b-1116-4efc-b482-ad7049276bf1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0eaec4a0-6dd3-4074-96ce-7a629d4b559a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2959e5f-3201-4f35-936f-df177c72de1c",
        "cursor": {
          "ref": "e6fa7375-79e1-4ff1-be20-8d3507655690",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "46ef60a7-cc24-4bda-b658-926532fae995"
        },
        "item": {
          "id": "f2959e5f-3201-4f35-936f-df177c72de1c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c36d28f0-927a-4de6-98fc-16d542af60ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a094aaa1-bb1a-43df-b4a8-3f3937a70b0a",
        "cursor": {
          "ref": "95f94ab4-4061-47e3-ab1b-c22e9b4de585",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4d3db7b7-d9ce-465c-b975-abbf081dd74d"
        },
        "item": {
          "id": "a094aaa1-bb1a-43df-b4a8-3f3937a70b0a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "34b07875-6df6-449c-967b-6d563df4778e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac85b4f1-cc29-4bfc-bc4d-fc1b19a0ba85",
        "cursor": {
          "ref": "d4f9e4a8-0bcf-433e-b3c2-9d36f467399f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "74f6890d-705d-45e4-b2b4-8abebd84c2b6"
        },
        "item": {
          "id": "ac85b4f1-cc29-4bfc-bc4d-fc1b19a0ba85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3a0da2da-14d0-428e-a472-1422c8a2f38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8293fb28-303d-4aaf-bcd8-b59d72b688c2",
        "cursor": {
          "ref": "200a2777-bb5c-47c7-8fcf-5e31397f1b0a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "74b87f8a-da37-491b-a49e-cfdff0e83046"
        },
        "item": {
          "id": "8293fb28-303d-4aaf-bcd8-b59d72b688c2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8d28c698-5679-4c2f-9a94-1b25597b3147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ae7805-31aa-475c-abcb-5d92572ad7b1",
        "cursor": {
          "ref": "fe87eae3-5857-464b-97b8-a059d01d00eb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bca93df2-b1c3-466c-947d-c57c5376766a"
        },
        "item": {
          "id": "f7ae7805-31aa-475c-abcb-5d92572ad7b1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "200451c4-9abb-4e94-a3e2-8ca4cb229cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698c6d47-9500-45cb-a90e-9f759644fbd8",
        "cursor": {
          "ref": "5a084e11-61f2-4c20-9f95-941eb76fee78",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "59b54e0e-0e82-47c1-9de4-cfd051e664d5"
        },
        "item": {
          "id": "698c6d47-9500-45cb-a90e-9f759644fbd8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bdd47740-d918-4b4b-a7bd-a6862b29abf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab08e79d-b35c-422b-b643-592bb0def547",
        "cursor": {
          "ref": "c66877f6-62f3-4f45-a064-17a04af84a44",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7c203bfd-2b52-4d0f-93b5-8a830e6cf136"
        },
        "item": {
          "id": "ab08e79d-b35c-422b-b643-592bb0def547",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "30a4df62-b399-450f-a63a-18a0f54103eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ce7c71-2961-4654-8d4a-cc2a2a0a51ad",
        "cursor": {
          "ref": "80e00dcf-2bdf-4a6e-9f06-a4cb39622704",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "66383472-df47-472e-a8b8-41c7fa29b2b8"
        },
        "item": {
          "id": "28ce7c71-2961-4654-8d4a-cc2a2a0a51ad",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8129d600-e3ca-4c6a-8991-c37c36edef75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29648c4e-b273-40f5-8add-854151f90991",
        "cursor": {
          "ref": "bf2b801c-241c-4f57-929e-15b107f3a0db",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4ad7048d-c8e5-40fc-be21-70760a41ecfc"
        },
        "item": {
          "id": "29648c4e-b273-40f5-8add-854151f90991",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9cbb7263-6028-4281-b12b-338f025faa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5ed9a5-1af5-49af-b14b-b6780a3cfa62",
        "cursor": {
          "ref": "985adf7d-302b-4afd-ae88-d0890252cdaf",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3924270b-5318-42e8-b022-517fad1b227d"
        },
        "item": {
          "id": "2e5ed9a5-1af5-49af-b14b-b6780a3cfa62",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "107deb7d-da52-483a-9eee-20c530eb9479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b32bdb-7d74-4fca-a3bc-b7046b858711",
        "cursor": {
          "ref": "8f19f646-b35a-4ab1-8aa6-afe6f564ee26",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e0c43a42-aabe-47dd-8774-4c374ec034b3"
        },
        "item": {
          "id": "37b32bdb-7d74-4fca-a3bc-b7046b858711",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eb64f385-6a93-4dec-88ae-eb79f4c0f251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87ea8da-773b-40c5-8a89-d62ab05ad7c2",
        "cursor": {
          "ref": "587f9f30-b06a-4fca-a8c0-0f57f5e3cdaf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f6e07e69-d77f-4b2a-aeb0-bb5f80969b51"
        },
        "item": {
          "id": "b87ea8da-773b-40c5-8a89-d62ab05ad7c2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "66fbad0d-f29d-4a2a-a7a1-226c0aedae12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa17572-241b-4a09-8184-d1313e0e106f",
        "cursor": {
          "ref": "6b72d609-7bcd-46d5-a795-e5010c47fd49",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fbe7f52e-8147-48e1-9dbe-88dcd7771819"
        },
        "item": {
          "id": "6fa17572-241b-4a09-8184-d1313e0e106f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dd0ccf05-293f-4ef6-8d6a-18ac42a135e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f590826-e354-497c-bddf-a7d11ffa5feb",
        "cursor": {
          "ref": "aaedc0da-2fcf-4bd3-ad5e-6cef4d5dada8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "649998a1-57d6-4948-8a96-16e5dcb18926"
        },
        "item": {
          "id": "7f590826-e354-497c-bddf-a7d11ffa5feb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "82ca4873-3984-4e75-9d72-7c1811d3d571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7240f1b5-799d-462a-b51f-2b26f74af488",
        "cursor": {
          "ref": "f21e8e7d-1a67-4095-a5f0-57bd6ddb8357",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6814ff87-6797-4452-b021-22f89a546e2d"
        },
        "item": {
          "id": "7240f1b5-799d-462a-b51f-2b26f74af488",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ff7363cf-d826-4503-a4e4-efae0678a3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "74b964a9-fccc-4d93-be67-fb556954c2bd",
        "cursor": {
          "ref": "cd2b4520-9cad-45a0-a2ef-709aed06f7d4",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "849517a8-c05d-4075-bc53-60ed558fd8a0"
        },
        "item": {
          "id": "74b964a9-fccc-4d93-be67-fb556954c2bd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5f233c19-abae-438e-9229-142963a9bea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2816205f-2a9b-4220-8690-4ed9b6d2b980",
        "cursor": {
          "ref": "f9332dcc-60f2-4a64-acf1-e56250c373a9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3ade73a7-cb1b-4405-b638-8656a9a270ff"
        },
        "item": {
          "id": "2816205f-2a9b-4220-8690-4ed9b6d2b980",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f2676319-5346-43c3-8c47-afacf07b143d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "54e24f21-78ae-43c7-b761-00389b0d3e8b",
        "cursor": {
          "ref": "5d0d3b19-f5df-45e2-a4d3-b0f136ae98fb",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4d025cd4-3f62-4582-b529-3bac437c0154"
        },
        "item": {
          "id": "54e24f21-78ae-43c7-b761-00389b0d3e8b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "822a7dde-a023-4c1a-9d41-c9ca63ac93fb",
          "status": "Created",
          "code": 201,
          "responseTime": 5624,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8864cf-3029-44db-a118-92f3da1aa81d",
        "cursor": {
          "ref": "7759ce4b-f894-4e82-b314-ddc87317543b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cf7432e4-f309-448d-a0df-ce041898bfdb"
        },
        "item": {
          "id": "ed8864cf-3029-44db-a118-92f3da1aa81d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3956364f-ee9a-4e5d-95e3-92f0b00ccb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "692c8cde-0a77-4f4b-85c3-255c59483530",
        "cursor": {
          "ref": "fb56e1e7-cc13-41ee-830b-d223bcd12973",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b590f25c-6ae7-4ea2-9591-65480721f9cc"
        },
        "item": {
          "id": "692c8cde-0a77-4f4b-85c3-255c59483530",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "62d7eef0-de57-455d-8dd8-25663e4891ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0cd7cd3e-fcc3-44fe-9033-737dd26355d1",
        "cursor": {
          "ref": "862547a1-5bfe-478b-aeee-88a987f594f1",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3bffa242-e258-41ea-be20-ef42bda6f898"
        },
        "item": {
          "id": "0cd7cd3e-fcc3-44fe-9033-737dd26355d1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ed0688de-27bf-42a4-9568-b701380273f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b89a0-9abd-4220-9d9a-2bece9f0c09b",
        "cursor": {
          "ref": "fe2af244-7e27-4d05-876a-58cebeb0dd9f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6158fb52-eb95-46fb-8e4a-149d4b79e0fe"
        },
        "item": {
          "id": "460b89a0-9abd-4220-9d9a-2bece9f0c09b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "666873f8-0099-4770-b3b5-6d4332c52a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1837f9ae-4dc7-47f2-831c-021e62b44e3c",
        "cursor": {
          "ref": "756f45e9-6d8a-43e8-a2e8-7a1be6467c06",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "990c00ff-ae0f-4118-a4aa-e455fd8e7562"
        },
        "item": {
          "id": "1837f9ae-4dc7-47f2-831c-021e62b44e3c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "051fe9a6-f83d-4fd1-b9f9-0acf1ac5b989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c584a83d-14af-472e-8dc9-180c712655dd",
        "cursor": {
          "ref": "c8ee124d-b531-43c4-ab2e-dc19f1e93a6f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c3e530f3-8c79-4339-a491-71f79c0b3e48"
        },
        "item": {
          "id": "c584a83d-14af-472e-8dc9-180c712655dd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b5baf335-ee43-4d4f-aaeb-b8c63ae6320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6bd794-42f7-47c7-acf3-54545b988df2",
        "cursor": {
          "ref": "630765b2-fd6c-40d4-9129-b4c6ba9bb608",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "009966b4-88dd-498d-8d96-a40cade875c6"
        },
        "item": {
          "id": "4c6bd794-42f7-47c7-acf3-54545b988df2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "81213c80-64b9-4651-8375-3e4aa84a9842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b290285-a771-4e91-ab63-882f48b2903d",
        "cursor": {
          "ref": "0943d1c8-2545-43d4-96d4-d21ed97dfa48",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2624c7d9-acbf-45a8-bba2-f8f11ed707fd"
        },
        "item": {
          "id": "6b290285-a771-4e91-ab63-882f48b2903d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5d99801c-ff44-4264-8cfd-c281f9a53077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe7a5b3-db63-40d9-9a07-86c1ac1cf542",
        "cursor": {
          "ref": "78dd2ef2-3759-4c6e-9fa4-cc6502d62f53",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e720bc7f-00c9-4f3c-95bc-30bb4e819b5a"
        },
        "item": {
          "id": "efe7a5b3-db63-40d9-9a07-86c1ac1cf542",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9c5e437a-cdde-4f24-a488-7b23bc03d99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437be296-3eb3-464a-932d-17aece246a51",
        "cursor": {
          "ref": "5bd06e1f-549f-4ac2-9186-d4965679f116",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "79493d25-47dc-43a7-80ab-aaab8d43901b"
        },
        "item": {
          "id": "437be296-3eb3-464a-932d-17aece246a51",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1a1f0117-88b7-4852-9ba1-fa84445e4140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a50e051-aeae-40bc-a388-0335a4a221fa",
        "cursor": {
          "ref": "61496f94-0c48-4b4b-8e54-78a7032f87b8",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5663c515-6c40-4124-b531-22fcddf9a1e4"
        },
        "item": {
          "id": "0a50e051-aeae-40bc-a388-0335a4a221fa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "19bb2a61-874b-4668-b7db-47ed0d86e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b5f3a5-9e55-43f6-bbfd-d3fcd7cb4003",
        "cursor": {
          "ref": "cf228720-eab6-40dd-8a93-e3e94361dd67",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "15d14a50-5f95-45c3-b09e-83d1f53b4ca5"
        },
        "item": {
          "id": "b7b5f3a5-9e55-43f6-bbfd-d3fcd7cb4003",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cbf2a09e-364d-40ea-9b1f-49a487d05be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88101542-f5f8-44b7-9f5a-7ea3eb189aae",
        "cursor": {
          "ref": "8d4d8b34-e59b-4850-8c86-55bcf54f47c7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "abc0e8e2-ebb0-4692-8df4-9cf6309c1e00"
        },
        "item": {
          "id": "88101542-f5f8-44b7-9f5a-7ea3eb189aae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b23f6c4e-88e5-4dba-9900-d3b41a52cf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142f4455-f6a4-4b96-a4a2-e30f66f70cd9",
        "cursor": {
          "ref": "d31db3a5-fe77-4e00-8c21-901369b01c3f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "93b63167-59fe-41c0-9429-e4c851995b28"
        },
        "item": {
          "id": "142f4455-f6a4-4b96-a4a2-e30f66f70cd9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65825ebc-cbac-4c7d-8930-df60535b9625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4663ab0-9a15-44f7-bd9d-a6ea4f9e1502",
        "cursor": {
          "ref": "a06ddd65-103f-4a71-bdbc-384aa43f08dc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cacd058c-3d90-4a29-bc09-66ad289476d2"
        },
        "item": {
          "id": "e4663ab0-9a15-44f7-bd9d-a6ea4f9e1502",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8972a03e-b4e8-44f9-b5c0-ee32d054df6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cf4a7f-73dc-46e0-af11-9b7f255b86a4",
        "cursor": {
          "ref": "6dfc97dd-9210-46f8-b191-7a6f621431c4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cc06f3bf-0b3f-48e5-afcd-57c1b54a9e3b"
        },
        "item": {
          "id": "17cf4a7f-73dc-46e0-af11-9b7f255b86a4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "747c3a7b-f929-4602-a0ac-02163cb58bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba240d1-42d5-4ab9-9b29-9d685d6d0eb3",
        "cursor": {
          "ref": "10ace437-8f70-4219-baa1-2ac667e70206",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "85884988-3985-4d47-ad25-22ae97601887"
        },
        "item": {
          "id": "dba240d1-42d5-4ab9-9b29-9d685d6d0eb3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f7b84ed-3e42-4bf1-ae92-1549e0bb07db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13ae3d7-cc71-480a-8dec-76b64ff3f4a9",
        "cursor": {
          "ref": "50d6e3d0-2848-4e55-ae31-d83f36634115",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1cf234ae-b32c-43ae-b58d-357f1764a623"
        },
        "item": {
          "id": "f13ae3d7-cc71-480a-8dec-76b64ff3f4a9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "93891f69-933f-42a2-b7d9-ef44b5ee08ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc1fe8-cddf-421b-af51-4c191f96b8c2",
        "cursor": {
          "ref": "f667d518-e0bc-4530-9c13-766900dd2cdd",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7c587774-1720-4ea2-9e13-728cde8559b3"
        },
        "item": {
          "id": "70cc1fe8-cddf-421b-af51-4c191f96b8c2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b8db665c-86a7-4e4a-8853-839dab08b645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f673f635-ec42-45c8-ae2f-57d81126b20f",
        "cursor": {
          "ref": "32b6b7a5-673e-42b2-ac6c-3e119279bac2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "19dc2ac4-a0ec-4b88-a09d-62f4487b872f"
        },
        "item": {
          "id": "f673f635-ec42-45c8-ae2f-57d81126b20f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6125e8b3-758f-4cee-b0ec-e74b8183662e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f639217c-35df-4dd6-b348-d7deb235f237",
        "cursor": {
          "ref": "d482a2ca-3d79-4b11-a755-6013bc1652a9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f243aaf2-3b10-497f-bdf1-78bc7fe9139a"
        },
        "item": {
          "id": "f639217c-35df-4dd6-b348-d7deb235f237",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "11170a14-938e-45c4-85b0-2cc6f9a806b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004cae6f-0118-40dc-899c-1b70f15d5d7a",
        "cursor": {
          "ref": "348c8753-c109-4503-aff5-edc8b84765b5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "889db9ef-e0cb-446a-a4ae-df2313ef6b41"
        },
        "item": {
          "id": "004cae6f-0118-40dc-899c-1b70f15d5d7a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "93ba0d43-6d53-4a11-a9ba-a447dcdcf4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6af31c-1adb-49fe-a835-b96702c4c023",
        "cursor": {
          "ref": "a294ec34-811d-4516-bcb0-6d07ff8b3d15",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d1a835c7-27d4-4927-b950-62914fd530bb"
        },
        "item": {
          "id": "cb6af31c-1adb-49fe-a835-b96702c4c023",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "174518c2-2564-4065-8fef-b39a9923da1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b21d21-7e23-419f-9a31-ba6393171fb9",
        "cursor": {
          "ref": "936e4ac7-cfaa-4b96-9178-1a0cf0334123",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "40ca270e-cf0e-42ed-87a0-9591d195bed8"
        },
        "item": {
          "id": "42b21d21-7e23-419f-9a31-ba6393171fb9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bc69d931-234e-4ef8-b989-6d2f3daf0554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148be109-b357-4070-8eb6-db6e2527c5c0",
        "cursor": {
          "ref": "da38e53a-43d8-4c4b-9d9f-616bcdf688ce",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "00816763-3d22-4ed5-a5fa-bde70efb3dbe"
        },
        "item": {
          "id": "148be109-b357-4070-8eb6-db6e2527c5c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ee1503b4-8e44-459b-9cba-4272ea909359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb8f85a-afd5-4f43-85b2-4b3efd9f88aa",
        "cursor": {
          "ref": "6d3594c8-81e3-4161-b8fe-28a50ff69b3f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a6c31609-0f68-44f4-9d30-87b00962756f"
        },
        "item": {
          "id": "dcb8f85a-afd5-4f43-85b2-4b3efd9f88aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5cb89c4e-b4d4-4da9-a009-7a52312e142d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a54f4c-6e27-4ba3-a9cc-39f60fa4aaa9",
        "cursor": {
          "ref": "62a61ab9-f8f4-45b1-96c4-e95343a57c42",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "174d3d08-0757-4b51-a7ac-380221c156ee"
        },
        "item": {
          "id": "d5a54f4c-6e27-4ba3-a9cc-39f60fa4aaa9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ed0173e4-6a86-4bc8-92c1-33570a7a0d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fd29c7-d8de-4dd3-a45e-211499e1df93",
        "cursor": {
          "ref": "74ca6051-dce4-486f-a71a-ff4de15a746d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "774204e4-ad1b-49e0-8365-c72d0759b077"
        },
        "item": {
          "id": "e7fd29c7-d8de-4dd3-a45e-211499e1df93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f0e7388c-c55e-4d1c-bff9-88d9170fd85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e95497-2e8a-4b31-bb68-d9415c13ee89",
        "cursor": {
          "ref": "aa71728a-c5f3-4e88-8030-3731b0656a29",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d5591328-5e9e-4a07-9bfb-c81e6ab79eec"
        },
        "item": {
          "id": "d3e95497-2e8a-4b31-bb68-d9415c13ee89",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "51e6bee4-e041-4b90-914a-8d7b63121510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85e8d68-3792-4a6d-853a-dfa8e3b1b899",
        "cursor": {
          "ref": "c45bbf3d-5368-4641-9e88-0fea59485d20",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "566d712f-d106-4fb2-8ca2-0d4f5ac9cd2e"
        },
        "item": {
          "id": "e85e8d68-3792-4a6d-853a-dfa8e3b1b899",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "37b70c20-9a78-42a9-b193-5a1783320966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48eb6ff-1fae-442f-80bf-8d3072a88780",
        "cursor": {
          "ref": "69aec64d-28ad-4ed5-9604-bbb1b0075fb9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1c018a8d-0385-4b0d-a13c-dc60d45b3759"
        },
        "item": {
          "id": "e48eb6ff-1fae-442f-80bf-8d3072a88780",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf4b10c5-8cca-475b-8e55-53df34b7d7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8d3a56-c4e3-4d7d-8dd6-d42ed4ab7751",
        "cursor": {
          "ref": "11a69f1f-0920-44c1-8e24-952756aecfb2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "81dcdbb4-7396-4c34-b255-576566f7d4dd"
        },
        "item": {
          "id": "fc8d3a56-c4e3-4d7d-8dd6-d42ed4ab7751",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a33df023-e60d-4a87-8436-1766b9df3937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e0089-9eb7-4c3d-b163-65c0dd8318d2",
        "cursor": {
          "ref": "f91a9b18-a2ca-48f0-8758-a26dbd8b651c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6febbc26-da96-43f5-a2ab-91c37027c66b"
        },
        "item": {
          "id": "6e2e0089-9eb7-4c3d-b163-65c0dd8318d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e69ca92d-f285-40f5-a0c0-ab26bdb4b757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c259d2-d30e-47e4-b9ac-497feee88667",
        "cursor": {
          "ref": "9355974a-ada2-45c7-adae-458b4be4a323",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a939770f-3c15-4814-800f-4bfae08ed9c3"
        },
        "item": {
          "id": "20c259d2-d30e-47e4-b9ac-497feee88667",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5d7dd983-de85-42c0-929a-c228a0f93c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432b712a-9049-434a-a587-66c6cc9c476b",
        "cursor": {
          "ref": "4352b320-effb-4975-b8cd-d8a2004e6fc8",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a4be05a7-03ff-415c-b9ef-55f6451c1653"
        },
        "item": {
          "id": "432b712a-9049-434a-a587-66c6cc9c476b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f47c3078-6a77-46a4-b19b-221996aca785",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d15dce-973e-4a64-a07f-3bc54dc7a1bd",
        "cursor": {
          "ref": "82bd8afb-29d6-46e6-bff9-64e96d077446",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5d81356d-6db1-489e-bd90-f309dfdce55c"
        },
        "item": {
          "id": "92d15dce-973e-4a64-a07f-3bc54dc7a1bd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d608372d-a150-4c41-a430-ab7115c1654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3f2c7b-1159-43d7-9ca7-6ab595deb700",
        "cursor": {
          "ref": "3121adb2-16a0-47e6-8ec4-66601d9429ce",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6ccb538d-7f14-4fcd-b22b-41700c050721"
        },
        "item": {
          "id": "9e3f2c7b-1159-43d7-9ca7-6ab595deb700",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dc502844-5b20-469b-9fd0-12efd392a864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d676c603-8a5a-4658-9c5f-f724c2675208",
        "cursor": {
          "ref": "ddf31014-c5d3-4214-932f-52b8ec8c031e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a2829852-e017-4883-aaf6-e71aed820691"
        },
        "item": {
          "id": "d676c603-8a5a-4658-9c5f-f724c2675208",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c82f1c4a-7350-4324-94c5-abc3bb83dd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c3c97c-e46d-4058-960d-55f87e2c2f3f",
        "cursor": {
          "ref": "4a2d32ec-a66a-469d-8829-03473b418fe2",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "35a23d0b-92eb-48b0-837c-298001aa6c93"
        },
        "item": {
          "id": "43c3c97c-e46d-4058-960d-55f87e2c2f3f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3c05c3f2-2cae-441b-aa26-79bdafff24a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13caf75-3a69-4703-a788-a773cdb1aab6",
        "cursor": {
          "ref": "a4f9dde0-bac6-4b48-a4d2-2ef0729334d9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "310184d3-a234-494a-ab11-86c35b154ccd"
        },
        "item": {
          "id": "f13caf75-3a69-4703-a788-a773cdb1aab6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4d37acf3-6ec5-4254-a3d7-d03e65f6dc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837ac0f0-166f-4e83-a47f-0f6dc331d884",
        "cursor": {
          "ref": "662d860d-57a8-46ca-94cc-138c325a7832",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "adf5bc59-bb65-4c95-a20a-422a4a660d89"
        },
        "item": {
          "id": "837ac0f0-166f-4e83-a47f-0f6dc331d884",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6c4fbe00-7b67-4f6d-b42f-906b1e9091d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5501a4-03b0-4df7-85c5-3ae9394dd434",
        "cursor": {
          "ref": "c0f44620-9637-47e7-9b42-69bab08354c8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "aa480b91-9e9f-4521-b551-83335d24c7a6"
        },
        "item": {
          "id": "ab5501a4-03b0-4df7-85c5-3ae9394dd434",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fbaf0be9-f087-4902-8f17-241725a14fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148a2f9c-d525-4d9e-8f26-35b80ae99368",
        "cursor": {
          "ref": "dbc0efcf-3e6b-4380-96c7-d94b2791a35f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "34b43928-5652-4a13-be76-2ff768b5f3ba"
        },
        "item": {
          "id": "148a2f9c-d525-4d9e-8f26-35b80ae99368",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bfc003e6-dcc0-4e86-aa0c-099f02cde9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736a978a-e1f9-4271-81bd-76fb8e8442d1",
        "cursor": {
          "ref": "78736a25-ba63-43fd-99e6-0f642ac6177a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1f9c5ab0-f7f7-478d-9a10-bc9b3cc31e88"
        },
        "item": {
          "id": "736a978a-e1f9-4271-81bd-76fb8e8442d1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9082646d-03d9-4ad5-96ac-beed53301924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6a4c12-32f1-4f0e-af67-32d92338fcad",
        "cursor": {
          "ref": "da37795b-f145-43de-81e3-ff79d90024ae",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "744cb71d-4409-4954-986b-c3a1ca2ce056"
        },
        "item": {
          "id": "0b6a4c12-32f1-4f0e-af67-32d92338fcad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "318f7abb-017f-4d57-b409-191fb220979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7ad09f-2fa3-4de8-a88b-b9baa8f71acd",
        "cursor": {
          "ref": "b3cfa123-6505-439f-b768-d47999430bac",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9f9a3b44-746f-4f25-aacc-96651b10f708"
        },
        "item": {
          "id": "ad7ad09f-2fa3-4de8-a88b-b9baa8f71acd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9c167cf4-8ee9-4b78-9569-6df7a4d6eee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a5eb9f-3c1f-4330-9b6d-595fcc911fc6",
        "cursor": {
          "ref": "a52c2c0c-0a04-4f1c-aba7-11faca46a95f",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "22585374-338b-4381-8506-78049d2adf58"
        },
        "item": {
          "id": "46a5eb9f-3c1f-4330-9b6d-595fcc911fc6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5ffb3ef6-a52b-4b7c-a22a-07398705c017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d3cf22-13e6-4422-98a9-f0a53d28ea27",
        "cursor": {
          "ref": "8d081875-b6ab-4434-8186-849a926c6e2d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d1119982-2b7b-4fcd-b444-2a4f78baba95"
        },
        "item": {
          "id": "a7d3cf22-13e6-4422-98a9-f0a53d28ea27",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6ba25e54-8a56-4eea-9c07-d7c410a6c998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0964f2eb-d5af-44ad-ba79-feb6bd95b7d5",
        "cursor": {
          "ref": "363da9d2-f9ca-4742-9a81-1bc0e7fa19e4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "591c5e31-6319-4fad-9033-026aeb0ad3ff"
        },
        "item": {
          "id": "0964f2eb-d5af-44ad-ba79-feb6bd95b7d5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1794ac48-44dd-4bf2-b6fe-4fca4827647c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfacbea-e99b-4a77-afe4-c73e1ab5e223",
        "cursor": {
          "ref": "e83966bc-8b7c-405f-b2b8-38f7a4d63dac",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5e463d68-d299-48f9-be90-4d585e44aad2"
        },
        "item": {
          "id": "6bfacbea-e99b-4a77-afe4-c73e1ab5e223",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ff065b4-1bbf-4d5f-8a4a-c9b076a530cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af09a07f-0447-4145-90db-21aa2269c1c8",
        "cursor": {
          "ref": "e2d6deab-7416-434c-a025-2ea82e716d53",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "090d7605-615b-4e45-9840-ca2567ddca16"
        },
        "item": {
          "id": "af09a07f-0447-4145-90db-21aa2269c1c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2a5e95c9-5cb3-4495-87c2-25470882e52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df0676e-eb27-4672-9a01-f1f6624db1ab",
        "cursor": {
          "ref": "f0092d3f-f2cb-4e02-a116-44f4f2b05a5a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cc328544-c74e-46e9-b3bc-39ee9432871b"
        },
        "item": {
          "id": "2df0676e-eb27-4672-9a01-f1f6624db1ab",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b1d0f0ad-1a82-431c-adc5-7a046ea3f0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08321f0e-2ed5-41e2-b8f7-8a9c19a6086f",
        "cursor": {
          "ref": "38b68207-82ca-4791-84da-c5da0a3e446f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fbdd9a2f-9527-45df-933c-ff05a0694de9"
        },
        "item": {
          "id": "08321f0e-2ed5-41e2-b8f7-8a9c19a6086f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "67f8ec44-45d2-44c2-b608-025d66904e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b898fdf1-a7c0-478f-8af7-48be6124f703",
        "cursor": {
          "ref": "21394ce0-44aa-4d32-a1ae-0659eeb49124",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "258f244f-c0a1-4578-8989-188d6084167a"
        },
        "item": {
          "id": "b898fdf1-a7c0-478f-8af7-48be6124f703",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "334e80b2-984a-4818-9f59-8c62b9840b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daab965-6d07-4242-8565-fbd7947990c8",
        "cursor": {
          "ref": "18415aab-5647-47e4-b51b-f031fc1bde71",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0a683af5-ba06-4335-b1a5-764651e89739"
        },
        "item": {
          "id": "4daab965-6d07-4242-8565-fbd7947990c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b4af253e-44f4-4f51-beed-3a5ca6c42d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf88b42-afa9-49d2-8763-ea9751b39574",
        "cursor": {
          "ref": "ebccefc7-2377-4af5-83ab-7f4e5acb4125",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "03065c06-199a-4aae-ab2f-e428edc4f8c4"
        },
        "item": {
          "id": "7cf88b42-afa9-49d2-8763-ea9751b39574",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7015e48d-0482-4812-8350-b68376b060c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f25b55-3069-4bc0-b978-7ed2152a3fe4",
        "cursor": {
          "ref": "7af7297c-74a6-4d17-8cdf-6e4f93423c0a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4022fe2c-c548-4e7f-afa4-2afa668be9ea"
        },
        "item": {
          "id": "b7f25b55-3069-4bc0-b978-7ed2152a3fe4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "78516f96-0989-42bb-8a0d-b54e2118dfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a57ceb-0148-4077-925d-5e94ffdd82fb",
        "cursor": {
          "ref": "f3bd5c23-0e97-448e-a24f-42349dc0392c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d135ff83-6100-44ea-a3ad-2d07180910fe"
        },
        "item": {
          "id": "97a57ceb-0148-4077-925d-5e94ffdd82fb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bb915a3b-7446-4fd1-9f89-64d463058e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8e0e1-7a9a-41a0-bc98-35d5cf16a6b8",
        "cursor": {
          "ref": "a6ee3e1d-533a-4caa-b3f2-f4e426aad26b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b035bce9-ff40-43de-816d-3f715c1aa4ac"
        },
        "item": {
          "id": "7bb8e0e1-7a9a-41a0-bc98-35d5cf16a6b8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "56c781ae-1251-439b-8149-54354ba5bea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c6ccef-388f-499d-b6be-1329b290a033",
        "cursor": {
          "ref": "2f7ef10c-ea6c-4618-ad2b-4897b29ef023",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0485eb68-04c2-4ccd-aac6-4d572d4f8dd2"
        },
        "item": {
          "id": "91c6ccef-388f-499d-b6be-1329b290a033",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9c36c006-11ed-41d7-a481-d829b5fc313a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9a4931-a597-4e29-9706-1fbb9948f6c7",
        "cursor": {
          "ref": "8cb24cb1-cb66-4762-9cbb-d8b649acc1e5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d9ef934c-fdb4-4bc2-bb51-3fe93c4d9e34"
        },
        "item": {
          "id": "fd9a4931-a597-4e29-9706-1fbb9948f6c7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0af8678b-de3d-4309-aded-7a383f6ae678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a6c0db-072a-48c7-b50c-12485c128dfe",
        "cursor": {
          "ref": "65ab917a-3602-4d91-939a-9af18d6a200b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d33e44f-0ca5-412c-94d0-bd9007e214dd"
        },
        "item": {
          "id": "e2a6c0db-072a-48c7-b50c-12485c128dfe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c7ff23a-b8cf-448d-bd52-7b45bf77bfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad72375-df3f-457c-88d9-8912edc34174",
        "cursor": {
          "ref": "7fa51322-e206-4d3c-b3db-e3a2198ef980",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "91a1e488-fef7-4e06-a04c-6ad8e37335ed"
        },
        "item": {
          "id": "6ad72375-df3f-457c-88d9-8912edc34174",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8a202ed3-09ef-4a70-81a3-88e500e29de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83493a-d7ee-45f4-a134-283c159ae99c",
        "cursor": {
          "ref": "7e384465-9203-4eea-9154-caf681e3ee05",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e197dd7b-38ed-4e14-b3a5-6d10a6d73254"
        },
        "item": {
          "id": "6a83493a-d7ee-45f4-a134-283c159ae99c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e7facfb8-1411-47d1-81a9-d831a4a436cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca8beb5-1e8d-4e67-acc6-4e175b4413d3",
        "cursor": {
          "ref": "c8e0e4ea-6847-456f-bcc4-ef04dfccb619",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "21b2eaaf-a184-443b-8bd1-7a46bd6569ec"
        },
        "item": {
          "id": "9ca8beb5-1e8d-4e67-acc6-4e175b4413d3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1e44ce91-7305-4d08-a2ea-33f229c44fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac57c41d-5359-4eff-ad19-98ca57ec2d2e",
        "cursor": {
          "ref": "3687a207-5bb1-468a-b7c3-820a5c85848f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0ae44e09-22fe-4e4c-975a-8eb3bfcf4447"
        },
        "item": {
          "id": "ac57c41d-5359-4eff-ad19-98ca57ec2d2e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "38fbdddf-fb76-44ac-bb22-60189453c948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2dacea-4cee-41a1-a9ce-1e78f5561b57",
        "cursor": {
          "ref": "5e0bc574-a3fa-40e3-a244-0eb4b26b8421",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a60216de-dd85-4c97-a28e-ecedc13672c0"
        },
        "item": {
          "id": "bf2dacea-4cee-41a1-a9ce-1e78f5561b57",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a6ed473e-8ee5-486a-a123-c962d8cf9a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df86498-3a2b-497f-b9f3-633ebe85bd4a",
        "cursor": {
          "ref": "5d95f747-0c58-4b08-a2ef-d0e34c39713a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bf371930-3b16-4ca6-8bed-bb340f954ed7"
        },
        "item": {
          "id": "2df86498-3a2b-497f-b9f3-633ebe85bd4a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56384088-e13e-4858-8ede-dd2da8d5adcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cfb0f4-55f9-447b-8bfb-8977603ae5da",
        "cursor": {
          "ref": "f05df727-9a75-4ad5-befe-9bbc2ca99661",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2ec14068-e32a-43e0-b437-5b185297f2c6"
        },
        "item": {
          "id": "66cfb0f4-55f9-447b-8bfb-8977603ae5da",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4fdbb865-a372-4649-a83a-104d0963032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a2e4e1-5d7a-473b-9e80-539a28ba68da",
        "cursor": {
          "ref": "8076c935-f6dc-4334-b701-ddfee7583a28",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "40e3e7ee-ba41-4324-9751-009172f2c056"
        },
        "item": {
          "id": "60a2e4e1-5d7a-473b-9e80-539a28ba68da",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8caa8f66-c79d-49b6-8c7c-7ab2baac74f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b651d809-6a72-4901-84ae-f01a622408ec",
        "cursor": {
          "ref": "b60764e6-8a8b-485a-a5a6-6043166c06a1",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f73d9f29-22e5-4c3e-96ea-13601694ca8c"
        },
        "item": {
          "id": "b651d809-6a72-4901-84ae-f01a622408ec",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0a8be69c-8ee8-4b1b-b200-e3f92c2a5676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b84358-a3e3-4ec2-b2db-190d3bd578d0",
        "cursor": {
          "ref": "efd26b41-976b-4367-916b-7363a13773a5",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7f7052df-3a02-464c-901b-41c5b0fdad0a"
        },
        "item": {
          "id": "89b84358-a3e3-4ec2-b2db-190d3bd578d0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f84d9ccb-f2a3-4879-90f1-f3cb7d5c37bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc1ed9c-9455-4d56-96e2-dcbfedcfca30",
        "cursor": {
          "ref": "b6ead2d1-a816-4287-adeb-c4425e451e6c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a7d23fb2-7d9d-4329-9956-5bc0b90f9b64"
        },
        "item": {
          "id": "6dc1ed9c-9455-4d56-96e2-dcbfedcfca30",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "07d65490-d9fb-43f6-9714-f42e981a0abe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0957d413-11c8-4ba5-bd1a-bce16521169c",
        "cursor": {
          "ref": "63d1d8af-aa6a-478b-8215-42880d37926b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "242b6e97-b2fc-413b-ac2c-24b3e07d42dd"
        },
        "item": {
          "id": "0957d413-11c8-4ba5-bd1a-bce16521169c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3f8d8662-df4a-4008-999a-8c87905a34ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1aad0c-69e4-419a-8fe8-228c1cfc93fe",
        "cursor": {
          "ref": "d113b557-4592-4182-8efd-bc6e1956af71",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5b603b0d-ae7a-43b7-bafa-64021d864027"
        },
        "item": {
          "id": "1e1aad0c-69e4-419a-8fe8-228c1cfc93fe",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "39f0a1bf-8e26-44c0-9d32-39ff430d1f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3555e7b5-ad1d-45c6-b841-e767402ab758",
        "cursor": {
          "ref": "d5d2da39-c832-44a6-b4a3-1d5e7ccbe83f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4076ba01-69d7-437e-8eed-1ea9ea6780e3"
        },
        "item": {
          "id": "3555e7b5-ad1d-45c6-b841-e767402ab758",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5ae7387f-8785-4263-bf39-c0f509875ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444db7ad-57f1-4d06-b9d8-2d377de5332b",
        "cursor": {
          "ref": "d4adfec7-0e7b-4b9e-8b3b-f22055c8c991",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9b7689fd-b428-4341-a950-4cefd9a49799"
        },
        "item": {
          "id": "444db7ad-57f1-4d06-b9d8-2d377de5332b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cc5d3242-5fe3-4ada-abbd-cc3f5f3edeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881ade27-6568-4b51-82e1-416911225501",
        "cursor": {
          "ref": "d9ebd55e-6e1f-477c-b705-cc69e6d76d1b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2b5efa61-c230-4bcb-aeaf-11d906b4368c"
        },
        "item": {
          "id": "881ade27-6568-4b51-82e1-416911225501",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "434c7acf-3bbc-4616-820e-bde2f0c63579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaa6855-aafe-4f60-83cd-a8876e013569",
        "cursor": {
          "ref": "2f70af93-5c18-44d3-9212-ed541916809e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ec5582bc-82f4-4f6b-879b-9674d8368825"
        },
        "item": {
          "id": "ecaa6855-aafe-4f60-83cd-a8876e013569",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5edf58f5-0084-4fd2-b982-46771145fcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d35fd9-c208-4f23-ad73-ab6c097a7684",
        "cursor": {
          "ref": "79b9f370-5aa6-4832-aa71-e4a3b2488c2c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "68cdcbf8-5ed5-46ba-a088-ada20e46deef"
        },
        "item": {
          "id": "d6d35fd9-c208-4f23-ad73-ab6c097a7684",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0245460c-7a2b-43b4-9710-6c35c3622de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7c47ad-f33b-4d21-841d-4a078f9d63a3",
        "cursor": {
          "ref": "85972978-9808-40eb-8655-e9f08793649e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3fdce136-1050-431a-83b3-0752961bc494"
        },
        "item": {
          "id": "6a7c47ad-f33b-4d21-841d-4a078f9d63a3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cead69c6-2ed0-4191-8116-8f5658bcd4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d054c3e-e666-4877-b3d5-b7c5e8ae019f",
        "cursor": {
          "ref": "93a15a1a-6447-44d5-bde9-ecebc23daf1f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ff45a5f0-6e42-4b52-b558-755273d1e410"
        },
        "item": {
          "id": "9d054c3e-e666-4877-b3d5-b7c5e8ae019f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "28bf2a03-145a-428e-8e3d-46847ff0f141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ffb927-c01b-4d61-a3dc-3ae05664ed92",
        "cursor": {
          "ref": "f898b7e6-8a05-4bd2-bbc9-a7ef62592883",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "060d5d5a-b1a0-4522-a12c-448809d5d9a2"
        },
        "item": {
          "id": "40ffb927-c01b-4d61-a3dc-3ae05664ed92",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a5a51f74-a371-42e2-a8fe-9b307df25419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22c5509-65bd-46e1-a347-39e19984d320",
        "cursor": {
          "ref": "9172881e-1dd8-433b-a85b-267af279aa59",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "942c7386-bfa1-438f-94e5-a33a2c0d7536"
        },
        "item": {
          "id": "a22c5509-65bd-46e1-a347-39e19984d320",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8734e822-495d-4db4-9eb2-58ebde5ace7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7458da84-6bb8-4446-b60c-dec8277b708a",
        "cursor": {
          "ref": "0ad690a3-ae1b-4c42-b7de-6577843fe956",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "92cfa8a9-ede2-455d-81c9-22ef51daf6fb"
        },
        "item": {
          "id": "7458da84-6bb8-4446-b60c-dec8277b708a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "33864915-8eea-449e-a398-3d34ae5ce9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d3879d-3208-4721-aa2f-5e365ec624b6",
        "cursor": {
          "ref": "da5c283d-a485-4bc1-905c-c86d6ee3bd8b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba2de953-b911-45b8-80ae-645dbf16836b"
        },
        "item": {
          "id": "09d3879d-3208-4721-aa2f-5e365ec624b6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f95b6804-2d9c-41cd-bf50-f51bf726249b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163b57ff-6d69-4cbd-a1ba-6ff830e1f96a",
        "cursor": {
          "ref": "ee737034-ba75-47c4-a465-367422b6ef4d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a349235a-8ac3-4172-8c6b-d0101930de25"
        },
        "item": {
          "id": "163b57ff-6d69-4cbd-a1ba-6ff830e1f96a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ecbd5a6a-7962-438c-a65c-7ce4623e8806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee21dd4c-3b06-429b-8a8e-b8c56af3c132",
        "cursor": {
          "ref": "7b7292aa-554f-4853-a95f-b369b42d6a4e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1ae0f768-1228-4dc3-a462-df8f81594932"
        },
        "item": {
          "id": "ee21dd4c-3b06-429b-8a8e-b8c56af3c132",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "36718401-0ef9-4514-a23e-3d32ef255082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acb9897-6788-427c-9046-bde05dbe49a5",
        "cursor": {
          "ref": "d8cf36fa-5cc0-4ca2-9b41-0a4a70eeeedb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "08a55404-b6ef-4ba3-8b0e-d933e8b364b8"
        },
        "item": {
          "id": "6acb9897-6788-427c-9046-bde05dbe49a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d425dd3f-fa04-4d96-834b-1b0a2bfabcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2257c31f-810c-4e88-8e3b-afc9068439ac",
        "cursor": {
          "ref": "509a7e08-1868-41e2-82ea-48a41089bd61",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1124e081-c370-4199-9027-51d26bce4589"
        },
        "item": {
          "id": "2257c31f-810c-4e88-8e3b-afc9068439ac",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4b0cf8d8-807b-4246-b999-fa5815f44e64",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "e66d6743-3163-4cf6-8da1-8e8682c6d96b",
        "cursor": {
          "ref": "79dccc87-09e8-485e-9208-5a362e868f6f",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba206a55-aff4-4d21-a2e0-922de7e0197e"
        },
        "item": {
          "id": "e66d6743-3163-4cf6-8da1-8e8682c6d96b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fd60981a-3cf5-4e8f-b1fd-6fd416592fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36223d4-22df-4d97-b421-63f8504e15fe",
        "cursor": {
          "ref": "b6d0ac0b-3d8b-498b-bf67-eccc3438e626",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "33ce97de-c56a-4360-a2d5-8b009d45bcf1"
        },
        "item": {
          "id": "c36223d4-22df-4d97-b421-63f8504e15fe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e1aa69ec-db79-40b2-a676-2c544c5bce91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f120b551-6284-43df-b36f-9bd636e23c95",
        "cursor": {
          "ref": "475e3189-f4b7-465c-83cc-92f4d5481f65",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d5c95e8a-54ff-4107-ad71-0c71744a5dee"
        },
        "item": {
          "id": "f120b551-6284-43df-b36f-9bd636e23c95",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3ae40f24-7a46-476c-9296-2b88506161b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac93726-82c9-4a86-9ec9-88ddc4de1575",
        "cursor": {
          "ref": "61be7adb-f288-4e28-b694-09e8848db1b5",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f4f9c341-854e-4966-b703-e19a66ae9cbb"
        },
        "item": {
          "id": "cac93726-82c9-4a86-9ec9-88ddc4de1575",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f6a1036f-f82a-4279-80bf-75e18e10cec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d7f429-50d6-46ef-8c1f-0ca8860f49fd",
        "cursor": {
          "ref": "7e8555ac-5768-4616-a66f-c38a93ca60b7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7517dc66-de1a-4631-9226-f4f724f2c6c6"
        },
        "item": {
          "id": "b0d7f429-50d6-46ef-8c1f-0ca8860f49fd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "44162611-5c12-4d22-b215-343801fe5261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2d6cde-90cc-47c7-99aa-9ea51686af13",
        "cursor": {
          "ref": "a586c517-403d-4b55-9a35-146531c30864",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ab53cf7d-0dd0-4b57-9b70-e953ec8c47bd"
        },
        "item": {
          "id": "ad2d6cde-90cc-47c7-99aa-9ea51686af13",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5a4e35e0-0054-45e2-9e78-bd80d39e26a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76436f93-c4ac-4a1d-a659-fe9256690449",
        "cursor": {
          "ref": "7a4378bc-c03f-4ab3-9338-8f988583be82",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4223d371-9115-48bf-b48d-20181dc4e181"
        },
        "item": {
          "id": "76436f93-c4ac-4a1d-a659-fe9256690449",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0a56b5b3-0c34-4706-a758-86e57a0c1860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb562309-c20a-4c70-9fcf-eef4478b52f5",
        "cursor": {
          "ref": "8f69e9a9-e39a-4a6a-9a84-2b7b19792be0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "706a39b1-9ee6-444c-9ae2-fd4d5006eb53"
        },
        "item": {
          "id": "eb562309-c20a-4c70-9fcf-eef4478b52f5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f10e3fe9-c751-4535-820d-c897d09a8914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b95d1a-4a98-4afb-9906-82ff6cbc721a",
        "cursor": {
          "ref": "177a8118-d780-4f33-8b90-0283f0242ce3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "50250f23-74f5-4ac9-9355-599a511e4939"
        },
        "item": {
          "id": "b9b95d1a-4a98-4afb-9906-82ff6cbc721a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "653f8eaa-e6ea-4383-acff-1eff6017c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c62eb8-a562-426e-a401-512469c34bc8",
        "cursor": {
          "ref": "b864ed6a-df1b-4fbc-86f6-b397a64eab27",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2d07cb21-399b-4a02-a1a7-b0bae15f6495"
        },
        "item": {
          "id": "d4c62eb8-a562-426e-a401-512469c34bc8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "89f766a8-481e-4956-907c-1bfd62a9be2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce73fcd2-de60-4292-b64f-fd16f49656e6",
        "cursor": {
          "ref": "74b549e2-3a15-441c-bff8-6bb6da25cae8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0142e82d-5778-4a55-8c31-964aea1f91e5"
        },
        "item": {
          "id": "ce73fcd2-de60-4292-b64f-fd16f49656e6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "848369b1-82d4-434f-827e-de35e99a4f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874232c1-3783-48f9-a38f-257501fb339e",
        "cursor": {
          "ref": "e063d906-2590-411a-9cee-04ac95af896b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "25690f59-9855-4a46-86c8-df908b6260bc"
        },
        "item": {
          "id": "874232c1-3783-48f9-a38f-257501fb339e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "879f90c1-5b1a-4b88-9c78-4847e01785ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a8b90-d292-4532-8ef2-3864282e80e6",
        "cursor": {
          "ref": "c0bd8f93-258b-462b-a2fb-78e39241a00a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3e1c2b5a-f8dd-4d2f-afe7-03a9cf5cd8f8"
        },
        "item": {
          "id": "409a8b90-d292-4532-8ef2-3864282e80e6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dfe3da57-178d-49c4-a701-1786ef0ec915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ac2980-ed3d-4bcf-9f96-5f8c04e37176",
        "cursor": {
          "ref": "7e902aed-aa66-4430-a33f-034cdf027327",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "15742db6-48e1-4a4d-bf09-5de7dd886f22"
        },
        "item": {
          "id": "90ac2980-ed3d-4bcf-9f96-5f8c04e37176",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "117d22ac-e104-445a-9e2e-6194d4ac737b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15b0c31-afbf-4a83-8938-e4e20dd0610e",
        "cursor": {
          "ref": "c0d51050-b611-426c-b767-de899098f840",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e5803291-6e66-4862-ae2f-982752ae2507"
        },
        "item": {
          "id": "a15b0c31-afbf-4a83-8938-e4e20dd0610e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fd28b1a7-966f-48a8-ae2b-ad6221cc46b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c3f433-1ddf-49e3-b551-7e0ac3b53179",
        "cursor": {
          "ref": "4bd46a59-6c28-4325-9d29-f3c9db383452",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "27deb370-30ee-4dea-9a30-a988c4ead89d"
        },
        "item": {
          "id": "10c3f433-1ddf-49e3-b551-7e0ac3b53179",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6c29b387-4d28-405f-b1af-b5dabf49d243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b399bf8b-cf32-4e9f-9bfa-e43852f1035a",
        "cursor": {
          "ref": "ab68c8c4-33b6-4ca8-bc7a-cf5fb7228675",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c5c87b90-74ab-4cb4-b3bd-a451772d904f"
        },
        "item": {
          "id": "b399bf8b-cf32-4e9f-9bfa-e43852f1035a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cb6e3e42-8612-4eda-a50f-20c685da0cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73cf9e2-e76c-4291-b0fa-2dd4c9d2df79",
        "cursor": {
          "ref": "9655251d-1306-4045-830e-b9688cd480f9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "be805c8e-c422-47b8-b208-9c351275abef"
        },
        "item": {
          "id": "a73cf9e2-e76c-4291-b0fa-2dd4c9d2df79",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d6eb951b-627b-453f-8167-a67092f4f5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd5c623-80fd-4c61-8717-eb30cee8e6c6",
        "cursor": {
          "ref": "f1ffd576-dbf9-4692-8d46-e9142958096f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f19d25f3-29b6-4966-981b-085b30e96af4"
        },
        "item": {
          "id": "8cd5c623-80fd-4c61-8717-eb30cee8e6c6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "34652171-d90c-4433-a7e2-b3624163dd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5715463-c6e3-44e0-a090-b26ea3d62c52",
        "cursor": {
          "ref": "19b0bcca-440d-4f04-8ac3-0a61c2cd453e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3cfbbe13-f1de-4449-b28c-bd50fc3a2a4e"
        },
        "item": {
          "id": "f5715463-c6e3-44e0-a090-b26ea3d62c52",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9bd6c58e-c562-4b41-b320-9c8e70dadd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec87b06-978f-46a1-822a-acf03018924d",
        "cursor": {
          "ref": "c1f539f8-8b3f-4f05-9044-1fd24dcf59ae",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5146226b-920d-437f-80ee-8928a54d4e37"
        },
        "item": {
          "id": "eec87b06-978f-46a1-822a-acf03018924d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6030b1d8-730d-4b89-bd9d-14d2b28e2ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a99e05-33cb-4cb8-aed6-be84f9eb1002",
        "cursor": {
          "ref": "038e8783-73c4-4937-86cd-11b105bd0761",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "58b3a702-f71c-482f-a641-661d9f7a8112"
        },
        "item": {
          "id": "84a99e05-33cb-4cb8-aed6-be84f9eb1002",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4ee35649-15a3-41e9-af63-028c75bdbfda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5d339a-4e57-406a-8706-9cd4c9cc3982",
        "cursor": {
          "ref": "974547e3-a78c-43d5-99ef-012e61633813",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8572ff65-9ad2-4457-8728-aacef5b32cd7"
        },
        "item": {
          "id": "cb5d339a-4e57-406a-8706-9cd4c9cc3982",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "04a66901-67e3-4f15-90ae-7647d4dc8605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d6ce5c-07a5-474b-9d02-0ac669e4e2c5",
        "cursor": {
          "ref": "d5281ac6-3b4d-478b-8073-c0643e743202",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "df55e401-6538-4c39-a34d-3a7f131c5fd4"
        },
        "item": {
          "id": "d8d6ce5c-07a5-474b-9d02-0ac669e4e2c5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "874469e3-680e-4617-adb0-b81c37e4082d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05fb908-0e00-40d8-8752-1db88cf72a80",
        "cursor": {
          "ref": "583b0d66-cbde-48d0-bbf5-2ce860ae1987",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cf7da145-6a72-4515-bb0b-d06e953440c4"
        },
        "item": {
          "id": "c05fb908-0e00-40d8-8752-1db88cf72a80",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f6fd7a95-a0d1-4d92-8007-eed99b7b41a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe572fb-4ec8-463c-ae5f-82d30c8d601d",
        "cursor": {
          "ref": "3eedfd92-daf1-40dc-a5b4-b1800935e9c3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "450b59f0-f7b7-4783-ab8a-f633b6489afa"
        },
        "item": {
          "id": "6fe572fb-4ec8-463c-ae5f-82d30c8d601d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d14586e-3a8c-4cec-8ea0-51b0f29df25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842881c4-933c-4c3f-a71c-71965a95a9da",
        "cursor": {
          "ref": "e7acecbb-73b8-4c39-8259-f2848ea20dd2",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4d6ea32e-3324-4e2f-b352-3850be7121b6"
        },
        "item": {
          "id": "842881c4-933c-4c3f-a71c-71965a95a9da",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "39532991-9edf-4eaa-b8e6-ae847f9746ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ed4398-7829-4a3d-89e4-3d5d3142f2c6",
        "cursor": {
          "ref": "e09ad55e-379a-4a02-8dae-e3afa552ea26",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3d5c69d3-fab7-4043-8a8c-8bf192b9ddc4"
        },
        "item": {
          "id": "09ed4398-7829-4a3d-89e4-3d5d3142f2c6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b3dc5042-d91e-41bf-bc65-f030d72a054b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13130f6c-a4ac-4086-9112-180ba71bfaa2",
        "cursor": {
          "ref": "382b898e-a032-4718-9b6c-c06521239ec7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "971a069a-41af-4d63-a396-a4eaa6076d6d"
        },
        "item": {
          "id": "13130f6c-a4ac-4086-9112-180ba71bfaa2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0f521a42-cee0-4c6a-b45d-fb77722dc7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5daea3b6-0294-4b11-ba87-0f86af7d9a99",
        "cursor": {
          "ref": "e6d3f93c-4095-4056-916a-eeb93e419e25",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1918536e-fbf9-43a0-8f1b-ec9c9c927ac9"
        },
        "item": {
          "id": "5daea3b6-0294-4b11-ba87-0f86af7d9a99",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1ae24224-ade5-42c9-84b8-f3399418d7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f790a86-78df-448e-be9f-15ce5453be86",
        "cursor": {
          "ref": "3bec4b2a-651d-4857-b8aa-a6362ca472bf",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e25e07d2-244f-4d1f-9de2-871ffa98b918"
        },
        "item": {
          "id": "1f790a86-78df-448e-be9f-15ce5453be86",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "84eebc86-e63a-465e-af0a-c32b1cd80296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b92908-de3f-410f-b2ea-a899ce7f5b92",
        "cursor": {
          "ref": "0ac809b9-c26a-491b-95ef-f2c31454b5db",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c8d152d9-ca5a-4359-a458-fb610789a654"
        },
        "item": {
          "id": "e8b92908-de3f-410f-b2ea-a899ce7f5b92",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "504e45de-14ba-4719-b05e-6b17f84dda4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06027506-1148-4071-b5cf-d6c306813fe2",
        "cursor": {
          "ref": "a7a097ad-9126-49de-91b4-3919c6ffc862",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4cd93b89-0c8a-443c-b1c5-165f086e75d3"
        },
        "item": {
          "id": "06027506-1148-4071-b5cf-d6c306813fe2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "03e7580e-840a-4eee-bcd4-686a5231e586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad39c983-ff33-4350-8538-c78309bb714b",
        "cursor": {
          "ref": "2492d09a-11b3-488e-bc97-c18fb7a18991",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9344e468-266e-421f-b32e-0b1ba4b31fec"
        },
        "item": {
          "id": "ad39c983-ff33-4350-8538-c78309bb714b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "07845865-e3c0-4dca-bc5b-bf555df3a8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6998c976-0f23-4ab1-86e0-3fc1356e79e1",
        "cursor": {
          "ref": "c583e162-1e6f-4820-9363-fd5e4244b25f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2517b8df-d9fb-47f0-a8e8-5e5af2bce271"
        },
        "item": {
          "id": "6998c976-0f23-4ab1-86e0-3fc1356e79e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "599642c2-0098-4d80-bc06-7b6b83fefbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745ab470-062e-4045-b620-ee6a5c8c8c47",
        "cursor": {
          "ref": "5412a400-3601-4f54-82b2-afa6470de385",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "261c07c9-f822-432c-9abe-e0c3764bf129"
        },
        "item": {
          "id": "745ab470-062e-4045-b620-ee6a5c8c8c47",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "371207fe-bedf-4b92-b83f-13f434e7b56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e9d29-0962-42bb-b33b-53992b090f9a",
        "cursor": {
          "ref": "80366255-4b79-413b-bf0e-5e88da193448",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fe7550ea-84f7-4eb8-8200-536bebd76a83"
        },
        "item": {
          "id": "e50e9d29-0962-42bb-b33b-53992b090f9a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1ae23888-3ccc-44a4-9dd6-2a2c06b37968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1341925-67c3-45c4-9338-e76723477c8c",
        "cursor": {
          "ref": "594baab3-dee1-44a0-8e43-cd62695cd95a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ac66f3ad-c101-488d-8ece-0aaaa3b82943"
        },
        "item": {
          "id": "d1341925-67c3-45c4-9338-e76723477c8c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f030878a-3d61-4df4-9e77-312588302cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c10a2a-3ccf-4d2e-aeec-30d9c243442f",
        "cursor": {
          "ref": "438d2913-01ad-4fc5-9a36-c0fa0901765f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cbaf14e6-9040-47c0-aa96-b1743f70a944"
        },
        "item": {
          "id": "32c10a2a-3ccf-4d2e-aeec-30d9c243442f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f22f0e58-82ab-49d0-b33d-9ad0ef018947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc7e951-d98e-42fa-accb-902fd668bd35",
        "cursor": {
          "ref": "7ba62ed6-8d9f-4cf6-9b25-531658157567",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "38865e5b-3b8d-4a8f-84c5-3d6fb725109b"
        },
        "item": {
          "id": "cdc7e951-d98e-42fa-accb-902fd668bd35",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6cd6b1c9-83a4-489a-96e2-031c0b04392c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe19160-9444-4c18-aa24-e19709a737dc",
        "cursor": {
          "ref": "31b9e2d7-bf04-4df8-903d-9ceb7302f5a2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f6c44b79-7b70-48df-b6a5-404207843781"
        },
        "item": {
          "id": "dbe19160-9444-4c18-aa24-e19709a737dc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "375cbf4e-6d82-40c9-b70d-a62b021df40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcfac53-f924-4294-9f66-ed06e7c70716",
        "cursor": {
          "ref": "255f2217-7366-4d76-820d-06ebbbc0d567",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7a21f834-cc13-4e2e-9cd6-a9979659ec0c"
        },
        "item": {
          "id": "bbcfac53-f924-4294-9f66-ed06e7c70716",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8d7f9e1-fe12-45d5-94b3-e28ddfcb103b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f53d3bf-f619-48eb-8b62-8219bc40bd2d",
        "cursor": {
          "ref": "6b53571f-7613-4f65-b0cf-fe81ba7a6d9c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e342e183-3df9-4ccf-a8cc-10fbbcc04a3b"
        },
        "item": {
          "id": "2f53d3bf-f619-48eb-8b62-8219bc40bd2d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6058a6b3-fd5c-4478-9039-38a4cd50e1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe798ba-9910-4fbb-ae8b-58c31c1ce21d",
        "cursor": {
          "ref": "1ff89d07-ef66-4fd9-aefb-78c473edd75b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b896929e-4f1d-416a-a9f5-0f056e3e63ad"
        },
        "item": {
          "id": "ebe798ba-9910-4fbb-ae8b-58c31c1ce21d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f257024e-69f1-4af0-a1b6-678b687a4e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b45685-b85f-4cae-a39a-fbe9c1d99238",
        "cursor": {
          "ref": "4c3ca0f1-2481-45fd-85ef-5b17d6cf1768",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8215c0e8-3a6e-48ea-a982-abb1dfe67d3a"
        },
        "item": {
          "id": "96b45685-b85f-4cae-a39a-fbe9c1d99238",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6cf037e0-a5a3-405b-96ba-50cef02bd1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d65109-edb8-4075-b12a-7237c3a98c6f",
        "cursor": {
          "ref": "a86b492d-2070-4fba-b42f-52c59ed6de59",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "59e99c8c-a8c2-4888-bce2-6897259cde48"
        },
        "item": {
          "id": "37d65109-edb8-4075-b12a-7237c3a98c6f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d707e946-5c6a-4b11-97ca-5e0b76b0631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f107b5b-4645-4ba1-8925-3e46488951c1",
        "cursor": {
          "ref": "7d7fc349-8727-459a-8c02-69dd5e0bb4d6",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c5572f4b-2d5a-4272-8f0a-b4262f29d26f"
        },
        "item": {
          "id": "2f107b5b-4645-4ba1-8925-3e46488951c1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ced8aeb2-1352-416d-aaaa-b6a582d5fcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9e82ea-ecbc-4ab1-a348-e53b6fd42598",
        "cursor": {
          "ref": "72be7b14-d905-49d4-9542-69d6a8b4b146",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fe4bba12-0717-419c-ba59-f375dff08426"
        },
        "item": {
          "id": "0d9e82ea-ecbc-4ab1-a348-e53b6fd42598",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "de541fc5-c388-4d33-8c71-ec335730703f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e3d264-99c6-47f2-b2f6-c7180c97619f",
        "cursor": {
          "ref": "246fe458-32a7-47e9-b0c7-e1ded8ac0a70",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eefc8bd7-3bfa-4b0d-ace3-f606d7b0cf9a"
        },
        "item": {
          "id": "61e3d264-99c6-47f2-b2f6-c7180c97619f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5bbbe2be-6780-4be7-83cd-6ea0f79eba74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f675e5de-ec96-4611-ab5a-a718897a0db5",
        "cursor": {
          "ref": "05ac9d11-2410-47f1-8ad9-1c4cc5eb1b69",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6367c3c4-1087-42d8-9b1d-d102b576a4dd"
        },
        "item": {
          "id": "f675e5de-ec96-4611-ab5a-a718897a0db5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "22d0e11c-2735-4b37-abde-53a7b6a078c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b89941f-feac-4b0c-a627-3056acec4f9e",
        "cursor": {
          "ref": "4c6d6ce6-823f-425c-a1ca-00e7e7de1425",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b613e95f-52fd-4a45-88c6-8832cd3ca65c"
        },
        "item": {
          "id": "2b89941f-feac-4b0c-a627-3056acec4f9e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c3a9f526-9c1b-4a9f-b0c6-7ba87d79f666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85376cb7-4a53-4c6c-ad64-ead901f7ac26",
        "cursor": {
          "ref": "0997d4c2-6fbc-4846-be14-3d885fc8b2af",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "58b3dbf6-c2af-4fe0-b992-da63079eb204"
        },
        "item": {
          "id": "85376cb7-4a53-4c6c-ad64-ead901f7ac26",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ce746f67-7192-4401-9c89-08c5975db108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bc3b26-70ab-472a-b610-d46ede14c3bc",
        "cursor": {
          "ref": "3a19e86c-d155-4e97-ae51-00ac88fcfe85",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4cd1181f-49d3-42fa-8cc4-48e03e56de52"
        },
        "item": {
          "id": "d1bc3b26-70ab-472a-b610-d46ede14c3bc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d8928dbc-7b5e-4efe-ad90-1843865832c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de3be66-9ef6-40c7-8215-6380e5d03e88",
        "cursor": {
          "ref": "97fcfda3-2795-4b8b-9f60-32fc3070ccb7",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "54a22bf4-d0bc-4189-9607-9c1bc2cc85c0"
        },
        "item": {
          "id": "4de3be66-9ef6-40c7-8215-6380e5d03e88",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dbb59e81-5345-4848-947b-15ac46684cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6928b9-8787-49f2-bab0-905ad04a8a4a",
        "cursor": {
          "ref": "a27dbfc8-a94d-4df2-9b1c-9e3ca6fee0cf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a4b520fd-74ec-4f51-bee1-6a82d82da8bd"
        },
        "item": {
          "id": "ae6928b9-8787-49f2-bab0-905ad04a8a4a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3619bafb-17ee-4f4f-a769-6415bd454463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f223dca5-a180-4a84-8ec3-edc391d535d1",
        "cursor": {
          "ref": "4a9ec05e-8970-4770-89a5-df403e93c945",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6b13a0c3-2458-494f-9bee-be1895645b75"
        },
        "item": {
          "id": "f223dca5-a180-4a84-8ec3-edc391d535d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31d98d62-adf7-47b1-80e0-54885718e4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa80e98c-c431-4709-a07b-2c9c6429c62e",
        "cursor": {
          "ref": "fdefdc00-8ec5-4b32-a921-2d8b0112d8b9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "887ccadf-4646-492e-bd55-1fe3df044391"
        },
        "item": {
          "id": "fa80e98c-c431-4709-a07b-2c9c6429c62e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "32e279d2-74c9-4f16-98a2-b0f4ee3bcbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6027f944-0008-4554-aed5-272aa33b9cd0",
        "cursor": {
          "ref": "3e881356-cf8f-4a0a-8897-60b268232b55",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "32be60ce-ea5e-4a7d-8a01-5aa6c57f1d74"
        },
        "item": {
          "id": "6027f944-0008-4554-aed5-272aa33b9cd0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "60cf4179-9221-4dca-85a4-8a9647326ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371bc323-b311-493f-89dc-2fa49c27fb32",
        "cursor": {
          "ref": "9a59f4f4-9149-4be7-a5b6-c9387b4d8c5a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c30f1de9-6255-44f4-8386-3492fa1a08ad"
        },
        "item": {
          "id": "371bc323-b311-493f-89dc-2fa49c27fb32",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "18372f80-c743-4780-b0b6-d3684b7efd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15329921-97cb-4c4c-ad7c-dfe6c84b33ce",
        "cursor": {
          "ref": "6c7805f9-7fd6-4f62-bb6a-48ff6c162098",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8f206b3c-72ad-48cd-88df-26b9505f911e"
        },
        "item": {
          "id": "15329921-97cb-4c4c-ad7c-dfe6c84b33ce",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "651cd7d4-c282-403b-b836-f99872741eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1461b96-f41e-4473-964a-32d916358201",
        "cursor": {
          "ref": "04a17dbf-44e8-49d1-822d-fff330edaaa2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fdc7f9c1-d468-45a3-8955-0084463acb50"
        },
        "item": {
          "id": "b1461b96-f41e-4473-964a-32d916358201",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fc32bfd2-aa32-4e97-8272-c7e0f4a90a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e35a7b-8333-44d6-90af-e6a152cb1eb0",
        "cursor": {
          "ref": "4ba2ee56-ef72-478f-8730-1b5f444b3daf",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4e1ab7dc-0346-4da8-b2c7-c227ff5c6e45"
        },
        "item": {
          "id": "06e35a7b-8333-44d6-90af-e6a152cb1eb0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "07b4dfbd-6e6e-4497-84fd-4e188d940f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbe876e-d022-4e24-a009-e674dcf480b9",
        "cursor": {
          "ref": "23044bcb-5e87-4d72-923c-809e29984bd4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5ca06641-715d-462a-8e5c-8be2acbd02c0"
        },
        "item": {
          "id": "cdbe876e-d022-4e24-a009-e674dcf480b9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7b820242-f7c4-412d-8c9e-88e9a41dbcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fc50fa-b8af-4eac-bb5c-8a14adacab0e",
        "cursor": {
          "ref": "01c4a3fd-265d-4891-9102-09345a017dd4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6e70ce6e-13e8-4182-b85c-7409ec8c8c03"
        },
        "item": {
          "id": "b4fc50fa-b8af-4eac-bb5c-8a14adacab0e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0250e10c-5ca4-44e2-9b69-4dcbf2be3f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52670258-375f-411d-9bbc-3afb389702c8",
        "cursor": {
          "ref": "8968ee4c-c255-41f0-8f52-2d566da8ade8",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9e834187-0d48-4165-b5a5-19ada9a03f31"
        },
        "item": {
          "id": "52670258-375f-411d-9bbc-3afb389702c8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e98680b0-6488-4102-bfde-0626f528aa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c99f97-5e5c-4a2b-bac4-7913db6f1faf",
        "cursor": {
          "ref": "945e9067-2f69-400c-bcad-6cea5858ef99",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bc9e4e8e-3a07-4490-b89e-45013be90c2c"
        },
        "item": {
          "id": "81c99f97-5e5c-4a2b-bac4-7913db6f1faf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b0236e3d-1a74-4585-8bbd-a59772d085f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210d7635-968c-42ea-adec-ae4502e3852a",
        "cursor": {
          "ref": "95d63a05-6775-44b5-8f78-08b24176454c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "30f7b7fd-363d-4897-a2d5-ecfbd3fddb67"
        },
        "item": {
          "id": "210d7635-968c-42ea-adec-ae4502e3852a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e39e6c0d-5695-4646-8f70-610d547b0092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e3cb3e-5121-4924-bd7c-bd75f04a487e",
        "cursor": {
          "ref": "6b3f1607-b824-402c-83c8-5576ac565a3c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fcec7238-eb60-4c5f-8ccb-ad3ea0e87fee"
        },
        "item": {
          "id": "08e3cb3e-5121-4924-bd7c-bd75f04a487e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "53c88f39-2b59-4110-9574-43e1f15d2ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aee176-2abb-4b4e-bfee-9be7e966c35c",
        "cursor": {
          "ref": "cbf39064-50c1-4358-9eba-56f6e8c7848a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2abd2255-6a28-4c6d-ae3f-06d55182ae10"
        },
        "item": {
          "id": "b9aee176-2abb-4b4e-bfee-9be7e966c35c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e204b1d1-5adf-4381-aa24-fffa6f1512cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73e460f-6ded-4e79-8b6d-5c1647e336e2",
        "cursor": {
          "ref": "c4530969-7d08-4878-8a73-7f0e1f06fe93",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "60595744-87d2-40f4-8069-e0cb79c76b42"
        },
        "item": {
          "id": "a73e460f-6ded-4e79-8b6d-5c1647e336e2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "25fb25bf-61b4-4668-b9e9-1256d8c3d8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87408d4b-2ed9-41ea-a2ab-7e5bd29c87a4",
        "cursor": {
          "ref": "a95020ac-7a3c-44f9-9ee9-f6448a7ef86b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "805ad652-73c1-4423-a77d-e0ed9907c261"
        },
        "item": {
          "id": "87408d4b-2ed9-41ea-a2ab-7e5bd29c87a4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0992b3e7-3e10-488c-8a21-273b2888af23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bbea40-b403-4e76-b6c6-2da9a957965e",
        "cursor": {
          "ref": "d65338b4-49a8-47c3-8aa2-0a27027c79ec",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "de4ee027-0b06-40e0-8ae9-0051d8950006"
        },
        "item": {
          "id": "d9bbea40-b403-4e76-b6c6-2da9a957965e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "050c4bb5-9c35-4538-9f76-f602d24543ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36827aed-73d2-44a5-9041-c857815fecf5",
        "cursor": {
          "ref": "b22c22c0-25d7-46db-a30e-d1e9a0920fd7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "63103ab9-d234-426b-855e-48d1eca1ce85"
        },
        "item": {
          "id": "36827aed-73d2-44a5-9041-c857815fecf5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "55de39fc-b641-4ff6-8312-1c16c6a4faf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c6176a-bd09-4819-b786-b0fad4164679",
        "cursor": {
          "ref": "8b94a34e-5fcf-41d9-b0da-96dbddfeb8e2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2379b50e-f0dc-4734-ac7f-73408a5c1590"
        },
        "item": {
          "id": "d8c6176a-bd09-4819-b786-b0fad4164679",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "555a8aaa-a6b8-4c13-b7c7-9a63621c1142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55a499a-4e44-44a7-82d4-42b538eac598",
        "cursor": {
          "ref": "9c5319a2-1a41-47b7-952e-f2faeb872aae",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4e0e9670-e2ca-42c7-ae66-c55065413b26"
        },
        "item": {
          "id": "e55a499a-4e44-44a7-82d4-42b538eac598",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4c0d77f9-cfba-4f2f-9fa0-d13d3aa3be77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564d12e7-f752-4c7b-8eef-97578c865296",
        "cursor": {
          "ref": "ce6860a2-cbe0-4981-85e5-be12f7818b08",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "85c14017-e1e5-4d7a-9799-f0b3b9b9eaed"
        },
        "item": {
          "id": "564d12e7-f752-4c7b-8eef-97578c865296",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "68316a5d-026f-4fdf-8ad1-49efa4f696c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300824ca-b3fd-41e6-8568-39f3ee2254ea",
        "cursor": {
          "ref": "3c25269d-0c0a-4d65-b4fd-08fa90db66d1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3d3318bf-b56d-41ad-b591-5780c271107b"
        },
        "item": {
          "id": "300824ca-b3fd-41e6-8568-39f3ee2254ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c1784ba3-6de8-48ea-a272-7542f8413fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403156e7-6bb3-410d-82ed-4be5ff9b0b74",
        "cursor": {
          "ref": "e0be744e-e716-4fa0-a321-7dd0650f0cb5",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7f22beb5-3f05-44a7-8cf3-101ab7eceb7e"
        },
        "item": {
          "id": "403156e7-6bb3-410d-82ed-4be5ff9b0b74",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "06a2faac-54bd-4b3e-9381-215464af84b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530a4946-8f97-423f-b779-849192135088",
        "cursor": {
          "ref": "d4ad4b8c-3adc-4ec8-883f-af8c037df036",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "867b393d-00a1-457e-b443-b540b670ef99"
        },
        "item": {
          "id": "530a4946-8f97-423f-b779-849192135088",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "075b9840-8286-4f99-be8c-8baf9d264ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ffe115-c8d4-4e34-98f3-e1c82842417e",
        "cursor": {
          "ref": "3210739e-ac55-4c3a-9590-5d9061efe824",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4744737d-937a-4d01-bdcc-9b6afaebe11a"
        },
        "item": {
          "id": "b0ffe115-c8d4-4e34-98f3-e1c82842417e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "37e3d5bc-11fe-4464-9eb2-2c391f51ba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4424840-7295-49be-b641-21adddd09a62",
        "cursor": {
          "ref": "fb84cbf0-0c29-4dce-a1c5-572acabf864f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "24030195-62e7-44b5-8d2d-201d76c94c8f"
        },
        "item": {
          "id": "e4424840-7295-49be-b641-21adddd09a62",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6cf4a47e-083f-4e91-a520-c3964d6e231b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d957d43-1893-4afa-b6f6-55c32e723cac",
        "cursor": {
          "ref": "3a2834bd-4e5f-41f3-9629-1021acf47e4c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "49b914bb-6aeb-4348-afae-f222c221028c"
        },
        "item": {
          "id": "6d957d43-1893-4afa-b6f6-55c32e723cac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "58a13240-87fe-4863-adc8-03e2d7976012",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "596f2453-62c7-4f39-af36-a49d3895b3ea",
        "cursor": {
          "ref": "60d89696-ea8d-404d-882f-15ac9d9e2a72",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2b6a1815-d6a0-4a20-a1f1-8c1977f88b77"
        },
        "item": {
          "id": "596f2453-62c7-4f39-af36-a49d3895b3ea",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c8dcd298-64b7-4f64-800e-5c15ffad8d00",
          "status": "OK",
          "code": 200,
          "responseTime": 5130,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb8e533-f262-4ee8-ab86-a40b4651dbb7",
        "cursor": {
          "ref": "faa5546d-4d62-4fce-bbaf-80aa6a846529",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9f68d52b-be5a-46fb-aefa-d95a9325a993"
        },
        "item": {
          "id": "4cb8e533-f262-4ee8-ab86-a40b4651dbb7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "550f470c-453a-4464-a54a-736a25c7a8f0",
          "status": "OK",
          "code": 200,
          "responseTime": 2952,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de1b6c4-c07b-4d5e-8e66-a38ff86cf8c1",
        "cursor": {
          "ref": "11fe31d5-e61c-49b6-b81e-f46e14d431da",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3450a340-a89f-481d-b3f7-987238cc2b97"
        },
        "item": {
          "id": "5de1b6c4-c07b-4d5e-8e66-a38ff86cf8c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2a251514-aa47-4536-ab70-fd273b8d5c1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de1b6c4-c07b-4d5e-8e66-a38ff86cf8c1",
        "cursor": {
          "ref": "11fe31d5-e61c-49b6-b81e-f46e14d431da",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3450a340-a89f-481d-b3f7-987238cc2b97"
        },
        "item": {
          "id": "5de1b6c4-c07b-4d5e-8e66-a38ff86cf8c1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2a251514-aa47-4536-ab70-fd273b8d5c1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef939609-0a7d-4747-a92a-0ed849f237ef",
        "cursor": {
          "ref": "5181cd82-a621-4a45-a156-164b97fe1b89",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b3d44e0f-2091-45c3-afcb-3beaa11d4750"
        },
        "item": {
          "id": "ef939609-0a7d-4747-a92a-0ed849f237ef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cba68844-ee83-475a-adab-7cc4f1519b1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74874cd-83da-41e6-88de-0d790076c018",
        "cursor": {
          "ref": "0b7213dd-7004-42d6-83a2-b72a7f9f5538",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9f42828d-6726-4175-af70-78b99818b9c0"
        },
        "item": {
          "id": "a74874cd-83da-41e6-88de-0d790076c018",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "051f0769-10fe-4d00-9526-8e3f4115ea0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}