{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0b10d154-5fef-415d-815d-09d0de9c2956",
        "name": "Clear Cache",
        "item": [
          {
            "id": "429e97d2-a557-4957-9e4a-fba4f15b7027",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88194413-f160-4730-8aae-4c3072ab2705",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "54b7cff5-f51b-4e2c-85df-6cb589eec5a7"
                }
              }
            ]
          },
          {
            "id": "b4444d64-f09e-42a6-8d1b-21221d83e20b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcd59f93-ed0a-4831-b029-41e8f35bde04",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9a065764-3c70-4910-9369-4917ade88e6e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e7bc4fe9-b2f9-4394-82fb-b942e704629b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ccbe5b8c-cf1a-4cc5-b920-51ac3231fafa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c739fc89-6726-4847-85d8-bedfc8e754b4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c374a55-deba-44fb-8de0-2a03d557fe2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77da0417-47b6-4472-935e-49a697dbbae4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76f3ae7d-d2bb-4e92-b221-711e43f3a2c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58765f49-15c6-4723-990a-27555aaedd82"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d52d19a3-438b-4679-a747-eb367b9ac548",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3191d99a-6ecc-4437-a0f5-e87014cb70bc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99a1d849-b138-4e7b-a360-c748a46e5af0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "819defdc-4366-4171-b151-70563adf6947"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e166f214-f340-43d1-84e6-50c1a71fadb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f062d730-8c15-4ea2-86cc-3a5e1aff5f2b"
            }
          }
        ]
      },
      {
        "id": "9600a2fa-5a44-4f63-869a-acda645b9f6b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "33b65c7a-4ced-40d0-8e78-36e6c66ff799",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65d45188-113b-4c15-bc88-d7b09c79f3a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a095ba95-e5ee-4f5c-8a7f-4d308da5fc59",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9753ed6-cb82-40fb-8d7d-f92a72862531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0a698a2-0087-43d8-97c8-fafe41f608a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a6b8a1-29c0-448c-8337-e17926a7349d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e34a6f9-f8b9-474a-8aa4-e54c6cffa725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "298b98fe-d6bc-45de-8ca4-78996dd3aaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8279a878-8faa-4f92-b3c6-09d098c992c0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e486fb29-072d-4043-be63-e2297e0bed86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da30794b-3061-41d4-b8dc-726e4ea9125b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc987c90-91b6-4e99-b373-798cac762e28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf30c835-251a-41c9-a8c2-93403cfe2e0f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7661637-d9a9-4d65-92bf-f83f2602d2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a8ba275-fe44-4206-a786-006c982d499d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a349e36-4b44-4e2b-81c8-facb1b07de08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29660483-08d3-4329-aaab-2e9b136fb764"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e16f642-056e-4887-8797-214ef43ece8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1939c02e-fd49-4e5b-852d-1daf2c4defe2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9a38a06-865a-47fb-8510-354b7e1c3560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "aad518e7-c3e1-466c-b7da-2383e5d17f3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7432a148-1e69-4d6e-afd7-7acab5a7ae05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "67be31d9-e5db-481c-97b2-fc1cbef527eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf76709f-6148-484c-be83-c23c0a1e52e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c714457f-075a-40fe-aab5-73707cab370c"
            }
          }
        ]
      },
      {
        "id": "a712fc96-b42c-43d6-8700-8a386d640f7f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d28cf733-3d68-4a21-8f77-4155a427dd29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "048124a3-97ec-49c1-8d3e-518cc753ddf2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "45f68380-e798-4005-8ad6-80e6853dedc1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81caff37-5fde-437e-aa81-1c902b8a2e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c55186-9337-4420-9b4b-f6f960eb9e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd724c4-2079-45be-a224-19a5448e4f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0da64d61-dbc1-42d8-87ec-4cc2558c86cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef9e604-deec-426d-ad02-6225dcbc702f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481c508b-35bc-4e68-a3d8-ed7ca1e86b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9724bd88-3f60-4318-878a-1a93ead1981b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95071358-231f-49a7-a344-cf10f0342960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "387a2c95-fa68-4d49-afe2-5544daeb7efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9ec0d0-d593-4995-ab58-9dc22c8d1746",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4644a75d-fe2e-4c51-950f-8260809de485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7289fb7-a6c2-484c-9eb2-e7b9ce420db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d886e3ef-a634-455f-9db2-4401179b5b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ec1dfc-7532-44fe-862b-594f9a08f199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846aec87-d067-400f-8f53-83cec545671e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04512928-131a-413a-a90f-29b6cceebc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32822df1-77ff-4a1f-a801-ed8a5bbaa602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8809a22-f72e-47ff-b3ca-082b11358c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21d257f9-52a4-4b59-a933-2ff8e33e3cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3312ca60-46ad-4cf0-9986-a7f7062228ec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57e53ca-cd26-4613-bae2-71eb1a3a5988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f63995f-a279-4be2-8fd6-97a9c6ccb433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e60f7-dbf6-42d4-93fe-c06b5afe9d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22952d11-b264-4d40-9cbc-d19f8a46f0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e6da2c-e0c9-4ccb-8653-75f8a2d0e8d3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc38a5c-080d-4f32-9cf0-5346a087a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb91e754-822c-4919-88b6-c733998098f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6956d9a-8d53-49bc-ae38-aa3c2e9c595a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f864681-366a-474c-aba4-907803f8ea65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b197663-0799-4b46-bf3f-ee4e5d5bec55",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577d458d-09b9-46a2-b7d6-7e4eb7f1ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6c3d86-49dd-4eec-86d9-66459d9018b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeba41a-0c60-4af4-a3fa-8cc74c1d9f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b91a01d4-306d-4ba8-b1ba-9070d3584553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3a186f-1906-417a-9000-a85e0c6af2e2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554fdb45-c411-4499-b00d-7b8577f80be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e182d565-3832-4d87-9ceb-95a1369f557b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b54f78-f6d2-42d4-a09c-729567d50592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "774ab4b0-9a57-46ce-8092-3733df3d165c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a7d7dc-be62-4975-8120-18671ae6eecc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b516402-8285-4122-8f33-1ceb93b596b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d25aa0-f355-4923-bae0-dbedddca8064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db09c2f-b8a7-4896-ba04-4780e00bf884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39a752ce-6e2d-42e8-b4ec-ce7e3903059b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37789db5-e1da-4f36-a180-1d9bda6b14de",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999f1f5a-0fde-4baa-8699-0ea911ef9ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab21200-b089-4dd5-9970-45d3c64423d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb9e2c3-f888-4dc8-ab32-f45e5fa23f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb9f4437-26a7-46e1-92b6-94990ab5b66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6212c46-24c3-442a-b9dd-09c02842ff3b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c12064f-93ce-4736-b4cb-a7f14f941a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf518b0-697f-4236-86f6-d8320775ee45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff22775-75db-408e-8a63-6c0714dcce81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69ca8260-ef27-43a2-bc1c-209881683902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816e9017-2752-4ac0-ae6f-95d8a30dea2a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbe642b-1b45-4a3a-8ff9-f2a58fea21a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d6a4d1-7072-4669-b4b7-82fb531e73d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35f0175-0eb8-4daf-adbf-9c612a8a24f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "002b1404-ddc4-4630-a601-afce290a1848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bbb231-8a40-412d-993f-bd20b0d7f1e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436e8c28-32c2-4187-9995-9726bc8f2941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40500463-d62f-4b6f-b075-1bb90b99ba9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f77d30-a197-43fb-8466-acdad5789495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4eaa3ebf-4db7-4b0d-96dd-e97230c51fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d022c633-0783-4765-96b5-14656e56bb8a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab65efa-fead-4298-af29-54ab1255813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "508c5889-1c94-4078-a7a1-4f249eb844dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1793c99-19ff-40b6-8dc4-297fd0a9714b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39572aec-cf57-4586-81d6-d993727a5b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb717aa-6f64-4c6d-a79c-5eb53edb71f4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78a9f6b-30a0-48cd-98d0-bea54b0965f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8756f1-f0a4-40eb-bb76-575ee63b95b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a2e257-0bfc-4ffe-a7d9-32c2957cfb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "990b9bf0-bd28-4ff4-94e3-1340c8409b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b66cdd3-4de0-43b1-80cd-bc7a106d9288",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc686289-8900-433a-a01a-c538f13b349d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfe425d-5b75-41ea-a3d4-73cdbf0cf584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1295110-cbda-488d-b38b-3ccba769740c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4dd3813-1ce9-49b3-aa8b-d343fca807c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3609959d-ccda-4177-bd0c-d06c588f08f4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f4e35a-bd61-4195-a06e-afc2926d3279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7385dd9a-33d8-44e6-bd8d-522dfa52b6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb6f516-361d-43ad-98e5-c1d0a5cb2458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3110d142-971c-46c8-8f9a-cfac6ffe40c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a88ee0-17e1-4ace-b825-05fd4092cc26",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77abd56-8cfa-44f9-a83b-ea5814bd74d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3313fe95-fbeb-4c8a-ba3b-964a8e88dd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632384ba-4687-4299-bdef-119df732cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d00380-7b97-42ee-a6fc-a668cc8a4e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad145580-a2f5-4d05-b48a-6dd8cf0245e5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551b3b3a-cbca-4fb4-85b2-a4fa87170293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966039de-99ed-4072-9e0e-5bfa574be6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bacc84-16c2-4553-a773-4d1a4a88c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbdac86-9e5c-486d-956d-35d89ee13ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bc6ad0-7bcb-467d-be70-0c51b44c8fc5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16af5ad-b939-45f9-8a80-107d72b69312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c42860-0640-4b61-b56b-335f2e3efbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aa699f-68bd-4ff3-933b-3f189a626d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca77b3f-802e-4a91-ae5c-6cef3302fb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bbd004-af4a-44dc-a1df-18400b0a5c63",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d98988-5a44-4384-a514-43fc3544aaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d71320c-e320-4ef7-822c-920d06463aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaaecb38-f2ba-4201-9e0b-f16da568237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c3cd8d-1aa0-4d62-b896-016acf54307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e65f02b-f4a5-4d70-a856-84dbf60c92c1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96df9cb0-d9d1-41af-bb5a-710f68a3d2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b95d666-34ac-4c53-a7b6-57709ca9f727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80206aa4-7bad-4600-8bc4-b76598605787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a562f82-8900-43df-bcc9-18cc5e13c0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98686104-7c03-4874-ab5d-290fafa256d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7736e13c-e06d-4ac8-96f7-5fba890430a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706abc8c-df20-441b-88c2-9bbb0e76eeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37860cd2-23bc-4bfd-b6c9-2c62fab08b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa786e9-a053-4eae-9c3b-59e99427da4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dd8bbc-b074-42bc-8e7b-129a10268c44",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83843c7c-9f80-4fd0-99b4-7ef86bafd9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a4ae5a-12ce-426f-9c8d-360884f54601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63274429-7207-4bc1-8863-1782ee6e471a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1a8834-adf3-4d1f-b68b-65f29faa9eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecfb83d-f493-47b4-b684-169bee7f4fff",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a58e65e-f472-4b84-8dac-06c0fd1fcacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db34b4b4-e510-495d-a06f-139d20ca1b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaff521a-e85a-4bf2-ad84-ee69e1a50d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "287f576d-bf7d-4661-b730-96770ff31993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee52d1d-f846-4fa3-9831-816be7833e0c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd206290-aa91-481e-939f-2a701f588cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac86105b-14a8-4ffb-b897-960b95d29fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24781e0-4027-4ebc-b258-88ee2ab4bad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b5bdf1-ac0b-4c3c-ad7f-5f9a644deaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f714cd-5c05-4364-b08b-b3c65a07396f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c2bc00-0725-406a-bfc7-eb00a1faab9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9724567-a893-4da3-bd3c-564927a64326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f166b9f-3fe2-460a-b10c-13d97441efaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2246a34e-8947-4243-9563-c0a337be9d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03836e9-b314-458d-b8de-35f95ed12f56",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9431c6-57ce-444a-9737-6dbcaa13dc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc22a96-9f87-4b78-a0af-88432e1e8c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8a2982-a23f-46f4-9e90-d4e2290f8eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23f6b71-41e4-4cfc-aaeb-f844d164b183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cec9996-9d21-4237-8a5c-3081945db898",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9855f568-0ace-4d20-b06e-938212420a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b701f015-1bbd-4259-bdc8-d04c9df6997f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eea48e3-bbb0-4001-ba12-6c2c0210febd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96212450-2115-41f1-8f4b-775a8fd8cc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dddfa96-73ea-44c6-8ebc-f9ae7e2fed97",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "017d6214-7f0e-4e45-a866-8d1efebe6f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0bd177d-a26f-46df-a891-97c497f46ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633d2866-fc4e-4c7d-9cbc-2b974b909527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "543ad4be-782a-4b85-a852-f23cc97b47ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f2bb62-a74b-4284-95d7-cff8bd62f87c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab65cab8-b815-4868-ba87-493c13cc03ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ae5544-f851-4e8b-a7a4-1b877de71cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5002e3fc-b445-48f9-a19a-82251824f0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d007b48c-9caf-467b-8328-f7920ae4c1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a26f59-bfdc-442f-99ea-e18a7f4ab675",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b299f85-1886-46e2-b7f0-1ad9f544e746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78459016-165f-4d57-837d-afbf8f6b77b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fd7309-543a-4085-9663-b1dd887ca2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cdd48a-9081-4ee9-9396-986561b8e91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17caa71f-340a-4d5a-8751-8d4a22ee3d9c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53539dd2-8134-4061-a535-68c135230f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb3ca5a-65c1-4325-9c97-2bd693c8907d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846ac37b-5824-454d-ad8c-c5fca996e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4662c95-e39a-482d-ad5c-37a45d592283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3c7d16-03de-4de0-83a5-9528d91af247",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ef4a0b-980d-4a8c-9464-3afe07187d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda214c5-dc29-4af2-aaa1-ed7ba81ed7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3df99b-954f-4003-b796-046aa0a6234e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d221ff2f-20d9-4204-ab91-62c6c6b3c3c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9acb22b-9579-4e56-a431-12a3b0ecb7e5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9690dbb6-55c4-4aa9-96b8-ba729d621cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ec4d31-ee43-47e6-a347-455029779dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ba5256-f881-45dc-bd07-86190630ea2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbfe4f7-ffd2-4366-9dbc-759eee7bbc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e621613-bd8b-4dd8-9282-ee9eeb61d399",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370b0ae9-2e26-4473-88a1-bc7cfaab5ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c889b214-4b6c-4d8a-b066-942b41ec5991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1aedeb-aafa-4947-b1f6-38dc2e92c169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3de6e5-6bd5-485f-845d-fa802d911696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ddf7d9-02ea-412f-9ad4-8337451c78f3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cca9eb-c147-48e6-b476-544e37b4085a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3026103d-f541-4952-973a-589b7ea8623d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9579f29e-498e-4a83-8b64-58cf64e270a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b184975-b423-42b4-8a25-ee767c609d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dee5ef-b200-4247-a35f-7e1b905dc818",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31674b43-2049-4e5c-9d05-bb9b73388c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d971541-e369-4711-9338-7cad7d03719c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45038bed-0066-4ff5-9ae3-02f2429f4a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4f51c9-e8bb-4538-9101-f74d8cb07530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc43767f-9bc9-474f-8ed6-19d39779bf60",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5524f2f1-7db3-4eef-957f-d8ff8910ad82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9380747-8bf2-43df-a842-b4385a652a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80af5ec2-7703-4570-bce1-2bb992052ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3da98ad8-a679-4c6b-8bbe-3426fcef133c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0caae6-f4f6-4df8-bfd8-ea4cee13bf21",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d101f1d5-5f95-4038-8111-8c1d97443d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e7d1de-6623-4ed6-b308-5d02f0c5d30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca22c7b-b8ad-4d12-8b30-4fc10e998ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "24dbf2c6-6c63-4de3-ada5-8d63accd85f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fc1722-3162-45a4-9d7e-bc9a2fadacb6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800f0e52-ec16-47b2-83f8-d2c3102d3173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c9ae75-fa2f-4a66-b0af-17bf73dcb418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7459862-f0f4-4167-9d4d-942ee6d777a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43d7c2e-f032-44a4-b30b-075818e764b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa52d7d-1414-466b-be05-1252d2596412",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bef3be-6e7b-4f1c-a0f5-57687589fafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c03fc7-c808-4c0e-bb32-c836aca52454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b7d9ce-9c0f-4178-a955-3a6dbab52047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "dae4d151-8604-44c7-9893-1ce5774c9659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88a3ab0-eb95-4864-9d66-3b7fc2f74bc7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a5e4b7-382e-48c3-b73a-f59df4b16ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6c5629-d84a-47e8-80db-155925fa6a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1057a268-f5df-40d9-ae4b-7e683ffe8bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "83189628-de12-420e-9748-4fae1ddf5aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ccc28d-97e7-4f32-8672-815f98d3be14",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6e6eca-b357-4ec6-9aff-2459c13ca2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7146e49c-efec-4353-ad48-4f16e37cf677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268bc728-f7e9-4d8e-8dba-0ca9762fec6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9fa12c-c470-4684-b855-ab3e06e5590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d0599d-8bc3-4f69-9ea7-bf620e4dfa42",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3957ff27-95f4-4d63-aa78-00f4eacf0cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9941b49-8cf3-4421-bdeb-23ec26a5885e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecce8925-7f2c-4174-98ae-5227f1db5ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b96a62a5-25b7-443e-8a2c-e1335e962554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc50ee00-4138-4d9d-a9a9-3108f61ca413",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447df1d6-9dfe-48b0-ab4b-8aafa900fdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7984d29-0723-4ef3-b7a6-9a8f9ca36aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0a8547-e7aa-4ee6-adc2-c47dbdc9d084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1743036b-1684-45a3-b817-1580ea69873e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9d3e5a-8afa-4434-9877-a4caf33b0f28",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a25477-93d2-4536-b5c8-4f29ff0201d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae1ba8b-483a-4d78-8b92-c05f25ab9a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc8a364-2395-4c38-8988-2b546ec9551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fb854d-ffcf-40d3-a1ac-3d3406dd1337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7adbce-b40b-41ef-8cda-6ff9fd052166",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd476e5-8fc5-46ed-bd33-0138c454ca57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1911c92d-fed6-488f-af5d-0fecb4e2a089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c45f2e6-0308-48da-b9bd-1ff2af6759e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6afe1172-6d86-4943-92c1-48095bbf0820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a195cdf9-319e-4a80-8af9-4e274cb90ec6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87da3f1-b0c5-469e-86ba-e8f53d5aad64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9207b9d-c218-4bd5-a860-51b153a3ca07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c617cf-1c4e-4608-883b-7305467f062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "727f4597-e9bf-4b82-87cb-5e7eb55a3d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452ed26a-a548-47c4-84d3-daa907f55740",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296ce43e-61fe-4883-a3e9-706131102594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083ca461-3038-433c-984a-717100c31425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44967389-0491-4708-824d-d679cbed3522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d79efa-026d-4c42-a9ce-72e647f1c3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84fefd2-35dc-49e0-97f4-de957700b6f5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2bfc07-ec4a-444e-934c-7d40891a3479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9e21a5-9b07-4eb7-bc28-b4410bbc0ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd8e9cc-8a52-4b8b-a4cd-bbbc716a5d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe864d7a-f13f-4fab-b508-613ca5020cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5ffd14-b8f2-41fc-a89e-0a25fdbd1b3d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "567a5d74-4ea4-49ae-9cdd-a4aea3d2590e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11d1ec1-8338-46b3-aed9-cf077edd1891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f64b439-cab7-4b17-805b-98c0c424251f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbaf3adf-06d4-47e9-a0d6-3f129a804dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f512584-218d-4043-b6a5-259b19f6234f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1b1b2a-3a5b-4093-b336-f24e61905f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5606fa-cc9a-4c7d-bafd-165a89dc6565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2fad53-4099-46e4-9e10-782b2010dc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "285620bb-1aeb-4a46-a9cf-7cbd4f8c387f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52daa8cf-e601-4007-8241-f00f88db9ab4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5699b6b1-1222-461d-8085-b106192f4c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e676e95-d801-4a38-be73-56e2071799cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49129c90-936c-4024-a9af-29b1939ba0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63672f6-e8a0-4ae2-be7f-bac2f681cdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d58b2-09dc-4b92-b731-4218faba5185",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5a3d97-132e-4627-8b17-019cc67347a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc5a8cd-0849-4b29-8b94-9646ce19d45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f45a7ba-a66b-4a21-a336-d336f4140974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "835d6752-1d58-46fb-ad81-7545693042cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b1f90b-7a0a-43ec-8f25-140b1aa1f1b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfb5ee2-6551-4c4b-b3c8-b480794e468b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd57fa25-4efd-48fc-bdaa-213ec95ed856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965e1469-15e5-4823-b570-a21e9e6a5d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f62849e4-4d66-41cb-873a-26160b4b3b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125c57fe-07db-46f1-aafb-d930d020dcfb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c6d2be-b70b-43be-8c67-5f2371a65bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e26a87-8741-435e-8a4c-27e637ef3486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a407c6-b2fd-4dfb-bdfe-8e574d90063c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b9c21c-7a5c-4357-b9f7-2efe698de95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d507b44a-1557-4096-9977-7ca8f6de0b54",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46224764-a6fd-4b83-a3b7-984d3153c17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53655331-207c-4e70-890a-217303118312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b221968b-76da-4759-b69d-9aa327b7ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9c04f9-31e2-461d-9551-3479f04b94e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c644ba83-defc-414e-bb8d-7b9251f145a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3182734b-0aba-49da-8ab6-e6331a34a5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0ff0b6-e986-4a2d-aedb-096d8c17af72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cbd26d-515a-44e0-b892-c6a4a44f3496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "696ad62d-4a3f-4c65-9e2a-3763f927d0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b08508-175f-497a-bb13-3f59e017c957",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf967245-e93d-4a2c-bb0a-ee2715101611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35e8e60-3ac5-44f2-990e-968efe9f6fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc55650-5cfc-4605-b31d-700a73d49462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f61c3958-e141-4c18-949a-42e503c80d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5203be66-ef8d-4762-b528-43b0c2c2aa6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d502b2bd-cdcd-4819-bbb9-942a8f45f8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3472408-92ba-458f-8388-6bf13dec69ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c514f1db-08e2-4b04-be82-d5b638b8fa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9eb008-754e-48b2-9d98-09092cbd09ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048fdffc-65fb-40d9-b4c8-dc0ebc3fec9f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a09b13-cb21-4d30-a598-1a081ee477ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e85b67-98c7-4168-bf68-3b5246393f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444379ab-f013-4d1a-91e6-1aa96577b1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "586e5329-8005-4976-8ab3-e9ac9022d4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569b76d4-e586-4557-afa2-bf32923e304d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3817b20-9e9b-420b-b439-3e13c8c81359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8328ce2-21cb-4599-bb82-bf0c5cacc671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa49267-0b96-489e-acac-952d95830fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c28ae46c-2678-4664-8673-efeffe525e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32f9f09-5c0c-431a-bd89-d901ab536df0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90569b44-ea00-416b-aff4-cfd44de9d612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3d83fa-a6c5-4671-a84e-af31c29f4f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2da8ee-37bc-4fe1-bed5-4c62343cdf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8760d6a-ec87-492f-86b9-9ad1813db9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc863b3-5e2b-4290-bc42-b874d166ba12",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1e4bc0-585a-4986-bad0-c9716c0cc22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313d1eed-1dd6-49e2-a66b-4db22f5189c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df172e07-0c6c-4aa9-b256-d647c6103be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62e92f2-5531-41c6-8255-f2b8352f834c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314dc6a7-ec66-4d53-84d0-80aa5313020e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31b10c2-626f-48c0-9925-7344af921540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399b9dd2-f6e6-4cfc-85cd-7fef1da72439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e8ad10-6339-4541-9f04-5defa67281d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c52e70-54f6-450e-8d06-19e945027c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a32282-a1f8-4b08-b361-e4c3a92b699b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d955f1-7373-49ff-984a-56ecebb24e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a2473d-d6cd-455d-b759-2d1ee01bf733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb2ef65-388e-4f52-bb82-ce27d60bf13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71e6bf19-f186-4948-b73f-c81d06dc470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a53dec-25b6-4ae3-9002-fe947f465efc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cba934d-3b92-4e11-8261-b95906141c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd2fb9d-6bbe-4099-880b-4c07c6a29a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78407d08-3acf-4dcf-9c19-eb7c58b8e98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f337b1d8-2f3c-4e8f-a9ac-ed0dc188b2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be35d2fe-2363-47ee-9b7d-8361d310821c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825bf30e-e0de-4831-b280-c7a9df6e5bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8ff5ed-b543-4e52-8349-9cbc063b10ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f879599-8447-4757-9007-6508df09bce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cd23f5-e18f-4554-b13c-45ef7d01ab0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f996cd39-eba0-49f1-9be0-8077fe7fac06",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03185300-f74f-47a0-8198-34ac1f29f205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3551a48f-6e9c-409d-82fa-81222f56e720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004b71c6-89db-4130-a42f-4aea6f5df295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6033e6c6-7341-4a9b-913a-3a37e44b2edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72bf98b-3e82-414c-859d-abae243795dc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ca8c5e-4353-4b87-aaac-1b951f5a0568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecf9f27-4a55-4d6e-a583-8f0276ffe5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcbd17e-1fa0-437d-9269-31271fa6071d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd27a071-57ca-42d9-973c-c74cc45d9962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412ec191-3a15-46e5-a52b-376d1eaaf644",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09361ba2-2868-451c-962d-814d33aef1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65e2b4c-4e95-4198-b700-23bd6518995a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fd0046-dd84-4f2f-81fa-6c80cd42c086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41b723a4-0d29-4513-8202-4732fc971fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48c023f-0d9c-412c-b3a5-a911fa3e7bec",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e4a80d-5e3e-46b2-b1bb-d48de85f4af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b1369e-cd9c-4f15-bd84-5b3e822c7375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d671cd-c6e9-4ecd-84b0-ff84890d1cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1abea3-46bd-4702-97a9-a1e3c13c8a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8154643c-cd46-4b94-a372-737946a92870",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de4f585-195a-41ef-b2dd-b67cb7405951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f298dbce-4428-4940-b26c-0fd4c030d7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58df46cc-99bf-4a31-a1cd-482790524d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03fce0cd-d886-44c3-b01c-7db52db2905f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53a21ce-3b82-49bb-b970-cdbd3bf08dfe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76c1472-8984-44f9-8e1b-b088a53bfa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef5c80f-2331-44e6-816b-e2f310d7bec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81110660-b4a1-4b2f-91db-e902492bd0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "049595c1-16d8-4511-a1d0-bb16423c7f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239e5986-2c70-4d5b-a0ee-6b622a198f86",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d48b2dc-0579-4982-bf2d-73472b315d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecc5b6b-66a2-49b2-a0b1-b6ec8bf3d069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835f5426-3670-494f-8f5a-b33504f27fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c40dc9-a163-49d8-aea8-8c9994d7f180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b062dc14-c40f-4bdb-8428-35cf32cec453",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303398b5-a769-4995-a742-79c856821663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af14026d-7cf8-45c8-b9a5-80630251fa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caa7b88-b425-418b-8311-dd6d7aa748ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0d7534-f868-4160-b6d6-929205bb45a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da61b2e-74dc-4feb-9d2f-00d740a45999",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a5bc96-e8e7-49d1-bbb7-489f244ec39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de289b58-7c8f-453d-92bf-63e5243ce8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a863f83-69fd-4ba8-99fd-c944d40833f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be81dd4a-b2fd-45ad-9118-667c25833bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b4380d-27d4-4f47-8381-656b16499ce6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3035df77-bfcb-4421-b35e-27a4cd57ffd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecb2f78-0bb9-41d0-ad0e-35d2034c19a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e800319b-1c29-4ed7-8248-14f8fbf0acad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8081571-8324-4af6-af0d-5709b5378be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d405b96d-8f88-4f14-a6ad-f088ac61dc72",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0596f5de-f1c3-4561-b3f5-5955b907618b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb92d74-3d68-4337-a2ed-ea4d4aff31d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a60257-a2da-4661-9ad0-84d92474e939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d23cde-b115-4eef-9294-b7ae58970f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92b2a17-b31b-4af8-9bbc-0fe62c7ca6ac",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf679610-9570-4c48-8d7a-cde3379adbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b829fc4a-6803-42f2-b1ee-3a85923b035e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5f96de-dc45-4afe-8bf4-0977948cb8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7d2e0c-250f-4a84-9554-2c0cb5cf1c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01413757-50d2-4bd7-96f0-2f86cc51eada",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cce30f-7c0a-402c-a0e3-47e283d33a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f78fe29-8f81-4fdc-92b9-aada76d8d27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8e9ed2-5fe9-4614-9196-86699d18d6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94999414-8d55-4ac9-a8c0-4b9b59fd7666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b88b5f1-8318-4d67-b2b6-10ac94d0dc32",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf40cc3-129b-491c-b735-57b62e953aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0350538-8ee8-4f32-b2fe-7c2fb3d89c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbc8152-65e0-42b6-8971-e6ae670fdd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a234a16-709b-4621-91f6-54be5c09585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc29548d-5713-4432-8189-b93ed41d7bd7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04befcf-a7a2-46e1-8536-a2b3431f72c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230df912-0cd3-41f7-9b22-a2b449ba41fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ab85f0-41d8-4546-b82d-ecccfe748fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f809a9-94d8-482b-9369-eee322362e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86ed1b7-296b-447f-9035-f7a7d626441c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f45bc9-bdb0-4c5c-b74a-4df41da97c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de5ec8b-8c3f-4b8e-97e5-e90dc626d545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d81a12-ef88-4b96-a5d7-5113e80ef9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab53c02-f203-4e87-be66-20d3db9f46b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3564a22-f86e-43e8-bce5-a84b18552a21",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f488aa0e-2cfd-4dc5-a158-689a0e263c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf3dfb6-401e-4ab2-9a4c-ff7ecaab864f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dc4170-ee47-4056-8fd9-e36824420771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60ea327a-146b-4f87-ba2b-de97356306fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0283efd-2ce6-4d0a-8458-c68c961ce22e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c93c0b6-2b16-4534-a248-256d5754a4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904d313f-2b8d-4937-b60a-4274ed3daaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d44318-4ce5-4676-b9f3-87b0e66514d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3a9000-1727-45f8-bff2-c86122e074ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0905d367-64ff-4067-ae09-dd811b9ad7c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfb6254-668b-4c4c-9f5f-e23e47bf9e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4398d8c3-48cf-46e5-a75f-4bc58abcbc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5fc722-399a-40ee-9c65-90325bced51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00ddddb3-c95f-463e-ba0a-28cfaf3038d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d08d68b-caaf-4394-a03f-b350cb7aafd3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab57a912-e174-47f6-b255-af3273c5ef5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f611d03-3286-4928-a938-563e159ca75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd6fe5f-6f26-4b2b-9a56-90f48ea16e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "946b460b-332a-46c3-b7e2-74d10f2794d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eaa8d4-9f44-4490-9149-fe702bd8ab49",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9f7e8f-7e68-4975-bd9d-dfd4dfcc0747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1909996f-7fdb-434f-92cc-c380de2c8b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4da3c1f-3240-46d7-aab0-c0f34bce1ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5458b3-6f2a-460d-a7b1-43fadd0668d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a224fe69-fb05-4d1c-8ab9-404016b940b9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6fb3df-e7eb-4fcf-a350-57ac5237c23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86c46d6-ba3f-4cb1-8be9-08bb65c90593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54328bbe-9e00-4922-be23-6ecba8e9040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "230a544b-0088-4a9d-baab-dcd6779c0e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52abdd1-7bc6-43ca-80dc-de1b70d1f5b0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a849baba-8f15-4d4f-8e1f-0f227a403ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "424a2c9a-5dbb-4f07-a956-0e9a0475f8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eef518-4023-4994-9a20-840fc80b4c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "969c8c4a-4e53-4a05-a774-3f6ed4bfb275"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "260c6007-dbee-43d4-a092-f8081a8a3623",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92395458-c8d8-46fd-a6d7-327be0114e1e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfee38e6-2084-4aa7-bf85-e068821d5cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "612ce118-ab27-4e1a-83d3-f465f97af0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd3b803-bd32-4802-ba5b-71a046f908f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53862ea4-8694-4536-b731-84c4ab010b22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c510e92d-1e3f-48c0-a571-3345eb62526c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "826fc92b-1113-4da9-acb2-ca93a595dfb1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec75ffe5-4f2e-4d66-80a0-29d3bb45c311",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05dddb22-963c-48c1-ac5f-4b5edfd738b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "298548c8-1f73-492a-a403-caa09e18c583",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc67c711-50c1-42e5-9131-a95990be315b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96a5d268-2480-4185-b4ef-89c3d02f81fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f079f765-b12d-466e-a4df-c38de66b6102"
                }
              }
            ]
          },
          {
            "id": "5b7dfdb5-7907-4972-aa73-c135bb7cfef2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7029963-a087-4d9b-8d72-bbc571ec70e4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7a3add39-50c6-41fe-9424-b120846625df",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7574776-c825-413e-a11d-7a127cdc2fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3b4ddffc-9a13-44a4-b0d3-a4792f982997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1a5088-c1e4-4eb4-bec1-517293c8d753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6120b53-87e2-4038-b3c8-8f3f8f033a3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce345abb-5b6a-45bd-a447-834e40f3015b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30ecccf4-d15b-4962-8f22-53950b17f2bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8da2ec7-4d87-4aad-a5fc-dfa162c6452c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bb424ee-09bd-4aca-9cb8-96928b2553c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ef88c90-17a5-44b7-be93-4c62b9b07425"
                    }
                  }
                ]
              },
              {
                "id": "b73051f9-0228-41e2-a7dc-3404661765bd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "078c3d24-0674-45d7-ad78-0aff2ff5d5de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "658efc3d-b323-45b6-8e83-2b6920b70741"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fbedb71-7dfe-4315-889e-b30171fdc796",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84e7cf8f-ea7e-4881-b2e5-93748470d5ab"
                    }
                  }
                ]
              },
              {
                "id": "7c8d0b5d-0d8a-43b5-9492-76a8e1d97cfe",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f39fa82d-ded5-4ec6-a79c-82900c4a79ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27f3cd60-6efe-4ce4-8588-61bfe199e2d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9e435bd-e73f-441a-932a-339ad32a0aff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "303dc2d5-e9f3-41c8-9860-ae6b44d11489"
                    }
                  }
                ]
              },
              {
                "id": "1721bde4-fcee-4a14-adbf-7e1560450cce",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a43adb-7d50-4a03-b14a-77d80ba977dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ee929cf-0852-436d-87b7-2ae192f20df5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6afb28be-49a4-4bad-a704-cd7aad7000f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0195e438-f768-484e-8b0d-8d54096318ba"
                    }
                  }
                ]
              },
              {
                "id": "7789a7be-59f7-45e0-9218-d820aa95078d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "badecaba-a28b-444b-a911-11a94507b854",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8018da2d-01c2-472a-82ff-d241929345e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b6690d3-32ca-4705-911e-c38eb462a2c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d3a746c0-1cc8-44fc-a303-d13033061806"
                    }
                  }
                ]
              },
              {
                "id": "8b1ddec1-98b1-4406-8a71-0df831c69aaa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b266c31-fb84-464a-8c6c-791c01be68ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50d8a6fc-b71c-4d18-a674-38ae11440a55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20002917-68e0-498b-b713-e69687804ee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2946a30c-3400-437f-b8aa-1e780b098aaf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c027465-6666-48bd-b020-7f05c2d54632",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5298561-0494-481f-af36-6bea016209c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e11340eb-224a-409b-bc9f-9249994224ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "996fcb8f-924d-4b57-a379-41a8d73578ab"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c982d357-ec99-4e14-8ac7-8f9eaf00cf66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c15fc238-9735-44a2-b2ab-c8c627fd8e36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd93a6f9-b9ad-472d-b7e9-a777f3eb2296",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fafe393-c41e-44a0-aa64-2877fda2312b"
            }
          }
        ]
      },
      {
        "id": "5d55bcea-4231-4f56-bd93-0dae8a7a974f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "920927e4-dc32-4826-b61a-a360c5db24e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3ca7ea3-5a71-49cf-8d51-b7345969d26a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba1751fd-79ed-48c9-8c2b-37a4c35c663f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c2a7fc-31dd-4088-9473-e74a730c7cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5542c3fb-1a78-49fd-8cd1-b3d61215a859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5c178d-808d-4e87-af92-e709b51659ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbdfaa66-d8da-4ff1-a226-7f30b696e601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42d5e7a-22de-4440-9fb8-be516eb73ecb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da47449-6e2a-4e22-8fc3-c768a91e1f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e139b689-ad32-4a6e-8602-16a4522e2127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e683026f-a9ca-4c81-896b-62e0ded19b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82aac89f-660a-4f5f-bb50-685762e738f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda5cbd1-e96b-497f-86f2-fabc4a647825",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b08d8e-f372-46ee-81c5-e66885c51a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7253ea4-cf2f-4d97-8903-4e2dd166c821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8c8b84-312d-46a0-819f-3e78e2b907bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb38ca0-45aa-4529-a26f-fbc82c2da488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03502ca-ea0d-49a5-b7c9-8749c11a53ff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4bc0da-6587-49a0-b5c0-419b4b9b4584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56a89c6-8d0f-418e-bb73-353e91d30b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da9c47a-c988-43ee-b709-7ac13a8da201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e512df-423d-41ac-8356-f0c0c5533e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9b5457-0eda-4813-989a-9560709a2ca1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbc8e44-ad22-4c8d-9dc5-2e3d570c1113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c1802c-fe0d-4852-a984-39260eb7483f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a421981f-2ba1-4135-b0e0-1da3172010a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe65fb2-2e11-4b5e-a7e7-0f0ab640e80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71b7ee4-fba9-4798-8387-eb0084f5582d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c95783-3ddd-4e3a-ba82-635f5b97b601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6294ae-9e18-48e5-978a-05f91d7c001f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934d5ab0-5dee-4c45-8aa7-3321d8b3a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b26dc9a4-739f-4817-a149-a8a138e6019e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e99ad47-b6fc-439e-852a-e4ac2d4fe618",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a17b6f1-e447-4683-ac6b-24d0b2782b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e96852-8fd9-43e6-a9de-c7bac3e823e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d348f65a-c2ce-4bd9-949e-e652cf98ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f22ded-66d7-4cbb-b29e-f5b11e95dd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635f0299-cf80-41e7-82e1-5c83829e6612",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25045c4a-34ef-422e-ab88-62fee9c01dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d175499-8efd-4082-9ce4-ee21867dcc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319de594-3ecd-49ad-9dd2-14510ebd9e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a721cc-fb30-416c-84f3-185d9e4a6763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f0550d-ae76-4812-b836-813726ba4749",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc2f838-1069-4e41-8e0d-ec95b7a87efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f7cbc8-567c-4171-81b6-49e50f90057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf382c75-3065-4525-80eb-6c00062d484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a34bc1-dbe8-4bc1-91ea-66950974ad7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1415f507-2226-4f15-b5c7-6e0b56ad6269",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f715924-264d-424f-8f6e-e33349885e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6336df02-b9c9-4f43-bbc5-2bdfc3c4cfb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cedd8d-5465-4330-b6e4-84d139604d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "005c9cc4-e5c5-4f47-a2d4-c1e62ede376a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699480bf-d712-4c03-b2db-a8f0f755aba6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0254873f-c0fc-4edc-9656-41bd95bba53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9daa16f-d391-4905-a0a7-c11a599e36ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4228c647-4202-45d6-9169-8b0592eead24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "757afc0c-d066-4f8b-a20e-c0ed83a73cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca851b0-2791-40b6-b03c-520d075b03b4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8525e9-73cd-49d9-a5d8-cf002fe006c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4550a25-9311-401e-b326-e5ce8e9532a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2132e6d-ffa6-44b8-a79c-f9abb6a5f62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9437afbb-138a-47a5-8097-c7fc79434fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b3df94-87d2-4f1d-8e2e-b25098720e37",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba0a8cd-e9d5-42c8-9081-1e506d45b1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c516f4-9198-43bd-ba04-b532e08d88a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ee662b-723a-47a4-802a-20c94a24d06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "502e7dc6-aed5-46cc-97b0-16900c75e56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71008b0d-eabc-4b74-b6d7-252beca205ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d61174a-7ef1-4cd8-aacf-a60745b6d983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdabefd1-a0b1-4120-8519-573939408cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef51c20-6c31-47d7-8e04-4cd7434c8376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c368bde5-c5d3-4221-a78f-9f6b9b0db869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94bf775-b812-47ee-85ec-4a89ec3cf6ca",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaf84be-caa4-4052-99f0-a76092f0b740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f96b397-1147-4758-b699-b4c79758004a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc65c2d-0ac8-41ac-bcf8-3ecc23a1bb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc9ae6d-666c-4fd8-828e-3ccd83b589f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41e7c2-9edc-4275-a197-e4d7963cd900",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e097a1-378e-42e5-befd-0020092007a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43540947-f9ee-4847-8b68-03fd07bdc988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accef20c-a275-4abf-a09c-1dd670aa67fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8f5c6b-fcbd-4dc0-80f7-709374278dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd311f85-a495-4047-a318-eb0bf3e23051",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c9ee58-53d3-4038-b081-79ae3729fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed85350-39dc-4468-bd50-d9b300ab9fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82525ca-fc18-4ed7-8865-85f3edbfafad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "59dc7c54-53a0-4e74-8e58-7dd315087f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51838a2c-47ba-41ff-99fc-19fe613f4c8a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fde8ad1-3616-41c5-9d9e-23561cfc2e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85ea5aa-8af9-4391-b45b-5118ddc0c377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18b92e3-81fb-44d0-8d00-c485720a7b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e109d778-3c2a-4339-bbda-35ca1a551312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd79395a-5692-426e-a287-a667ea7c16ec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e5ef9c-74e3-43a7-a463-79216050236d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d049f5c-0be2-4f10-8711-d179f622d925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e550ce-3c3c-4b9f-a8e0-b672c75ce9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a7697e-9456-47f9-9317-a0c52d2a8f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eb1073-e168-4661-a4cd-c65314f91289",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f0840c-a68b-43fa-9343-edf1435e25f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37987ac-a2d6-45b8-a913-39841247caa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaa02b4-ebe2-4944-a8ff-df658762ea4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc8e358-00b4-4d7a-bac5-7e66c10538e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3834a92b-fa84-4e3d-beb9-c67281478097",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76421973-c93a-4ae2-a655-218eebda9d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ad9d31-bb3d-437a-86b4-8513b647ef05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9784095b-f155-407b-b500-6c581f172f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368eaf7e-e8ae-4dff-8e10-66f425ef682a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0d4fd3-e1c3-4f5b-a013-d4e69100fabf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe7119c-6e09-4a6f-a746-315d0f5e2ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a7f5ec-1a70-4148-90db-f803a8a65b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f5b724-aac1-4d29-9398-e932fa2e5b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcb5d1f-a01f-4d05-8bdc-74a7b07f1b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfabc95-5a15-479f-8392-24825a79d57e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c52acc-c29d-4f29-add5-5f5d41d094f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e781b0-221e-49c7-bac3-020b06589481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e77d117-dc39-4173-b8b3-04c51bb571ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f8f417-0ea6-462c-9f56-481108774628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbeae8f-94bb-401d-8dfe-2247504597c8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1303f132-c655-4a05-972f-6823369154b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17ea672-e1ee-4dd7-aeee-40f7e05f6e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dbc069-32a2-4677-9ee6-c7f705a41a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "481f61b9-dac8-440f-9f8c-2fca8461cdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac415515-c5b5-4dc8-8fd3-0df71ee84e5f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9752714-10e1-4a5e-833e-e6d45a83bd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9d36d8-89fb-4839-aa7d-6234c8119a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416196f1-f692-44fb-92da-05a890dbcdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d5c55c-eb4c-4479-bde9-f0968f068bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e45b68a-0615-4502-b7ac-989bfd388566",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992161fe-2062-41a0-b360-3ff4332094f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526797d4-7e6e-4eef-b0cd-8f645d7650a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5c784b-6865-4a93-9dc5-c58360210106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8632ad9c-2549-41e4-a86b-16edd7ebd9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1843e8be-5f54-48e0-bcec-42e2658a37c8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ba0dd3-8153-4b0a-a632-19ce3dffa6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b752b7f6-e136-46fe-9bcd-336dea4f7837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06376e13-7653-4ed1-ab28-1bb92fa44f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbcc9670-3a22-4e2f-b4b6-cb056c93ff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8b5c4b-1257-4635-ab59-d8304920ad45",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d544019c-ce94-45a6-8842-0c69e93a9ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f6866f-c149-4bae-aa29-cfa03488e81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239253dd-2621-454c-b67a-c9919f153bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "527351e7-2351-438d-a4a1-1d31640dfa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec52fe8-ff41-44c6-877d-f6877480bc38",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835cfc3d-3eb1-4858-8678-4d5b024160cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22c3913-94aa-4911-8a42-30e259424f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7f4155-c911-4c73-81c6-a83704a0bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5938d3e9-2125-43e5-b111-475262fa9a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6976fcec-e32c-483d-9b71-15174ec36aec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af80fce2-022f-411e-9d96-b63bcbd17799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b27ad4-d167-4dde-af02-2c32537e162e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a9af82-79a2-40b1-ab3f-e61799e9ec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01436e48-ec6b-430c-bb11-8bd5b3fd0943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08eeed33-fa04-478d-a951-7223f94179ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06a00a6-ac17-48d3-b654-1bdf25d6ca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5ca07c-6b97-401f-a1bb-0bda16d5e84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adae305-cfeb-44a2-b296-07ffca39bc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ffcf75-f380-4489-95fe-ff629bd760df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a195a5ef-bc95-48f0-9845-b511eda04b03",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ccbb42-86db-4643-96c9-5cdf781a1424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a34f17-b3e6-425f-a36c-58dd5e4af771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ae3922-8298-4843-8e9e-390fb5177e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3917b653-2ed2-4632-9e93-bee3383ca78e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "023e70a7-7e18-4eff-962b-6265da9ecae1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4afdff0a-55d6-478a-a440-b1803fac2a5b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe708c7-2735-4214-b314-79e8068533bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f20dd1ab-eaff-4e4c-8c48-b02ec03fc438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126cba91-d08e-4d2c-89c2-162a42481808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cbc9567-dd49-42ba-acd1-23be9a5adc26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0eeaa17-56a0-4b9e-aaa2-6bb60b400aef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a8021dd-afc8-42e7-81ae-09eabe73bc83"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e019a75b-050e-4545-a2de-39f6c6abe669",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bbdea2c-e98a-4811-8d25-df7efcf9d446"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd6e8eb7-ccb1-4fc2-bbc6-7297e75a67c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e90ac660-cc13-4621-8669-2c72c725967c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e32cce3-8185-43d9-8fc5-fdfe808b1292",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c1395df-12a0-4ce1-839a-2b0f092410b7"
            }
          }
        ]
      },
      {
        "id": "ad568cfd-8a8c-454f-979e-7ed54e61c728",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ff4b1dbf-b44f-4946-af4c-66e1a1f349d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a889c89f-20a3-476a-bf01-b2782c9a6c20",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "328af847-ef83-4885-a6b9-d0f8804843e0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3484ddbe-b835-4252-b1e6-d514f5f583d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657a4d0a-c4d8-4f3e-b65b-ca192fa63165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c9391d-cf27-4d4c-9a84-5f78943a354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6f5843-4491-402e-a946-fea103748702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa813101-4b50-48b3-ae21-832b6419afa1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70a376a-a12c-463b-ba31-0ad16bf47bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dc479a-619a-4d9c-80da-74992364ef4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545c4ff1-899b-44d3-bd36-c7863a5e8ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3694a78-e0bd-4d38-9778-8a7b6df6749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448e86db-bbbf-4010-983a-15308aa6766f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b082115-7c68-4071-89ab-7eeb25ac2fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1435f44a-6876-4618-b211-c684e88b2aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b441a08-87eb-4478-9929-53305d58f385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0319e79c-3c9d-4c94-b9d7-edb13acee860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9a5ad7-9861-424c-9252-b4eac6926faf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd201fd-eae1-4cb2-b48c-e91ea5bd5784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a449720-96a7-43ee-aab0-8ba6f48e5901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b1e467-b2d8-49ac-88b6-9d1376539449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da266a5b-3502-42d1-a05b-ead59f894335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa82058b-5de3-47e2-8ec3-fab74086d967",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5d4d35-b666-4615-8fb9-db41aaa26f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc125e1-f6dc-4694-acd4-f12976cce503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bba98-8df5-4171-8443-44d6c37eed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c36bf8-707c-4aad-90bf-8db13dfcf480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37975ce0-d522-4015-b3c9-7cb177c13d89",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e398279a-81b6-4ca3-b925-38beccc14f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ccae092-51db-42ac-b4b0-3bdd740818bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129678d2-8d98-41a1-81e2-879bfb076de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b673c840-d99f-408f-a727-39b9cbd35b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b0de58-ad12-4a84-a3db-bd721cf9f16e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d502368-60d6-4968-8f60-ee1b231ac1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbc567c-33d5-4b19-8b9d-504035c821cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960f309f-4168-4489-91b4-cd0a6cc58d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8de48c-d696-4d1a-b276-82043945988e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4e14d6-9da1-4403-b168-e01062c113d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9142b86-3aca-40ed-8be2-5add32231f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c87b932-0958-48e5-a950-f80da9c6fa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a595496d-845e-41ad-937e-a6e458f7f7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee69948-6044-4370-a8d9-f0b1ab20e48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719bfa63-89d5-4f2a-b50d-de83aa2827fd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acd6530-a8bc-454b-a692-c495807d3413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2016c7f4-2098-4b19-8fbb-85f2d0789647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7b1cad-3ec2-46ee-b3c8-1c43277fdb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "874df956-2079-4f5b-9176-a0eeac8dc041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cf6d24-4afc-4c70-8ccc-99dac1bdf15b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6880e6ab-63fe-4ece-a1b3-27d504bf3aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4390ffb2-018a-4d99-b7bc-575a77e9cd99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70152c28-d43b-4724-8caa-1d765ce8dca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0de2de-68bd-4037-9fcf-b91f5db8f9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5917957-a82e-4c8b-83d1-76ec4157252e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db47d6d-a9c7-4d8a-a87b-d6dfba00b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5df9b4-21ec-4e64-a9ed-b86fe57115bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79a02a1-190a-447e-8c9c-aef297a6f152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bc13ba75-eba8-4024-a290-6cfb537a1092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a46db87-a86d-41ed-9d7a-f74ca4e4c8dc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bac2325-6f44-44cd-8742-721a8c112c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255b72e9-2e98-4d17-8a41-6cf963dc3c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893dca1d-5f03-4b1e-bebb-1f3db1fb83d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4e6312-fe51-4953-a48c-fd24a9b42ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3679bf-9cff-436c-a031-759b7050bde2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3811561a-c35f-4419-bfe8-2433857ad92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8d3a7e-896e-4845-889b-896200d7fce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744c0303-fe42-45bf-843a-d19067bef018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25f3868-fed6-4432-bd85-f4da1bd35502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fa3ee1-2993-4deb-ac08-2f51f902f90b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a71ef40-dbf5-4c26-963c-80f66ffaac69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df02c5e-948b-463d-85ff-767d25f62dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd26c00-15d7-4ab6-93a3-185b1a207007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6ad779-d8c7-4049-8e01-5bf6e2920079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ad65d8-e194-4a5c-b5f3-d3680038f2b8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8980e6b8-af16-4b57-9a5a-3f4b6730e801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c39052-a5f6-43cb-aa3a-beea83ef7690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6371b314-daa7-418f-a80e-1bed830b8455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce136c62-8026-4128-b07b-7cdc2f12392a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fad3340-5e93-46e6-94f2-0804b12c23e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a07661-3101-4311-b8c7-e5fbf17085c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5c19ed-6c8c-4fcd-819b-3d0a0b5c1e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c066b5-3ee1-477b-aafc-0c5c2d3b29d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2166689-07e2-4ec6-b911-95c07da8242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1252788-a55e-4259-ab0d-55409ba8dc90",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44e8236-e12e-49bb-81ac-3749a421549d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3caa00-7769-423c-a83e-0d3eba01510c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b79f2a-bef0-4bfb-ba97-592fb68b4629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b793a5a-f82a-4320-88dc-b9fcc8997002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f981d1cf-d259-483c-a377-3d8a391b37bf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0776b86-524d-4be8-9c34-f0abab166b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d6fadc-7d5e-492b-b2b2-03a4a7eeb6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dad34fb-450d-4ca8-9807-eec7b849caff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a72af4-fd4f-4b87-b58a-1f797969360d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff640c1-bd1d-4995-8f29-8a4d865e3146",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7120830c-048f-45eb-a4f9-8a91374c9f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578b36ab-f4e3-4a90-b2a8-1089e0fe9680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baa63b6-71fa-4513-8a35-e40ec0c7df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb72390-9954-4ec7-9758-556dacd5e123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2076405f-21e6-45a2-8115-07ba6a70511c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06856088-34a2-4fe2-8c3b-04081cf93655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2633ca-ce86-4147-a35e-07cba19eb930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd6502f-da21-4cd0-99ff-660247cf2604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d030f753-6d89-40c2-9f3c-18f4fddc0142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758c819a-ed23-48c0-a95c-2079c045fcda",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3c3c5d-da0d-44c4-b00c-5e07464e0961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e408be7a-2998-4444-bc83-e17e3849193b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d1f07d-05c7-4b5f-a506-1532a18136f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7fbed9-7148-43ef-96e7-8ad0f34494d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27a0049-c313-4b8c-aa98-e9493d81ac1e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c84c2fc-5b47-4e93-9c50-40bee019323f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7719719-dc56-4cdc-82f8-88d12dd62edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca43fd16-f83c-4e41-9991-1f8e769fc5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5040a123-6b7f-4dee-b739-c0bdf63af1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a016a7af-d826-4d6d-836d-a00072167368",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a88145c-3692-4829-ba64-99f6733243d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d8bcc6-7eca-4119-ae06-5b7854e64049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22984cf-4916-4092-9b53-7ee8b11e98aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc1b561-f228-4939-8897-f5d9575ced25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d522163-096c-430b-9bce-458ae51cd67d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4a8381-0ba4-4ce3-9cf4-f6b19a502ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce91bc3-088b-4177-a439-54621458b469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1d9cdf-ca5e-4ebe-9c9f-86a3e1b20f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa65a19-c5ef-4b03-b479-4b13650a38d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04f0645-f2f0-4420-811a-dd8ae284af7e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bded8d7-7beb-48c5-ae7e-9d5a9844ea0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42af2d2b-1fbd-4aad-a086-5718d7a8fb30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6affcc-59f0-4be1-bcce-0c72b411373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69498bdc-3bfb-45b3-8b0f-d7f6a7d76c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5790ae-2525-4274-ba79-1086b34d2f6c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c557db-d721-424d-a110-789c48814422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0387fc8-fd3a-4d07-9d27-8a8367ee59de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e17f6e-632a-4b27-9b9e-e95bdc9fa1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae10e6d-d539-4cc9-926a-cef594a0f9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a38b0-351b-4e4e-b0e4-a83c8774b8c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8937452e-92db-4d2e-9234-2a62a0d26479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f860a79a-b8cd-4a78-a60c-d7d12030d16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0bbfa2-4572-4700-9a31-0653e6ea24eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c5b01eb-f3d9-4ce9-9f29-7fc7d58b46a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4df16b-e7dc-4e99-aa99-35daf553769f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230d5ac1-c144-479a-b104-544a51b96587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40bc4cb-33ec-45fb-b707-70792442a8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb81949-752d-49ee-93fc-11d4c33dca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a15bb38c-3606-4e92-aa6b-f3214cb30e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c99903-38d9-4b9b-b27a-cb10149cffd7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb30b30-350d-4fa4-9b92-9be018c833f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda71254-22f3-436b-aded-6a75a32050ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db73471-e628-4e42-bb46-561984cdb6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b4e7dd-32a3-4ad0-8302-080842d4caeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f336e57-62dc-4e05-90e0-77126f5f3ade",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a2385f-67a7-4bf6-806c-38196ab27efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58159d0-ee63-4a37-8bac-dd47fe0cc160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005edab3-b011-45a7-a970-6bb929fe3b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65eecdb8-354b-464a-8894-9bc49c53a6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ceb8ec-875f-4999-9398-0d0ae486ebf8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171ed3a0-2f10-4e65-88a1-79383824d273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d95e1b-94cb-4541-ad78-40762bb29ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a6ec8-afc4-4168-9020-cbd64a55c805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b0ed01-bddd-494a-b2f2-f9be0d3c874b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc3244e-a7e4-4720-bbb5-5f44c4e91d76",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab131a2-55d0-46fd-bd85-ebb61d506010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c65038-ff90-476f-8866-34fb81f2dbc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87726526-31f6-4b4c-bd34-2bf95a5b8068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab752a28-7070-4038-bf34-38aa190d957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f917c9dc-6dfe-480d-b802-2fa035dc9b18",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98db6b7-02f2-4f00-87e3-6cb07018c4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9e8fa2-1a4f-4f9c-b571-e610cae44826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d0a1c6-ba96-4c28-8696-c43b98883f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15220fe-d3b7-41d1-96a7-3044733b721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f258e4-da41-46e8-8b17-7bfa6b26efd8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703b18f-ee0a-4f36-bd83-1d9d19771b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a114e776-c0f0-4592-b4d4-2531a5a08c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dc40a2-099b-4bc3-82ce-07f0ab5ab505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "497b6ac6-414c-442a-82e5-74f353ea4be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dc7f46-3f4c-4e26-85b3-df01fbfc8f66",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b84a5e-6f6d-47e4-aff8-1f7844deeb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac364835-cc5c-4117-a850-846b6fb9cde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b504a405-8cfa-482c-8106-af76050b5084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24e7a85-e41c-48a1-90ea-520b0d0ecb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a5bc9e-5897-4f66-b856-2c7355564b39",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588b4f97-56a9-4fee-b9fe-ca028b5aaabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ee5635-da8c-44a4-975e-d0675a8e4c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3452da-d537-4044-9f8e-b00c6163bb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "894f1579-64f1-4717-aa5c-aeec73a3e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8c21a3-6842-460a-b3d3-44e37836b2af",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8129c905-ae3b-499c-85bc-b36de0011261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5036d8ac-67cb-493e-9ae3-758f17adccf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c5a21a-2059-496b-9913-88ab832f64ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c96f74-2e5b-41d1-aed6-4ae28ce12ef4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "474bc919-3248-4d7b-a33d-60f676948efa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "797d4103-40a8-4ea5-a31c-ebf78c1b5876",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9294e98e-33ae-4c36-b3bf-afa16f73b67b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "751cdad9-1f81-4794-95a6-ee2b48c58dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2de816-2310-4cfb-91bb-775b27477302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05b19696-8178-47fd-9212-61c154868829"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4afdb00-18bd-41c1-9cbb-a2f12df6bb57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c332e53c-a2d8-4f58-83e7-d3bbe0cf63f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e439fd08-5230-45ea-9073-c9563114507a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffbfc54d-8d3b-4f11-8751-7eb64208c288"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "baaded6c-78b2-4420-91ce-8c9ed5186dea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9dac341a-214e-44be-8a58-0a5f8110b4f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d170e85-9a6b-4662-a5cd-02eb036f48b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c45fddf1-dc55-4ee9-a44c-c8b626137d4d"
            }
          }
        ]
      },
      {
        "id": "daf8ebe7-9bec-4a60-9b32-dd42bf15f716",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e1a283c8-5c61-4e99-a724-4963667fab06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9275fd69-e3d9-43e1-8e02-fc717bdf1e02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d74a40f9-3fcb-4036-8a11-e6172432fbbc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614cd7ac-54ed-4415-83c1-914ed71e4e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b78849-ed21-4cee-9799-6273e0c6cbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bba714-640b-4dfd-970c-911f60514360",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930cd5ed-bbfe-4000-9ddc-872b9b77792f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1262fbf2-5d7b-4bbd-9489-3088aed19624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba8a49d-9aaa-4d13-87f8-79c2ab5e3692",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d604a3-8906-410e-b8bd-55dce9e584df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad5f4b9-d583-4c11-82a2-7f66b98b7c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedd0bf2-04b4-41b9-ac88-0df2fe353e6d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f10c20-f92e-499c-bd34-991656573ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf168ad-4a63-4429-9d23-6b7cc30e9f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ed77f7-620d-488c-bfd5-78c1c0c0229d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc78636d-eb35-4da4-a8a7-fe491f915a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f8df2e-9521-4003-9a03-4c86b4879643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6baf9b-439b-4ee1-9714-b0ba0d64b382",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8850cdfd-7487-4485-bf78-5c4439e7f8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df0e57e-5042-4936-9cf6-d6789d388303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef52c99-5da6-4a32-b96c-a50842f5f53a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba4306b-cdc3-42af-9bbe-65b3281f971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592772c9-59c6-46e6-b42d-28fa2aece53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c2615e-8175-4a8c-80e3-a182b9752387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498223bf-a512-4222-84a9-6702ac9d5bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7743655d-7378-463d-bd18-20ad64d575a8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2214ba92-73c5-4292-80bf-22bb70868951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03af6c14-ce39-4909-bd19-aa9978bfef31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef914aa6-9782-4a2c-80bb-ecb9b6f7ae6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358b321b-f5d0-4465-9d55-4c719c8a3c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce0f666-0413-4ead-a8a7-16bfb78e0e06",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f985a96e-439f-439a-b429-eee918fa5dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "765f7103-5910-434e-bc40-6601b65542d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e084f5-107d-4e34-af5f-07be507b2d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ba1ace-313f-46e3-964d-fb1f2b2b3ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4952fe1f-5b71-4f01-8db5-24483082c772",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9ada84-3f04-4491-9a7d-fe0bccfc216a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fefb0227-b1eb-48ac-bceb-6d77898ea834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bff7dba-7356-4540-a752-617031573588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ede789d-8d0e-498a-87f1-c8cb5261afd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f2ae2b-de5f-499d-abf0-79d13c8aaffc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd6695e-31ff-4e21-b68c-cc64c5e30523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2417f03-352b-41ea-9399-896077e616a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a35e25-735f-452f-acf7-fafe94cf2be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c2645b-a7ad-4c42-b4e0-7a5c3e4fb3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0234ef2c-da01-490e-8763-d63d1a1d54e3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8376927-72df-4068-83ff-33e57c514ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff62f4b-2774-4f04-9773-2724b5b455e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad06f14-614e-4961-861d-301841da380b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b734635-954b-4be0-b0bf-d0772f4928e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfe654a-69a2-4427-a71d-caf1a797f4e2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ff0865-b370-49d9-8153-615e099c1691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f401c7dd-eed3-4fd7-85e5-3535508ae6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "577983d3-6576-4b91-a511-b083a3b54c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f93476-89de-4735-96f2-520b9dee74e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc1b502-4083-446d-b9e7-393721023cd2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41d0050-c2b9-45ee-90cf-96c8daa19973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c29234-1097-4f3d-83ec-e122e95f472f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8efb7b9-f32d-4fc4-a1df-2e6d61d5a3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e89bca3-572a-4fdc-a787-698a25cf2dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aff43e4-5ab5-4a70-814e-f82620704a83",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9148af2a-34f3-472c-b67f-2fbc1ced4ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9afc8e6f-f333-4a1e-a2ea-552bfcb1a947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29318e8-9c49-4bd1-862b-aae9c3248a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3af59f-aec9-4e79-8c03-c98079345f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4bec95-3464-448b-8daf-f5919a36a538",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c56d518-8831-40ab-a2be-fc9aee80cc64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0fb8fc1-0880-42dc-83cc-bf7a34d19a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eae282b-7006-4800-9909-ec3a1b37c29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07053e07-5242-4e72-ac05-62833b50dcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b24583a-fd34-4804-816b-ab53d8be5054",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90498196-05e2-4a86-b322-d36bb824acda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3bb6d4a-ab65-4baf-85de-085e2402b1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b97c6c9-0c89-433b-9a9e-1e0ba0352420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cad2fd-65cf-43b9-a0fb-726a7fb70e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83461c0-614b-4475-a3df-13c4a16b5e61",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c467c63-cdbc-431b-b49c-a29c7fa42783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9e544d-5c60-4f8e-99e2-83eff856bdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3069b3b4-7b5c-49ad-a6fe-a10e90077dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fae2fe2-bd7b-4d35-a17d-cd3c580fa8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186d7652-6bd9-4fbf-976b-2a843b687903",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa8cb58-8cf2-4973-bd35-51c1fca5348a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1926686a-495f-427f-80f8-01dbbc7050e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04c143c-6651-45e8-ba5b-5342443cc467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb90baf-7c8b-4b49-8887-b4be1f30e8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20368a07-0d69-44c8-b93b-e79f2b670885",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab97546a-0b29-4e98-836d-ae7825a2c224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abad0901-74fe-4379-9f32-291730725ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ccaadd-e5f2-412f-a22b-e6e59d78fd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00116ce-9869-48d8-b9b9-e80f00c82a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a2577e-82ff-45f9-bbbb-b105caea5db2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5180bf1-c378-4105-8df8-5d917b76f5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84ccaf2-1f65-444c-9cd0-66b382ced5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8458cf03-8dac-42d2-a816-72e454492c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2496a46-2a11-417d-971a-4d2da9b915af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440f1cfd-a55e-4e95-bea0-b1faee135732",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16503093-56a3-469d-b04a-bbd9e0892cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22a4530-a5df-42e3-952d-be80f976580f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3592803e-b642-4f3b-acd2-f7c2ee95b0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d2221d-964c-4a7e-b7bb-18fa296db4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be0f643-8c81-4460-bfe3-d978f6e901d4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1271573-78c9-4a8f-a6d5-6f425951c2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707da27e-f6eb-4aa6-85d1-d628b56c79af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79612fc7-c9e9-4dec-86ce-7568c45ca83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68741b4-df6d-436d-b36e-2161e305610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1048dd-699a-4ec2-836d-d31733a62828",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a091ce-5a24-4b9a-aeac-c3b5e418b522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5aef57b-5bf9-489d-9fda-884e1ccf4b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037b45e9-a1f3-4128-826f-11935c3c1676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9254d8d0-2b01-49c6-a975-fe8ad6d180d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2298543-ecfd-4b9e-9033-c28538d5bca3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5935fb2a-2196-4757-8e33-e46eb8dbb690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf84e57-282f-4843-bc10-c972a15569de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a98a693-141f-4eba-8620-99de6f7f9e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13e871f-4897-4ed9-8622-c156b92a184e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5233aebb-f419-4b41-b28a-f34b0c636a27",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0108379a-6927-47bd-af47-93d902d55c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a928fda1-59ce-4100-b37f-4fc69d94a6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6cdf8c-be76-4b72-8cf4-bc92b02588bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12db6ee-6a76-411b-92eb-422f20638190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c6770a-cfdb-4a57-adcf-e8352e3df4f0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e364272-eab4-4d79-9201-0ec90bbfd58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f6108c-609e-49ff-b9f3-dac6584b68e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f171dc-3876-4301-883f-0fe6e4384bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c8a79b-1309-49ba-a905-5801db196f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be74ab9-0c59-4af7-85b9-fa72296e1e97",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac850af7-d41a-46fb-8609-2542d25ad71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93794c45-6443-4311-839f-d6c50789d51b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caffcbb9-287d-4676-8b74-a5358870b5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def1d06f-9467-406a-b787-bbe8c33b7b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c0d25-fb2b-4dc7-b004-476aec33fe9f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdc918c-d445-4f8f-a3a1-17777c81f925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2982ea13-04f9-4539-b815-e4987e855e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2543c8-8698-496e-a0dc-adf1c5d56614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa76e8f2-946e-4bb5-880d-fe75ff858dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0083505d-970a-465e-8f9d-f7ef96bdf285",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c801010c-8a37-49b1-8d88-e50f32e9f8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39c8ff4-1fa0-4552-942a-f58da21ef2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e117b7d3-6b1d-4f21-888b-4faebe4b74a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e967b5af-5366-4cf9-9cfe-8343ec3baf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45be83a-12c9-40a7-95c2-6819355f6a01",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da957f55-400e-4f90-bbd8-8e8a932ac3fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "635b70b2-01d1-4875-9b60-049d48594807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d701dd1-df57-407f-807d-e1a129fef17a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b4ab1d-f029-48a2-ad12-e5eb687c9acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406c28d5-d0e2-49b1-afb0-2338c2e59f00",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91de150-c06b-48eb-b8c4-f25573b77bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9456676d-6d7e-4dac-b3f2-344377326727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81263c90-6737-49ca-87f5-1976a9b1653a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81009c11-181b-4694-b675-450d98c5e259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2ece46-1774-4279-a533-d1999124ed76",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2575eadd-1e5d-4176-94e6-1589fbbee4ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ffd33d-13e1-4bf6-a0b9-c4d3747cb0b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5451002-bb22-42f5-98fd-328055daa490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f48cd0-c07b-4532-9536-b56784722746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80ebec-807d-4922-8d11-732d7bd029b9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc115193-6517-4424-a55b-4fe1b8cf41ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9869d534-5b46-45dd-a884-f4d9dd14a150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cdd8a9f-0543-4b89-befa-c6abca382118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a331141-5bc0-44c8-85cc-1969085331f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f8d098-eb0e-4422-a104-a5dc0668d509",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22381e6a-ffb1-426e-9948-553fe721b295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb9f38b-55cb-40d2-8b92-d18adc1a2f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ef7bac-5824-47cc-ac63-a096b6df9aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2050cda-74eb-43f2-a33c-f1c5d537d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5f2daf-cdfc-4b7d-a6f7-9b3543d610c4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07878a4-d00e-420b-b613-af9a59c05ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b7c9cc-60f7-472a-a54b-92d5d26f8f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8741d477-0d0f-489d-8cf3-a0130658d142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7813aeb-f183-4fba-86d9-8e707e2e396e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7930e5a-7139-4c31-9009-44d822f972fa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea010b8e-9818-4dbe-a41d-6ece5cd17031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15e96dc-97e6-4288-b8d4-ad69eb4820a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1376f0-6694-4c19-944a-120292b02abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923ff396-02bb-4bcf-99a9-d44cf58be7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c7c838-5084-403e-8765-91233b937016",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd9bcf5-9b25-4deb-8583-4931f3cc130f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a8377f-43bc-47fe-873b-01cacd117ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3477f08-ece6-40f2-9ad6-c5b3ba455aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1c5b02-6fa7-4192-9db5-c784384409c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b80866d-33f9-4eb2-8c61-fed358660fd8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0df470-6cdc-463e-8a06-3f1f12f949ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b34918-e1a9-4553-8d78-11bd24dc8622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5197ca-41f8-4cc7-811f-85cc9943198a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fe9c23-2b49-431a-a45b-b317be0a1161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6c2902-d7f2-43ec-b6f9-a6cc511fb974",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e40018-67e5-4a01-8b33-96d91ef5c253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29d0cbf-930f-4154-894f-c958472ee06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf6fc53-a423-4d1f-94e3-88480ec0699d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2dc94e-935c-4dff-aedd-537a3738f95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc887dd5-9677-4c45-adfc-96270dcd2266",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675e3291-9d31-42fd-a9eb-a4437002b98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1948f748-1147-43b3-96cd-76f74d985db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7b4729-6d4e-4b0d-800b-86b05f98ac17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83eda10-d109-4a6d-942e-b0d6ce53bb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4de533-157f-4908-8eec-0f33a1a97d7d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f6efef-5311-46f6-a521-a7a4f39161a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd31bd9-8c20-4b1a-a8b3-7de5ef86d95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e46e0df-37e7-4e15-b298-f72c79990bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cb7ab9-1209-479a-8e4b-87994269eb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1b5ae7-c751-43a6-83df-5f6a4d9efc68",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9398da6-52b8-4589-a1aa-3c0de3bf7da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b6ba04-e63e-41f8-a043-1e11ee5b80c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cbfc11-5c83-42c3-b556-4624a556a857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b0e6ad-a7bf-49ad-a6cd-98fcf85433c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d99b22-165f-45f5-b714-95608f479967",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b0fbe9-284a-43e7-a2a7-f5e44259a31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f79fb97-2792-4bb1-ad21-d90c9a5b4f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6143118d-bdfe-4745-b3d1-461e765e0413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f04388e-32ef-4c76-ad28-eae6eff57c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a7b4f-d29b-482d-a99a-dc6cb6835254",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a667877-0994-4cad-ae7c-d1b21cd0bdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007593af-0562-4aee-a928-07f9ee1fccc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2bad39-7f45-4c95-b1b3-6012f3d28787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed5b850-bd11-4886-a897-6310da0f710a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5645e9-f4d7-438c-85a4-c27add2c0367",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95806f2d-7b29-4f28-bed4-dbb7ff372f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26efd79a-9cd7-48e1-9d3c-2bf368346481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee13981-bffc-4bc3-8e4a-d2e43f22d93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfda364-826d-4cc8-a3ec-0597c7fcd6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9dd9c7-5e75-4edf-bfbe-d24098e205bf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9f4dd-e7a5-4ded-8858-220e7d9cb5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574a867a-8ef8-49a6-a50c-012ab59cea74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853529f-d12e-4b53-83ee-3767c92f4f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f3ddf7-f568-4a1f-b23a-0147110f3f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec4f9ea-6102-474c-a05a-3f9f613db652",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907fb3a1-5dfb-4df4-9472-d3a498a50906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdd956b-0278-4ade-8574-6bec950c1c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ed2782-8290-499e-861d-5bd57a861a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e55418e-2583-4236-bc64-e9e22c48905b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64427cce-ed70-48f7-85a8-2904b24e1917",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c296f6-425a-4a7a-bbfb-23a0d581ea09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357a1fe5-5773-4697-a40f-4db3e4dcd49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bbcaa4-e7cd-4c34-9a7e-ba4577d03dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8652b628-a2ac-430d-a4c5-f1293aafa84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aafa863-4258-4dc7-94ab-831f24c8b21a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5897eb66-5b29-44af-8a72-ac82d62a34e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e98107-3de3-49e1-8bae-7b5db2e9850e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75996584-31bd-4380-aea0-3e0d0cc4add6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407f1fb6-868d-455a-90af-1d5b9f0c82a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3896fd47-eb22-495a-be2d-c9fe51d7133c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9225cc-d02f-4077-836b-be40e8e81b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becb7140-39fb-405e-a76f-db3f3190f17f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4bb66a-80ed-4439-8963-6b55ff465e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f546275-69c1-40e7-8ecd-144c14c6012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb603a1-4e2b-49cf-8b9c-a306dab51ec7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842e6ddb-8c0a-4ef4-be11-dfa60a6b2582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f963ca7f-62b4-4b34-9f6b-5c555a0a0b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed467d42-d5b4-4143-9ed1-e6d117fb030e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920c03c5-8dca-4cb7-a2ef-f37eabacb0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b57a97-c23f-4947-a17b-ad09ba9bd903",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7112ef9-8689-4e74-bab1-9710be816bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2871c6-3e40-4a2a-b2d3-1b459a2993ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13ac14b-fb8b-4d8b-a9d5-73daea1420c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf09978-ead0-44e4-9eb1-92619f42ba16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a182128-bd34-4da6-924b-7949d10fbfa4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f4519e-8b12-4da9-98e8-eb09a0d949fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c285cd95-4fab-4ba5-9895-993d2ab1e2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddc76c4-184e-4adb-9a0f-7eb81de29705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d92c3a-1d33-4072-b94a-a32f173c2952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad9a8a4-2c44-4505-b398-9384c100cfbc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a38e4c-398b-4d64-ab44-3f713aec100f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96f6e0f-5d86-4447-a9b2-5c091048b2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d088e488-f1fb-4ad3-9949-363512c5681f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f49435-d382-4bb6-a280-92906dc92bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a048a73-02e4-4b7a-afb4-19d041eb1b5f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277ba264-7148-4e3e-9094-20d3d94d915d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e8e1a6-43c3-4c89-b162-c8fcf6140edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fc9c12-e486-47bb-b62c-ee53c0e6a796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a2b73e-7541-4a21-ade6-c4dc5bf87888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c2637a-5b5c-4fc3-bba7-01a05bf1a0a3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c909ef-bbc1-4d91-b3a1-88966adb9a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ef1733-64c6-44bd-839e-9c20d7cbc06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f999b71a-46b4-4b06-9787-df342184e22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c8f2a3-c852-421d-a03f-2a13cef3d3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448a006e-04f8-4db8-a934-0a7c2335cac5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73252068-dedb-43ef-864f-abf031a31433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f4718a-54fb-434b-b371-811275fc1217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26239204-35ce-41ba-a6d1-a2d068e51b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34105010-0f98-45e1-ac4b-a43ef2a09b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d11f2ad-2a28-44ca-bae0-867c506503be",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f285a9ef-960e-4aba-9bb3-86e6a60bcc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27dae04-584c-4b44-834f-d2b2f641e9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faea6b8b-1548-4e23-8c93-de313fbcb0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf982fdc-0182-4c63-b23e-435288d03ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77aad88-a69d-4e81-8a50-684fd5bfef10",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04d8768-286b-4310-89af-93f27484aa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb571e-fe42-49f5-aee8-425407cb23c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bd9f43-d25a-4014-ba82-ccb4134786bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5478b2b0-0d85-4169-b648-86b743e94f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bc2003-80fe-43c0-af99-3287db5a61fc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27492679-1e0f-4cf9-939f-69a63fbd0d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525d0d72-97d6-4920-9798-43cb4ec674d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fec7faa-e0e3-42e7-a8c4-53a75855acac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f531669c-edad-453a-922a-073606e56842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a358576-181e-4f03-b977-481154766cf2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fba2d6-4a90-4a53-92cd-0b5323c3b53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d78867d-3eff-4b99-b252-1bfcfd92d07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13953c1-82b3-417b-b4ed-85c513739a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072da07d-9be4-41be-8803-89205620d9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d0e496-3d5e-49fa-82cf-51a83ca3ce28",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aabfa41-ab13-4156-8a45-962a202e8558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fa1499-efbd-4ea7-aba4-4c7f4826907c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc52c03-c971-4298-9b4d-4bd4b1e74e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f1bd01-91d3-45bf-920b-81698aa19968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d5a85a-0ba7-47c2-9629-da95221e46b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bc285c-96f4-4dbb-bc4d-2706aa24e839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e391ecd9-f2a2-4052-85de-3f314262a3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd050ac2-5cc3-4644-b721-eb26f788fb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034d99c7-57bc-4956-8a88-4266da7dfe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf79b5b4-a7d6-4da4-8d0b-6a0fbf1409c8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f408910b-2cd1-473a-ae04-4e759ceb0930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563db0dd-d572-4075-8e65-48ad4351564b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b6d88a-b44f-45e4-8fae-ec41d08b6930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d83588-47cd-48ff-8d35-f8d02d502236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b9c318-9936-475d-89f7-cc0b58b0575c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfaa927-17d6-4973-b39b-ac12e30984d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf6dbf8-810a-4d70-b7e2-b47c4c7ccb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34813f95-2f33-4456-b9a9-a20bae11b66d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519c5eec-7d08-40b8-8588-7982baad13a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef10a63-f10e-4980-8d71-610bfa9c1eef",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2970b3d9-706e-4d53-89d5-ea1ec62872c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d454c898-6620-4b76-b98a-d676159e782e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6c13d6-8d4e-4805-a1ea-ff4ffb1ae0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2886301d-2840-4131-9dae-85a51c4389d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13528dbb-98fc-42d5-8590-68e30863e1e1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41547762-5f68-4909-83fc-4ae89497e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a23a8d-2b77-454d-b5d8-9309c147b5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13fa8c0-bf11-4d1c-8471-59c7204ae651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fb77cc-df3c-42de-870c-51813667a4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a362ea12-6087-4b6f-b250-39159469292d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e923de-8456-4a49-8106-da2abc891ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab81efd2-f700-4fce-91f4-fb50d13f8883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b29dedf-e8e8-43f1-8b19-e31333d096cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e96d1d1-e3ae-4203-8be0-d62684d9d3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec4a40b-f29a-4d01-a86d-a29e7dd34d88",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74195dc9-ff65-47df-83bb-8d16b79e7c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b221567-d7fe-4f90-899b-e42ce3471da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc993251-d142-4ea6-a695-c49375ab1856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3be56d9-1d4c-441c-8a4b-dc80ad3c7316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46e13ed-5208-4ede-af70-8afdbfe7153d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a01d63-75ab-47cb-a6b2-783d4ee8263b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fc5ef1b-7659-4877-ad0b-f2fe141cbd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc45072-e917-40f6-bef2-58785051a9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74c296e-8501-4467-9408-6d37ec19a1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b7f92e-1a82-4bef-bee9-a85d9caba3e1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed008a40-2f3e-478b-9798-dd1b36034ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a46b074-c7a4-45d4-bd72-e8bbeb1a6fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57aa662-7944-43bd-b8df-5135fdb6319d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0a4ecf-1f37-49d8-b463-872b80126fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cb282e-8d23-4ed4-9f44-53d395cf324e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dbc9f1-846b-4b4d-b44d-84e45341fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2757415-7abf-4ce4-a9fb-a782bd2a5744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdb6b37-b040-4208-9872-1564fb1c90bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82649187-54a3-4df4-8361-e547059ac771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148ea465-add5-4e6e-8be9-1535fcc4f354",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4b62cf-7e96-4350-897d-64f3369bc296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2f8fd2-cea9-47ba-ba8d-15191b7c8dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9920fee-2bf1-40b3-a3fe-1a9076d0fad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48cfa600-ac7f-4a57-86ae-5bce9122e261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041faad7-5ef7-4b90-b147-d6103c1afcb0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ebc7bb-a548-4dab-8248-e9cb672964bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7af9f5d-9917-43d9-a12b-54d9e659eae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbc7840-7f02-4bd8-9671-1ce9246a235d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9488734-de05-44aa-be88-14067a2a8115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014ae528-b39e-440f-aba7-0132b0ef15f2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2fb474-3c5d-4bb4-8283-6cf51fc20a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75aa7e42-1fa1-4665-9148-bf91b900643b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8148cf6c-3c82-4adb-b2fd-7963808de9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb1829-1e97-47cd-be74-7e6ca9ac56c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaa6707-8ee7-47af-b91b-07ae47dfbf44",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a38af8-5c91-46fa-9ea2-4dde377cb0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5a173e-d456-475d-9079-780542b19444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc7e45b-3aab-4f2b-a672-36fe4fa5c1e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74517d4-a13a-45f7-883a-3b77f2cf960c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975fca0a-6615-4386-95ca-f45b614ee9f0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be6d822-e0b7-4533-a405-e23b9f1e7c45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2fc5d7b-87be-4392-bb7a-df85a5ebf422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "891815be-3b15-415e-9074-77bf3a59e980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9d7f72-af5d-42f3-bad1-e84fe475c900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328aa6d1-c376-4ce0-a5dc-5f4060e400ee",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be934bde-2950-4c1a-a5a6-f15898b502df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607a2275-9e0c-4e60-93b1-fd812debcc4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5093ddfb-0132-4485-8e5b-56a3422abca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6dd3c6-4e0c-40b6-ab6a-b469b302784e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0707bc-5c88-4915-8991-fb14fe834eee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ffe16a-a63b-4d76-983d-ac17b73957b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639b0534-b406-45cf-b96c-71a34d9d0a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098f5bd7-d9bc-464a-9ff2-dce305d9538f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5830c8eb-9988-4824-9384-b33e941ebc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb5153e-605c-4b31-8fa4-722034c38ac9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1478504-c487-4819-8fbf-7bc393b51a0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2746a76-019a-4ead-9c02-96cce14129a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201d98a3-59f2-46dc-b06a-85501e067b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb75c7b5-5f5f-44df-b397-8afb526242fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1508e3-a90f-4adf-b5a6-b2993aafd642",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796187b0-da0e-423c-80ca-24aba1cd173f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7635694a-c168-41fa-83f8-4cb7917f31ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92f29ca-6146-499d-b4ba-cfb0d715e1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f28473-1596-46bb-ad59-81fe11b11efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f14e325-9a02-4fcb-af3e-abbd983516a2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6206ca-33ba-4cd9-a204-6924c5184fe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79781530-11b4-44a6-ab62-c5ccece0c2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a599d902-ee90-4692-a109-fc85f30a69be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a887cecd-1c4a-49df-bba0-355c0a629aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0872f1d0-68e1-4599-8663-e570dcf68fd7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9faae3c-130b-4697-b22e-d4fc10ee9bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e2ba3d-64eb-45f9-9fda-5d0c70c91df6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d903b4d3-33f6-425e-9293-ab318aeb59f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8ad369-80cc-42d6-b452-dd5612a12284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e07eb0-8daf-4847-8c9d-0f1b499a6298",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b896e98b-5f55-4868-894a-a8a5dc27e1cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49905620-60cf-4c07-88f1-07ddf7556b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26006c5-c9a6-4604-b21d-75ebc6f02c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030edbd2-19a9-4dce-9bd7-7d5a7bca1379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cfdbf8-0a9e-4961-b02f-3f00317947c9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeb1e67-c87e-4549-b8eb-8a8d09210c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d280a1-e671-4ebb-932b-3e5fd544ac4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f78c587-1ca2-4081-988e-5b127b48711c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98139550-967d-4135-ac75-09f2f51d6a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91474fac-4558-45ce-a46d-cc5393cd1cd9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9d6c3d-ce0a-4ba5-aa23-52f171959c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cccb8f7-5e66-476c-92e6-539fa9ab4f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74d4263-0830-4e99-9f9e-f152c8bd9ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7345d670-0f63-4484-a65c-8c798c3cc591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42834005-1734-4fb4-8fc5-3e44217b99b7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a59c0e-9856-49a5-880d-fdae1bc29db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3507d97-ef84-419c-ba61-c1af92650d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36081ebc-35f5-4681-899a-73a649bf3570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48705f0-07a0-47a8-bc47-941d71fd7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b485419-b5d3-400d-8347-6557d5c5049e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97babeeb-5a37-4865-afc8-f000b8e2325d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5c220c-9ae8-47c0-b435-616311f87422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c67ea2a-3030-4c93-8133-83248a9ae176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d502a21-4f6b-4ff0-8df3-b8ffa519599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862def53-4ecd-4ce5-a6cc-0ee991cbb39a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104a4b5e-d2d7-499d-be64-15e1afd05ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8694eec3-3207-4f8f-8fac-b3fbe5ee29cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42864242-367b-4521-acf9-4284cd6360a4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b07678-2e18-4f95-b664-300bd9b5c4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44390c27-8982-45e0-8e44-bf3ee01b86ac",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30462cdc-223f-4d97-85ee-8edcb89718ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449bd057-03d2-48f4-b397-b47be30d2e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4a087d-1860-4b1d-8b32-52ad3dbc933a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b792e84-fdf1-4c82-a883-810cb5d8e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65aeefd-99dc-4034-a05c-4c2dd3bdac9f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08803a9d-963d-4fcb-b4bb-9e2283b669e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14812459-a987-44bb-97dd-1078494ac60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff442398-6626-427b-b522-c850267e2e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340e67f2-fdf5-4a98-9354-e07fa6cfe4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35c09fa-6d3b-42cb-81cf-bd1e32a995a4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30a73d7-de16-4eeb-a023-d5d157de8cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b85f00e-2f7a-4e6b-a229-563df7832b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "808a03d9-a713-49d4-99ee-c998172815d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1be5e4f-caf7-4a64-92e8-6fddcb66484c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0558ea50-5500-4051-8574-0c431f30b81f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbb3ce7-81ad-41fe-94d9-9b32969c3f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc79dab7-d1de-4026-bbfc-c283fffb723b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eb756a-cddd-468e-a26b-47e104902325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ba4496-9149-4f21-84d1-15fd4098fc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8015807-9784-4f71-afab-dd39c0dc4f7f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8cbda7-9d2c-441a-972d-6e9e1d6fbddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5573069-7b4a-4bb5-ac87-c3f9d66f3ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6417c2-bbd9-452e-bfd7-041dd51584c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580276e2-bab6-4045-85b1-5e2f86867e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63156b98-2b8d-43bf-98a5-7d2c476a1133",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae759df4-c929-4e4b-9968-6459c61adac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9c71ca-351f-4b9f-9001-6c1192e15d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26131011-a00a-400c-989b-fdc4f7c23538",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094aade6-00fc-45cb-8108-3416a6955d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb02d00e-e52e-42c2-ac5c-6185e56912a8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10281a64-560f-4df6-840d-e41ff4638558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a42869-20e7-490f-ad20-46b40fe0a864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82004527-4329-4b7e-b90a-a8e2f26502bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cce049d-2e93-4494-8489-a1ae3c0e52ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "922a0ad0-b268-47ba-ba17-4d470bf70d64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f30a8bf0-2a0d-453a-b57c-3cc82a0e8e77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfdede1d-d4ad-434b-ab70-e32c8d39ab2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc2f5472-3b4a-4450-a1e5-6b11b91a1183"
                    }
                  }
                ]
              },
              {
                "id": "5853b1e6-c73f-4e2b-ae8b-1b2ad45f34ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a0a62f5-63c2-4e60-a026-9deab05a415f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115e8e79-37e9-4c7c-a1c2-72bf562c7a64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "42203be5-7877-4e85-8d76-51733e550dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba386ed-a208-405a-a8c9-d2324d904bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81ffdd1b-9651-4c22-807d-50c3acd4b6c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98770723-1950-48ef-91e0-5ab8070a17a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac6dd0cc-55c5-4669-91ad-06737638cbbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1d6e04-a31c-4e58-8f7c-6bcde3e25993",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "064c70f2-8af5-47fd-a358-5f96ab95103e"
                    }
                  }
                ]
              },
              {
                "id": "eaa5f2c6-95ca-4078-b329-b74d9b7e1ad5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "792686e2-a9fb-49a6-8373-bff3c78c7b6a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca6125-9cbf-4d81-85e4-5b2c18c1eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "457a8fad-91f2-40e4-a06c-0116d76f25e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87dc5fa-84d0-4277-9569-80e36acefb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c7a81c-9f89-4b54-9dcb-2a5762cc4a57"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b6be3f50-842f-4bd2-b879-f6503359fa1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "107f84b0-9126-44ed-aead-b525fdcd5f3d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "456e2dee-5920-4f55-8a3f-3cc988746faf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4018d39b-e147-44bf-a10c-8253c12be009"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49a21e01-7699-4cc6-9613-3977531206dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "974b0a9b-a061-49c0-ae48-e828892c34c6"
                    }
                  }
                ]
              },
              {
                "id": "7d23dd4d-5eeb-410f-b95e-e49948e7abd6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "986ceaaf-5bb4-4c88-ab55-d153678dc0b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e8e2fea1-6bc0-4bca-b45b-ede58996b038"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "089e385c-c7e0-48f8-b6d0-0264e74a1cb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7e4ec38-2e3d-4297-9c6d-9a9521e1e4f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4428c18-c685-48ea-87eb-d044be4a61fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5aada288-e2d9-4e91-b008-a823da9fd783"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20e114b8-671e-4c60-a713-94a346bd8ad6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc51d00e-08fc-4c81-a8c5-c19b4310e89f"
            }
          }
        ]
      },
      {
        "id": "d68c84e4-6480-4717-b101-a0b674cac910",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a3ed872a-f1be-46ed-8229-7e51df801d75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0774a3c-0f94-4050-b409-7ff50dfeb2ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89f31e13-4e8b-4870-a19b-7c7e021c4eee",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a03360-f9c2-4ede-8e78-63ae9acc4fba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cf9ebc56-602d-4e6a-851c-06047be0047b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6632baa8-23c0-4436-8d19-154f26b6b7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2627fa0d-8d88-4df9-a115-1f711326599b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ab7089f-7dba-4fc8-afbd-5756211814b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cec3e5a7-7c3f-4a9d-9623-c60ecf9aa517"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "579dab08-076c-4a0f-a4d2-9959960c23a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e59ff2ca-7b30-4f2c-883a-5a8c054b5de9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2818a633-8ad9-43a3-b82a-55024b860ea2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1da30c03-a1de-478e-bef4-4e81df0ed86f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d18d9d0-2471-4d0b-bca1-24ae4c228432",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e12f8de6-8a92-46d5-ba6d-7f14e5d83c0e"
            }
          }
        ]
      },
      {
        "id": "e0c30364-b243-4fea-a09e-b04514cc48e2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1ee17ac-38fc-49b9-8a8d-8901ab51c720",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b4ca735-8bfd-4d55-8f21-3f4cc4cb7e6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8584dfd9-d6ee-445a-821d-b1f2774f32c0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5056f5-2541-455c-b135-d67135241448",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4afd91a7-76eb-4885-8c99-ca08b386906a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaad50c-3b56-4e54-a47e-7cad530fbe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3f4d898-6639-46bb-8362-852a7c16f457"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b27737c-0bf4-4f23-a07b-39f5417a2588",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "000a108d-9244-4353-9989-c56a7bb7e355"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9d5c06d-c98a-4d0a-a9cc-d8b071d9c424",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efade3fa-245e-4f59-a269-184fc5550925"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08a69f99-5a12-4a1e-8b1b-75d501ed5865",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9ef3ad34-d0f9-4369-9266-35307f9a9ab5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2573f752-d150-42ae-a9d3-b3362ebe287b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4907a25e-c3ba-43e5-a284-77d76dbe6f8f"
            }
          }
        ]
      },
      {
        "id": "b28cdcc8-481d-4c15-aa37-412c5e1ba2c0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f7eeeb9d-4fc9-405a-a355-89e6987ac633",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbe78eca-f45e-4f28-97b6-a3b309f377bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b3c7cd5-e838-4f99-8f7c-000d9dcba9e2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695a9f9a-9bdd-4ee7-83d8-2685f9cb7fae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0c974b4-a52a-49d2-96cd-e487553a503f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7a8eb0-a6e9-4cc6-983c-ad9a5be4fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9263e2e-59db-4856-9b32-1e67d4bfab01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "658c681e-dcf1-4ce6-9b8a-87a9f17305b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a87ec7c0-b05e-4c90-9a2b-c205edc9ab92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68be122b-c595-45d9-9ee5-99d6677eec90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19fcc514-6f55-4c12-a9d7-959f12dbac9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08f86cfd-4d09-446e-bf38-37a190ebf595",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a20ca5dc-7d51-4eae-9d02-fdda42141ae3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1f8b8e2-8ec4-4375-87cf-947c532705d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63edd556-4def-4617-b077-ed3400a88f11"
            }
          }
        ]
      },
      {
        "id": "3c815931-e624-4caa-aa4f-c437bfb89cac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb25ab5b-f7d5-4ded-a438-86de82ca5182",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d056dba0-2022-4597-aa77-64de14915187",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0008d8c4-fb96-4e96-83db-faa3e1f5ca3e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6c5013c-6e4e-4b57-802a-b05bec101414",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "018aec8d-93d1-4786-b034-a178c7d1dce3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 130.2561403508772,
      "responseMin": 20,
      "responseMax": 8685,
      "responseSd": 560.4973427539393,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702859819483,
      "completed": 1702859865679
    },
    "executions": [
      {
        "id": "429e97d2-a557-4957-9e4a-fba4f15b7027",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4a477e2f-4cd8-4fe9-9937-bc86a5b200aa",
          "httpRequestId": "2d6fe1fe-6818-4281-9941-2eaef9aa0f03"
        },
        "item": {
          "id": "429e97d2-a557-4957-9e4a-fba4f15b7027",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a5427265-ca95-4076-8857-375af4b4c0fe",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "b4444d64-f09e-42a6-8d1b-21221d83e20b",
        "cursor": {
          "ref": "3ca565f9-4a13-444f-a21d-ce19a85f8ac0",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "22c5276b-d7d3-4502-a17a-1d8f48a12ba9"
        },
        "item": {
          "id": "b4444d64-f09e-42a6-8d1b-21221d83e20b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "14a99bc8-2709-4021-b98e-e8876a059144",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "c739fc89-6726-4847-85d8-bedfc8e754b4",
        "cursor": {
          "ref": "2747cbab-a0ec-4862-825b-43e41aa78131",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "24f57ce8-067f-44a3-ba39-2a71125ff718"
        },
        "item": {
          "id": "c739fc89-6726-4847-85d8-bedfc8e754b4",
          "name": "did_json"
        },
        "response": {
          "id": "7947fdff-55f8-46e2-a1e4-63f6315dc604",
          "status": "OK",
          "code": 200,
          "responseTime": 433,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a095ba95-e5ee-4f5c-8a7f-4d308da5fc59",
        "cursor": {
          "ref": "3a383ab8-4143-46d4-a0c8-eda8285973f9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81c4bf6f-a645-45eb-b52d-157399370e21"
        },
        "item": {
          "id": "a095ba95-e5ee-4f5c-8a7f-4d308da5fc59",
          "name": "did:invalid"
        },
        "response": {
          "id": "b38cc5c5-ad41-463e-be24-fa35b318c58e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1056,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a095ba95-e5ee-4f5c-8a7f-4d308da5fc59",
        "cursor": {
          "ref": "3a383ab8-4143-46d4-a0c8-eda8285973f9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81c4bf6f-a645-45eb-b52d-157399370e21"
        },
        "item": {
          "id": "a095ba95-e5ee-4f5c-8a7f-4d308da5fc59",
          "name": "did:invalid"
        },
        "response": {
          "id": "b38cc5c5-ad41-463e-be24-fa35b318c58e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1056,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a6b8a1-29c0-448c-8337-e17926a7349d",
        "cursor": {
          "ref": "b2060b02-15fb-46b0-8a4b-5727bc7a191c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dd078c5d-4a74-472f-b12d-4a48c44f0799"
        },
        "item": {
          "id": "94a6b8a1-29c0-448c-8337-e17926a7349d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7b0cd449-9e68-478d-a018-d93471957949",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8279a878-8faa-4f92-b3c6-09d098c992c0",
        "cursor": {
          "ref": "afdb920a-d0e2-4596-95df-0e03724a4a63",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1c7999df-c8a0-42b8-a005-202836e04492"
        },
        "item": {
          "id": "8279a878-8faa-4f92-b3c6-09d098c992c0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f5a25917-8647-40f6-a733-74faa2c2ae4f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf30c835-251a-41c9-a8c2-93403cfe2e0f",
        "cursor": {
          "ref": "68c02a9f-4168-4eb0-b62d-727554ab1db8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "68fba0dd-380e-4b9c-b4e9-ff6068f8453e"
        },
        "item": {
          "id": "cf30c835-251a-41c9-a8c2-93403cfe2e0f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5e68f792-6e20-49e3-b14b-15f67caebc42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 110,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1939c02e-fd49-4e5b-852d-1daf2c4defe2",
        "cursor": {
          "ref": "671324ab-2cd8-4122-b047-132c391087e7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f46f3a3b-5317-4898-b0e3-ec15c3fbf82a"
        },
        "item": {
          "id": "1939c02e-fd49-4e5b-852d-1daf2c4defe2",
          "name": "identifiers"
        },
        "response": {
          "id": "612d94fc-bd4b-4eb7-934b-fd85794a9d2a",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f68380-e798-4005-8ad6-80e6853dedc1",
        "cursor": {
          "ref": "abdbbabb-9792-46af-8850-daddd0809189",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "39f6a2b3-3019-48cc-9f5b-a2b62a506807"
        },
        "item": {
          "id": "45f68380-e798-4005-8ad6-80e6853dedc1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3ac7abe2-d767-410c-94c7-b88a0aaa2cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef9e604-deec-426d-ad02-6225dcbc702f",
        "cursor": {
          "ref": "02bf9580-25b4-49c6-9c2b-6a0dedf1447f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fc425422-32e5-4651-8b8a-933a7551e606"
        },
        "item": {
          "id": "bef9e604-deec-426d-ad02-6225dcbc702f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f424a2fe-edd6-40c9-9293-3b2dacb794bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9ec0d0-d593-4995-ab58-9dc22c8d1746",
        "cursor": {
          "ref": "14853a22-169e-45a5-8705-3a6334c3a179",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "04536f28-cf8f-4498-a06f-a67281794c14"
        },
        "item": {
          "id": "bd9ec0d0-d593-4995-ab58-9dc22c8d1746",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8ddbabc3-fa6a-432c-9712-6a7a197cbcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846aec87-d067-400f-8f53-83cec545671e",
        "cursor": {
          "ref": "0f39df88-c40d-497a-8e81-1a759cf4e91a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "83ef0b45-c36e-4e8c-b61f-8445f68ff5ee"
        },
        "item": {
          "id": "846aec87-d067-400f-8f53-83cec545671e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2ee201c0-965c-4f63-8872-91343680c121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3312ca60-46ad-4cf0-9986-a7f7062228ec",
        "cursor": {
          "ref": "409e9e30-4255-448b-b68b-a4149d93a62d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e3d0af13-d7b9-48b6-86e9-0b6bf218d822"
        },
        "item": {
          "id": "3312ca60-46ad-4cf0-9986-a7f7062228ec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f6a34c83-d2a4-4196-b18c-fcf8867227ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e6da2c-e0c9-4ccb-8653-75f8a2d0e8d3",
        "cursor": {
          "ref": "6c8438d3-8ea2-4961-b74f-65e0349905c2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bce1a1db-4885-42b6-b2ff-4770dc8375ca"
        },
        "item": {
          "id": "d1e6da2c-e0c9-4ccb-8653-75f8a2d0e8d3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "218fc926-13c0-40cb-bbe2-ca65a9777d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b197663-0799-4b46-bf3f-ee4e5d5bec55",
        "cursor": {
          "ref": "2e464bd5-08f6-42ea-b525-c9b4cc39699e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "da878026-c6e6-4054-80fa-eb1d986c4e7e"
        },
        "item": {
          "id": "4b197663-0799-4b46-bf3f-ee4e5d5bec55",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "724b5ed1-b720-4690-bb74-5cd819fe39b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3a186f-1906-417a-9000-a85e0c6af2e2",
        "cursor": {
          "ref": "6c900b6f-cc9c-447a-829e-49fc173740cc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dd6d4e72-5074-490d-89bf-684ff5fb8fa6"
        },
        "item": {
          "id": "3b3a186f-1906-417a-9000-a85e0c6af2e2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "da614283-3287-495a-bac5-4ff08822c994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a7d7dc-be62-4975-8120-18671ae6eecc",
        "cursor": {
          "ref": "f6483a4e-c4bf-4ca9-b8bf-a51d49a08360",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "42183ec9-c78a-493c-9ded-69e3b134ce59"
        },
        "item": {
          "id": "e0a7d7dc-be62-4975-8120-18671ae6eecc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ee2cb881-170c-467c-9f3b-9e24a5af164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37789db5-e1da-4f36-a180-1d9bda6b14de",
        "cursor": {
          "ref": "756d739d-dad0-4f4e-b853-87a8519f4d23",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ea46e5b0-23ee-4644-985b-a6305dc61bd5"
        },
        "item": {
          "id": "37789db5-e1da-4f36-a180-1d9bda6b14de",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3d5351f1-ba02-4e40-8e69-b1ecc7ac4750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6212c46-24c3-442a-b9dd-09c02842ff3b",
        "cursor": {
          "ref": "44458d54-d22a-4591-8b16-d1947ee99350",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4a639f09-911a-4d43-94f5-7eacec26f269"
        },
        "item": {
          "id": "e6212c46-24c3-442a-b9dd-09c02842ff3b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "33a5e7da-5e5b-4c36-8191-1d37a7614765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816e9017-2752-4ac0-ae6f-95d8a30dea2a",
        "cursor": {
          "ref": "5fc5d9a7-a69c-4b95-97a6-c3d57d298e2b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "715450f8-5b5d-4e3b-8800-8c9041582658"
        },
        "item": {
          "id": "816e9017-2752-4ac0-ae6f-95d8a30dea2a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c70a7765-24fa-4e2e-ad1a-f0194c21b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bbb231-8a40-412d-993f-bd20b0d7f1e4",
        "cursor": {
          "ref": "8c8f43e3-cda2-4992-b674-d41ef4ac75e8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "744b27e1-9787-4e73-9039-783bd0aa94f8"
        },
        "item": {
          "id": "96bbb231-8a40-412d-993f-bd20b0d7f1e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "468532cb-832e-4b17-87f5-84c9131e94f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d022c633-0783-4765-96b5-14656e56bb8a",
        "cursor": {
          "ref": "1cfb5cac-b651-48c3-9f84-e75700323c1e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5b0798c4-6916-48ba-8b94-2d8a332998fb"
        },
        "item": {
          "id": "d022c633-0783-4765-96b5-14656e56bb8a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "db3b1b7b-6cfc-4913-8376-cf7c39cb7f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb717aa-6f64-4c6d-a79c-5eb53edb71f4",
        "cursor": {
          "ref": "35269ff1-8227-463a-a646-aa6859582930",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "081a2ac3-6fe3-4c94-9608-1945d72da22c"
        },
        "item": {
          "id": "5eb717aa-6f64-4c6d-a79c-5eb53edb71f4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "31353425-a83c-48f6-b972-a59f25a14fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b66cdd3-4de0-43b1-80cd-bc7a106d9288",
        "cursor": {
          "ref": "af99e49d-7251-4e3e-ac09-261dcd966fdd",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "23144fb4-d79b-4f7f-8981-f0bb47bf97f7"
        },
        "item": {
          "id": "4b66cdd3-4de0-43b1-80cd-bc7a106d9288",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8acf6c11-dcee-4eb4-8110-573062700239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3609959d-ccda-4177-bd0c-d06c588f08f4",
        "cursor": {
          "ref": "52e920d8-e40e-4953-ba00-188fe74fed25",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fcdfb07e-7d56-4a5d-8336-9b073241cd06"
        },
        "item": {
          "id": "3609959d-ccda-4177-bd0c-d06c588f08f4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a7cbb2a5-e778-4ee0-a486-f75e46e312af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a88ee0-17e1-4ace-b825-05fd4092cc26",
        "cursor": {
          "ref": "020fbfc5-6e27-432e-ac36-d7f1c1afe9b1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bbe91d51-938f-46b1-9cc7-0343c55312c4"
        },
        "item": {
          "id": "86a88ee0-17e1-4ace-b825-05fd4092cc26",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0fa94697-9b70-4e0c-99d8-62c9540c4e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad145580-a2f5-4d05-b48a-6dd8cf0245e5",
        "cursor": {
          "ref": "b0ac9132-257c-406a-b787-30f46b617266",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "341bdb70-2ca8-44d0-ba22-58ffe34dc294"
        },
        "item": {
          "id": "ad145580-a2f5-4d05-b48a-6dd8cf0245e5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a3392a18-c6b1-48c6-a901-3fccb7c01980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bc6ad0-7bcb-467d-be70-0c51b44c8fc5",
        "cursor": {
          "ref": "e073b207-7abb-4d22-a654-b0aee7aa797d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "48812d75-a1ac-405b-b275-c9d7c21b3d30"
        },
        "item": {
          "id": "61bc6ad0-7bcb-467d-be70-0c51b44c8fc5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f47d69d5-0286-4f8d-b810-b6487ff8b78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bbd004-af4a-44dc-a1df-18400b0a5c63",
        "cursor": {
          "ref": "72b44c5c-3f9a-423e-a894-cd53e516fe62",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "612f05ac-bba7-47a9-ad26-a9f3274b0503"
        },
        "item": {
          "id": "81bbd004-af4a-44dc-a1df-18400b0a5c63",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a6b9651e-af7f-4e04-836c-425dbf872b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e65f02b-f4a5-4d70-a856-84dbf60c92c1",
        "cursor": {
          "ref": "d8528991-71b8-4dff-ba62-71fa2490417b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2cea8205-61f7-42b9-b5dc-d68b4a9e9887"
        },
        "item": {
          "id": "2e65f02b-f4a5-4d70-a856-84dbf60c92c1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cd540633-f085-4a1e-9817-bf9f1f730cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98686104-7c03-4874-ab5d-290fafa256d9",
        "cursor": {
          "ref": "16774628-1bcf-49f0-94ac-9f1410a0661a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3c6b450c-8c7a-4ba8-b55f-4228fdb65653"
        },
        "item": {
          "id": "98686104-7c03-4874-ab5d-290fafa256d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "86d0e0c8-0921-45be-92b7-f7c8507d10c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dd8bbc-b074-42bc-8e7b-129a10268c44",
        "cursor": {
          "ref": "6a20a9dc-6435-413f-acfc-d46629955eb6",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "db29fb09-4a84-4055-a74a-f6066d760eb9"
        },
        "item": {
          "id": "92dd8bbc-b074-42bc-8e7b-129a10268c44",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "72ab1f33-1988-4d7f-a873-13a4ac2bfbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecfb83d-f493-47b4-b684-169bee7f4fff",
        "cursor": {
          "ref": "4c0af66b-8a11-42f4-adfc-318ccb73bc21",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "20d3505b-c919-467c-a2cf-8748ff51804d"
        },
        "item": {
          "id": "3ecfb83d-f493-47b4-b684-169bee7f4fff",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "638b6fb4-08f5-494e-be8b-e1ad89d07f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee52d1d-f846-4fa3-9831-816be7833e0c",
        "cursor": {
          "ref": "640f6b7c-973f-4407-bdab-103172c1f287",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1010fb3b-2d47-46de-986f-512fcc69381c"
        },
        "item": {
          "id": "dee52d1d-f846-4fa3-9831-816be7833e0c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bf2e18d3-5391-4812-9230-a4935b9d2cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f714cd-5c05-4364-b08b-b3c65a07396f",
        "cursor": {
          "ref": "ae75315d-6da1-4063-8558-d1a03884ddae",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5293f7b2-931a-4ac2-be6a-430180a8b4ec"
        },
        "item": {
          "id": "f7f714cd-5c05-4364-b08b-b3c65a07396f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "95d7f523-3d3a-4469-a501-7e035b9853c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03836e9-b314-458d-b8de-35f95ed12f56",
        "cursor": {
          "ref": "bca41cfe-9bf6-4e91-bd3c-62671e2433f6",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "62dc86bc-2ca7-4f80-8fa1-80fed3635150"
        },
        "item": {
          "id": "e03836e9-b314-458d-b8de-35f95ed12f56",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6757b54d-283c-4d60-baa5-f3fa8ac92df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cec9996-9d21-4237-8a5c-3081945db898",
        "cursor": {
          "ref": "489a9627-cb02-40d2-a805-610ce66295cb",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6f8015db-1d0e-4c47-aba9-33c61c06ec96"
        },
        "item": {
          "id": "5cec9996-9d21-4237-8a5c-3081945db898",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c9e96a08-d45d-4528-9190-8e9a08b5ab39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dddfa96-73ea-44c6-8ebc-f9ae7e2fed97",
        "cursor": {
          "ref": "717098fc-8743-4cdb-aa37-31cde7e1414e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "263999bf-f3e4-40d1-b30f-ff9c83717cb8"
        },
        "item": {
          "id": "1dddfa96-73ea-44c6-8ebc-f9ae7e2fed97",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9d3073b4-5de8-4d5f-9424-e8a916c4ded1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f2bb62-a74b-4284-95d7-cff8bd62f87c",
        "cursor": {
          "ref": "692fb51a-d6a6-44f4-a1b3-023e7a0c9b3b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5cbe566e-f773-4203-a93a-8b2b5034a746"
        },
        "item": {
          "id": "23f2bb62-a74b-4284-95d7-cff8bd62f87c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e133853e-1ffc-4276-b951-34a1f270f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a26f59-bfdc-442f-99ea-e18a7f4ab675",
        "cursor": {
          "ref": "7e72ede3-8c56-4ac4-a0ce-586c3f8d83c2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9a827377-526f-4d06-b9c4-895df51056e1"
        },
        "item": {
          "id": "16a26f59-bfdc-442f-99ea-e18a7f4ab675",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e5c4a3ba-d53d-481b-9504-b481010af528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17caa71f-340a-4d5a-8751-8d4a22ee3d9c",
        "cursor": {
          "ref": "e7b5682d-02d6-4734-957b-28d3477090f9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9c7649cd-e956-4d1d-bd62-3b69d9aa9c11"
        },
        "item": {
          "id": "17caa71f-340a-4d5a-8751-8d4a22ee3d9c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "42c278c4-67e9-40b2-bc2f-d4d248fd106a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3c7d16-03de-4de0-83a5-9528d91af247",
        "cursor": {
          "ref": "d4b8df9f-837f-4d74-a3d9-b74556b8b405",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "52a44232-c6df-4e99-8008-17ea41ff51e6"
        },
        "item": {
          "id": "5a3c7d16-03de-4de0-83a5-9528d91af247",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "259b2e04-2fb3-4944-83c5-afa2317131c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9acb22b-9579-4e56-a431-12a3b0ecb7e5",
        "cursor": {
          "ref": "6d2d7d30-405d-4567-9e93-1ebaea12a07e",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4524c320-d30c-4bc1-beab-4c74520efe20"
        },
        "item": {
          "id": "c9acb22b-9579-4e56-a431-12a3b0ecb7e5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "efac6410-b2bf-40e9-b707-8bab8dd880e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e621613-bd8b-4dd8-9282-ee9eeb61d399",
        "cursor": {
          "ref": "91dac9ee-0212-445b-bf41-a7858b26e745",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4b957b64-5e7e-4e65-a316-30d1f7f0047d"
        },
        "item": {
          "id": "7e621613-bd8b-4dd8-9282-ee9eeb61d399",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f4f505ec-96d1-4332-a7cb-6276414e5557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ddf7d9-02ea-412f-9ad4-8337451c78f3",
        "cursor": {
          "ref": "df574b7d-406a-4b65-99fc-7295f5dc014e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3597e1ab-f8da-457c-a280-05bfbe605915"
        },
        "item": {
          "id": "94ddf7d9-02ea-412f-9ad4-8337451c78f3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e14a58b5-398b-4c21-b872-57e6c5ba7522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dee5ef-b200-4247-a35f-7e1b905dc818",
        "cursor": {
          "ref": "c6e36fd5-8667-4bb1-aca5-470fb377eae2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c61bfeb-9db9-4c14-8e4d-49a3a6a68488"
        },
        "item": {
          "id": "f1dee5ef-b200-4247-a35f-7e1b905dc818",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1f67a482-9959-49f0-98c7-9af0058eab20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc43767f-9bc9-474f-8ed6-19d39779bf60",
        "cursor": {
          "ref": "054ba90d-0b94-4023-b4be-82cdb1155343",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5deb2cc0-2f5c-4ed3-a7da-afa039469cd5"
        },
        "item": {
          "id": "cc43767f-9bc9-474f-8ed6-19d39779bf60",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cdb46051-fd89-4a24-a35d-749df76263dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0caae6-f4f6-4df8-bfd8-ea4cee13bf21",
        "cursor": {
          "ref": "044d346a-2f94-4cca-8f21-039e833ddc17",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1dc6c8dd-29be-4c5f-8223-dc3b77153ad9"
        },
        "item": {
          "id": "1c0caae6-f4f6-4df8-bfd8-ea4cee13bf21",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "74888b49-3dfc-44d0-b8e8-b743f863ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fc1722-3162-45a4-9d7e-bc9a2fadacb6",
        "cursor": {
          "ref": "502c11fb-39c5-48ee-b379-2790df0a0cc2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4338627a-a640-4475-8aee-fc00d15dfac2"
        },
        "item": {
          "id": "95fc1722-3162-45a4-9d7e-bc9a2fadacb6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9aa988f1-aa95-4bf6-bfa4-a4c25791be90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa52d7d-1414-466b-be05-1252d2596412",
        "cursor": {
          "ref": "655fdaf3-10ad-400c-8d3e-c3c109e69032",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "27be8f94-2d5f-4e68-a539-5e674b62337e"
        },
        "item": {
          "id": "8fa52d7d-1414-466b-be05-1252d2596412",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f121bf57-ad72-4cdd-949d-b69dbd06c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88a3ab0-eb95-4864-9d66-3b7fc2f74bc7",
        "cursor": {
          "ref": "9c7f9e16-b185-4d3d-b412-f2a73b840e12",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "eee82470-5ef1-44f9-b558-856e10b96829"
        },
        "item": {
          "id": "f88a3ab0-eb95-4864-9d66-3b7fc2f74bc7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bed81168-1d64-4be3-8a9a-0cafa63c9d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ccc28d-97e7-4f32-8672-815f98d3be14",
        "cursor": {
          "ref": "150fdd07-f3c5-454b-b219-08acc0d8210a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "236ed987-4e30-487c-817e-da147ac5de73"
        },
        "item": {
          "id": "49ccc28d-97e7-4f32-8672-815f98d3be14",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "703fdc94-32c4-4ef7-9daa-8be61eafe7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d0599d-8bc3-4f69-9ea7-bf620e4dfa42",
        "cursor": {
          "ref": "4c736ae0-556f-4ef6-9c3e-525726d98910",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e8537247-7904-4ba6-8351-4f4e1395e895"
        },
        "item": {
          "id": "18d0599d-8bc3-4f69-9ea7-bf620e4dfa42",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "94339551-0702-42cd-8dcc-65ef9ccb81b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc50ee00-4138-4d9d-a9a9-3108f61ca413",
        "cursor": {
          "ref": "1755d5c3-21a2-47f2-9d75-c4d6c1c04370",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "12bb09fc-8921-4075-84a5-32cd08a19916"
        },
        "item": {
          "id": "fc50ee00-4138-4d9d-a9a9-3108f61ca413",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "18b18dd2-ec92-4b32-a373-ce8f00ae1115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9d3e5a-8afa-4434-9877-a4caf33b0f28",
        "cursor": {
          "ref": "ad2bd4ef-1b05-40e8-97c1-aafee8dfe40e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ef118e68-d2ca-4969-88b8-a8ba5b38b588"
        },
        "item": {
          "id": "ab9d3e5a-8afa-4434-9877-a4caf33b0f28",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e26bab78-add8-4805-ae8b-b773d4292059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7adbce-b40b-41ef-8cda-6ff9fd052166",
        "cursor": {
          "ref": "db809fd8-6c53-4774-a32b-d8088c9c732c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bfe09a42-a0be-4d5c-a28f-63c4126c9088"
        },
        "item": {
          "id": "1d7adbce-b40b-41ef-8cda-6ff9fd052166",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ad2df0a3-d688-4776-bba6-4994a8953b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a195cdf9-319e-4a80-8af9-4e274cb90ec6",
        "cursor": {
          "ref": "326fdd49-1775-4b2d-bf07-d2a110f8e557",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fefa49a3-e7fc-430e-a4b6-b3ac741def89"
        },
        "item": {
          "id": "a195cdf9-319e-4a80-8af9-4e274cb90ec6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "384982b9-0e5b-4d98-bac6-178fdf6bf578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452ed26a-a548-47c4-84d3-daa907f55740",
        "cursor": {
          "ref": "46e83a85-3441-4109-bd5b-4c9f64324e01",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8693658f-5fd9-4648-89df-0d42106c41de"
        },
        "item": {
          "id": "452ed26a-a548-47c4-84d3-daa907f55740",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6f3d839f-4d7b-4d24-b8fc-7fc3a70c8290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84fefd2-35dc-49e0-97f4-de957700b6f5",
        "cursor": {
          "ref": "941378d5-2ab3-469a-8fc2-4e89c51a10d4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6b3ebad6-e155-48d1-906d-d06728570563"
        },
        "item": {
          "id": "c84fefd2-35dc-49e0-97f4-de957700b6f5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0560de98-5d1e-4382-b768-88c3a7326c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5ffd14-b8f2-41fc-a89e-0a25fdbd1b3d",
        "cursor": {
          "ref": "ef7d8a7e-72b1-40dc-bc76-8c5256d14989",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "60a578c5-44a3-4edc-8725-314e9930debb"
        },
        "item": {
          "id": "5b5ffd14-b8f2-41fc-a89e-0a25fdbd1b3d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4db3a09d-c5ef-43ae-80ea-cfbc8d6e808d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f512584-218d-4043-b6a5-259b19f6234f",
        "cursor": {
          "ref": "ec2d5a97-57f0-4531-b8d7-078afcbfbe05",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9ce672df-0923-44c8-8842-d734ee6e6906"
        },
        "item": {
          "id": "1f512584-218d-4043-b6a5-259b19f6234f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e0efe366-0a5f-4f5b-ae7c-6962bcde5223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52daa8cf-e601-4007-8241-f00f88db9ab4",
        "cursor": {
          "ref": "9f003f74-afc7-4b16-9c54-8fed223ffef9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b27b9883-3aea-47da-94f3-f56de1314e5f"
        },
        "item": {
          "id": "52daa8cf-e601-4007-8241-f00f88db9ab4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "83bfd6b9-0b36-4450-a2e5-3f9f9e7186ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d58b2-09dc-4b92-b731-4218faba5185",
        "cursor": {
          "ref": "7abc9ab7-8592-46c5-a6b7-9ff258a44078",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "84cd72d9-bac6-4450-a1db-a9f7e240ee8b"
        },
        "item": {
          "id": "ac0d58b2-09dc-4b92-b731-4218faba5185",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aca12688-b4ca-46fc-bfc8-bf19349c0ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b1f90b-7a0a-43ec-8f25-140b1aa1f1b6",
        "cursor": {
          "ref": "16d595d6-3c9b-4a6b-82ab-5ba0740818bb",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7a1de1f-2ec5-4860-8793-e8f7d528d9b9"
        },
        "item": {
          "id": "a5b1f90b-7a0a-43ec-8f25-140b1aa1f1b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f19f8e7d-d3a2-4126-bcca-4bbc4a613efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125c57fe-07db-46f1-aafb-d930d020dcfb",
        "cursor": {
          "ref": "aa069b75-98d2-4bb6-9d10-596acf8b4577",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8b938717-4c22-4817-bc5a-0392777a95b2"
        },
        "item": {
          "id": "125c57fe-07db-46f1-aafb-d930d020dcfb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "48f81312-b169-4338-8bce-6d65cec88f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d507b44a-1557-4096-9977-7ca8f6de0b54",
        "cursor": {
          "ref": "7d99cb1b-badc-4c22-a9ee-89e70e203e24",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "056ef12c-2b77-42f8-9fcd-4fab0d0a0876"
        },
        "item": {
          "id": "d507b44a-1557-4096-9977-7ca8f6de0b54",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "313bf5b5-90b6-4890-b031-c26832bc14db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c644ba83-defc-414e-bb8d-7b9251f145a9",
        "cursor": {
          "ref": "14de7747-e086-4008-b0cd-c5b0e2aa0312",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2730b1e7-f44a-4775-8b9f-4f59ee37a0a7"
        },
        "item": {
          "id": "c644ba83-defc-414e-bb8d-7b9251f145a9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b038b67a-2c7c-4787-b0c0-5b61ec04be1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b08508-175f-497a-bb13-3f59e017c957",
        "cursor": {
          "ref": "4cde1554-e317-41b5-992d-8a43e1e6f4b3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dfcc45f4-9711-42bd-8692-354ff0ecd5d2"
        },
        "item": {
          "id": "88b08508-175f-497a-bb13-3f59e017c957",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d7a7012c-8793-4a1b-be5a-08eff86da05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5203be66-ef8d-4762-b528-43b0c2c2aa6f",
        "cursor": {
          "ref": "6e776b99-cce3-431d-ae4c-5dd459dcc67b",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bebcdc59-2a0f-4295-aeb2-e2235bf207dc"
        },
        "item": {
          "id": "5203be66-ef8d-4762-b528-43b0c2c2aa6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9996827e-5695-4de0-956c-4d71508146a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048fdffc-65fb-40d9-b4c8-dc0ebc3fec9f",
        "cursor": {
          "ref": "757e42a5-b6de-4431-ae06-c6d16bc49350",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "208a383d-9dfc-4678-9057-b1ca6b1c8ded"
        },
        "item": {
          "id": "048fdffc-65fb-40d9-b4c8-dc0ebc3fec9f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "908c5427-25f4-4f88-8b40-03933a616ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569b76d4-e586-4557-afa2-bf32923e304d",
        "cursor": {
          "ref": "8ad82bc0-8927-4d7c-aa79-1b00ac7427ce",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bdd3ca0f-5c67-4870-b683-081c10bae589"
        },
        "item": {
          "id": "569b76d4-e586-4557-afa2-bf32923e304d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37028ce1-b44b-4984-aa5a-237b3b3718dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32f9f09-5c0c-431a-bd89-d901ab536df0",
        "cursor": {
          "ref": "1037a345-f354-4d54-9033-9825d3b85ccd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ec97c4e7-2e33-4a9d-88ba-f37e302c4614"
        },
        "item": {
          "id": "e32f9f09-5c0c-431a-bd89-d901ab536df0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b478af77-b2c4-413e-a464-c9a09e2840f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc863b3-5e2b-4290-bc42-b874d166ba12",
        "cursor": {
          "ref": "b62a9216-7676-47e9-94a1-4243cda6fe34",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "183ba7b7-cf73-4d08-8c91-40a70da67e13"
        },
        "item": {
          "id": "bbc863b3-5e2b-4290-bc42-b874d166ba12",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "40f55929-6ec1-4ffb-bb3a-96df175e9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314dc6a7-ec66-4d53-84d0-80aa5313020e",
        "cursor": {
          "ref": "7d264252-c222-4f69-a3ea-7053adb009ba",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "84a402fd-93dd-452f-9b21-f67b0705367d"
        },
        "item": {
          "id": "314dc6a7-ec66-4d53-84d0-80aa5313020e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "619a63ff-5a7b-44bc-8324-a139c4d5f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a32282-a1f8-4b08-b361-e4c3a92b699b",
        "cursor": {
          "ref": "bb4e908e-44f1-4cb9-b74a-504967c1c77a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "11194188-2dbf-4539-b26e-80cd2aab9a76"
        },
        "item": {
          "id": "16a32282-a1f8-4b08-b361-e4c3a92b699b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e9625d24-e643-42ff-9799-8d698455e4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a53dec-25b6-4ae3-9002-fe947f465efc",
        "cursor": {
          "ref": "a6edd74d-caba-460d-9ae7-66878e509dbd",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "91ac2cf8-026e-4275-8830-f91c48e832c5"
        },
        "item": {
          "id": "86a53dec-25b6-4ae3-9002-fe947f465efc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3e55164f-d632-4661-abe5-3647b1e27030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be35d2fe-2363-47ee-9b7d-8361d310821c",
        "cursor": {
          "ref": "6482133b-5abc-4075-8e3b-315d59232156",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea23b1a1-bbf8-47c8-b611-b11db1022fd0"
        },
        "item": {
          "id": "be35d2fe-2363-47ee-9b7d-8361d310821c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f236cb12-138b-4bf4-b08b-d5d66bc6bac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f996cd39-eba0-49f1-9be0-8077fe7fac06",
        "cursor": {
          "ref": "7cd7fe23-53cd-41a1-8f7a-4872ba420159",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "66311c45-2da6-4234-81d5-cbdeb39f05b4"
        },
        "item": {
          "id": "f996cd39-eba0-49f1-9be0-8077fe7fac06",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "beae3551-a38e-44d1-8eb5-b0c505049597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72bf98b-3e82-414c-859d-abae243795dc",
        "cursor": {
          "ref": "eb138cd6-3243-4ec1-8882-aeb527de93a7",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f2a85da0-c4a5-49b1-990e-0c3d6743ea3c"
        },
        "item": {
          "id": "b72bf98b-3e82-414c-859d-abae243795dc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "422cfc97-15b5-47c4-a9ab-fd4f5fc228d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412ec191-3a15-46e5-a52b-376d1eaaf644",
        "cursor": {
          "ref": "27509578-eaec-4fc1-ac82-7eaf8da53dad",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "58133a78-217c-41ec-85cd-66bf1d703f16"
        },
        "item": {
          "id": "412ec191-3a15-46e5-a52b-376d1eaaf644",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1227c23a-e350-4085-ad6c-d65cc33320ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48c023f-0d9c-412c-b3a5-a911fa3e7bec",
        "cursor": {
          "ref": "79948539-0af4-4055-bc67-578119c82e47",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3a7e5995-cc34-4fda-bc41-306fe93a8506"
        },
        "item": {
          "id": "e48c023f-0d9c-412c-b3a5-a911fa3e7bec",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0deca97a-6701-4d72-b879-5a53fda90e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8154643c-cd46-4b94-a372-737946a92870",
        "cursor": {
          "ref": "08518796-9c1e-4b38-80bc-a2e5c5282ed7",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a277709f-b466-477f-886c-b7b15b5328bc"
        },
        "item": {
          "id": "8154643c-cd46-4b94-a372-737946a92870",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c4a24641-1adc-45bf-9957-9ae6f3361d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53a21ce-3b82-49bb-b970-cdbd3bf08dfe",
        "cursor": {
          "ref": "2c1299e3-a2ad-4736-ac0b-66b92eb7de0b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "10b50f04-1ba6-4419-9345-f69281714b86"
        },
        "item": {
          "id": "f53a21ce-3b82-49bb-b970-cdbd3bf08dfe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d9773333-1f85-44fc-8639-bbdc956893dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239e5986-2c70-4d5b-a0ee-6b622a198f86",
        "cursor": {
          "ref": "dfed5aca-7c19-4b80-9fa5-d9b8b054ab7b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8deb429c-b6e0-4948-92e3-da9dfb8aa1b0"
        },
        "item": {
          "id": "239e5986-2c70-4d5b-a0ee-6b622a198f86",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cdc1950f-0fc6-44ad-b96e-180335790342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b062dc14-c40f-4bdb-8428-35cf32cec453",
        "cursor": {
          "ref": "4f395e4e-606a-4314-9e40-395da5b34f73",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2951b2ff-5d03-4ca5-a0d0-aa42a692e135"
        },
        "item": {
          "id": "b062dc14-c40f-4bdb-8428-35cf32cec453",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ef5a1d77-7549-4609-b6ad-01952e48fc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da61b2e-74dc-4feb-9d2f-00d740a45999",
        "cursor": {
          "ref": "17bffa8c-831d-41bb-95ce-90a8bef30d41",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "19d22437-6cdd-48fb-b18f-fc08b882efae"
        },
        "item": {
          "id": "1da61b2e-74dc-4feb-9d2f-00d740a45999",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bcac0eb0-4f80-4c59-910d-7d6c777f9ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b4380d-27d4-4f47-8381-656b16499ce6",
        "cursor": {
          "ref": "252fda56-ecd7-4dad-9e9a-96ca355225c6",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b67209e7-9d69-45e0-b3c4-89568d132b1a"
        },
        "item": {
          "id": "79b4380d-27d4-4f47-8381-656b16499ce6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d4b55051-ec9f-4b22-923b-8407a14bd2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d405b96d-8f88-4f14-a6ad-f088ac61dc72",
        "cursor": {
          "ref": "bf146149-1c77-4c67-a743-6d8954052056",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "780948db-9208-4614-a8cf-4746eaa6bd2b"
        },
        "item": {
          "id": "d405b96d-8f88-4f14-a6ad-f088ac61dc72",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "69d44a00-d012-4031-a83c-0eed4572632c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92b2a17-b31b-4af8-9bbc-0fe62c7ca6ac",
        "cursor": {
          "ref": "7cf0d493-c456-4864-9d0d-e30940bf78ac",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6d170770-8865-427c-8b64-28cb28d01360"
        },
        "item": {
          "id": "e92b2a17-b31b-4af8-9bbc-0fe62c7ca6ac",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "71a97f3a-d8fd-4fd6-82bf-71b8a1278203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01413757-50d2-4bd7-96f0-2f86cc51eada",
        "cursor": {
          "ref": "45cb2527-f4fa-4812-ba24-6dae2c009232",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "335cc920-285b-460d-a496-a8e6eaf18257"
        },
        "item": {
          "id": "01413757-50d2-4bd7-96f0-2f86cc51eada",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "04af9908-f418-4cd5-8e21-e6d18c4814d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b88b5f1-8318-4d67-b2b6-10ac94d0dc32",
        "cursor": {
          "ref": "6654049a-051a-45c9-ba68-bfa2ecbdcbcb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "40ea6870-dc98-4209-9b0c-4e2dcb6ef906"
        },
        "item": {
          "id": "5b88b5f1-8318-4d67-b2b6-10ac94d0dc32",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "65265378-5768-4469-9e7c-f7f7c57b99bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc29548d-5713-4432-8189-b93ed41d7bd7",
        "cursor": {
          "ref": "7b611055-6a8d-4f00-b436-e866c6b4e44e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2c4353c-9ad8-4ba1-b8d0-9116ecea3bf5"
        },
        "item": {
          "id": "fc29548d-5713-4432-8189-b93ed41d7bd7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "276128c4-7931-4cf0-85e3-5dab07400185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86ed1b7-296b-447f-9035-f7a7d626441c",
        "cursor": {
          "ref": "1d7d3969-6770-4f81-b494-26f52fa073c7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9820fa20-6cb7-4619-9dd1-be1c13f2c21c"
        },
        "item": {
          "id": "c86ed1b7-296b-447f-9035-f7a7d626441c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "889e0dd2-6937-4d39-81e2-244c41d3cd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3564a22-f86e-43e8-bce5-a84b18552a21",
        "cursor": {
          "ref": "40fb2837-fc3b-4e21-ba4e-79543bd22b0e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f499a3e1-05fa-4c07-ab7f-c0ba37566242"
        },
        "item": {
          "id": "b3564a22-f86e-43e8-bce5-a84b18552a21",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "30b52373-226f-47ef-bba4-8041f54f0403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0283efd-2ce6-4d0a-8458-c68c961ce22e",
        "cursor": {
          "ref": "5c1b2bfd-2107-4626-a25a-10217ff4942b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5d67c81d-76b7-4b25-964e-fae98e4c2ef3"
        },
        "item": {
          "id": "b0283efd-2ce6-4d0a-8458-c68c961ce22e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4ac88cee-2f86-4281-9f45-82036f0230a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0905d367-64ff-4067-ae09-dd811b9ad7c2",
        "cursor": {
          "ref": "cce7eb47-1607-4202-9db3-b349f626e750",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "daee17c2-e8e9-4bf0-8a61-8904fe86dc39"
        },
        "item": {
          "id": "0905d367-64ff-4067-ae09-dd811b9ad7c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0dd6e651-dad4-49d8-b348-48d01cd76a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d08d68b-caaf-4394-a03f-b350cb7aafd3",
        "cursor": {
          "ref": "65ec9e2b-2365-46e2-afc4-7c10478ec41e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "851c756c-e3f1-4668-8143-99ca26505bfa"
        },
        "item": {
          "id": "1d08d68b-caaf-4394-a03f-b350cb7aafd3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7dfe6a10-0321-4b53-93ac-5d62a6d528e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eaa8d4-9f44-4490-9149-fe702bd8ab49",
        "cursor": {
          "ref": "936f2b8c-6b54-40cd-a4a1-76a0d57ac640",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9f1a33da-0672-4c8c-a001-4a20fbb4dfc1"
        },
        "item": {
          "id": "63eaa8d4-9f44-4490-9149-fe702bd8ab49",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4ee4bee7-2617-468f-a2b7-a08648d64038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a224fe69-fb05-4d1c-8ab9-404016b940b9",
        "cursor": {
          "ref": "906a7b92-f507-4d5c-b1f7-eb2ef6bc14d5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "63594e28-3462-4ea2-98c1-27bdba3fa552"
        },
        "item": {
          "id": "a224fe69-fb05-4d1c-8ab9-404016b940b9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5a0ef24e-6b76-47f6-9e3c-f9a4a186e50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52abdd1-7bc6-43ca-80dc-de1b70d1f5b0",
        "cursor": {
          "ref": "766a4259-7a78-4a0c-a5af-1487da2be6be",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2c45c37f-73aa-40d5-8f85-3371264ea88b"
        },
        "item": {
          "id": "a52abdd1-7bc6-43ca-80dc-de1b70d1f5b0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9433cfa2-c510-4fdc-a6df-c2611d13f9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92395458-c8d8-46fd-a6d7-327be0114e1e",
        "cursor": {
          "ref": "164fa489-54c0-434a-9af1-7b1032cd91ea",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "09cee94d-ae0d-413a-9e49-aae5c9ffe47e"
        },
        "item": {
          "id": "92395458-c8d8-46fd-a6d7-327be0114e1e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "60bbde10-4e3d-48c3-b0d9-aaa2ebbc82b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3add39-50c6-41fe-9424-b120846625df",
        "cursor": {
          "ref": "e05fff7b-68a9-4392-81d9-a8d4a518a002",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a7d3003e-67d0-468b-864c-5d9201b58487"
        },
        "item": {
          "id": "7a3add39-50c6-41fe-9424-b120846625df",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "418e4915-f44a-4326-aa75-2a61fb49df9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ce345abb-5b6a-45bd-a447-834e40f3015b",
        "cursor": {
          "ref": "df251342-b912-4233-95a6-cabee4995f64",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0cbcba9a-b96d-4bb8-81ab-8bea8131c093"
        },
        "item": {
          "id": "ce345abb-5b6a-45bd-a447-834e40f3015b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "58cb13fa-f01d-42ce-b337-6e58fd39e384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b73051f9-0228-41e2-a7dc-3404661765bd",
        "cursor": {
          "ref": "4ab0735c-b0e9-49ad-8168-fa19e4860b56",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cb876a4a-06bf-4d1e-87f3-1c8b2747275e"
        },
        "item": {
          "id": "b73051f9-0228-41e2-a7dc-3404661765bd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2cf498ce-65ce-4517-b6d2-d525515ef1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7c8d0b5d-0d8a-43b5-9492-76a8e1d97cfe",
        "cursor": {
          "ref": "a528eb5a-7d02-4d8a-9fd9-6d9ff7b4fb8f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ac0b064b-9d96-4bca-b4e4-73b9b315d9a4"
        },
        "item": {
          "id": "7c8d0b5d-0d8a-43b5-9492-76a8e1d97cfe",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d238a206-c24e-4c18-818d-76ce6289bbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1721bde4-fcee-4a14-adbf-7e1560450cce",
        "cursor": {
          "ref": "aed0c120-ef30-40e9-8870-3d5513fba862",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c8b5d690-5d91-4e4e-8e1f-06e1c56139b5"
        },
        "item": {
          "id": "1721bde4-fcee-4a14-adbf-7e1560450cce",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0e3ec7f7-bcd8-4ff5-9276-3f4841c10c08",
          "status": "Created",
          "code": 201,
          "responseTime": 8685,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7789a7be-59f7-45e0-9218-d820aa95078d",
        "cursor": {
          "ref": "bbfa1118-0ac0-41b3-bb8b-66ef4aa035b6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b091c190-9198-4b44-96a6-1f3d7a25f248"
        },
        "item": {
          "id": "7789a7be-59f7-45e0-9218-d820aa95078d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aa8cb0cf-982f-4d4b-a4c7-8f6f8dd32e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8b1ddec1-98b1-4406-8a71-0df831c69aaa",
        "cursor": {
          "ref": "89087a34-65bc-4a4e-a09d-19779b34d95e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e73e26e-76e6-47ba-859f-55201a5010c0"
        },
        "item": {
          "id": "8b1ddec1-98b1-4406-8a71-0df831c69aaa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f3842904-ffd8-43d2-a3e9-235a47dd50f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ba1751fd-79ed-48c9-8c2b-37a4c35c663f",
        "cursor": {
          "ref": "0ef15e56-ccf3-4c2b-a836-6ba73cdba60d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b8782c52-550d-44a6-a90e-19aaf1f5af03"
        },
        "item": {
          "id": "ba1751fd-79ed-48c9-8c2b-37a4c35c663f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6c1768d7-49bf-4e8c-a81a-ef498c483146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42d5e7a-22de-4440-9fb8-be516eb73ecb",
        "cursor": {
          "ref": "a139a7df-5bbc-42e4-afb8-059fd95b25d3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f811c0fb-7270-4a13-9e6d-156defb5d7e4"
        },
        "item": {
          "id": "a42d5e7a-22de-4440-9fb8-be516eb73ecb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "da9836ce-3b9f-457f-a0da-9d3dee0631ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda5cbd1-e96b-497f-86f2-fabc4a647825",
        "cursor": {
          "ref": "e5f1f49f-420f-4c35-a55b-20061be37b8b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eb7eda01-573a-4113-9789-209a5ba251ce"
        },
        "item": {
          "id": "eda5cbd1-e96b-497f-86f2-fabc4a647825",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a8d30cfb-8fa9-4280-a358-30b2933822a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03502ca-ea0d-49a5-b7c9-8749c11a53ff",
        "cursor": {
          "ref": "55dfbe8a-7206-4d84-86d7-a6ffbd47d745",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4ff96ff7-1e09-4e73-a10b-0de72de0168f"
        },
        "item": {
          "id": "c03502ca-ea0d-49a5-b7c9-8749c11a53ff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7a46ef1-409f-4e9a-bb77-b4fbb08349a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9b5457-0eda-4813-989a-9560709a2ca1",
        "cursor": {
          "ref": "8f558f18-8d17-4667-8652-ab7f951d0c2c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "08903823-bd8f-4c97-b30d-6a557de16520"
        },
        "item": {
          "id": "7d9b5457-0eda-4813-989a-9560709a2ca1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c33dd1d6-76b5-4798-acdd-0eed8e349647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71b7ee4-fba9-4798-8387-eb0084f5582d",
        "cursor": {
          "ref": "916b8e74-1a1b-4b75-8753-dad12a5f383e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "57304131-5b3b-414b-b272-02b365732d09"
        },
        "item": {
          "id": "d71b7ee4-fba9-4798-8387-eb0084f5582d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8bcd5e0a-6f2e-4ba3-9b91-d4e98ece6e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e99ad47-b6fc-439e-852a-e4ac2d4fe618",
        "cursor": {
          "ref": "1fbcc0db-b1a6-4d4d-968d-12a453a9b24c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e7d699e6-d3b0-4150-be18-07b6928f4a90"
        },
        "item": {
          "id": "2e99ad47-b6fc-439e-852a-e4ac2d4fe618",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c83eeebd-61ed-4791-a26d-2f47faf04a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635f0299-cf80-41e7-82e1-5c83829e6612",
        "cursor": {
          "ref": "b18dbaaf-3a62-4acc-90ca-62a2b5e95d2d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "24bd3ed5-c6e3-4bc9-af03-61d60a26c313"
        },
        "item": {
          "id": "635f0299-cf80-41e7-82e1-5c83829e6612",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "46f0c7bf-ba87-4e4b-94a5-f8b05e606920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f0550d-ae76-4812-b836-813726ba4749",
        "cursor": {
          "ref": "bddcd233-b29e-4542-8965-0168e7429675",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "39aec224-2457-4abe-9d3a-73f38508cd62"
        },
        "item": {
          "id": "67f0550d-ae76-4812-b836-813726ba4749",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e20c3865-1a03-4097-9fc7-9afd69a7a360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1415f507-2226-4f15-b5c7-6e0b56ad6269",
        "cursor": {
          "ref": "b79d9c19-58c6-4b43-8f73-1b1a4e35c1cb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "34ae58d1-2e55-4a49-a0b7-08be9800b1f2"
        },
        "item": {
          "id": "1415f507-2226-4f15-b5c7-6e0b56ad6269",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b6ad4c12-4b81-478c-a314-b1208a914549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699480bf-d712-4c03-b2db-a8f0f755aba6",
        "cursor": {
          "ref": "7d602142-a2b4-4acd-9c84-3906b9bcf90a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "69ae2e8d-f2c5-4df5-aa3b-11c011da546d"
        },
        "item": {
          "id": "699480bf-d712-4c03-b2db-a8f0f755aba6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b10f38e6-0135-4d02-9147-08e1679c0667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca851b0-2791-40b6-b03c-520d075b03b4",
        "cursor": {
          "ref": "692891b1-7938-4beb-8c34-2b6743c9f358",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d353b452-efe3-4925-9401-2cb083691a8a"
        },
        "item": {
          "id": "1ca851b0-2791-40b6-b03c-520d075b03b4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c225db4-e518-4680-821d-a4d82d56b2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b3df94-87d2-4f1d-8e2e-b25098720e37",
        "cursor": {
          "ref": "1bb5d4d3-0064-40b4-b543-826629908602",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a4889148-a670-47a6-a9c7-2393fbb9b6f6"
        },
        "item": {
          "id": "d5b3df94-87d2-4f1d-8e2e-b25098720e37",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "edcafead-7f61-402a-8225-f54ba45ba81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71008b0d-eabc-4b74-b6d7-252beca205ce",
        "cursor": {
          "ref": "c1d7d75e-333d-4ed6-bcdb-09fbf44abb5d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e844db3e-ad6d-4054-b62d-a9ce01876573"
        },
        "item": {
          "id": "71008b0d-eabc-4b74-b6d7-252beca205ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e2882b8d-0096-4bff-b48f-12af49baa2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94bf775-b812-47ee-85ec-4a89ec3cf6ca",
        "cursor": {
          "ref": "c1419465-bc80-4921-9ced-c168f8f356ff",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "79ee57eb-75aa-4f18-bcfc-823192e3046f"
        },
        "item": {
          "id": "d94bf775-b812-47ee-85ec-4a89ec3cf6ca",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97076bc0-3dfb-4bfc-b2a2-aadf9a6f40e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41e7c2-9edc-4275-a197-e4d7963cd900",
        "cursor": {
          "ref": "14a5ff97-034f-454e-9e04-8525052d7ae8",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "98a9d074-ff2d-4b65-ac11-69beb52e7288"
        },
        "item": {
          "id": "8c41e7c2-9edc-4275-a197-e4d7963cd900",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "05a31825-ea1c-4582-8be9-21547d4281d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd311f85-a495-4047-a318-eb0bf3e23051",
        "cursor": {
          "ref": "7bcddeed-282f-477e-9526-3c9eb1bc2570",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ed8ccb10-5426-4f31-bfeb-d3cbcfab63c6"
        },
        "item": {
          "id": "fd311f85-a495-4047-a318-eb0bf3e23051",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7e88ceb3-095e-49d2-afd3-fa9886147685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51838a2c-47ba-41ff-99fc-19fe613f4c8a",
        "cursor": {
          "ref": "f78f534e-9568-4e3d-8e2e-4e9df6ce02f6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "78084426-ae00-45d0-b095-0aa76e40a5b3"
        },
        "item": {
          "id": "51838a2c-47ba-41ff-99fc-19fe613f4c8a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80ca2572-7c25-446e-8b2c-2c5110f0edc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd79395a-5692-426e-a287-a667ea7c16ec",
        "cursor": {
          "ref": "64e5c471-65dc-462e-8b2f-a92b9ae17c2b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "069ab6c7-de49-48f5-a309-52697a6e9a23"
        },
        "item": {
          "id": "fd79395a-5692-426e-a287-a667ea7c16ec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eed2b421-37d9-4159-bc58-7f2d54c74eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eb1073-e168-4661-a4cd-c65314f91289",
        "cursor": {
          "ref": "6dfafa76-84fd-458c-9a12-0b883bf8d86f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a8d4dba0-ec34-49fc-8fab-e2748f93a705"
        },
        "item": {
          "id": "f8eb1073-e168-4661-a4cd-c65314f91289",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f6ca5dd-79dd-49cc-bc0e-4ed527354b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3834a92b-fa84-4e3d-beb9-c67281478097",
        "cursor": {
          "ref": "e1beae83-afa6-4f7a-a727-afe04c8e6c92",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fa615e89-0597-4a54-a6f8-30d5529ac087"
        },
        "item": {
          "id": "3834a92b-fa84-4e3d-beb9-c67281478097",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fd279d0d-687a-4cc5-ad1e-6f9e526073e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0d4fd3-e1c3-4f5b-a013-d4e69100fabf",
        "cursor": {
          "ref": "e202d986-5550-470b-b3dd-ba112947fa1e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1df7e3e3-48ff-44e9-a241-7e668dae7f9b"
        },
        "item": {
          "id": "6f0d4fd3-e1c3-4f5b-a013-d4e69100fabf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5acdf166-256f-42d9-bfe4-542e3f5246b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfabc95-5a15-479f-8392-24825a79d57e",
        "cursor": {
          "ref": "440aac51-ccf7-432a-bba5-6e95e240ef17",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f8433c2b-ad11-41f4-bacc-fdc5a1dbca02"
        },
        "item": {
          "id": "ebfabc95-5a15-479f-8392-24825a79d57e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "39135f83-5ca4-4e96-a33b-e8a9df139fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbeae8f-94bb-401d-8dfe-2247504597c8",
        "cursor": {
          "ref": "3608e3cc-836c-4764-8f39-91d63235dc96",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d031dc04-ed13-48c9-a2c2-47dc6aa270f1"
        },
        "item": {
          "id": "3bbeae8f-94bb-401d-8dfe-2247504597c8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d4250d7-23e2-4002-85a8-b7416af22dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac415515-c5b5-4dc8-8fd3-0df71ee84e5f",
        "cursor": {
          "ref": "7267bc54-c534-49a6-9e7f-1648aba67562",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a845c618-a052-48c2-8a53-ce27e82cfda1"
        },
        "item": {
          "id": "ac415515-c5b5-4dc8-8fd3-0df71ee84e5f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09a1820e-cc27-4f34-ae2f-fc1576c57ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e45b68a-0615-4502-b7ac-989bfd388566",
        "cursor": {
          "ref": "b4639f01-4451-458c-9f56-5f4efa0b55b3",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "684b9164-2a35-4770-9168-974826c091ec"
        },
        "item": {
          "id": "7e45b68a-0615-4502-b7ac-989bfd388566",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4893f888-aca0-434c-9a55-7fa7e0a47d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1843e8be-5f54-48e0-bcec-42e2658a37c8",
        "cursor": {
          "ref": "f44d092c-a024-4a2d-988b-60583c2fdf8c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "33dc61d0-8fb4-44bf-9a08-67b713f119ee"
        },
        "item": {
          "id": "1843e8be-5f54-48e0-bcec-42e2658a37c8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d14c7831-df45-43cb-bd20-ce6209ffc1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8b5c4b-1257-4635-ab59-d8304920ad45",
        "cursor": {
          "ref": "c3a6a481-c44a-436c-b636-ea6111931465",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b707df69-0206-454f-8e55-f8d56286510b"
        },
        "item": {
          "id": "db8b5c4b-1257-4635-ab59-d8304920ad45",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "631c3817-d2c1-4b66-b25c-b263f1295f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec52fe8-ff41-44c6-877d-f6877480bc38",
        "cursor": {
          "ref": "dda570a3-378f-4116-9854-a89ecf37aa32",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d89808f6-07c5-4330-943d-542df21a241e"
        },
        "item": {
          "id": "8ec52fe8-ff41-44c6-877d-f6877480bc38",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3c17c43c-a6f0-44df-8662-c304e3f87716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6976fcec-e32c-483d-9b71-15174ec36aec",
        "cursor": {
          "ref": "6b9401a2-9eea-45d2-8429-ab597d4cbeb1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "10174d4f-6b03-46dc-9904-ccc9a12493ae"
        },
        "item": {
          "id": "6976fcec-e32c-483d-9b71-15174ec36aec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "638bfddd-f405-4a84-bc5d-6421b847db72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08eeed33-fa04-478d-a951-7223f94179ff",
        "cursor": {
          "ref": "f040e3cb-741f-49cb-9927-7f38b6e5be38",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e3a41736-6fc9-4920-82bc-159a2b08dbdf"
        },
        "item": {
          "id": "08eeed33-fa04-478d-a951-7223f94179ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "83eff062-93f9-4f77-b67f-de7892c4a31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a195a5ef-bc95-48f0-9845-b511eda04b03",
        "cursor": {
          "ref": "6fe17c23-ce6b-4325-ba0c-f21abef008c9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bf4fe1bf-06ee-498c-929f-3ca5e112adc8"
        },
        "item": {
          "id": "a195a5ef-bc95-48f0-9845-b511eda04b03",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3434aed1-59d8-4654-9146-3e00388e837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afdff0a-55d6-478a-a440-b1803fac2a5b",
        "cursor": {
          "ref": "a3dfbaf4-2f94-45e6-918a-17a468fbd7d9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3adf9646-a975-4b4e-94bd-10fdd1f69c97"
        },
        "item": {
          "id": "4afdff0a-55d6-478a-a440-b1803fac2a5b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8d73b3e5-cd21-4a03-b5ae-24915ca595ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328af847-ef83-4885-a6b9-d0f8804843e0",
        "cursor": {
          "ref": "cedd75f4-ef64-40bf-a828-ddac13622f2b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6fd606e3-6f1b-4d5b-a44e-2043341ff124"
        },
        "item": {
          "id": "328af847-ef83-4885-a6b9-d0f8804843e0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0db1d146-e158-498d-8663-a59e41397248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa813101-4b50-48b3-ae21-832b6419afa1",
        "cursor": {
          "ref": "8a0e766c-5882-47ff-b9b9-bae792e39406",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5fcee9e8-d3bb-49c3-873c-29145967e0a3"
        },
        "item": {
          "id": "aa813101-4b50-48b3-ae21-832b6419afa1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b4e65152-56af-4442-a8c8-6c0656769ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448e86db-bbbf-4010-983a-15308aa6766f",
        "cursor": {
          "ref": "a7740aa8-4516-471d-b595-3ba033d08a27",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4da7fc7f-9179-475c-b5ad-849021406d8b"
        },
        "item": {
          "id": "448e86db-bbbf-4010-983a-15308aa6766f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2acf5686-3013-489a-b355-e273fe331d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9a5ad7-9861-424c-9252-b4eac6926faf",
        "cursor": {
          "ref": "04fdb33b-4ffb-4827-a8dc-720c6f8610e6",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5e939b32-93ed-4127-b3dc-71fe846c8043"
        },
        "item": {
          "id": "5c9a5ad7-9861-424c-9252-b4eac6926faf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "41e0e239-120c-4ddd-94fa-86c02a758004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa82058b-5de3-47e2-8ec3-fab74086d967",
        "cursor": {
          "ref": "e0c50075-9a79-4f2e-be3a-d9b054b4aaab",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e5fa4ab5-0c1a-476f-b233-955903299bdf"
        },
        "item": {
          "id": "fa82058b-5de3-47e2-8ec3-fab74086d967",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b0a2c40b-0081-4ddb-ae89-40c6f6e40bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37975ce0-d522-4015-b3c9-7cb177c13d89",
        "cursor": {
          "ref": "7ce2023a-05f4-4683-acbf-b8903a0b7a05",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "db93405f-e67a-494c-9489-2bf9c51b0abe"
        },
        "item": {
          "id": "37975ce0-d522-4015-b3c9-7cb177c13d89",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f455d5c4-3019-4801-af33-7c2a346d2afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b0de58-ad12-4a84-a3db-bd721cf9f16e",
        "cursor": {
          "ref": "543849ac-234a-4522-9b0f-5851d86c0548",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7944c1d2-c7e4-4b67-940f-2c4f50870f6b"
        },
        "item": {
          "id": "b3b0de58-ad12-4a84-a3db-bd721cf9f16e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e38aeefe-4f1a-4698-9958-4f7a6e958e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4e14d6-9da1-4403-b168-e01062c113d2",
        "cursor": {
          "ref": "c950acf9-a42b-421f-91d5-72cc8887c5cb",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d62eb597-3f74-472c-89bc-723e512a7469"
        },
        "item": {
          "id": "4a4e14d6-9da1-4403-b168-e01062c113d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d3fa5c94-54ce-4ddc-b85f-b95c8e62c31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719bfa63-89d5-4f2a-b50d-de83aa2827fd",
        "cursor": {
          "ref": "7232f013-afef-4c83-b70c-f09cfdd6b31d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "656e9863-c783-47e9-a967-24af7ebe0fa1"
        },
        "item": {
          "id": "719bfa63-89d5-4f2a-b50d-de83aa2827fd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5e591ab9-1d1a-4571-8c20-67e0a95e5a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cf6d24-4afc-4c70-8ccc-99dac1bdf15b",
        "cursor": {
          "ref": "1bf1c655-4165-43f0-a907-28e34563998c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "73faa2ae-e696-4e05-922d-b848c393bc3e"
        },
        "item": {
          "id": "42cf6d24-4afc-4c70-8ccc-99dac1bdf15b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61ebeb47-d5c9-4165-a0d5-27ea5ce72a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5917957-a82e-4c8b-83d1-76ec4157252e",
        "cursor": {
          "ref": "41a516d9-be59-4d4e-a12c-17e64a0692dc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "edba160a-c4ed-4641-b14e-0a292347a965"
        },
        "item": {
          "id": "b5917957-a82e-4c8b-83d1-76ec4157252e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3789b540-83ce-4f4f-b202-08c7159c0a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a46db87-a86d-41ed-9d7a-f74ca4e4c8dc",
        "cursor": {
          "ref": "3f456a86-2679-4343-a1f1-cbadb13866d8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "37e7ff08-9b5d-4578-a89e-f0f628d91944"
        },
        "item": {
          "id": "1a46db87-a86d-41ed-9d7a-f74ca4e4c8dc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d8ecd0b5-89dc-4bf3-a6c9-244f8e946dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3679bf-9cff-436c-a031-759b7050bde2",
        "cursor": {
          "ref": "47771bbe-8a6e-484e-85e3-d46ee17eab7d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ce5ffe94-7194-4ab7-8e76-32c6d465e33e"
        },
        "item": {
          "id": "dd3679bf-9cff-436c-a031-759b7050bde2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "10319ac8-0832-4a3a-9dcf-d7bfbfc36f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fa3ee1-2993-4deb-ac08-2f51f902f90b",
        "cursor": {
          "ref": "22d0f682-fc4f-47c3-b800-5e489a857a0a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a352adad-1ec4-45e8-9395-5c1bd25db790"
        },
        "item": {
          "id": "33fa3ee1-2993-4deb-ac08-2f51f902f90b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d86bd55c-8567-4ce2-9798-d7b8b298c606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ad65d8-e194-4a5c-b5f3-d3680038f2b8",
        "cursor": {
          "ref": "7aff01ac-346a-45bd-abe9-2f61bd4f1d92",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3cdfe72e-3342-4987-b2a4-191e0f244aca"
        },
        "item": {
          "id": "e0ad65d8-e194-4a5c-b5f3-d3680038f2b8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "76548d3a-b9cf-4273-ac3d-e16298ce0a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fad3340-5e93-46e6-94f2-0804b12c23e0",
        "cursor": {
          "ref": "4852998b-1fca-4f23-b4ff-4ab22033072b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "def56531-3c7a-4da3-8251-d691bf1169d4"
        },
        "item": {
          "id": "1fad3340-5e93-46e6-94f2-0804b12c23e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b55ca0c-2bd6-42a1-8016-bdbf068f0a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1252788-a55e-4259-ab0d-55409ba8dc90",
        "cursor": {
          "ref": "35b40fb2-1e5d-411f-8894-ae03d3e8e6f4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7e06f495-d38e-4182-b60d-befcf4bfd0cb"
        },
        "item": {
          "id": "c1252788-a55e-4259-ab0d-55409ba8dc90",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9a816710-4ee6-447e-90e8-c1a9a8dff2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f981d1cf-d259-483c-a377-3d8a391b37bf",
        "cursor": {
          "ref": "e7fc20ef-71ce-4021-9c5e-5a836779c459",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e3bfd908-6785-420e-b652-3318a4bd857d"
        },
        "item": {
          "id": "f981d1cf-d259-483c-a377-3d8a391b37bf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ea67bd1e-e4c1-4fab-81af-90d58b40c840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff640c1-bd1d-4995-8f29-8a4d865e3146",
        "cursor": {
          "ref": "2b98ec28-1b50-461c-bf93-76fa00d21950",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "880616cf-7571-4999-af6f-880e2102ad4f"
        },
        "item": {
          "id": "fff640c1-bd1d-4995-8f29-8a4d865e3146",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7dd6ad96-ceb2-47de-8726-52aa3088e5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2076405f-21e6-45a2-8115-07ba6a70511c",
        "cursor": {
          "ref": "1458061e-74c4-4e8c-adcf-2b22523cb7fd",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c4ac1b87-d265-4e51-862f-412a4777966e"
        },
        "item": {
          "id": "2076405f-21e6-45a2-8115-07ba6a70511c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fff5b7ec-61e0-4fe5-ad5a-750c222a449c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758c819a-ed23-48c0-a95c-2079c045fcda",
        "cursor": {
          "ref": "23dc2651-c493-40af-98f2-7c304678ac7a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1a43e228-25f5-4ef0-8395-803915c386d9"
        },
        "item": {
          "id": "758c819a-ed23-48c0-a95c-2079c045fcda",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d495ba88-29d4-41ea-bb1d-998ec111279c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27a0049-c313-4b8c-aa98-e9493d81ac1e",
        "cursor": {
          "ref": "1cc04b82-9d06-4ab9-a93d-b505892cf0d0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1bad69e9-638e-4f52-aace-4c1b894564fb"
        },
        "item": {
          "id": "e27a0049-c313-4b8c-aa98-e9493d81ac1e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a5e7b9c2-a87f-4fbb-886c-6abe515c06f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a016a7af-d826-4d6d-836d-a00072167368",
        "cursor": {
          "ref": "cb0adb5f-131f-40b4-add0-05b24d232c31",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "35fb607b-fdf8-4934-9d66-6e5b34d56576"
        },
        "item": {
          "id": "a016a7af-d826-4d6d-836d-a00072167368",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3d475a54-0b13-4863-99e8-fd13876d09f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d522163-096c-430b-9bce-458ae51cd67d",
        "cursor": {
          "ref": "7bcca0c0-2854-40d3-8a9f-975afc91e7f4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6a673870-ff61-4356-971f-b3803f277893"
        },
        "item": {
          "id": "0d522163-096c-430b-9bce-458ae51cd67d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fb7c2d12-de33-462a-9a95-e6854da5caf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04f0645-f2f0-4420-811a-dd8ae284af7e",
        "cursor": {
          "ref": "06d02b89-3880-4818-b8ee-5985cea7ded0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3e4118b2-d906-4dbc-85a6-bbedf36b9e71"
        },
        "item": {
          "id": "d04f0645-f2f0-4420-811a-dd8ae284af7e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b0b8f66d-a470-406e-8d67-4bb54f2bef94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5790ae-2525-4274-ba79-1086b34d2f6c",
        "cursor": {
          "ref": "88e0636c-0b24-4527-89b3-eb6b8c672929",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b328cc94-9891-4efe-8905-01ca3ee4191d"
        },
        "item": {
          "id": "1e5790ae-2525-4274-ba79-1086b34d2f6c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ed6b023e-3c7c-4c7b-b5d7-33fdc0dc39be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a38b0-351b-4e4e-b0e4-a83c8774b8c2",
        "cursor": {
          "ref": "95b246ea-d30f-4b8f-b3cc-32b469edc723",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "832a4ebf-96c1-41d4-b5ff-d411788ce221"
        },
        "item": {
          "id": "254a38b0-351b-4e4e-b0e4-a83c8774b8c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bb2c34b9-3bfc-4666-a4e0-3188fd4ad5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4df16b-e7dc-4e99-aa99-35daf553769f",
        "cursor": {
          "ref": "fdfcac7f-c8db-4a78-8211-a4e2da20fbb0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8149ce37-e50c-4923-8834-0fc414e45aaf"
        },
        "item": {
          "id": "ec4df16b-e7dc-4e99-aa99-35daf553769f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f6fb3824-61e4-4da4-ba7d-ba9ea2235784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c99903-38d9-4b9b-b27a-cb10149cffd7",
        "cursor": {
          "ref": "30c270db-a80d-4469-97e4-ed58250df2c9",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a77adffe-1c81-47b1-8c5a-f1d33a341148"
        },
        "item": {
          "id": "38c99903-38d9-4b9b-b27a-cb10149cffd7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f4c24c8e-ce4b-41e4-aac6-0f29aa82444e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f336e57-62dc-4e05-90e0-77126f5f3ade",
        "cursor": {
          "ref": "8947df39-3e9d-4f45-ab09-4102c55a79ad",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e71f32a3-120b-4100-81a7-3fd1d773235d"
        },
        "item": {
          "id": "0f336e57-62dc-4e05-90e0-77126f5f3ade",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d1c59b1a-c893-4c7c-93d9-ea894aa40dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ceb8ec-875f-4999-9398-0d0ae486ebf8",
        "cursor": {
          "ref": "d309396c-5c56-4629-ad9b-71cf8351de6e",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2092ba9e-9786-4b9a-bd4d-520e4d0067e2"
        },
        "item": {
          "id": "e1ceb8ec-875f-4999-9398-0d0ae486ebf8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9579f1dd-c3ab-4652-8b82-cab3783b35b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc3244e-a7e4-4720-bbb5-5f44c4e91d76",
        "cursor": {
          "ref": "5073a3c8-7d0b-44b5-9200-d08c107a51e5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "687e6e36-4eba-4854-b961-f774c14e9bba"
        },
        "item": {
          "id": "dfc3244e-a7e4-4720-bbb5-5f44c4e91d76",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "020f23a0-514f-4bf9-94e2-38562a218616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f917c9dc-6dfe-480d-b802-2fa035dc9b18",
        "cursor": {
          "ref": "9de8cff5-1aa4-408c-98d0-81d9b447f74c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12be460c-c4de-47da-9728-7f47b0b09044"
        },
        "item": {
          "id": "f917c9dc-6dfe-480d-b802-2fa035dc9b18",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cd17b1d2-8be8-4ee7-9199-139e96bc4ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f258e4-da41-46e8-8b17-7bfa6b26efd8",
        "cursor": {
          "ref": "f992bbf8-a69f-4ea1-9824-1913759e2fd2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "56e110ea-d9a4-4dde-a557-d17b1e68f6a8"
        },
        "item": {
          "id": "86f258e4-da41-46e8-8b17-7bfa6b26efd8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a4ddd5c1-451b-45d4-80f0-3ec3897a78ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dc7f46-3f4c-4e26-85b3-df01fbfc8f66",
        "cursor": {
          "ref": "1378d275-11e7-414c-9324-49183d746fea",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "705a131b-7940-4ebc-a076-cd2fb1d4cd96"
        },
        "item": {
          "id": "79dc7f46-3f4c-4e26-85b3-df01fbfc8f66",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "520407e3-d579-470e-9fff-d15cc72fed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a5bc9e-5897-4f66-b856-2c7355564b39",
        "cursor": {
          "ref": "b6cfa03d-5c93-469d-879a-3b359a8e6aca",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "736b3d1a-fd0c-455b-b272-d303050b9e3a"
        },
        "item": {
          "id": "a4a5bc9e-5897-4f66-b856-2c7355564b39",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4de11024-4d3e-4a2e-b0f8-fe3747dd9afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8c21a3-6842-460a-b3d3-44e37836b2af",
        "cursor": {
          "ref": "eb0e5f6a-9908-4d46-9245-2ef0200ce7a2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1b65f680-7b08-4bfb-adc0-8e389bf6b618"
        },
        "item": {
          "id": "9a8c21a3-6842-460a-b3d3-44e37836b2af",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d3dec473-e0f3-4e35-847a-1b3b648c7690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797d4103-40a8-4ea5-a31c-ebf78c1b5876",
        "cursor": {
          "ref": "26efd374-d489-430e-973c-e74056c1aaf5",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a7876762-1e23-477e-ae56-178f63d5241a"
        },
        "item": {
          "id": "797d4103-40a8-4ea5-a31c-ebf78c1b5876",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8c2b541b-f7b5-4f85-b698-ad9b9343eb2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74a40f9-3fcb-4036-8a11-e6172432fbbc",
        "cursor": {
          "ref": "8b765dd5-e154-4261-9428-5bf78d618f4d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b649d5f5-12b1-40e7-8da8-5e4e40806784"
        },
        "item": {
          "id": "d74a40f9-3fcb-4036-8a11-e6172432fbbc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c9a56249-701a-4aa2-af42-6b64b30e58cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bba714-640b-4dfd-970c-911f60514360",
        "cursor": {
          "ref": "3cc93dc9-b9a3-473d-9e57-3a0fe604ae4a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "acde9fb0-def5-4c69-ae01-b428f4b3b0c5"
        },
        "item": {
          "id": "30bba714-640b-4dfd-970c-911f60514360",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d967997a-21a0-4414-9e8a-8667eea4b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba8a49d-9aaa-4d13-87f8-79c2ab5e3692",
        "cursor": {
          "ref": "fcacd664-696a-4744-a7d0-8b8d1f7bc882",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4cf86fda-4ebf-4288-9372-86808d49804f"
        },
        "item": {
          "id": "9ba8a49d-9aaa-4d13-87f8-79c2ab5e3692",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "76fde1a6-18f3-477f-b279-3d2ff7165e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedd0bf2-04b4-41b9-ac88-0df2fe353e6d",
        "cursor": {
          "ref": "b0afc2c4-b06c-4996-903a-666c638cb552",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fd6a02eb-5b0c-4392-a592-9d539af45564"
        },
        "item": {
          "id": "cedd0bf2-04b4-41b9-ac88-0df2fe353e6d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3cbddccb-0be9-469d-accc-54f4e43086c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ed77f7-620d-488c-bfd5-78c1c0c0229d",
        "cursor": {
          "ref": "e7eb833b-563e-40cd-a7ab-9f2adf717d54",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "08e8586f-033c-4e0a-bf15-a44e70ad1bcc"
        },
        "item": {
          "id": "45ed77f7-620d-488c-bfd5-78c1c0c0229d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f10b78a8-fe91-40ab-8e02-885af1a24aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6baf9b-439b-4ee1-9714-b0ba0d64b382",
        "cursor": {
          "ref": "9b34d929-4a49-47b5-b1b0-8d31e319e565",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b8783a4e-1535-4ce2-b90e-5e4d70dd13a3"
        },
        "item": {
          "id": "1d6baf9b-439b-4ee1-9714-b0ba0d64b382",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1393fd69-9f1f-4109-b5b1-f091ba918d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef52c99-5da6-4a32-b96c-a50842f5f53a",
        "cursor": {
          "ref": "e8948b44-3ad2-413b-b520-97012d869fa6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fca53019-646b-4dae-9ee1-150229b34f57"
        },
        "item": {
          "id": "bef52c99-5da6-4a32-b96c-a50842f5f53a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8f4ca52a-e126-42c8-9847-33b2d66c5537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7743655d-7378-463d-bd18-20ad64d575a8",
        "cursor": {
          "ref": "7249807b-2b20-4508-a099-2494a28bccb6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2721f5bc-bee2-4b95-9fe1-46da22532a9f"
        },
        "item": {
          "id": "7743655d-7378-463d-bd18-20ad64d575a8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "af79f118-4760-4c5e-bb79-2feffc15f4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce0f666-0413-4ead-a8a7-16bfb78e0e06",
        "cursor": {
          "ref": "b05a87f1-3792-48ad-a495-fb577414f9d8",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b8f94eec-57b0-498b-a423-47f709a2018c"
        },
        "item": {
          "id": "fce0f666-0413-4ead-a8a7-16bfb78e0e06",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "13413ae2-7cbe-46f3-b12e-0c6fec6beaad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4952fe1f-5b71-4f01-8db5-24483082c772",
        "cursor": {
          "ref": "b0a843d8-d1de-4c82-acb2-880f76fc9d93",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9a4487fa-cf8d-4b7a-b214-bb8e0e54984d"
        },
        "item": {
          "id": "4952fe1f-5b71-4f01-8db5-24483082c772",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eb878086-d42d-48a1-8ad3-ece0197120cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f2ae2b-de5f-499d-abf0-79d13c8aaffc",
        "cursor": {
          "ref": "1cda19c7-206d-4522-a8a0-3744958d1f94",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "532cef55-501d-4b11-9188-52f7ad31457a"
        },
        "item": {
          "id": "30f2ae2b-de5f-499d-abf0-79d13c8aaffc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "78e1bbb1-dec3-466e-9a83-c24b469de794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0234ef2c-da01-490e-8763-d63d1a1d54e3",
        "cursor": {
          "ref": "7f8ddac7-2206-426a-b392-ad90710505b7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "084d99a4-3974-4bde-bdfc-538667b468f8"
        },
        "item": {
          "id": "0234ef2c-da01-490e-8763-d63d1a1d54e3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a13c487a-0d69-473c-b21b-02438f256741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfe654a-69a2-4427-a71d-caf1a797f4e2",
        "cursor": {
          "ref": "393c3454-97b5-4893-9004-7138c96d6581",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "78bad590-c974-408c-9043-a75e1ea0612c"
        },
        "item": {
          "id": "3cfe654a-69a2-4427-a71d-caf1a797f4e2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "066baae0-137e-409c-a226-307d47e93196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc1b502-4083-446d-b9e7-393721023cd2",
        "cursor": {
          "ref": "7cb2d66d-e934-4d64-b561-3172597fd0c2",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cc04bd27-f4d2-4132-bb20-4785e55c48d9"
        },
        "item": {
          "id": "5dc1b502-4083-446d-b9e7-393721023cd2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "730e1872-c295-46a9-834f-35b1fb2fb31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aff43e4-5ab5-4a70-814e-f82620704a83",
        "cursor": {
          "ref": "802eb233-965c-4a8e-b995-7bcf4703cdfc",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "187e0df0-729e-4ed7-8108-e7bd48d62c57"
        },
        "item": {
          "id": "9aff43e4-5ab5-4a70-814e-f82620704a83",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "97e35aee-6ce2-4cbb-b786-e7a094791a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4bec95-3464-448b-8daf-f5919a36a538",
        "cursor": {
          "ref": "ce9883b0-7f4c-4c37-beb4-7daba4225eb4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a7181dec-5757-4e57-84e9-b292e55e1f9d"
        },
        "item": {
          "id": "db4bec95-3464-448b-8daf-f5919a36a538",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "24e863fa-3fef-4d7e-8b00-18a95ea820cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b24583a-fd34-4804-816b-ab53d8be5054",
        "cursor": {
          "ref": "36d107db-d13a-432f-9016-1a7cd81a267c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e02413db-3aa0-49ff-a87d-0ced70884585"
        },
        "item": {
          "id": "4b24583a-fd34-4804-816b-ab53d8be5054",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "83f9c645-b010-4ddc-a5d0-c971ea56bcf0",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "d83461c0-614b-4475-a3df-13c4a16b5e61",
        "cursor": {
          "ref": "f95409d8-69c2-49da-a117-9169b3bbd8bf",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "39fa7711-f111-4c05-8f9b-a75fdf948729"
        },
        "item": {
          "id": "d83461c0-614b-4475-a3df-13c4a16b5e61",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ecb78528-d186-4c26-a0f4-da34f35c693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186d7652-6bd9-4fbf-976b-2a843b687903",
        "cursor": {
          "ref": "433987a0-cb94-41d1-9b85-8d378f2a2ceb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9fd39415-acb5-48f6-984a-4db898aa076f"
        },
        "item": {
          "id": "186d7652-6bd9-4fbf-976b-2a843b687903",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "27d9b556-1810-4c0e-be38-da250e45f26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20368a07-0d69-44c8-b93b-e79f2b670885",
        "cursor": {
          "ref": "f48e3040-a174-4aa1-9a67-9c8df31a0e53",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7199f0ee-c98d-4e25-8221-571e25c13983"
        },
        "item": {
          "id": "20368a07-0d69-44c8-b93b-e79f2b670885",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d72568d2-fa29-4f8b-ad0e-5e23f8f8e472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a2577e-82ff-45f9-bbbb-b105caea5db2",
        "cursor": {
          "ref": "ea44ed79-122c-4a27-9edb-52d298aa10e2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "79af39e1-68e3-4873-88f2-1cf2e768f0a3"
        },
        "item": {
          "id": "78a2577e-82ff-45f9-bbbb-b105caea5db2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "06787631-52f9-4cb0-bd2a-d18daa474bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440f1cfd-a55e-4e95-bea0-b1faee135732",
        "cursor": {
          "ref": "915a2ba8-6103-4f7d-9eeb-385fb8082231",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cba4334b-4188-411b-9d4c-25a58d3f6b4e"
        },
        "item": {
          "id": "440f1cfd-a55e-4e95-bea0-b1faee135732",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d718758a-d3df-4915-bf7f-8e991027ac88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be0f643-8c81-4460-bfe3-d978f6e901d4",
        "cursor": {
          "ref": "35906ea7-1538-452a-93f2-1b2135c1ab42",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f2b295c2-86a9-4de3-8d8b-dee5129e3ac3"
        },
        "item": {
          "id": "6be0f643-8c81-4460-bfe3-d978f6e901d4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7be2bd3e-566e-4852-af29-e3783dbad3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1048dd-699a-4ec2-836d-d31733a62828",
        "cursor": {
          "ref": "9ffe1ee8-b0e3-49f7-ad43-b92dbfd5472f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9a91ba2c-2d5e-470d-a1a8-55a6fdff6b1a"
        },
        "item": {
          "id": "ba1048dd-699a-4ec2-836d-d31733a62828",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a62d3376-3f38-4bfb-b3a6-aa889f91381c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2298543-ecfd-4b9e-9033-c28538d5bca3",
        "cursor": {
          "ref": "227647b8-fc78-453d-9d1c-cf6498951955",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1d06c1ba-a9c9-48a0-9981-3c79a50d023d"
        },
        "item": {
          "id": "a2298543-ecfd-4b9e-9033-c28538d5bca3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "68decb02-c59d-4958-b298-603e0aab6415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5233aebb-f419-4b41-b28a-f34b0c636a27",
        "cursor": {
          "ref": "b99f9be2-4aae-437d-85b4-30b05c0fafc1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3c603625-8729-4205-956e-2b97a65e575c"
        },
        "item": {
          "id": "5233aebb-f419-4b41-b28a-f34b0c636a27",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "140f14c9-60d0-41bd-9cd9-aa8b582f7c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c6770a-cfdb-4a57-adcf-e8352e3df4f0",
        "cursor": {
          "ref": "075b3086-8d28-4ed8-9b7a-d49957971366",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "150c04a0-a807-4cf0-bf19-4a7164d3cf99"
        },
        "item": {
          "id": "00c6770a-cfdb-4a57-adcf-e8352e3df4f0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c2890905-a572-4e6c-b723-1644a63a0764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be74ab9-0c59-4af7-85b9-fa72296e1e97",
        "cursor": {
          "ref": "0a941a46-c128-4765-973e-7333d5b82e0e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e501424e-2c69-4bdc-8dbd-3f6543137e75"
        },
        "item": {
          "id": "7be74ab9-0c59-4af7-85b9-fa72296e1e97",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "04719fd2-ea4c-45a1-8cf2-f99bba3520ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c0d25-fb2b-4dc7-b004-476aec33fe9f",
        "cursor": {
          "ref": "a24d7053-624a-4589-b0ce-48485b2ea0a8",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "01d19098-108a-4f7a-9f2f-e8ed18d56615"
        },
        "item": {
          "id": "f41c0d25-fb2b-4dc7-b004-476aec33fe9f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "888bd3f1-436f-41ff-862f-52b0f68e2e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0083505d-970a-465e-8f9d-f7ef96bdf285",
        "cursor": {
          "ref": "991dd64a-af26-4d27-b5b5-893d00e9526a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d30824b0-3f31-4301-bc21-e86010a392fb"
        },
        "item": {
          "id": "0083505d-970a-465e-8f9d-f7ef96bdf285",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "feea7539-b0e6-4d9f-b2da-cd2d3920dcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45be83a-12c9-40a7-95c2-6819355f6a01",
        "cursor": {
          "ref": "8e8ef847-19d3-4999-affa-b62b9e224d2a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2d402e06-072c-4154-975a-6ac82a47edab"
        },
        "item": {
          "id": "f45be83a-12c9-40a7-95c2-6819355f6a01",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e44f3990-db0b-4803-8ad8-71b36df40fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406c28d5-d0e2-49b1-afb0-2338c2e59f00",
        "cursor": {
          "ref": "b6e5c8ad-213b-486b-a096-e804f3d0b687",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6f650946-0998-4d68-9da9-ee5131252b5e"
        },
        "item": {
          "id": "406c28d5-d0e2-49b1-afb0-2338c2e59f00",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "96a93b95-f003-46de-a238-8fa6558107b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2ece46-1774-4279-a533-d1999124ed76",
        "cursor": {
          "ref": "a728efa6-5267-4eac-b8da-81efb3d4cf4e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ab6e9634-699a-4ae5-9c65-71b7becd4fbb"
        },
        "item": {
          "id": "1c2ece46-1774-4279-a533-d1999124ed76",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "33f99348-06f9-42ad-b881-3c1575beb06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80ebec-807d-4922-8d11-732d7bd029b9",
        "cursor": {
          "ref": "d7e7d29f-4623-4403-ba5b-0c3da259d3a6",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "50bcbe3d-2b0d-4eb5-a680-b2c07857b811"
        },
        "item": {
          "id": "eb80ebec-807d-4922-8d11-732d7bd029b9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b7e65e68-c8ba-4717-befb-efa98e347198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f8d098-eb0e-4422-a104-a5dc0668d509",
        "cursor": {
          "ref": "ab2add01-41b9-46cd-98c1-a7aa699ecbf2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4c7f2a04-695c-4a5a-8160-f4833777b3d4"
        },
        "item": {
          "id": "e7f8d098-eb0e-4422-a104-a5dc0668d509",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f1a9b03e-518e-4ce2-a012-afa118768bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5f2daf-cdfc-4b7d-a6f7-9b3543d610c4",
        "cursor": {
          "ref": "cc592f95-31a4-4a61-8fc0-cd8b2ddf7723",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f1b58718-9821-4f89-8971-5fc6a1e24647"
        },
        "item": {
          "id": "8a5f2daf-cdfc-4b7d-a6f7-9b3543d610c4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "44b06269-c49b-4120-afb5-849c4f29580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7930e5a-7139-4c31-9009-44d822f972fa",
        "cursor": {
          "ref": "ec52c8c7-bd91-4bea-9082-9816ce539157",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "67a1da99-c67d-428b-8da8-7506b81878ac"
        },
        "item": {
          "id": "f7930e5a-7139-4c31-9009-44d822f972fa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d4932d29-17f0-4e37-b1a4-0ca4046a7c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c7c838-5084-403e-8765-91233b937016",
        "cursor": {
          "ref": "4b5dd046-41a4-4e45-9c63-a505507b616c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a08f1291-f22c-4b23-a519-9e15e96fba4c"
        },
        "item": {
          "id": "c1c7c838-5084-403e-8765-91233b937016",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a3aead9c-bd13-465e-adf8-dc93561eebb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b80866d-33f9-4eb2-8c61-fed358660fd8",
        "cursor": {
          "ref": "1d5c3b31-aba1-4e21-9133-3be1620bb88e",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "83a75fae-986d-45b2-9c05-b815fd28aefd"
        },
        "item": {
          "id": "2b80866d-33f9-4eb2-8c61-fed358660fd8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f1456af6-1888-4db2-99b1-0bbdc3f5b354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6c2902-d7f2-43ec-b6f9-a6cc511fb974",
        "cursor": {
          "ref": "5d75e8f0-f6d7-4341-aad0-656461d0b0f9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "15c87306-55fc-4ba1-b586-267abec920c3"
        },
        "item": {
          "id": "4f6c2902-d7f2-43ec-b6f9-a6cc511fb974",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ae0aba6c-3ff4-4bea-a191-8c1559066828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc887dd5-9677-4c45-adfc-96270dcd2266",
        "cursor": {
          "ref": "52afea03-125c-44cd-927b-c4d88aa31361",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4b786050-7260-43de-bf6b-fbb6fb2e207b"
        },
        "item": {
          "id": "bc887dd5-9677-4c45-adfc-96270dcd2266",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "839cf448-ad6a-494e-8dd8-431a86144995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4de533-157f-4908-8eec-0f33a1a97d7d",
        "cursor": {
          "ref": "4a12b8d3-5a10-423f-9f0f-5e91285e06b7",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "47efcdd8-3d86-4253-add7-131ece1e43da"
        },
        "item": {
          "id": "7f4de533-157f-4908-8eec-0f33a1a97d7d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e2659442-c5f5-4588-9823-5904ead36b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1b5ae7-c751-43a6-83df-5f6a4d9efc68",
        "cursor": {
          "ref": "d9179b76-5a07-4b87-980b-74eeacf5ba0a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ae1563cf-1f19-4b0b-bac3-30a41e8b761e"
        },
        "item": {
          "id": "aa1b5ae7-c751-43a6-83df-5f6a4d9efc68",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "be034650-c6be-4497-8195-3c7b05ca82f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d99b22-165f-45f5-b714-95608f479967",
        "cursor": {
          "ref": "3f35d4b4-3f83-43f1-97d2-f6dfb222f9a6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d0603ba2-2c8a-4532-88fc-ff72363fd840"
        },
        "item": {
          "id": "b4d99b22-165f-45f5-b714-95608f479967",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "86af967b-c482-4bfb-8df9-a0e85ffbffd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a7b4f-d29b-482d-a99a-dc6cb6835254",
        "cursor": {
          "ref": "f32d7cff-501e-45ad-98de-b4c63ecadfd6",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9613bc54-5850-4c4b-953a-010a653663db"
        },
        "item": {
          "id": "423a7b4f-d29b-482d-a99a-dc6cb6835254",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "33c824c0-0d13-4a6a-b5f9-88654530cf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5645e9-f4d7-438c-85a4-c27add2c0367",
        "cursor": {
          "ref": "c954a40c-fc34-4bc5-9c1e-5b0bf9128041",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ab96685c-7337-4b3a-9cbd-adc7a9d687d2"
        },
        "item": {
          "id": "6d5645e9-f4d7-438c-85a4-c27add2c0367",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3b2bb3a0-a2b3-4311-b92c-5b3ce25f8b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9dd9c7-5e75-4edf-bfbe-d24098e205bf",
        "cursor": {
          "ref": "0ce617ff-9df0-44e5-8a95-d0081451cfa6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "25167dd2-ec5f-4781-9a34-0533686b9ec3"
        },
        "item": {
          "id": "0f9dd9c7-5e75-4edf-bfbe-d24098e205bf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8b676fb4-4339-490b-8550-a41928ea335d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec4f9ea-6102-474c-a05a-3f9f613db652",
        "cursor": {
          "ref": "799a316f-5094-441d-8e10-f069f05c8f94",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c71b1389-685d-4571-b6a3-64aacb414614"
        },
        "item": {
          "id": "7ec4f9ea-6102-474c-a05a-3f9f613db652",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "071306a4-d2dd-4f27-b8b2-fac6f9c3a10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64427cce-ed70-48f7-85a8-2904b24e1917",
        "cursor": {
          "ref": "d68e71f3-68b8-44e1-adf1-21c65c9ae284",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2e3557ac-9ebf-4e35-9e46-809c5d8341eb"
        },
        "item": {
          "id": "64427cce-ed70-48f7-85a8-2904b24e1917",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3be554d5-6937-443d-86e7-eed343f1a017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aafa863-4258-4dc7-94ab-831f24c8b21a",
        "cursor": {
          "ref": "a1b93ea3-6791-452b-8a62-dc411d332c71",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d195dcab-4345-4f95-aea3-a24a687325a1"
        },
        "item": {
          "id": "5aafa863-4258-4dc7-94ab-831f24c8b21a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bb9486e5-bf5c-469b-8291-ffe3f69322da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3896fd47-eb22-495a-be2d-c9fe51d7133c",
        "cursor": {
          "ref": "4c6f5f19-367e-4047-9772-361d601e6075",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e68a438c-0d12-4c95-b5d3-c69ef16f73f4"
        },
        "item": {
          "id": "3896fd47-eb22-495a-be2d-c9fe51d7133c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3b1a1803-f40d-4be1-b708-0daf0731bbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb603a1-4e2b-49cf-8b9c-a306dab51ec7",
        "cursor": {
          "ref": "bee4c702-fc9c-46d1-86fd-99af624706da",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8d387cf6-0065-4c3f-bc8a-bf3e42b76fbd"
        },
        "item": {
          "id": "bdb603a1-4e2b-49cf-8b9c-a306dab51ec7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "04554e98-9ac9-4bc0-b6cb-1858aad730df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b57a97-c23f-4947-a17b-ad09ba9bd903",
        "cursor": {
          "ref": "5ba78226-2187-4209-826d-bc2ecbfa89c1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "08404811-ca1e-42e9-9808-929ab191f1ad"
        },
        "item": {
          "id": "43b57a97-c23f-4947-a17b-ad09ba9bd903",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "774d0b04-7c19-429e-815b-54dbbe378022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a182128-bd34-4da6-924b-7949d10fbfa4",
        "cursor": {
          "ref": "2c5f0d40-8ad8-4938-a867-a4b275a33df8",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2801fe10-dd73-4f89-99a3-c9a30b071c54"
        },
        "item": {
          "id": "0a182128-bd34-4da6-924b-7949d10fbfa4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0162d1a8-d66e-42e6-bd58-ea485c04df44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad9a8a4-2c44-4505-b398-9384c100cfbc",
        "cursor": {
          "ref": "6de279dd-2cf4-4b5f-9f6b-84faed7ce926",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c1349d05-1e24-429d-9573-e69a0349c4d3"
        },
        "item": {
          "id": "0ad9a8a4-2c44-4505-b398-9384c100cfbc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "26a5d5ac-073e-402f-ae13-fb0dbc409576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a048a73-02e4-4b7a-afb4-19d041eb1b5f",
        "cursor": {
          "ref": "039f2557-1e4a-479e-a7e4-7803e82d2582",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7dd58592-35cc-4d9e-ae3d-e83eac060ee2"
        },
        "item": {
          "id": "8a048a73-02e4-4b7a-afb4-19d041eb1b5f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40d5ed29-e034-46c1-9e30-ba6034456470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c2637a-5b5c-4fc3-bba7-01a05bf1a0a3",
        "cursor": {
          "ref": "bc28044d-b31b-4cdf-969a-90246667709e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c0f56d22-5eca-4856-ac20-8e7802e21fef"
        },
        "item": {
          "id": "56c2637a-5b5c-4fc3-bba7-01a05bf1a0a3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6c969b97-9aab-4470-8f8d-e91f8d645ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448a006e-04f8-4db8-a934-0a7c2335cac5",
        "cursor": {
          "ref": "9fa74929-7519-42a7-948e-176b86be2d93",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7d75a337-c96d-45cb-a49b-790dc7135981"
        },
        "item": {
          "id": "448a006e-04f8-4db8-a934-0a7c2335cac5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d1f8e167-bc97-4bf0-856f-780b185b17cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d11f2ad-2a28-44ca-bae0-867c506503be",
        "cursor": {
          "ref": "fbecc7c4-115a-4aac-817e-58d815b8c6de",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db773cba-7661-4f84-8d4e-1cc840c47b1a"
        },
        "item": {
          "id": "0d11f2ad-2a28-44ca-bae0-867c506503be",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ac3a60e9-81fc-4500-b802-3027f971e362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77aad88-a69d-4e81-8a50-684fd5bfef10",
        "cursor": {
          "ref": "f35e2adf-2ba2-4923-9d86-4b047fe1c044",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d9358220-9a4d-4290-87bd-f10f486f8666"
        },
        "item": {
          "id": "c77aad88-a69d-4e81-8a50-684fd5bfef10",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc1de47a-f9e7-46fe-a20b-08e4b17130ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bc2003-80fe-43c0-af99-3287db5a61fc",
        "cursor": {
          "ref": "947916eb-3b8d-40f9-b6fc-22cad1e4097c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "81919ef1-63e7-4bf1-b2b6-5ea7176cdbab"
        },
        "item": {
          "id": "a1bc2003-80fe-43c0-af99-3287db5a61fc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a0872082-5436-4295-804f-94754ad83ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a358576-181e-4f03-b977-481154766cf2",
        "cursor": {
          "ref": "d686b278-eb5f-4165-af65-e4074e5cd852",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1e1630c2-6ef4-494b-818f-4a4297cfcd1c"
        },
        "item": {
          "id": "1a358576-181e-4f03-b977-481154766cf2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d11b0e4d-2b87-4083-86f9-53dae753dca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d0e496-3d5e-49fa-82cf-51a83ca3ce28",
        "cursor": {
          "ref": "5c371f9e-a70e-48b4-abb7-bf99339b2257",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20852910-bf10-444c-82d6-852758d3e84f"
        },
        "item": {
          "id": "73d0e496-3d5e-49fa-82cf-51a83ca3ce28",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f2e39ba3-07af-4a24-b7c8-f15b4c012b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d5a85a-0ba7-47c2-9629-da95221e46b1",
        "cursor": {
          "ref": "e695509e-c12f-4559-81b3-ecd47ff237b1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7ca3fe1a-a6a4-4711-93e4-a961111f862f"
        },
        "item": {
          "id": "e3d5a85a-0ba7-47c2-9629-da95221e46b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4974eb67-23ca-47c1-bc63-8abd7b7dd542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf79b5b4-a7d6-4da4-8d0b-6a0fbf1409c8",
        "cursor": {
          "ref": "000d8238-51dd-4099-8b18-d1a7e2518dfc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2d6f41d0-b5dd-469a-b0f4-eac10d82124a"
        },
        "item": {
          "id": "cf79b5b4-a7d6-4da4-8d0b-6a0fbf1409c8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a035d082-4bb5-4d64-8ff8-b824d70d1a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b9c318-9936-475d-89f7-cc0b58b0575c",
        "cursor": {
          "ref": "68297c3f-0624-44a9-8ce8-3bd479585e7e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b154298-80d0-4552-983e-678a3081f78a"
        },
        "item": {
          "id": "45b9c318-9936-475d-89f7-cc0b58b0575c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "351ae345-5a9d-4529-aaa6-238d1184d629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef10a63-f10e-4980-8d71-610bfa9c1eef",
        "cursor": {
          "ref": "235e3d1d-d631-47c8-a0fc-cac1780b50d9",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "14d6f0c0-57bd-40eb-9a53-f9fbb0b18856"
        },
        "item": {
          "id": "1ef10a63-f10e-4980-8d71-610bfa9c1eef",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "16424319-5cd6-4d9c-8367-2647be77d8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13528dbb-98fc-42d5-8590-68e30863e1e1",
        "cursor": {
          "ref": "c6a19f6d-62e5-4a1a-a13f-3e3a4d602f32",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a3870825-8744-4e6a-ba35-f3b3b22b9d2c"
        },
        "item": {
          "id": "13528dbb-98fc-42d5-8590-68e30863e1e1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5155a123-cd86-477a-ba82-7d47bc499f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a362ea12-6087-4b6f-b250-39159469292d",
        "cursor": {
          "ref": "976b6e6f-3c76-402f-a7da-81cfee12cd5e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ca7852ec-70b8-4281-9eda-7146e9d996d7"
        },
        "item": {
          "id": "a362ea12-6087-4b6f-b250-39159469292d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4783cfbe-0909-4de2-a337-a4a01d110f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec4a40b-f29a-4d01-a86d-a29e7dd34d88",
        "cursor": {
          "ref": "4d9cbdb6-3580-4e27-a200-bd3922b202f4",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2dc363ed-bd3b-418c-a4fa-a86e5702584f"
        },
        "item": {
          "id": "3ec4a40b-f29a-4d01-a86d-a29e7dd34d88",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8dc25fec-2a9a-4bee-9392-9c2c8d8ec987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46e13ed-5208-4ede-af70-8afdbfe7153d",
        "cursor": {
          "ref": "3bde72b7-8a45-4d19-85eb-3a9c0e8256d3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f1db0952-a705-4180-8029-d9e7806a73c4"
        },
        "item": {
          "id": "d46e13ed-5208-4ede-af70-8afdbfe7153d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1433df47-049b-42c7-8ef4-8f0cc4e3b428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b7f92e-1a82-4bef-bee9-a85d9caba3e1",
        "cursor": {
          "ref": "05bf525b-e733-45a2-84ed-5573b7d1ce23",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c84b60ab-7953-44f4-ae41-a83f54a3c4a5"
        },
        "item": {
          "id": "37b7f92e-1a82-4bef-bee9-a85d9caba3e1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "305005d5-ae9b-4dca-9616-94227ee6c0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cb282e-8d23-4ed4-9f44-53d395cf324e",
        "cursor": {
          "ref": "35941053-85ab-498b-ae10-3e6fc69a3d9f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "543af5e8-8b06-4868-bee3-8b878a6494b3"
        },
        "item": {
          "id": "b9cb282e-8d23-4ed4-9f44-53d395cf324e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "da81477a-357b-401f-99e3-06e7ed03119d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148ea465-add5-4e6e-8be9-1535fcc4f354",
        "cursor": {
          "ref": "221f2132-bde7-4041-9176-e1a46e122a73",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0c4f34fc-7d5a-44ac-ad79-0d6cff023e4c"
        },
        "item": {
          "id": "148ea465-add5-4e6e-8be9-1535fcc4f354",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "51ff9e45-e70f-4868-acae-90eff2167faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041faad7-5ef7-4b90-b147-d6103c1afcb0",
        "cursor": {
          "ref": "56c3bebb-a03c-4eca-b36f-dfab60150705",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b5b50302-0e6a-4816-96a3-c3fc2f663c43"
        },
        "item": {
          "id": "041faad7-5ef7-4b90-b147-d6103c1afcb0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "292eb9ae-211d-4773-b398-d674adb43c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014ae528-b39e-440f-aba7-0132b0ef15f2",
        "cursor": {
          "ref": "da2fa8db-8cae-4117-b74d-01772bf2b884",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9c8b2c2d-f076-4703-b728-aea4015f32a5"
        },
        "item": {
          "id": "014ae528-b39e-440f-aba7-0132b0ef15f2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "83dab36c-3f44-401b-8b2a-3925d93de19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaa6707-8ee7-47af-b91b-07ae47dfbf44",
        "cursor": {
          "ref": "313cce56-43b0-4e67-95ae-93085f0688d4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "00372f3b-8ecf-4ee1-b0c3-6ea4d4a97899"
        },
        "item": {
          "id": "baaa6707-8ee7-47af-b91b-07ae47dfbf44",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a08e6f98-af94-4c7d-aab7-427f73b914d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975fca0a-6615-4386-95ca-f45b614ee9f0",
        "cursor": {
          "ref": "f360dc86-a0dc-43d1-a014-79b30824c9ca",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4339afe2-7f90-415b-a73f-cee7480bc1c1"
        },
        "item": {
          "id": "975fca0a-6615-4386-95ca-f45b614ee9f0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e1bc8aef-344b-4fce-b04f-0dad076a5003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328aa6d1-c376-4ce0-a5dc-5f4060e400ee",
        "cursor": {
          "ref": "5d21e5aa-ac4a-41f0-85ae-0ae2801aea12",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a6e8337e-0922-4f0e-a445-ea6d2682ff75"
        },
        "item": {
          "id": "328aa6d1-c376-4ce0-a5dc-5f4060e400ee",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "05635a15-a70f-4742-8ce9-75ed9a337a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0707bc-5c88-4915-8991-fb14fe834eee",
        "cursor": {
          "ref": "74797eb1-8401-4de5-966f-7be2db264c61",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c62b1c77-314d-468e-994c-3b53d9353321"
        },
        "item": {
          "id": "ff0707bc-5c88-4915-8991-fb14fe834eee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0069c538-77cd-48c6-b466-754321209560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb5153e-605c-4b31-8fa4-722034c38ac9",
        "cursor": {
          "ref": "b0a1af0d-0612-4bbc-9efd-8b86b30a167e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e2ab70f0-1a27-4f93-ae62-14d44cbcc38c"
        },
        "item": {
          "id": "4eb5153e-605c-4b31-8fa4-722034c38ac9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bd2784fd-86b7-4bc1-8c64-71b01ebd1cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1508e3-a90f-4adf-b5a6-b2993aafd642",
        "cursor": {
          "ref": "9c569818-e6cb-4c3a-b0f2-d135e2217e16",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ec6bf4d4-4155-4c74-9d70-7886332571d7"
        },
        "item": {
          "id": "ab1508e3-a90f-4adf-b5a6-b2993aafd642",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9e6a5bb9-c31d-4991-be31-50bd99a99162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f14e325-9a02-4fcb-af3e-abbd983516a2",
        "cursor": {
          "ref": "77357086-6fa7-48bc-a122-832cdd1632a3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "aafe3115-511f-4447-8293-8d7eaf8c1b23"
        },
        "item": {
          "id": "5f14e325-9a02-4fcb-af3e-abbd983516a2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "eec9e495-ac8a-4ec2-956d-dc4b1989b627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0872f1d0-68e1-4599-8663-e570dcf68fd7",
        "cursor": {
          "ref": "352c7edf-1246-4079-97b1-ac0285187c53",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a50c7fb5-7d88-4120-afa3-4c37991f91c8"
        },
        "item": {
          "id": "0872f1d0-68e1-4599-8663-e570dcf68fd7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a4e4778e-4543-4032-9261-54deebea31a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e07eb0-8daf-4847-8c9d-0f1b499a6298",
        "cursor": {
          "ref": "b382d519-cc5e-498a-85fb-be8383803417",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6a9f4fef-6f31-46f5-a5ca-4a4421c367be"
        },
        "item": {
          "id": "95e07eb0-8daf-4847-8c9d-0f1b499a6298",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e42cf296-a7f8-43b3-abff-bd0121bebf13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cfdbf8-0a9e-4961-b02f-3f00317947c9",
        "cursor": {
          "ref": "86390a20-9ae3-422b-b802-57c6efc06b54",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b7415ddc-2218-4d13-ba68-5624d8eef7a3"
        },
        "item": {
          "id": "21cfdbf8-0a9e-4961-b02f-3f00317947c9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "33c322cd-b852-4c45-8101-033eb212ead1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91474fac-4558-45ce-a46d-cc5393cd1cd9",
        "cursor": {
          "ref": "8f83ff4d-e9f2-442f-916a-b64cb6c41c26",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b0b23602-7254-4032-b9d2-442389f0fe1d"
        },
        "item": {
          "id": "91474fac-4558-45ce-a46d-cc5393cd1cd9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1f4ac0a5-b28c-4756-9b80-1fc8da6820a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42834005-1734-4fb4-8fc5-3e44217b99b7",
        "cursor": {
          "ref": "d872df2b-a34b-49ae-b36e-30a8def671d2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "95077b3d-1956-41df-8ccb-8e45c38095b6"
        },
        "item": {
          "id": "42834005-1734-4fb4-8fc5-3e44217b99b7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d595737b-39b7-4c35-935a-8457834d431d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b485419-b5d3-400d-8347-6557d5c5049e",
        "cursor": {
          "ref": "f1bbec41-fce3-4468-8f4b-2efade8a1ae3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8078d821-ac3e-47fd-93af-94c7ab6861d2"
        },
        "item": {
          "id": "0b485419-b5d3-400d-8347-6557d5c5049e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a18ef98f-2ba9-415e-96a2-671a56becdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862def53-4ecd-4ce5-a6cc-0ee991cbb39a",
        "cursor": {
          "ref": "6582384d-f838-41fb-a0a9-9d78e19fa6a6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a4088133-32ed-4f25-acc4-a330e48a95ac"
        },
        "item": {
          "id": "862def53-4ecd-4ce5-a6cc-0ee991cbb39a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "18bc33be-2135-431a-8a9b-4f8428ccb05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44390c27-8982-45e0-8e44-bf3ee01b86ac",
        "cursor": {
          "ref": "a665f9bf-c0b1-4570-914a-183731069153",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0de150ac-f6a5-4989-9daf-abec0b270914"
        },
        "item": {
          "id": "44390c27-8982-45e0-8e44-bf3ee01b86ac",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6a71d7c9-faee-4557-9995-ec0abcd47f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65aeefd-99dc-4034-a05c-4c2dd3bdac9f",
        "cursor": {
          "ref": "1995ba06-3d50-4fd9-9cdd-819244a1682b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4bc0dbf0-1ed2-4ef6-8330-55c1e47c1314"
        },
        "item": {
          "id": "e65aeefd-99dc-4034-a05c-4c2dd3bdac9f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dad42a2a-9d7f-44c3-9a53-5491d97813bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35c09fa-6d3b-42cb-81cf-bd1e32a995a4",
        "cursor": {
          "ref": "01bbdc10-e9e8-48c7-b61b-ea5f1ce6ae65",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ed4c0a66-3b71-441c-be77-7fe384afc074"
        },
        "item": {
          "id": "a35c09fa-6d3b-42cb-81cf-bd1e32a995a4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c6af764a-0b77-4af5-b865-70b683dd7d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0558ea50-5500-4051-8574-0c431f30b81f",
        "cursor": {
          "ref": "37551a0f-90a2-4e1e-8cbb-02f53465d74f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "26640ad2-db51-4b5c-9693-fe1fffae72a1"
        },
        "item": {
          "id": "0558ea50-5500-4051-8574-0c431f30b81f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c43ddffc-b4a1-47a8-9184-5b8bd2974a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8015807-9784-4f71-afab-dd39c0dc4f7f",
        "cursor": {
          "ref": "b211ccf7-b513-496f-85a8-d61af4809157",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c8654e24-aa75-473b-9aa0-d25fb232521f"
        },
        "item": {
          "id": "b8015807-9784-4f71-afab-dd39c0dc4f7f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e12f3c3a-092d-4cc9-bd45-c90f429d9d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63156b98-2b8d-43bf-98a5-7d2c476a1133",
        "cursor": {
          "ref": "c1f3970b-029b-4e14-90a3-7f65dd4e8bd9",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3a6048a0-d7d5-4c25-a12c-8bfb74a7d55c"
        },
        "item": {
          "id": "63156b98-2b8d-43bf-98a5-7d2c476a1133",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6ab0fdf1-67d9-4351-b7fb-128cc7c762aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02d00e-e52e-42c2-ac5c-6185e56912a8",
        "cursor": {
          "ref": "f12007f2-6e48-46af-b496-99f0e88c3724",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a4ec139a-9b27-4d34-89b2-a2da262ed83c"
        },
        "item": {
          "id": "fb02d00e-e52e-42c2-ac5c-6185e56912a8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "678f3b62-8994-4382-9a92-e58c978e91ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a62f5-63c2-4e60-a026-9deab05a415f",
        "cursor": {
          "ref": "f6c79c9e-f62e-4198-b4dd-d224fcbab001",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cab5edad-1865-4e2a-8760-f48f4a34cf63"
        },
        "item": {
          "id": "8a0a62f5-63c2-4e60-a026-9deab05a415f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3effe7ee-0252-4699-95db-23e653f86a3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792686e2-a9fb-49a6-8373-bff3c78c7b6a",
        "cursor": {
          "ref": "b5a5b955-eba2-4ccb-b113-615ab66b52c5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "df043b18-939a-42e6-a60e-7c5895843f75"
        },
        "item": {
          "id": "792686e2-a9fb-49a6-8373-bff3c78c7b6a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f807fe06-13a7-4c85-b723-cff37a3e2b56",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "107f84b0-9126-44ed-aead-b525fdcd5f3d",
        "cursor": {
          "ref": "e12afd50-778e-4fb6-ad44-afda901a134c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6e7cafc3-b633-4def-ad21-88b931dbfe66"
        },
        "item": {
          "id": "107f84b0-9126-44ed-aead-b525fdcd5f3d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d07be513-b7da-46b6-b1b8-77e37b7f9ce4",
          "status": "OK",
          "code": 200,
          "responseTime": 1969,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d23dd4d-5eeb-410f-b95e-e49948e7abd6",
        "cursor": {
          "ref": "b23a7901-a184-4509-aa29-aab76279bfb9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "75604d77-d1fe-45e4-aa8e-73fa9aba1e9b"
        },
        "item": {
          "id": "7d23dd4d-5eeb-410f-b95e-e49948e7abd6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "383be0e0-f464-4aa9-8c48-75f17d298d9f",
          "status": "OK",
          "code": 200,
          "responseTime": 2506,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f31e13-4e8b-4870-a19b-7c7e021c4eee",
        "cursor": {
          "ref": "7026eb1a-7997-461c-a033-243d219b068e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "df35c138-ced2-4194-a46e-b16ae5f89afd"
        },
        "item": {
          "id": "89f31e13-4e8b-4870-a19b-7c7e021c4eee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "312976d5-d35e-4ee0-84d5-0fa3faf116f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f31e13-4e8b-4870-a19b-7c7e021c4eee",
        "cursor": {
          "ref": "7026eb1a-7997-461c-a033-243d219b068e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "df35c138-ced2-4194-a46e-b16ae5f89afd"
        },
        "item": {
          "id": "89f31e13-4e8b-4870-a19b-7c7e021c4eee",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "312976d5-d35e-4ee0-84d5-0fa3faf116f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8584dfd9-d6ee-445a-821d-b1f2774f32c0",
        "cursor": {
          "ref": "b1385b83-0504-48a6-a2f7-5a70b5c5e9a6",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5a4f87a1-35e6-477a-a49c-dfdd8f0a0cc7"
        },
        "item": {
          "id": "8584dfd9-d6ee-445a-821d-b1f2774f32c0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d14d1bd4-a6a9-437b-908b-c73588ab0342",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3c7cd5-e838-4f99-8f7c-000d9dcba9e2",
        "cursor": {
          "ref": "a34ff40b-d2db-4607-a3bd-1ceb8dc48f19",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e0d203d3-250c-4b60-992f-9d733ca3a105"
        },
        "item": {
          "id": "9b3c7cd5-e838-4f99-8f7c-000d9dcba9e2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "692b90b8-e699-44aa-87cc-e9c41d40c018",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}