{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "03f44988-6c42-49e6-8d9a-a234e18eca26",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4d192e01-0cac-40d2-b558-487c9b43ee99",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f65da0f3-03d8-4312-bc4e-c66eddc26ba0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "18499f65-fc44-4f58-b12d-3b7d1a90ef39"
                }
              }
            ]
          },
          {
            "id": "c46a4739-c787-4f65-8768-80734e332be6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d3b6f0c-bb82-4404-b40e-e8646b030851",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cf13ef47-55a7-41eb-afcb-1ca6963c37e6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "06678275-bd00-459b-adf6-9e790796881f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0f3a1247-72ce-4875-93c5-bd54fbc667f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82515a1e-8f57-459f-9cfe-5297b85792e6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32395393-73ef-42ea-b704-1433bab3f7a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e91eae78-3876-402d-a1da-839cc3180068"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91915813-99e6-4fc8-8a23-31f56805a51d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b657eafa-b2e5-45af-8f8c-49d186775745"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c27de2b-78c4-491b-9c0f-23ddf0767f0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e4b153c-92ff-4669-a68e-c0e3518b771e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "838cb3ca-f8ef-42b2-af42-1618f5c67389",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "743bdb91-052d-4b11-8ea9-ff8f8835baad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed71e4ba-c1ab-407f-875c-3f48b716e202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c22d0d2-2783-43dc-aa41-4f7765d20330"
            }
          }
        ]
      },
      {
        "id": "ccefabad-934b-4144-84d6-c043179c6fda",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b2274910-6035-4a3b-aa4d-3e7c92c197b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "daa9c004-9663-49e7-ac32-4a5342bdbb5e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e506caaf-f4ae-4237-ad90-2ab7c80bf115",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432919e8-4797-46d0-880e-d638632df88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4c95792-6f9b-4aea-afbd-e2223e0fcbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7eba80-6d4a-4ce9-ac98-930695198fd7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8f570b-5886-451e-8c0f-5d73ed400c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6467c367-86ad-4442-ad04-bfa580186262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feecdc4-8814-4b8f-8dae-a30a5e54916b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6a096-6d6c-4ec2-8b8d-0f681b5fc8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c59bef3-05c0-44ad-8aa3-3b53a7b07deb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4e4958a-ec1d-4a06-999a-232670d57f42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99de86e1-c699-4dba-8ddd-b48cdd7bda78",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619ff57d-8cf3-422e-a4a1-b6c535350c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb7e8727-3e29-4c4d-9790-9dc5ff1f7c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65d6bb0-d404-4057-bde0-53948e5616e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e347310b-73c2-4691-a9f6-a36acd3765c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bf8ed739-e179-4a50-bbab-b2dca10fd520",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f91bcb9f-371e-4c81-9a26-c746afb073a1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e215df03-72e2-41e6-b8e7-7fc59822e002",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "60329fc7-5593-4675-a69a-a2e1e39c2338"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83865d4c-8b64-4413-b50f-3c6e7685f7ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c079207c-10aa-4c85-a7fe-cb554c7a2a08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49d602e4-6a55-4799-b163-65883ef07375",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e589a4d1-1dba-4520-8db1-6495746df6b5"
            }
          }
        ]
      },
      {
        "id": "7a8e2d04-de65-44be-acd5-4453803e8976",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "40f28bdc-f236-4f03-bab0-d87c8de8138b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4bbd0b36-581a-4cdf-b488-c24761deb838",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c76a7e87-433f-4077-a819-c04e6856bbbb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035331af-2761-4a36-b093-6287f6387520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41605bef-bd00-4ed9-a1cf-3df9f90c8e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4a6fb2-b0e3-4d4e-94c7-4d0f316648b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf260ea9-0ade-474e-9ea7-60747fb5f3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301dde1f-bac4-46e3-a40a-687188412531",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69eb8c0a-d5ee-4793-ac4e-dd432a4dc937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d301a1b1-195b-4230-93b2-48376d538c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6dfa9a-85ae-4f7d-a3db-184cc6fba0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c56b57e-b8f7-4605-8116-2ca7c6bf0f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ad7a8e-4687-4389-9462-2e6c747b0d0f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4157c747-e827-4053-9084-154ec09a5832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c0a1c8-61ce-4b84-b77f-891c22632927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c589681-d88b-4659-bf04-d22d5a54fbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0b88b58-7201-4bab-a2d4-57076709256f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7144491a-0fa5-4cfa-a5dd-f7850b2ce0ab",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360c0efc-99b1-4e41-87dc-d202b73840f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2ff36e-6e3e-45d8-af04-6e29639e6f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea907e4b-bba0-4c31-926b-fd4108bd311b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "339c76e4-16eb-4427-8910-f96051070776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ecd08b-20f4-4bdc-8de7-db360b4b5e35",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a020ed02-3033-407d-9ca3-9c3fc54ef093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47da24ac-847b-491f-a22e-077bcb388333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f964d2-51bb-4140-83a0-b44c35358acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb93ac91-8641-4757-9c00-19acc75673df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049c4426-f577-4541-bbd2-585ed0bafc5b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc085db-9bad-4076-8694-e6abaa7e1514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7e6daa-4bf3-41dd-a523-e5b9b2addea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef29fea0-334b-4898-8b46-a869c14a878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751bc0ba-6598-4b12-8351-72cc46f8bbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103a50bd-3578-4b23-8da1-fd7df1755621",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d985d6-bc62-47b0-b8a8-50d93424dcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2faf61-f76e-43fc-8166-4953613cafed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b9aa75-ef58-405c-afb7-c48c3cc87938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd67c81-432e-4943-876f-c6f390063926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9985157-037a-4156-8398-522cdc3ff08d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53dd91c-d4e9-4e88-9734-9a0bf6e5119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8618bb-a52c-4321-8fd7-65dfcecfb91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197bea0f-f0b0-4000-b345-2ed4a429e8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "446d0749-af83-4c63-948f-04e17cbba928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c6fa57-2168-4436-a8d6-d45eb7637379",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f506b0-91b2-47d8-84c4-7f7e76600bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b6db62-d61b-4596-a10c-62125b7319c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea654de7-c825-471c-96bb-32a9516023a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84acec8a-dbb2-4da5-91e4-5dd00726a111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f63afe-9342-4cbe-b7b6-dda5c50287f9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4510cd3-47e9-46ee-b04f-413ae7901666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105cae43-8276-40b1-a0be-df74462ea5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df7ac88-5a32-41a9-8a9c-29f4877e910d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b80aae8b-e4e9-4a7a-9a84-9abe9fd2ddea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e8dad-5715-4cae-be66-db6b2ac331a5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1740ad-1bf3-4f9f-a50d-25a4d2a71b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e98a7e-6b1d-4515-96ff-a55574db98bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e3ba73-cfdb-47b4-847d-4fbcc49b9df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c73a59f-8d7e-4c58-9447-f619353af461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b82f4e0-5dc7-452c-acc6-d44bd3e779ca",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813d0c66-1c6c-478d-a458-50b7d72d553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f98c38-1cb1-4898-b074-5d44324fc35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b52504-66c8-462a-a9b8-d569ad336678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "729b223b-1449-42e8-b96f-e86658efedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2c30e3-3de6-41d6-8b03-48f3de60f2cb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66207b7d-3f91-41b8-b0ba-df97fbde70aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c7a294-ddc8-45e0-85c2-d58175ce14ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac82d234-3aa2-4333-864c-461ccb965f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "724b8ff4-0e02-4af4-aeac-daba808600b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2187d5eb-b92d-48d1-979d-d77457b50dbe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03c2430-9933-484b-abf8-eaa893a042ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87197975-de8d-48f2-b6d8-f1ad7ce88f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f57cd04-eb15-471a-8dc4-b6033fa97952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87474a0e-cd9f-465c-8355-0c63fceabfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d078f3-cd1f-4d5f-a3d7-ecb2d6760dd0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d03aa27-1c5a-4a91-a373-5cbe5ce4a4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b199ae-adac-41d0-b9fd-83e8cc367e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d1966d-9fca-49b0-b644-5a0dd9e71a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3de6d64-17b6-4894-8f7c-20348fd83c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15678acc-9f00-4cfc-8621-3c3d8d635cfc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb80d003-b4f4-44c5-90d3-dbdca4a4e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c49a9d-0c78-40dc-896a-518d3090b0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0353272f-4382-44b8-bf05-759b41c052e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb733d1f-b93d-41e0-9cd5-db62a6906cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9a5c06-d58d-4997-b3aa-c4664b788ab1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfe4c5e-f66c-4dd3-8b02-5538d1c8c4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c9ea1f-45f0-4e94-8a6c-252ae318c9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f05409d-f021-4ed6-9b00-f50f3edec274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1080246e-ebee-4734-bcf0-e80eab4e8b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a1f795-a005-415b-9e3d-c4f31e2d934c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2a05d7-31f6-4da3-8f11-165cd9977d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81ebe1a-cba2-4095-bda3-8975abacfdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fd9209-9259-40a4-9ecc-169dc596b7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df871581-80b0-4126-9e61-88356b720ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be01114-2fd2-40af-86c9-d41511123154",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e8759a-a8b1-46be-b380-d97451e63d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ea36e7-d08a-4cb1-a18c-0e8c049b1cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040a0fd-2090-425d-b68e-68932cfc4414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f75711d-f28e-43b3-9192-0c4640169330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73a016f-9a41-492a-a2df-a3e3df3cf2cb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700d427c-bc13-4d67-b4d2-50e8633afdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78531803-67bf-4666-8662-6e2b97f8e0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd24589-e0d8-4611-be9c-094494a3490e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d483662-053c-4fcc-a6e3-950c2ac2781f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eaa74d7-640c-4ce8-bac9-60f91e7c4981",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dc8c2f-559e-45cb-a7e1-99065f0cfe90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd978863-6299-41db-98ad-c96c60c06ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badb513c-7584-4415-8192-114517933977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0e61ba-6851-4fd9-b069-94c5c8092f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f12543-54ab-462f-bb30-d46889a5bb62",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839e6a2d-60ca-4409-ab68-833ee2b101d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1810540-e82c-4005-9564-2fd3b20eeed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8e8b02-1085-425a-81f4-e20f6a2f84c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b1dcfb-3088-42a2-933a-5a1cf7301001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3231b9-6370-4eba-a350-d2ee136dd58e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49b52c2-fd05-4845-bf5c-f0246b348e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cb0416-367e-46f0-9de8-f412e4dc34cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351003bc-e1fe-4881-adb3-67cf73220808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d19e5e6a-d03a-4d71-bed9-c4c8cfea5576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5f13b5-1e72-4672-97f4-fe245cd250e7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5172c127-e653-4f45-bf02-be64ffb7e421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2036ed43-1d18-4bc9-ada7-4cfc296249a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca81881-642e-4b70-9406-98f7fc37bb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb82913-dafb-4b80-b4df-1d67ab22f1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a2f5c-e554-449a-835c-db45bea83d82",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7db999-de26-4e7b-86be-de7c68c45402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d647f23-93da-4271-a592-0b1f42a871d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d604674d-c49a-4073-9d05-62121851e1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b81421-3512-4dae-8098-6caed71b14be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6515289e-f3e2-485c-bbbb-8013c73e11ca",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e35efe-1fa6-4279-a936-712d9eb692df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbcb682-0abf-4625-8399-d0211546850b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be9cc4d-61d5-41ac-aad2-ce75835dc28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75978626-6996-42f7-a8f6-909fac099c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240a6fba-6e3c-441c-92fa-60e0a2ae62c5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2a501c-d2b3-4786-a9d0-fc49d45ecb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b990c5-05ff-47f2-97d5-9f51a4d4d431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c78c112-68b5-412c-a2e9-ea4ecc92deec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc70ae34-a166-49c9-8368-25144d5bcbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755bed80-ae78-4fa1-b406-cae0d900894a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9115579e-f7a7-4d62-be54-00869473ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b09d8a2-76bc-48b0-a417-bd9414902c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b653af63-cb2f-4e7a-9c1e-c8ec06b7b314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e321191a-4746-41ef-b135-2c9089d78cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e96677c-8ffe-4db1-97cc-24294c72ab55",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb5514c-79b1-49f3-951e-88cf4105d05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee48d913-5a01-4022-bcea-25c7f9d8f1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2444eb74-4c1a-4887-bdfb-5885b48fad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82194d81-002e-4be8-9292-82034d790075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c626198-1490-4851-bdb6-b837ec058d8c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f930f0b-c1d1-40f6-bc6b-fffc5eb2f0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdd8b7b-3c11-4292-abfd-19dca983fd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8906092a-8b03-45a8-ab71-0ffc75c37ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bfe74a-1f5a-4601-bd69-cf45642646ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b16dfb-165a-47ba-8696-7a4ed9ad9246",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b43fdb2-34e7-4775-98ff-e3c7315f6006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7443d15-bb5d-44df-b7ed-06ed72f4cc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee8f2b0-27bb-478a-8fed-1d0ebc3b92b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7fe1d1-5ef4-41dd-84db-2bf609e64c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5030c6-d2b2-48bc-8a0c-c0e57746417f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b08040-4acc-4d4a-b446-8bc5ced23cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7e6f9e-2275-428e-aec2-147798591d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e254c4f5-0f33-4e18-9947-1270512e4b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f877c65b-5959-4bcb-b21a-5cfba8d31621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb20b32-322e-4676-a95e-c5ea4932ca78",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc03940-9638-4adf-86a2-c24e82279b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a870512-e841-48cb-9b6f-546354bf2508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d32c76-2118-4d2b-9676-ba6745d29b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6095fdf-ceaf-4d4b-8fc9-109fdbd75875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dcf6b3-813e-4ce3-a61f-94622ed93980",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17adb6e3-0b02-4834-bdfa-8b27ac9067ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4338b392-fa85-44ba-9fa2-a5e2099430e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06379689-dddb-4ec8-a46c-73cbeed2cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "495a7d9f-dfaa-494c-b786-7c6e50df697e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15212d6e-4e51-47c6-ba06-adae45231458",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b92a35-c22a-48bb-a079-10a033586c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2737549-41eb-4de4-a97a-7dd9b66d6877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284a90cd-2962-4dae-b453-4a029958d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7296808e-623c-457d-b47b-e62f0fea3ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143de68b-26aa-4390-a798-ffd5b2e9455d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab893bb4-3adf-4bf6-8ac2-8ce2cafa3356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2828b36-5f44-4a67-9642-bd54ddf434fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51361b2a-c854-403f-8f1b-4220c1bbffcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47e5949e-9654-4ea6-b7d3-e64d497efcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd657d1-743f-40d3-98a7-b016f69230fd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2600e748-b606-49ed-ab7b-5962e4316a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b09de01-af5c-4916-bd5c-97530e8c4873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704d61db-dab0-466a-af34-602e09c47dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09605db1-78d6-4afb-974b-8f63fc04809b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93a6f10-ec95-44d1-9be1-d648c4b55cae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4854006-f3cc-4a45-922c-fb868277f6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000032a1-f904-451d-b204-c5850dc556fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b347e528-1467-45fe-a6ce-391aa692a0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f98d6b41-4ae5-4831-ac25-baaa8b762d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd62585c-f681-4522-a162-a3dfc64bbbc4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7726ad2-d142-45d3-b382-d493352136bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838898dd-b2ca-4dce-a484-1042460f5aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac547fb-eea1-4a28-bb65-e21b72d7d94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0c94a7-cda5-4d64-9dd7-994479608616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d7dfdd-dd7c-4d81-8b59-e410c27bb26e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63d78d4-eea4-4d94-910a-f7b7e62246b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afc6d3a-89c1-40a9-95ac-3c19139b6512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca5c435-7892-4508-a63c-e117f73888b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e04b13-b76a-487a-8370-45326421d995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9395196c-2b47-4cc7-b756-2f4e9c95b8fe",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19321db6-7467-4d87-9554-d643899e3e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f08b77-f4b3-43d2-8f3d-1fbc689ef768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805ec667-3f5b-43b3-aaa0-113833c4a1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a72f858-ab9c-4a50-9781-4446b58af4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0f4114-2aa0-4a35-b610-b7791ed08a53",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0799015-545c-4317-8950-6e76a49b248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab27694-4df0-4c44-aaf5-cbaf368cecf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9372d680-1736-4bbb-b970-6cc2a61697a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "969533ba-3785-4842-8fbd-85c55794eec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80db86e-5946-4c8d-ac50-d9df20b1e184",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17076071-61a8-4852-9611-660295e68d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37366ed-072a-4d80-b3ba-6ba7064571a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2121b533-ad71-4c5b-99d0-82f34ce1152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9472cdc2-777c-4302-8463-1e306712520b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68d1488-c8df-490c-ac87-e236e982c027",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a349ce-8608-48cd-9606-cd545d8b5a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e741a3-4804-477e-8940-bd04f97fc3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46553cf-e924-4faf-a586-7a4239b69f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e1df49-964c-4b64-949a-0e0768192988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07367b20-ee15-4556-b76e-0a822c15f2dd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf75ee3d-c899-4415-a0f2-1c1125270691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55facb6b-9b49-4454-b14e-83242e323624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6112853-a819-4949-b356-bb1f41994439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed644b4-65b6-4088-b17f-adeea84c71f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66548064-53ee-41db-b7c1-3a4caa1618b3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05c28da-e2fe-4fec-ac69-addfe40e4a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d85565e-8e0b-4e45-9041-59c2184fb66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d66752-fd52-4a55-9764-7c47446eba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c55761e-a040-41a3-aa17-9860bf45ea52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068e719c-f891-4d56-85c8-434e01900cb8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783a1bdd-441b-41b4-bbb5-3b63ba9e3755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92487ac3-8653-4052-baf9-f1f1b8ac8de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6174d20-a72c-4bae-9a9c-04e8a217f259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c1c0b7-c45b-4518-b368-657477f0c0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d284b-8cc5-432f-a484-7ac5bd91306b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5098ac-2fbb-41c4-98d1-91138c6ceed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec18cec-a5f7-4bef-ad6f-9aca2b46e2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd1f476-7274-49a2-9ce8-f69ba4ad95d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16847eb5-cecb-4c95-a52f-c17007bb6625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f697b4-c965-49bf-b4ac-9dd8b9c36916",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2375cd6a-bc37-4c27-9b65-bb15f1b5c4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516576ad-ac07-4d40-8251-9febcf310ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5094769f-7534-4763-8cda-b403c47ded61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "405140ad-2c50-4a6e-8951-77530b382ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f696cfc7-94e7-4d8a-8f12-f30a2b4323d4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53397ce6-ddb1-4535-9077-7ea5d729ce99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821ffecf-1535-4185-924b-724857763835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe96fa7-66f8-40fb-87e9-4fd7114ec942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd7ba61-4d5c-4e08-821b-52048e1362b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6477330-1eeb-486a-8601-3993d7a97b9c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0222f3-6ef4-428c-b273-6a9278a3a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c95aa2c-0f83-4e9f-9b5b-00ff39782fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fea927-0b7f-44b9-a776-b0efd8fb0778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe5be96-7561-4e5f-860a-a5def14235c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d508013c-8bd2-46f4-bd03-c10ab9dffda5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8017d58e-7b9c-4c05-9185-ea00d53e4398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48044350-f7e6-4ef8-8ac7-f1a15ec23233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ab6650-315e-45dc-8baa-31ea5ad90aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09488a7e-2438-4b4a-9f57-ffd4117b389a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e07a86-4cd7-4517-be86-963440f2ea96",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe5be77-ea9c-4f02-aefa-79f8ce0e9b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87eaba38-d127-4292-b451-289a3281182a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473d03f7-5e9e-4bc0-82f6-030e157b4ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dca0d64-e477-42af-b0cc-a65e2227c1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5c78c1-0082-4597-98d9-65210dc99d23",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e428a7-578e-4d30-856f-96809b0230a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fcee5a-e210-422a-a9f3-436336c80cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e176d-e360-41e7-a032-ba9e0081f610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c66d25f8-39b9-4736-b7c9-5af88ef5eb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7a51ff-d4d0-4621-9a17-6ee5f8476d5d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bc51e4-aeb0-447e-9f4f-d667ac92187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3d8499-e645-4786-8db9-5a3d0b5a7ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f481ac-638f-45ec-8318-3f75951ff9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10cc2b03-7bc7-4a86-b2f9-8101ca86c1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dfbf0a-ece3-4ebb-97ff-e96f62ca16ad",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cba7e1-28ac-4c37-9a34-a5d43b0cc339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d9f3e7-5d12-4076-8039-8f93ec721034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b342b5-762a-4184-90d4-b2db922c2e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d964c59f-2cb2-4e84-b7d2-55c82bf4f459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d114dfe-cb61-4dc8-b7a9-c4b865436e27",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960525de-a6d7-4080-98ff-0cba5342dc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3f2b71-518d-4926-80c3-f675ab99769e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102d285e-dc11-4f67-aa8d-e7633f716aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad68c136-7cec-47eb-96db-1732d05f95a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca11b00-134f-4410-914c-e5a39c820741",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c922d53-b97c-4e1c-8c1e-0cf618ea4dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7562388f-e0de-41ab-83c0-906f07412500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65286c49-d3ac-47ae-a669-8f00b8500897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83eb88d2-b31f-472e-9323-1ef179282d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e45c6a3-0a6a-469b-83f2-aa7a0c43191e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6ae95e-9d99-449d-8d21-c4ce06776766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "734c8349-b1d5-4f45-bcd9-b982a43e0067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377966b2-5f90-4130-84fb-a1da2f18c4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbd8e8b-6896-45e8-84e7-30ab263e9d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a499adc3-eaa6-43c5-a91f-1e0a5cca0598",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f674f030-c1c8-40d3-8a31-e5c83b600c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00e5d8b-4509-4cde-b1e6-d61942565c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ef1b20-c836-45f2-b43b-5aed5bcbedbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb41acea-934e-41a2-9529-027aa20e5ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5539dfb8-cefe-4175-9a81-b2f6a236841f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8c75a6-8a7f-4a6e-9de0-bb7d8eccd24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d38462-0828-4851-8991-6c255a5338ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b658053-d99c-4402-878f-1e9230c93244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "557ce4f3-c62c-4685-a1db-16340d7eab36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dce889-22f4-4a01-bd48-a09577a7223b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9af669-bcea-4b09-84fa-d8b4941d45e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7817438a-a7b1-4343-9c62-71c8c514dc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88db51a2-d128-4764-90c2-0d9cc69b3362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b365a8a-b55f-448c-92d3-c043eb933659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbef9873-c60d-430b-903f-8e1d95a37233",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69659a2-ddc9-4509-85e8-029693b6c6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02825e3c-12b9-4580-b8b9-05dbaa4927eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f51776-f734-4daf-b431-c2ce09f3224a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "20316801-9a30-4091-ba5e-f5561ab155d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bffae33-0b2b-44e2-ba3d-308aaa0a196d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d991991b-3e54-4eba-881c-68e6bf6f5280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7103d86e-13ea-4a19-a447-c0a26a99197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c23f6cb-5ebb-4dc6-a50a-033c74b5bfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef6e7ca-e392-4f58-b1e4-cd08022ae909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c560ba28-3123-4689-bb68-39d1bbad59cf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd066c3e-bc3d-426c-b6e7-9abeecb48bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e4d390-330f-451d-960e-e9407153fee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f46e3e1-f1ba-425e-98d8-b7c705dbd489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07fbbc3c-d9b5-4031-9ee2-37ec9bc13348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb5ff34-abbc-48d5-a425-c46a2293ad8b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fd2064-b009-4e66-ad7a-bcf49c671a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8286dae0-abf7-4c1c-9518-4b0599a8bb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389d19cb-13f6-4cb7-9ed7-8c64b34775af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10ddb712-2f98-412a-97f9-2bd821790999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88897b17-53eb-461b-8682-e3cb0d6ca749",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bc5c1b-f45d-4a68-a952-19008c3fcbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb30214-5c1b-432e-afc6-1fc50c54b52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7186ef8d-004b-4984-8aca-49d7635b7c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04ec9249-52f4-41b9-a81f-cf5e225725fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee59274e-a826-4d78-9f99-e9a5763a7efd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69e6c7a-6f82-4e61-aecd-5b415a866044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7450e313-e7d5-4236-ae2d-0a7a05f8622e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc14dbe8-66fd-4f5f-b214-e6b28194f38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc84ad8-07a0-4786-943c-9419a103e3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265dda94-ec61-4e63-a7ff-a807eb4d9f06",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7dd3a83-9883-4b08-b232-c362be508c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3a1de9-f4bc-4990-82a2-16c3fb707440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33db5d7a-6105-42c5-a0dd-4310b797c6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0985155c-8e60-4299-a468-2865ebd9f1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce065b6-2d9d-4f63-99c9-e5dbc1d81870",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436b2bd8-4948-4237-99cb-4db23970048f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4824ba12-3347-4e75-b457-9d1797a79f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53124028-ddbe-493c-ba8c-b31e7826ea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f604475d-9d54-4985-a53c-8484dea2b295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a8f429-1cdf-4e97-8389-ce1dd27f8282",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249a5f36-6a6d-47c5-b4fd-f094949e6f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5defad-4071-4f13-aecf-7e7fbb388042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0320e0-b80c-453e-86e3-ad8a6824d7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3030eb-e2b7-43ca-bbcd-1f476aff41c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea980176-b3a3-4fa3-8d5c-4fafaa896672",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6238858f-d642-4d0a-a699-e15472a62ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e68754-9525-4983-9943-8b75996d6681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd949cd1-c139-435f-8cf8-1fc85912c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0411bc4f-705b-4afb-9d09-d00caa338f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34574c2-d1e8-45c6-b0ba-29fb6a43485a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb60bede-f810-42e0-9951-519188f3dd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de05982-5142-4cdc-a1f6-a1112ea25ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04f83c1-61e1-4d0d-acaa-4ab64a3df346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19ced992-ab51-43f1-a3e0-f4b36fa38825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc07a1a9-10d7-45df-9333-ef8032f24c07",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e70aaa-e5de-42db-9269-2af0deb0b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e52e69-fa3c-4115-b963-f5ac2bca3d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b623b163-56b9-4994-9704-e6cc9d852400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce7aa45-3f12-4896-9b2e-761c757c2316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d1e813-77ef-4db5-9065-0b061fc9f737",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef7db91-fcdf-4f06-801a-7f4512075387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7b42e3-fc60-4cd1-be54-d14ef05d5cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c8cbd3-b754-4703-80d1-8bf8e3c04040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "338d816a-b22f-47b8-b791-9b1a0b0642ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7928e2c3-74c2-419b-b69b-9d03ffd993d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89188d7-2e46-4ae5-98bc-1bcff6327e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2e35c9-be92-4789-aaf3-8a56657e7957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b268fc-48de-4f12-ad61-54f60f7b2b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86437ba-91f3-41d9-a150-7f9d1ae07791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72172be-14b9-428a-8446-d539c9ea9d7b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1fb4ce-5953-46f2-9775-7cf5e7f0b5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb464f9-a93e-4158-ac7b-e713c2b206a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc09682-75ba-4ac5-8fd8-cbe5f534035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74979360-92fc-4587-a106-e9917a7120e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1ddf3f-c8b2-4bf3-b70d-c0255e13ec7e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15867687-66fb-4a46-a584-a8847aa0659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f938eaa-2653-48db-b3c8-782436c3afc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaffc16-5321-42b9-95a7-51f08ccae971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16019103-2322-4bec-b8e8-23f612a3a0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadf4cc2-5789-4be8-aa52-f1a4b8d5fc3f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9df6c2-8620-460d-bb1c-e6b9072fd0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb376d5c-ec8b-4db0-b8ea-c5b675820382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51700840-0e3a-4aa3-be1f-b89228eb9556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5079847b-ef07-4614-b163-ca9db7b29a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94be33b-807e-4808-9b0c-186e6bcd35c8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539bc5d1-a3b2-4191-badd-0f8b9c56c955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d5bf3f-71c8-478c-8d0a-289588686377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94c9e19-e584-46da-be22-65add3be2c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f3f4b8-e727-4e24-8578-bb2863f504cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552496f6-eed8-4643-9e21-876ca70fcfe9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0dd41a-4b81-43e4-9aab-27583dbb37df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e261b627-5b39-4697-a140-839c2a8d8fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd3a6a2-46e5-4281-8f29-d4863fc56585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bc43fb-0bd3-4ba7-a18e-1a1b199de3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e564ab4-b954-4c1d-be34-015fc3037a51",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f93c867-f0bb-4676-982a-118e0eb7154a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece61bfb-6dc0-40a8-85e3-b5b53f303644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7ab093-bdc9-4e10-b321-afe50160bb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d521c4-6500-43ae-a59d-dd46ed958053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d7bb39-2220-44a4-9f87-577da2de2596",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52afc87-3a61-4848-93d5-31b7f4ecf649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc6dae1-9ab0-419b-9670-a2acfdd8e1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e758330d-d9a4-433d-bf69-c16f86a6e2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9daf75-4906-442b-b2ee-f40afd4e2bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e81209-671a-4c89-b378-a799dff4f685",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60f0b33-c7df-4da3-87d4-844ef1cebad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc408e0-3af2-43d0-b026-bee5f62537be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb470a5-536d-4a0e-abee-f013ef312c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2aa93a-d8c4-4036-88e2-c803d1a99a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae4b025-c833-4dc3-86b1-a7c8fb3c4d20",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564e1d2a-4b64-4fba-9917-a27f62b47774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148c6e15-e434-443d-82f0-18589c2b4316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bc0ea5-1e36-4ed0-a0df-be1c26dc86f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f448259-7ab3-4084-8e72-3ef22e969621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdb174c-d7b8-4e42-b4e9-b7e896c86b1a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e981d8c-5c43-4d4f-befc-077d065a4341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b03037-b275-4c03-9131-505aec14e6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58388514-4ee1-419a-b071-470c942d62ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c00e0ed1-7fdb-464f-9e43-52ba70c9822e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44da867b-4d0d-4cd1-a40b-fbfe720b0cac",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bcc7b5-17d4-43d2-b4bf-70ae1a9d2668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cad63aa-b7c2-433d-bdb2-4fe9adccaa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7508c8-ea90-4ea2-b20f-ecb07611386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d392dd44-17b0-4bec-90a4-938f849719ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0cdda4-afc3-4f06-8b2c-778401d4eddb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc8b0c2-379a-4195-9224-d088c8e4248e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad698d72-478a-43a7-a996-ce55be6fac92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aaa5af-2d1d-4757-a6c2-fb5e989c89f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12f08075-4afe-463e-b4d4-7e3c9b83169c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e9e51f-65e9-48d9-a566-1799303a6031",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccfd28e-ab1f-404c-a15e-b735c1e0bb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8264534e-de38-480e-b154-579344861333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1462e2-bdfe-48d1-b984-955aef088d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1a577a-1a5b-407b-a067-4b55c6a8d1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b4e888-e5e3-472d-97d0-e05e98365777",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5eae03-419b-4b58-b511-6ef2f0fa0c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108103a6-6c5b-49dc-806d-ee7e91fc8e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8085165-45c2-4dc9-a7af-89049203e0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c47f4e2-ffbf-4938-8ffc-e58df5a3fcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89ccc99-fd6f-4cdb-9428-9775e439f282",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f25588-fdd5-41ff-9373-72fa10f91391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d92761-54bd-4779-ace4-ad50cb0c237a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8766909e-dff3-4911-9e78-482ef0facfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3208df9-e92e-483f-b187-bb645b9a6942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9043796f-bfbb-4f36-acd1-70e29dbabb50",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3f2c68-1060-4361-9370-389f8f9dc6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "738eb152-7063-4d4c-adfd-9ae8327cf3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee5f7f9-97cd-40b2-b046-f023223d2259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd1faed-502e-447d-9314-557002463bbc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "421e7a8f-6d75-40ce-9808-acff8de11551",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e014f6d3-58b8-43db-a2c2-2203108019f0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a2cb1a-63cb-4ed5-8069-b3249f24b08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "666426d9-bb41-4187-ba99-c425c2914654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40babf96-926b-4631-b229-273aab2d366c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cf86198-e85e-4764-b4e4-949478c49011"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9021132f-061b-4f65-810a-b8bcf663a8f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "656c4d6e-1615-490b-82d1-cf09c0ce0cf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5489d639-e2e8-4d5d-a1fc-f294e2f5a348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03c38c6e-d030-4d70-a861-7066c1e4e972"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d92b975e-922b-476a-a40e-fcaaf871338c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6a4c63b-8983-4769-a538-762d60d6c55b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b6b9602f-ee47-4aab-a225-ae1376f00cf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "51939469-8a2b-4c68-b1bc-2dc3a0d695c6"
                }
              }
            ]
          },
          {
            "id": "6e729331-bedf-4f5f-8bfc-f1aa39c85e6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9bb10818-9051-4288-82ce-4b1f0d079256",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "757d81da-509e-4a91-8e5c-df91d2874d05",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b08ff0e-7157-445e-a239-baef894d202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd8ee6a6-7e61-4ffb-bb26-74713c4d8518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1819c9f7-b984-4aba-8326-4d48a903d796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67bfa19-31ac-4802-88d0-1380addd1c28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55e4e792-5431-49fa-80ad-ada23e639fde",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "989108ff-36df-4442-84f9-ba1095a55749",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c71cf928-a4cd-4ee5-90eb-852ec1727237"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e71002c-9ba2-432e-a8ac-9afa3c7e5974",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b0e4c59-a559-497f-9154-cccc6ae58523"
                    }
                  }
                ]
              },
              {
                "id": "bda34c62-b70e-44e5-9e7b-d4f771a3be04",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ca71483-d46e-49de-89e4-51e5bc820033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3818d8-0f7b-4105-b29c-6721d877e50d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58a8dc1f-056c-46e3-8136-a5acbabc6902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "263055a1-0fcb-4e04-9e45-3dcbad071b41"
                    }
                  }
                ]
              },
              {
                "id": "3b195b97-e38d-4011-8bc4-e78f2a7ba3fc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fefa3fa7-f697-4465-8494-edbce0af70be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19fa7c9d-1a8b-4914-88fb-9a02f9ac34e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b45a4a4-191b-404a-87c7-bf9c6dbf60e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "229e82c5-9890-462a-8374-4cca926408ec"
                    }
                  }
                ]
              },
              {
                "id": "d45a18e1-b1e1-459e-a97e-81d9521c6ada",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "647fe4ce-46a8-4026-8fdf-22b64e667005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39f53075-d191-4eed-8889-586f2c396ac5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b8d6196-bf50-4749-b27f-b612a243672e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "53dd7d1c-1481-41c6-bdd7-7c104cb66ce7"
                    }
                  }
                ]
              },
              {
                "id": "2f332f48-ec85-4d24-bca6-5c75d7bdb767",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f77f4a9-c0cb-4563-a39c-861302cab971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29ba2303-dc21-4976-9b3b-27d177f73686"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dae7672-3601-49f1-991f-5d5826e3691b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bb1b9788-6b5b-402f-ac62-4ddd2d51dee2"
                    }
                  }
                ]
              },
              {
                "id": "27936a9c-6c0c-4eef-8cba-ba6cf561ab22",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e40903e0-eab4-45f4-a9ba-e8b63ae7954c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03574ddd-3b03-4327-83e1-e2feff28d8cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73679ce8-fe9e-4ae9-9ed7-ee6972b8d77b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f6a515ba-ec47-4adb-a033-a49812a2464e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58ed0c67-bae5-4cca-bc09-48564d34ae85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df65ee03-4834-40d3-8a8f-de8eceb9bb49"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd92a823-878d-4c86-a40d-40123efb7425",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "189066a7-0aa8-40d7-aa6b-4eda660ed131"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b72f3ed-a5ed-4345-8aff-b2f5c56a5556",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e09c577c-3702-4cfc-aa75-b97fc224f52f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6c6152d-debc-46a4-9c5e-ec77e10446bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6226a36e-9a11-4fad-940b-7e743e4affcd"
            }
          }
        ]
      },
      {
        "id": "17238081-723c-4255-abce-f2372bf1235b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5c288428-0d61-41f2-8218-07e84e8eb293",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5e5bc3a-0da0-4be8-8074-62164464a361",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff0ad8fc-d5d1-4c6c-ad69-077b72054ef7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230a0a29-ba8f-4b89-b10b-d73ce7950d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c420d80-cd66-4b58-8c25-ac5460c7c73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec29ec82-5570-463e-9dee-46716dfc075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed49bf8e-f582-4cee-a23d-c94919ec2127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e945b180-b128-4463-a9e2-d580050b23d0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2148784a-cb7d-49ed-86f5-6dba212c9e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b441bb-84a9-421c-9fbe-27e33efe9f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9472a1a8-5f51-46f0-8afc-dff4971d196a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6a2321-9780-4326-8551-61f0b7914a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3d73b1-3ecb-4a2f-8952-5c874d044862",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac365c4-11ba-4b06-92bf-8cde9be45df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91201b51-9189-4977-a688-aacd098887f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3fc4835-3a30-4c3a-bdaf-ee0e5f46bab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb582ac-e344-4617-bd3b-eea8dadb17b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fbd70f-d486-4843-89de-536212e67203",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9557963-f173-4f3f-94cc-088728bc0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd4ffc7-ea90-4fd5-99b9-4bf77a1cb5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff84ae9a-15b2-416e-8f5b-f564eeb61465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf909cf-7723-4ea2-a3cf-8b7f4cd2b461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92405ecb-0321-4af8-9a08-b3c69cbe197a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5d7154-6b04-49b6-a272-a2827253ed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd2af7b-1cdb-4e18-9d87-764e2282c8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccfd315-d79c-424e-ae9e-98c45c337936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f090145-9332-4290-8eb7-d69194d4b2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9c2d79-8698-4ad4-a487-99609766bff3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3f4a67-bdd4-4dc8-83dd-a153be5827cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368220ec-4648-4c6b-b506-c9f9daef04c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef72e04-7c1f-4cb5-9edd-828920707597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96b6524a-c689-4e4a-a931-a3956d30bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53935bc-eca9-444a-bc69-d1067a0d1872",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fca6fe4-9905-414e-9225-c91bfedd92c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb5d823-0828-4512-ab1d-78db8fba38fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec3e7ac-607a-4f73-b008-639c08d57dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6e9d49-5f97-4eb6-b96c-ce580fb6724e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2999298-f5ae-47c7-83fe-befbbc0007c2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b1cce5-ccc0-4ffb-8d38-24ca9ba9c0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47ec965-5d33-4649-ba4c-1671e7ecfde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d1e793-60da-4104-8fd1-51ed2d9159ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e78c2171-43d0-4329-94be-37ab70548c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9740a5-e3db-4490-92bb-b1d50539558f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b3b95c-d54a-41ae-9568-9a8aca6dfc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461d7b70-45a3-414e-8ec2-c73953d936b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9ddb2b-bbaa-4a60-b0ef-59d3f529ca35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a208b60-f33d-4de2-9d68-ded16860daa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a60e481-f955-4955-aa42-67535b349550",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ec2495-1212-4391-8363-e83bf1cb7d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a608516-8027-4608-82ee-9b3e783b6267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eea60c6-2885-444e-823c-4a435109e790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e98f770-1f20-44a6-b86f-49c83faae8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7931c12-9ba7-44e9-9fc4-30b6518f45f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5379ec2a-5883-4d66-a6ec-733b9f957284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad55a75-80ff-496c-9ed6-37bc1beae2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894805ec-b14c-40af-a51f-1f59c2a114e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d4027a60-f539-4415-b509-978efcb6cbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec809265-57c9-499a-9c48-ed81d8d5e253",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22b5f4a-2f6c-4d46-b86b-0519a2b57735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812ba9d6-e5d7-4145-9376-0d54412dc3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7268c4fa-fa86-44cf-8fcf-b4149712da84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54273032-87ae-408a-80a1-4f335630dab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222071bf-6fd5-4b07-8729-00cc205a0da3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db211dd0-9d27-4b8c-a43f-93510d117896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f776674-cd0f-44e6-91c8-3b10e506c25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892f1cab-5131-4ea8-870c-3d3d78055a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9124dd34-e2fc-46c5-89e8-ce7fa0ad0e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d434bc6-b1d4-40a4-812c-70f2ad57aac7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcb2cee-e033-4f30-adcf-7b2788dc75ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fa2f32-0171-45c5-b075-779552705930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fde531-0e24-4b5d-a82f-cef82b3f8ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0680a423-4c46-4d96-8254-b43fc284eab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec680e53-94d9-49c3-9d10-5a334cd547e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5b8b3a-9253-4d72-9492-4e5ff0414f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f0ec96-7ffd-4d3a-bbe3-8b6f56f932f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f92b5a0-3607-48f4-af45-1b25664152ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e386385-fa9e-474a-8c18-d5649e402a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa7af9-5caf-48d3-878e-66b438a992a8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1cff4-1f7b-4495-b98a-6e1debae79a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494e1367-234f-41db-9cdf-e3d9a0e6a56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db89d06-04e7-41b2-ab08-32175f9fc0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa00010-5540-4c45-acf1-1bc93b084e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17960e15-b248-4083-8f3b-79a1582aec6e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ff3e56-4c44-49c3-9b46-bfce8a5220c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25051625-5570-474b-ac11-d5b9e763359c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378f2000-1226-4e4d-a9aa-dbf49b260e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b10856dc-ab3a-493c-9215-bb84fe85bcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d7b2e2-34d4-433d-b49a-1b452d173910",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f93197-9fbb-4a8c-b3fc-2b3b9f5be39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe50ce7-84e0-4972-a31e-202b8a4a4e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735e70f1-66ee-4b39-94fe-44ed0c1106b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9a5908-117a-4b74-ba0a-1f93bf7c58fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecf526e-9e2b-4548-a6ff-112f8eb688fc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d278aa-5973-496c-848e-c9207ad21672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0863de6d-7a76-4a86-874d-7586e3444288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af1d759-452a-4bb2-ad3b-13f4215a36a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3473d05-ea2e-41d4-a216-292c48695717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae83c40b-23e8-4b67-ae2a-0e1ceac41379",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9d4843-668a-460b-894d-6b1f82724e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306d58db-3a38-4ff2-bf7a-a037eac0de8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22143ed4-cc36-412c-9a9a-c6fd43862e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a491c79-3bc0-40be-afad-0567adde9a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a31af2-f267-4615-b94b-36aa58af511b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5106750d-3b71-4584-9c6a-c5f923670213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9cb118-7f68-4e11-b4e6-b500b2fbea5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae394f9b-0d69-4ff5-bee5-5fca02229eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21a8be3c-c7e2-43df-b0be-2d95f022b140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cfee2c-886e-46be-aac8-b930fc37249f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e3a296-b1d3-444c-8325-acfc1ce3bbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c815e56-4195-4402-9fee-bbbe8034087b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc29419-f29d-41ca-a557-aac82ef04af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a74452e-6ce4-459a-9bc8-64eec9aeab87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a0ac97-1a50-4f1d-a521-7a11d59e5237",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f77054-6f81-4cf3-bb7c-40136b2764b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7e2508-a2f5-4208-bf00-ed78933bbbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2299d7-7a5c-429f-893d-b11f43a14955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf9e46d-41d0-40d7-bf4d-d52ade35eb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b16d773-69a9-4855-84c5-d9fa3e784850",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c496ad-da56-48f2-93c9-71f7dcc3d6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ece94fa-894c-4a4d-aa39-e9c67a1685bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2bc9ab-4012-4c15-b18a-60a7be6c9746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c6961d-9b7f-4e4e-8def-fd6b01f560de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847f2175-bac2-4e45-a7f4-1be2f1734663",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3980a23d-f706-4117-9666-84f05f878260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f11f10-b8e2-4fad-893e-423c650b6f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed13881-1885-4f52-b31f-c08e93c408d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe659a7-2aa4-4133-9c02-1c76148b1564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd4b967-e0d8-4fa0-8f4d-446f8ae99ebd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981107a0-6a96-43f6-9e6f-a86f6afd14e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47050290-12a0-4dc0-8220-cecf5d14837f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d63f434-eecb-425b-8326-96fc60029a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcccad46-1f05-4f28-a8d9-8d7689f656a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23080d0e-414a-4586-a4d7-2b1dd4441568",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dda90a-2a3f-4df6-957e-0469cb262319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a83b3ae-5ceb-4cf3-8573-c05e5b4a5837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f43a3d1-0ecd-4973-893d-7eb39f09cdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b86edc7-8311-4e18-a0dc-e78119e45d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decbe05d-d2c8-4883-8df5-94f7b09529f2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132263d-8540-4f6b-9145-e407a651a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e84a486-8cdf-406d-8cf2-9236de40ae1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e2c7cf-9a12-41b1-8201-857895594c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "091a3749-622b-4276-9a4b-f028d1297229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200bb422-c6a9-4d88-81c4-d7c79242b19f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35201568-2744-4649-91b0-c6639f8c0425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072b58a8-9f30-45c4-89b7-bcf465865cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b70e1-71ae-4ab0-972f-7eb009528bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85efaf47-66eb-48de-af0a-3a22cac7a569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a65839b-a476-4cd9-9ce4-10a06a390dc1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bfb3cb-1ee1-45af-8362-a8cb0fc7d98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9479167-bc49-41de-9fb0-e4b7ec2be3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ae53b2-7b74-4459-be20-256ad672ef22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a515272-1ce6-4b1b-bc86-f76efa33fe19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1d6f4d-543e-4f74-87bf-a49a1b2bbf71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e107d4-368f-4c6d-abb1-858202bb748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f33a45-9e35-42f2-8ebf-257d1e49fdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea6889e-e04a-4144-8ec4-1d44357dd236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "209010a5-fa99-42a6-95c6-42546406507f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679ba6a3-bf83-4e0a-aef1-6e4929b70ef5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6c52b6-c1d5-4aad-8a8c-92e701d063f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fcb114-b54f-4035-b104-ac33f2cfea74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2db7fec-4240-4337-9212-d92e2cb45f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ed1a14-8211-4ed6-b4be-00202d34b25f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b72b302e-aace-46f0-8601-ebc01f161193",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1560aad3-0159-42a2-b011-acf114fd6d75",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b011c400-5686-419e-a6eb-beb857b00dd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7f06bf66-b805-45e3-a337-0cdbeebc84ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f5aae8-cdac-4f44-81e6-8727450bc156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "332f459d-2318-447d-bc55-ca27a7eb2c8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e556318-f326-40ff-911a-11c488c059d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e17a0f3b-1d24-49cc-b75b-4613a927c361"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69314545-e0f4-45a1-9a05-8a3012f54770",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc2e4b61-1e73-41fd-aa29-49ee9e5d224b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8c5089b-47fc-4d75-9eae-080a37b175fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45aa9e35-cdf8-4ab1-aaec-5b3e872501fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6e2d703-d276-4b1b-ab22-2be788d03da4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7f8e901-4d80-42e6-a51d-970f0e503a1b"
            }
          }
        ]
      },
      {
        "id": "0ec08478-fbc8-4c75-904c-bb38bc1e2b66",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ceb2a176-5cec-46d4-99a6-be85d87053b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbfdce2e-3100-4e6e-983e-219035197c82",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53620eae-0e8b-4174-b7db-239fe2da208e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345046c4-6b8c-4158-93b6-6777d8083567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e724d49-0aa6-43ec-95f7-7f3a50e48c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc3e4b4-e679-4223-b6b7-d775f346a086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "81be10b2-0dc6-47d4-83cc-b508d85fbc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f235a339-fadb-4f93-9a0e-4d60755ca05d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f09f40f-7f32-4e30-ba3f-041d41d95f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925d208c-c274-4ca6-81af-c30938f0fb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbce02c-4725-499d-8039-0c211276175d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad855e8-8d40-417d-ad33-1fafa9ce03a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665614dd-dacb-47c5-9e36-ba75dd2658e9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb3696c-f670-4aa8-8b3e-7511851723f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca41b793-04fb-4baf-abea-80ea8dcf4930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7369df68-d9f8-4dfd-b258-9ce573f9fedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72f996cf-9742-40bf-ac03-7837647b6d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2a8ffa-f054-47c1-a07b-7d52f11f8d8f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d61d087-2591-4b3a-b49d-2c6753ffc54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b1548a-18b5-4fd1-8844-cbf7543d0800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0796ab-6cb5-4dae-9a3d-39340fca364f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "940c134e-5d3b-40d4-a885-2897303af949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cecfcbf-4c4c-4ece-a03d-2bd009bb4a7c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f52348-9a0b-4c7e-a5f5-a78990cfe2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff7ddfbd-cbab-4287-b476-2e8f7b7a3017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23657953-5744-4af0-8fc5-2ea3e087bb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d4bf6-6b0e-41e5-9512-6888fe8d4d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47566c9c-3a48-4d57-92c9-8ed804cf58ff",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72913ea0-3123-4072-b91b-29c7a9da321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1bbc36-13c4-4454-8331-c00e05f72fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0292931-482f-40f1-9434-3dd78b18dc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "833dcc4d-f0eb-4bca-900d-7fb9e5c050aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c18e34-3100-428a-bc73-5b8d9e324a62",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e8c766-303f-4617-a2cf-208bf0d44f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626b8fb0-cf4c-4fde-ad6d-3cea38c6e7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04505587-3761-4346-8e63-8a30c518321a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b37900c-7400-430d-ab74-de242b54f3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d919512-9b2e-4d78-a359-e8478da0d55c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908418a1-1d1c-451c-8d8f-9a09ec20d766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6a1521-a2f4-4407-8d91-bf7c4cdc5c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcccd0d7-e63e-45fb-b7e3-816fa1171b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d619e5a1-4f75-4eb3-9535-7f917008ffbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2a42ed-3d52-459d-8e50-c7326c5627cb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cf16ee-246e-4ae4-9443-fbc2d3207ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6fa4b2-0952-4afe-9b56-5bea8617254b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14fcef5-4fc5-45b8-9ee2-dab3701dbc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ac989c-dfd7-4076-b434-8d9a708dc1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9952b1d5-3a26-41c2-bb1b-0a9750708b06",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36e76eb-ecf2-4f55-a14c-30a8e7e4d654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6490779e-1618-45e0-8d2b-7633e86402a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53442e5c-7250-4c7f-bc78-cbb9f7182046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e97f766a-2ce7-4e1a-b65a-86b43135bee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46032fa-3e32-4809-a1a4-87cd9f19a1dc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059f5a21-e83e-4048-ad4d-fea4c8a9b23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e359248d-34c4-4dc8-8978-a72bf410ee01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b71b8ae-55d9-45ff-b0b5-02780d2df51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c70b1445-769c-47c5-927d-0d38682e788b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24458343-be30-4461-8642-1b4675b130f2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c89c99-30bd-43a9-bb8e-ebf60bf4a74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5defaa89-103d-4135-8547-6a74abf61b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e4b890-33e7-4aef-b9bf-95f40f3f4f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85814237-40fd-43c6-8409-778c0551475d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9986b562-fd99-48e4-b92f-05930cbcae6d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed183b5f-7734-4f24-8a39-54e696c47033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71699bb-f335-4d71-be2b-4fff90b15720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd47d61-e22f-4ca3-afda-f1a91d3d0ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "216b5648-dab4-431f-9e7c-2f482e8bf374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd0fa9b-de00-4abb-937a-288c8ed3acb4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8003e35c-0a40-478c-9a20-f82234e4bfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be66f0a-fdd3-407a-8011-8eace73a1848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29863171-dbcd-44cc-bc96-ed8c4764aa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1390ed-af5b-433f-9901-3dde5ea82d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e2e4c7-c3d3-4d4a-a5ef-7ee002a20d08",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cc3c31-8b1f-41c2-bf25-709b4538bee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702fd0e1-d8ad-42eb-979e-50ab30ec6939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d77e36-3064-4206-805e-a60222ac5e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc72a668-7958-4312-9ba9-b66aab14b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373939b2-f97e-4f1b-bc41-339a42f11506",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fecfb33-69d0-4c59-8df0-aca701d99344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11fe1820-1b8d-4388-bae6-b698841a8d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1a635e-5c3e-48a3-8d73-8c79f012a2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "99340ea8-598d-4781-9947-c0eecf9097b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2a737c-c0e2-4ebe-8c0e-6495ed1ddfaa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653aabf9-03e5-481f-970f-90c8bdd2b9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4019c46-db04-4600-b970-b5f0e9937c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273eef8e-df83-4894-a22c-abfd48d3da00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0a9fcb-9776-421e-82af-f5bc6e602c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57a0d43-1dd9-4d41-bd14-237e1a1b2ca2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb85961-4af2-4049-b521-484264187b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeff5d34-c237-44d1-a2bb-d3c3adb63078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba461b0-43dc-4181-b5cc-24edba3e0790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c0aac5-7b0c-430b-9900-401b40855646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2109cff6-3762-4a0b-999c-27d236bb7f08",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9c485f-1def-4913-b043-cf4bebb76047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dd0ad3-5b37-475d-8a50-de2454d1469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008b1e4c-bfd9-420f-b62f-210567cb9a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8924b3f3-8f78-4533-8606-835d4a2e59e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae03d3cb-d09b-4470-a1f0-d90d4895a096",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a94b44-1c24-4334-817b-873c2a964d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661b7b86-41c9-4acb-9319-6d12a706ae9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dec6026-1557-4046-b01b-a0dc15371bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b7588e-6f0d-4f39-ae15-aeb8f04ddb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f761e0-3986-4efe-9d3e-3bfa8c5687d5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2779210-ca4c-473a-bc45-81a3cfdeec21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b965fc-98fb-4bb4-ae5a-9d608f22ffa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28c1c93-df25-4395-bb3d-24c9cea6491a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c17051f-4ea2-4270-83f4-9bb703304ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5812d90e-aecf-4a0e-9f55-42180bab72b9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3a6fc6-1e0b-44d1-8592-225b73a32f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d298f8-25e6-462f-9fd3-77dcfee780a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530eb74e-16ee-4288-83e3-e19aea1a347d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cba788e-b03c-4507-8138-cb8c28734ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d242c1f-2576-45b8-806d-a07d517458c7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adb1bf4-0f89-4ca8-9091-0171cb524783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a900e9fb-7ce4-4a1b-8e1f-52e30943c28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a67a6ec-4459-46ee-9861-4ebc5fbb87f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6b1473-42fd-4401-90e8-9e46bd205730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1b1957-d319-4b65-bf80-238bb903eab9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6170752-67a2-4355-b6c2-552d59bfd6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da758f06-c84c-45a7-94a2-bdf572305e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb07bb30-57c4-4161-9ae7-7359689edd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f68b1e-4576-4355-973e-c8fae247ba75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df27fff-891a-4072-afee-460a7c41ffb7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7043860a-c641-4d82-ac6c-70c92ed73a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278847ac-5610-4b3e-8a02-f63c773f39fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15978baf-694a-4fb9-afcc-96f9155b0db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b16d2e-dd6a-439f-8420-cd1a4dd9cfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7aa777-0fc9-4a78-9ac8-804d4518f15f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c1c687-5cbc-4ad4-96ec-5eff22fa095d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10dfc89-65be-47b6-9a03-14d38eb0a97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9e1524-b651-4f4f-a090-1a3eb8e014f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50d83226-3e20-4d8f-9fd3-49389ca143d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f61a0e-a4e7-40eb-8036-134f298fb7e2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76251a1-a300-4bef-b489-16d5ef10a9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2760d41f-7be0-4ec6-84a4-cb8d85a34bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059f28bc-bdda-4ff5-89e3-8577cc6117fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4661cdf-9129-41f9-9cd3-ee806878d953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acd2f02-d3aa-4cd8-b6c7-cd067bff3c17",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc2c383-11e7-4a8e-a356-0a87e24b4ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c4e248-f38d-4baf-846b-ececda674ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8dfa25-fb53-4780-95cd-ec677d27c787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaabec28-c428-48c0-b66f-541aebb6fa51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470de0c6-c77d-4335-b1e2-d947219512bf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c7acb-2556-4555-a083-13b5839fc608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0792822-b31d-45de-91fd-125d57eacecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b421e1-74a9-4ebc-b229-a2231a08a977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb6cd65-188f-4297-8a65-5a169a5aa70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c649d1e8-af14-4ae7-9ff3-f306f55aca9d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f541071-3ff8-42fd-a357-5efbb8dd9adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa66144-b24b-4493-b946-9b1e0d4d29be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd42f27-2e0a-4a6d-8c5b-2280ff8ca93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af0ec07-ea9b-4ce6-9ac7-772e3619cf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c681985-27fd-4749-9fb0-81766ad81f6b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af95958-6957-4821-9568-0f8e25a3ba04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1be1845-0421-4924-ab15-dd83763fd85c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd16498-ba7a-48da-9b59-df7322f52f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f2d69e-452d-48d0-ae96-62fd1fca1909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820fc489-a457-4d62-8bfb-8add0c1327b7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca31f777-20bf-4516-bec7-cda0da03c5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2d38a0-429a-49d9-8afa-55cb87dd3cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6690c636-0383-47af-9169-8a9938080706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb44063e-baf6-4b42-a48b-849a0b378f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c8a5dc-ce59-405d-8285-fa672618a2db",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdb3094-65e2-4552-af83-ea68f8a9ae53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c424ac28-c502-4d35-82d6-c058a3f963b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f65a795-4936-453d-90ca-2ef6fdb879de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e07353-5514-40a3-a5a3-4cad097283eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66909e-fe0b-4abf-a3a7-92addd165c29",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aae5b36-0006-4c20-a1a4-151cf5bef9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0813e63-5b90-4126-9a82-7040b9c7f84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b53b88-491f-4db3-b861-edea579f9e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f23494a-0821-4714-bf67-a6dd6653c14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07612d6e-8530-4311-9cd4-c05e788eac36",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefe987e-a10b-45fb-9077-e17b7d9d1335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf9a7d3-ce3f-47d1-bbd5-bc6c5e686684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a5f6a0-1cbf-4067-bb31-1d3717776f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "730415f4-4c1c-45b1-8368-0311210d28d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e2adb2-5702-4f70-a35b-9005451ae134",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a65ced-2746-4787-bb6e-17f35320fc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13827a72-a43c-4abc-8b85-6be25969d1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2308d15b-2f93-416d-b30e-201197db53e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa0014e-f3c4-4347-ada2-6401f7740ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c91bae7-2f85-418f-a874-0dc432385295",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560d16b6-144e-4c9f-bbb1-6bc82176cafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061302d2-acf5-424d-b153-6c0fe0825935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81707cc-2cf0-4061-a25f-4c259e8d8070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4ff536-bd79-4f30-b26a-f3d0fa363682"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24b6ceda-7675-423a-a74a-2feef620ef66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08bbb7bf-03f3-4c72-950a-3636ad4452d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c9e4a4-8e09-40c3-9911-99934185701a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f91f6569-3c91-45ed-8ff7-ced364245dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bd4d04-6bbf-49ab-8533-0ef945142549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64c7989f-45fd-474a-bc95-fd75779fe50e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20dfe226-9cdd-4735-8739-5efacfefeb03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60fb7f48-06af-4866-b20f-6f4bb001f114"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a72e6477-5036-4b53-b67a-96b03030625b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66950d91-7624-47d6-a436-4db55761cd68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b8dac76-c8d1-44a6-aad3-3a9e749ad450",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8927712a-0f7c-419d-a4cd-e8e0315eb3e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61fa3a93-03c6-4e04-8cd6-f3572d7c18a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36157c98-639e-4a24-87b9-a6e1f68dbd4b"
            }
          }
        ]
      },
      {
        "id": "a026cdc1-1a19-41e9-a23f-3de6cb9001cf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "77f0c609-5280-4e98-a4ba-f653bdc85d12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ef8f2cd-128e-424d-bb85-daabc0098350",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9c14baa-dc13-45a2-849b-650c1885a201",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed184a8c-d654-46dd-b6bc-734491471587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175919f4-8cfa-4df0-a38d-4e9d449f5ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fb7781-ad76-4618-b9c3-ff75b405645f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bda779-1217-4a3c-9683-51783d6e151c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d21d2f0-d3bb-4fb2-876e-d07301d79d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93e976e-f91d-43b7-8c7d-3c6505e0f0a0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852b79ad-9d75-4c8d-b86b-045979fbc15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2d902f-b0dc-4499-9f34-f07d1282636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317afd21-d8fc-4788-9c05-0b8b5d2e547e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf8cc19-3f31-4359-9bdb-7bf42f0469f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8773c04-5a95-4e1e-8d8a-4a8960b00872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8faedd-38ee-4f55-a1cd-848070045385",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b87c9ad-a4b3-4aa8-9989-78a49f2a70d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487e8cfc-01d0-40a9-b9c5-e5054acfe315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdfa3c0-e2f6-44af-89b8-6f753cfd910c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61fece1-4efb-464c-be33-91e99d20bdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3372e0d3-5712-4f68-b248-6bbc0c604c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267dcdb9-7db1-47c4-8785-821b2d572183",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400bc928-198b-4489-b72e-6f8ecc539f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da3bcd9-020a-42c3-8d29-922820a9ddcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc667f2-13ba-425f-92cd-8b7eb9a16173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1b9605-b759-423b-bc8b-cd2741a88e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46638133-b815-4c26-b044-28249f63115b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1f8994-9ba5-479c-b911-1ae3da83256d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb37c73-bc39-4a85-8be5-240a424f1f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74254b3d-57b6-4574-9811-2b2d5d6e7959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4f4ffc-d2a7-4910-ac9d-827452876e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42ed6ab-f755-4979-abc0-3af1aef08e1e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a59cf44-cf38-40f5-9fb6-2109b171c27e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7157c325-ec20-4b0c-b77b-36f5f88e6e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a133d256-a8b6-4f9a-ba11-f08cee549b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6301c7af-bfd5-4313-9820-728c86327466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43244908-c4c3-4054-91ff-21b98e1898c1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7917564f-a845-45f1-afc5-dc62d66745f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d22f98-6ff1-46f3-9db8-6790dd574dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b1f933-8c64-4e40-9c69-1fb4bfda3530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc88d25-940a-4518-8519-d7f245f54b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d80d44-ee2d-45bf-9f36-51966fc8d459",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c170d4d5-37a4-4056-9683-80b31a209ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdcd9b5-4df7-4582-a925-836fc476fc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192a46ff-f2f5-4e00-8141-0942922c9299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e603aa-cd46-448b-aa85-ee8239ad6cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0592be77-79cc-4db6-ac81-090078e60c75",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b349bd45-2808-491d-bdf3-726d129ef100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05a2d73-583a-4637-bcc0-d5c3f2e85dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb92b9b-2901-4b33-924a-20502f9594df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30baff6-a6e3-4ff7-9d3c-0d6f1198e5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615a3093-50d5-4c22-b40f-e9d1bda6e262",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04536ab1-2d84-47fe-baf7-d9d359eab8ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5f21d4-72be-4336-9507-0c1dd6c193e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c056f45-9d73-4fef-9b70-7c77dc13fd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faee4cc0-d06e-4a12-8c8a-e017dcfcd00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083e890e-8e88-4ab9-83df-db2843197241",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448a5844-037c-4e0f-848d-fb01216a4c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a757dec6-95c6-4d22-83ff-b6dc5957fe07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6182d143-ff4a-4a38-94fe-4f72cc4d4518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e72411-805c-4daa-8e64-a990601d63cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449c4af7-af27-4ac4-8a46-338906d12fbb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad33c56-ad05-4172-b30d-35a0b0781ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a004c671-5b18-46fd-a14b-e4e7b9164ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9ce3ea-9e33-47be-807a-a33939d3814b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cde30ae-8dbd-48a4-9623-37884d3f402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b731ac5-9dd8-480b-b4b3-701e7279af71",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4987bc1e-2eb6-4bc0-a4e0-130ff1cfc80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd2a6f9f-309e-485c-9b2b-36e33f4a2aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956c27dc-edf8-4e24-9caf-a9f6c7c4d261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcef2e8-3eb1-4065-9c11-05b4786475f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e381d0-670d-4f3e-afdf-5a32a25a8a4d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e66ee1-2765-4cba-b5a0-c72c069b0676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f12d9dd-cca4-443e-bee5-cae2667664f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93efa15-7e74-49a5-a915-b771f1e3a9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e593c9-6c87-48da-8297-5dc4a669464d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f92d3c9-7ee7-4047-885a-4eea4f351019",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4774c380-728c-4fb2-9e9e-26c6112fcd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ce38ee-4ebd-4de3-87d1-5b228dd48a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35770ef6-7bfb-409b-b1a5-35bcccebf057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fffb88-b973-47eb-9106-cff367424a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd02732c-af5a-4ba0-aa59-ddf5a10e8744",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630b9ecc-944f-4da2-b00b-cb28cf081cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331ba960-a628-4dc1-98fc-0930c038ba03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78236b1-1dac-464b-84fc-a2e323624a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4623b5a2-c934-4eca-a3a5-e1e90a9636f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271e8c44-b61f-4916-b58b-bfba8ae7101f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d431bea4-faa2-4941-a8e2-c3f48a5df7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d560adb1-a0ba-427c-8521-c2683432bbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10bc494-2223-49a6-9905-75129a8ee418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e9ecda-a42b-4f80-93f7-e79ec506bdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aee019-3991-4d90-bedd-a577cf49db27",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7fdec4-f6e7-45a0-9ae5-7af15eb5522f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c0d7d5-2775-491c-9903-d2ecd9a6d354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bcfbc0-3ef2-42cc-9a0d-4d95fd3154f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69602d26-051c-4075-adb0-4596d8ace1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abab4e9c-ff7a-4f20-a33a-993bc605f17f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fade794-561e-4e6e-9b0e-108bd69f8ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de2876e-3dea-46a9-bebf-e7637d5e4a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83780935-6569-4f2d-b6ed-d0bfef9edb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b57001f-dbe9-4c98-b2e9-3598e1758206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141ea9d1-fae5-4188-9e36-f0bb431047d8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5f0bb5-4a5b-4115-9ddf-d9f739128531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad539a4-e71e-42a3-833d-f1a4b539684d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb59ef72-633c-4545-9b79-c70e6279b3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e207cce9-2f5d-4101-8e7a-5f71da111a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d16e94d-e03f-47d2-bc33-0bf25a306818",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e63d0a5-55d0-492a-8b99-be1636be00d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e531e2e4-d3d7-4b55-a445-db80b430e4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f3d9db-c091-47e9-986c-5339ebf4c78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4a1769-0983-4ede-b73b-4d210217d0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d318fc-5936-40bc-b6c5-33b63a0b16c4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ef851e-6b1e-40e0-8f57-1768ece5addc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9a63cba-6dc7-475c-902e-31a9cd4e69c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0210523e-daf5-4ac0-8841-62891324e8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b06683-691e-4d7f-8f03-2794c3d785fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951f19b2-10e6-42ff-8df6-58df1b0e0c07",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd20fae2-eb47-445b-b80f-256a41ce3c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b1d677-d38e-441d-8cc6-b408326d945c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf39caa-77da-4cb5-b08e-4f1220038c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c711c251-f47c-42f2-93f4-73734c368669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d49e8a-3c3f-4856-8123-2b56ef88181c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1751d8a6-53c8-4cc6-80ec-b2e41b729033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce39e816-401a-4e85-8e18-8f1985cb0364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecb2b21-db5f-46c9-aedc-3407b8026d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64b2be7-eb43-4ba0-a872-9d4baf6117ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeaaa3e-9e4c-4f7b-b490-bf7229bcc4b8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbefaf3-75c8-407e-a158-02537b761584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9aa9da-7993-4441-95b3-5ca81a50d5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d313940e-63dd-4253-b45d-fdc88cb2d635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c16eba-7457-42ca-bd48-6de915197ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35283a7-7100-40b3-8458-9eb45376d713",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba399eb-5fdd-4fb3-a647-fa84211a1b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0bf9793-6f5b-4200-b267-35ee4d9cc997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b125cf-d4e6-4ac1-8eba-3cdb4179555b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abab453-a1ff-4921-8607-a507c0954ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e1c6ab-d4bc-4164-b7c5-4e1ab73c4469",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da38190-6472-4999-b4f7-341b165568db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551a0f02-f4a3-4828-b068-c6c6863297b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555cee77-890b-48f3-b27d-fc5b442f4902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ca52a4-743c-41f4-9e2d-4cb99e0989d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c408609-d764-4b64-ba23-bc50f87213e9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0488ae05-f767-4997-94f6-5f0b9ac184a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb29ddb8-bef7-4aa7-9852-154a79465e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f5c716-14f5-4406-a52e-4441114f36ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938731b8-79b1-4e31-b4a5-da09fcf1d9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a436eb77-4df3-4a8f-b77f-c5d885039760",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7e9cee-35d0-4df6-8704-d6db6b6e7d57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7721cfc-b597-4a5d-98e9-6bf08d3a665d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953c0804-490a-46c8-a59b-db874ed8e8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5162e44e-0523-46c5-98fc-26b0fccbde3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac29cc2-9abe-48f1-810e-074da68f157e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe65a682-e4f3-4413-b768-c2b31f481f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b2594e7-ce67-4f87-8f77-1ac5318108bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b5ec23-08a8-4b02-bdec-aba77e6813d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28be125d-5893-4a1e-8f20-b5b4a1b9ce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775ffc28-2b50-4914-b3cf-5df6cf1e7864",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff406a79-9122-40c0-a3ce-c5952395a6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7768e915-5abd-4c0b-97ff-88dee40473bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b4696f-8b70-4e3e-886c-06a35902fb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bb50d8-95da-4dff-a3fc-d5922e97a73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff2df96-dbad-4da2-a409-409d88917b64",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170142df-0b18-479f-8f9d-5a62aa290f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be48239e-1d1e-4a6d-8439-6ffc4a0ff404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1618095d-f8ed-48bf-917f-ed117ef56a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7722d3c0-87de-4e64-8286-f404246b547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123719b9-87d3-442e-b2f3-fa755ccce9a4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b1f52b-9397-4f75-ad87-f2e7c237ca1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd20049-446d-4008-9fc3-8e177d01942e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c81a01-a5f4-4d98-be58-c3ca3dd1365f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77679fb3-540a-4c3a-b339-8c9e482a1835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b9b4f4-9da0-4cf0-846f-f8c0530ca2e1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c51ded-73c5-4817-a80b-836e541a2ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa40352-1111-447f-857e-a909d537d42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f899c63-b730-4f07-9d38-4de28d07b89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd9f7f9-4d30-4b61-9fd9-77ab7d627bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91b4908-32cf-452d-b4ed-ca0df1add404",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fd1955-9ce2-4273-b671-a42b91094b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6dc8cd-0ad4-46c8-b217-7ea10b4e175f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339b72c3-d155-4562-b033-270f51ee139f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd45813-5b99-42e0-9904-30fa8b396f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bf33df-52df-435a-9791-a2440f58902b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1efd71c-bf66-47c7-a40b-ccf3bc17e761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6e9105-372d-4e44-b435-083bf3768cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c732c9c-e218-4935-b8a2-4c78793caebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70270df3-e187-40af-91af-214c7a68a1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b282f6-7bba-431c-bf4c-c3eca9f8bea9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c0c35c-fd8c-490b-9eae-87e41f8e9587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb3aafb-f400-4f67-b248-358277d20e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4beb778-1420-44fb-9581-99f4311e39bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54307c7-0c38-4ab3-8b6e-cc88d6c0cc01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6d0eb4-0a94-4cc7-93a6-e179d8c880ab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4703e0e-bbd1-4e42-9453-1899bccd2f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f081cc-0bc9-47ce-a1c6-e9e06b75c502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304efd9c-d7e3-4605-81be-8ce713f68ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dd5285-63b5-45cf-8a24-d80fe82b2ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e531adc1-8699-4eae-aae4-8aeba6fbc210",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eb2a4a-3c02-4fdd-914f-75a1928db88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11344ee1-9f99-4f3b-8562-59996d08e347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01489288-cd9c-434e-8ad3-c49a577ee807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48451794-827b-4126-beda-9beaffc2ed4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b6f815-810e-4dfe-ae79-882f3780ccaa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bfa19c-06bf-4a12-94cb-11c62a04d730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f11f7a-fa1a-4093-b4e0-e123d75f1230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0feaf9d-99b7-4e29-a2ba-74cd121b1f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a00ad65-6f2e-4904-b70b-cfcb320ed8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e5740f-2474-4150-8a86-b7e7c79ce833",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a973f6-b0f9-4be8-b0cf-019fa81fdb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5f2d93-79a6-4802-be8f-f38dadf9c08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281533b9-b372-46f5-9832-35391e746796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5bb13c-1387-4f8b-b956-5e96bd01d6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4640344f-93b2-4d94-b24e-373e330eade7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b277849-0adf-44ae-ba53-c32c3063aa09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e452515-0957-4f0c-b7e3-1a54086e01cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790c41fe-dbf0-4c92-84d7-79ce382a6a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa12d32-98c8-48a0-acfa-54e3f0be3cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1521b1f-59ea-426d-9c26-3f0888758310",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36170477-2248-4c49-a1ba-133eef6a5ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88c5a91-3f4e-4825-b539-614b0a72f717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff657270-b310-470e-ab70-78d48f44cbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff1184a-d860-4255-ba7c-c7ab99b21d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ad4ee8-ad03-4ecf-a350-82427797f527",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e778d365-6748-492d-96a8-917c1c3c8182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8c08b7-1981-4090-b497-0d91e318a8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba3221c-92f7-44b7-b522-59e1dd009a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3007c3e1-2e81-4a80-afe6-546d1f7ac1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a977228a-2806-494e-adf5-1c9eabb3088a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3354e851-7fa6-43db-bd95-b316e9c74f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef1cccd-770e-415d-acca-3fd5156da446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd1c067-7814-4e2a-86cd-cab8809f839c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e0e3cc-991c-4ffb-9a18-7898e9d9a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf8b145-90f2-442e-8088-40326e8650eb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e2c180-39e1-403f-a546-cd5ff8dc5df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e2f920-be8c-4256-b4a3-834040bd42df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3953dad1-41df-484f-bab8-0348a28dee01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85899dc5-88dc-4e62-8c47-87da16e397c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b85c1d-90e1-480d-9139-9baced129bc4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b67f37f-16a7-4a96-9ca7-bc91da594d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e8ef1b-fbd2-4342-ab4c-2dce5c126912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846a702a-29fe-4fc3-b21e-a0ac10400673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5845638d-f2b8-4847-b55e-16f6147abf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b6bd62-7f17-463e-ac6f-4ac78f43bffc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54346d5-ba50-4370-a392-8558e99e8ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25765e4e-5979-4086-a3df-20a231965c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9107fe-1174-4dd2-9565-437ea305ea87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da59f12-8105-46ad-a044-1101b754753a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe049bf-a807-4439-8d58-d6fd2c4543b8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30c855c-81f1-47ce-834e-734ed7cb5a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1b02a3-0fdc-4e13-96bb-016f4db058ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5122ce9-1801-4ab8-b753-826ebcadd38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5bb704-3b11-4cbb-8ab5-1dfc8b83073f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ead190-dcfe-47fc-90e5-1db770ae25d7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e55d74b-78c0-4925-ae23-67f76719b2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d669384d-b56c-4418-a983-79321f01a209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fee2997-5c72-4a8f-8fa6-df95ac3e5845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e34e86-ed58-41bb-a47d-c50ae12d57ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2974806e-d2f5-40e3-ac0b-0e7459a502de",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580b1188-868a-4507-b0e2-38ae756af4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689bcdaf-684d-4400-b5af-58e20f398d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e59e5e-b7dc-49f1-a17d-62eec30758bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef595d95-d972-4063-bf68-fe1b027abd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787fd81c-10bc-4ae0-b92f-221067a8a395",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002c8eb1-d033-4c64-bf16-ace872b15ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2230552a-fa96-4a87-8d8c-fe574e9f91c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c778bb57-3b02-4efb-b410-506b0a98dbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55742aba-70a3-49b0-9796-d71b1f742ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956370e0-5250-4080-bc29-e4c7dc3d8459",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e545f1d1-4062-472e-97bd-b79641ac26d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0ce649-269d-4e10-91fd-5138c7e8994d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1582ecf3-54e0-4f64-a284-287b047ab06f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60905dbd-4708-4fce-94b1-4c132f88deb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bbdfef-103e-46ba-9798-5910603db075",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7508ce69-5708-4e97-b778-5f9f2daab274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd463a5-662f-480c-80cc-b5ab17f1a37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a95e88-2b77-4578-9a15-17b3c1ec35b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6614c0-1863-43be-b20f-129feadea6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c34f99-fd65-4507-a6a6-8e91b5be11ea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d5b7ba-6b27-4a75-b984-95eeca15605f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4e78b6-2b58-4b7f-ab04-2a7ab7031d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449b399a-d1e0-47b8-98aa-efd4bbca9eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ce02d1-4213-4710-8c32-aa951f430943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55297f98-c09f-4a5f-ad9c-c9b779c440e0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f278c04c-3690-4c35-8d9d-7394609e6ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023eca89-bd48-4d6a-94fd-215f95b970fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee4f574-0cef-4a8f-8cb0-e99b4eef3c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200a04ba-4109-4aa6-bb38-a8b51f7cd52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7668ff3f-6670-4870-b823-d2eab77eba82",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ee9b7f-f566-478b-8ca6-35402cac85d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179bc8e0-f129-4b39-abcd-7d2541c5e824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b5cb37-6bf4-4a1c-a6c4-c0aec8cfbd25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45265201-f0a4-4afa-a50d-e681480777bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41a4f9d-da4f-4feb-a4f6-4eea9f642990",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6e5e39-5ad1-4f63-b737-805f6c983e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fd392b-ef87-4bcc-b8b0-ba318955d893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "958aa76d-9d32-479f-a3cb-ebde1fe9f9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8253db85-fc0e-4e5f-a670-b5a3feb7a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689700fe-dc98-4362-b53f-a44ec162d071",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea35ca0-3ee6-41d2-9cba-a7b975ec1c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de8c0f2-e5e5-46b0-bc44-f5dee14e165d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b6bbda-721d-4879-b8ef-a4080affde7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15b623f-c004-4af6-97d1-ccc53e1f5c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610416d3-58e5-4762-90fc-9ee50888cd7a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1474512-b183-49bf-8947-f4bb87ad0cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d19b13-e90b-4ed1-80ae-26cbeebd5c4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ba8c5-8175-4630-8501-940ad04ce676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3784db64-5473-49bc-84f8-5b29bf797b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e36563-a0d6-4d28-a5bd-466b036c81f1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35472cc-3557-43ec-8b28-af09da04909b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f668ed-1ec0-4c52-acb1-8d8d9b8371d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f8d39-021d-45b6-9f46-a94d9bac95ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b1197f-b1b1-4ddc-8b78-98da8e12bc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af05cad-327a-4c62-aa96-e5f50f923c26",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fc9e7b-51fd-482c-b068-d73a90f3a044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625a1e19-07b0-4331-9851-103af27301a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503fc4a6-1255-466b-ae08-b86d48f9e725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff0d0ed-7880-4ad0-85f8-b9fa2030abb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db53957-c868-44ac-b400-47f3ff0ec786",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50181086-1ab7-47cd-b15b-9f53cced5e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe4b3d2-9359-4283-bc0c-4dc335572e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2814621b-e9d4-4844-baf8-fdaf10edc1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5a05bf-dd7f-46a7-b1e8-1e724db0ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12907e13-a4b4-4cd5-8d0c-74bf36c52995",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82afa2b8-0747-4755-89d0-6c3747a3b82e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b245ffe2-a968-4946-bcae-84bcd9915d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f66c754-dcaf-4cd3-b163-fd1c1c152499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ec77d0-009c-4d27-91d1-50f15c572900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d7076-dac1-49ff-88b4-77ac556d4228",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2648a272-79f1-4bb5-a520-a745c76d1720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb5e5bf-b78c-483c-8987-bbe987423e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af77814d-2caf-4716-b706-a285f38bfdca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8796ad20-d818-4f70-b2c4-c475afad59bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a60c407-cfb6-4ef9-854a-efeb9e11bfdc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5235121f-d6d6-4131-888f-20b9a0421d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21d98ab-6bcd-4224-9606-baf0f934cfcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f385ccc-7a14-4a37-a959-fff80f2686be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cfa369-67db-45d2-8e18-91c889ac5f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cc8eee-ea28-40ee-ba75-8cb7712c9420",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa4f4a1-3a58-48de-844c-974dd74b9878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d14ecd-49f3-4d76-8392-853fad8df3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620f8700-ab8e-4018-a65e-9a8f4def0b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6fee09-123a-426d-8ef5-376a922168e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e369eb-483d-42f4-998a-a691a20b52b4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81d143d-3090-41ca-bf10-688a17ef7fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a91874c3-24e6-4c6b-99b3-17ff7cdc5217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3450592c-c4b1-4f67-9300-877c79cc6beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19a44bf-2320-4c8c-a216-02b5b67505cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4425d06-9aae-4ebe-b7fc-09bcabf0724d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93493433-3be6-4309-8217-d76662357114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "624f130f-4536-494c-9bbf-a64a66827fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816d9073-c88e-4993-b267-09ca6595963c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5a9184-d2fe-4120-be42-22312b3d0332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7b558b-9b54-4961-b2bf-ceb95ed0a997",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e55428-eba7-437a-87bd-5eb0ad4d9e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be4b17a-36d8-4f49-b4c9-9ba8f53f661b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad8a8aa-8138-4e5f-bbac-2ca93f6ccb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8190875e-0b32-4e7b-ad39-bdf170fa6d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec117ec-ee21-46f1-a094-98a8445ddecf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32db014-c64d-44eb-a131-225d21037b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25c81cd-d8da-4c5e-b7c6-1ab1d74f9a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f633350-7e38-4550-bad4-3a64c2aee1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2b3996-9a03-49a7-8e90-734c386018cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d9f7a4-39e1-4af3-8b4a-f8098e8c8f7d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fcbe8a-50ec-40b9-9118-d64360821605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de53ee9-ad80-482e-85dd-639aead6b3ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e147c8-a815-46f8-be77-ff0de49835c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e46a8d7-ac46-4004-a671-cd92f732e82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a111a1-cf69-4686-97f2-fc6c3f96d74d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7d4533-ef14-4b72-9b4f-c3f9427170e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dfca95c-a73e-466d-890d-0c16e7852967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057ffa02-b3b4-4d12-8344-072f56f4876b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a6c35c-e6e9-457e-ae5f-237cfbe89365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96107211-f1f1-4ac5-a668-6d4763dcc6f8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8307cade-1131-4806-a584-286119cfbfd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f842a8be-6c28-4cec-a95c-5e3b258b8ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a575058b-dd5f-4d71-9168-5927cc29d7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6232f612-5dd8-4d49-b24c-ca8c71258bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78416389-48c7-4a2b-a3dc-75815a6e6f05",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba40ef66-ba71-433a-9a8c-1406b2d85d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56aba52f-2376-4cc8-8ec9-6b517712b706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53869522-bd2b-493c-9528-7673cc2ee0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fca6bd4-2254-4344-92be-5525cbae74d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83b3b59-bd90-4a68-abb6-299c1dec299d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ad0e0d-9c25-4a27-a065-97b6a986637e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3277e61e-0b58-4660-ae13-ee49894dc305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673cd3b7-e400-4682-a1b3-5b655354e0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161eb804-f6b9-42f2-970a-56fb024245c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f4f329-0eac-40fe-8074-d2b3eb543810",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32af0676-300e-4f6d-ab86-91c07f8c0b17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd7b8a3-06ac-46f5-bba4-c2b3a54ec0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc17cff0-9486-400f-817b-5a4cef84c410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6998b11-6d5d-48ec-a4d4-fe1035e90fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795c51a9-9cdd-49a5-b0f4-e004cb7ae9cb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e218f2-c3cc-4147-8631-6c32a00fbf70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f58ffa66-260f-422c-91c6-91d481d88d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edbe046-cd27-487c-8313-ee49e0c2816f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f920d3-2da3-4bf0-afbc-a1cc4db16857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02152c0a-649e-43f8-8bbd-23003c790626",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e0d65e-5408-481b-b387-306a83631594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76bde3ca-8117-4eb4-afb9-b23bc7fa2995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c226707c-643e-428a-956f-3d4ebfce130e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23936952-1702-42c0-8952-677ccd0eb8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1b417e-a4de-4552-b5c9-c5c08a40798e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff78163-86bb-424e-84fb-d0a8d2cc742c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca17b90-c289-4410-85fb-fa5e8c5e43d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc8c9d7-1358-4673-a303-9acb845ec7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c94373-dda0-4fb4-aa88-e69b2a8e1b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244300cd-507f-4d2d-9160-852d098061bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594f6539-648a-4305-8662-5484e5cd8147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa4236df-16df-4433-9a9c-724bccb4d767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e231a61-1259-49c1-a926-e9a43fb74613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a0c437-60ed-4096-8caf-1dd28d0683c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb923f5-7068-4958-b39d-7e041ab8b545",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4878189a-e0bf-4087-a6a8-c57385a8afc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6782e327-b684-4aac-9576-a898fbdee11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27fb5d6-e280-4503-ac7c-317daf8b156b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639a047e-f75c-4c48-9c42-55c1caf24532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4feba0-9a68-45dd-9f84-8e2376f1c3d4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bcbd23-c00e-4129-84a7-877fc7e84489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c6317b8-fa41-465a-9624-35607edd266a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8669d23-a8b5-4170-9a8b-3188a9786959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485a6515-5274-4641-b605-1cb824be9ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1706eb0-47ee-4d84-af1d-eff0513759bf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7641fb-e0f2-43e7-98b8-fcd599d5cd09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f8ee25-fdb7-499d-a509-5d9ba9efcf4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6884408a-1695-4347-9353-d7dd2fcb90af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e668277-8944-49c3-8e1a-3d924235791b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca2e87d-6c48-4f9e-90cf-632c6e0f01e5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae1c914-10b5-4282-986b-92672856b74c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "814af4b6-5740-4e3a-9e71-4482bb681487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590bfdc5-9079-484c-aa5e-73b0a4cac7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80dd5758-31ab-497c-a4f7-0c5b4134ec89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0639751c-e72b-41ae-9847-3cd16f225eae",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b86c0d-67a4-48a0-9bf1-0dd061bee399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ceb85c5-600d-4179-8243-ed9dfee99217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6c83d0-7e04-4cff-9f4e-477afe55fc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0af335-865c-4dfe-afad-a34604fefbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc43619-3aad-40fc-bc49-bc6d72291fdc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec33345-9daf-499b-b90e-003475af26ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2507765f-a5c5-4163-8748-32c51de9b205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b565711c-3b77-46c3-b70c-b9bde2ee4736",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a838e7e0-f6ac-4a14-ba9d-70d0bf90b2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5daf172-346c-499e-b942-0657f1b47636",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc2a49b-5d80-4177-95e3-cc0c97d95329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd4cd38-5ce3-4282-92e6-27f32505b81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b750c3-6d68-4cd3-80aa-09fe02fb53ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67588591-5e18-4055-84f1-04ec26736052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c35124-9470-408e-aa19-01456b3bde6d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f11e53f-f548-45ce-9b47-367b8d9fd722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d236ccc5-3a4f-4fb4-9c66-d5c5c8919a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470aa462-feec-4d34-8f31-cc6ff373b058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a692c3f3-b51c-498d-a199-eecae351dd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452cd231-0487-45cd-af54-cbf396f91950",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc051ae0-a45d-4d35-b68d-d8014fcefe60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dcbc37f-8bdc-4499-864a-b1a4e178ed03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8d9258-4a65-482e-a3ab-314f737067e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4e04d3-9dab-4956-8270-1aecfcef1101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e76f7f5-60a6-4305-b4e1-efe3f02b1ee8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff847a4f-eb97-457b-98c2-eceab4092a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d28610-bcad-41c9-99d6-aa8721e60303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7729d5-f7ae-43a5-ad28-4fd7519a08c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce028c98-5150-42a8-bea0-bbf4a79fd11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0b4b7b-f746-4286-b160-53d9e3b74ce5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f878b43-cb50-4a7b-ba85-e3fd05e78960",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af21be9-3f15-4cc6-ac28-dbb79d5a61a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affba654-f8a2-48b8-a62c-2afd30e298b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94808174-0b85-4926-b7c6-107f71464e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a8351f-235f-4b0f-b060-54140e08fa28",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbad1c2e-dd06-47d2-a19a-f4bd24bd6351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd818cf3-feff-4341-b4d6-1e4956b004b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b18251-2651-4113-9cf7-530f9852f940",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d896396d-102a-4b40-96b1-f49c86aa662b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1617b3-5f11-4475-9ff9-a1670a442819",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8720e2-1699-4b66-9336-7d41262c7417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f149f7-f695-4dc7-ae57-593cf95fdd6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd79923-ef9a-4bce-ba62-03bc18781286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499ccb44-ee1d-4e66-8ede-89dca41be039"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b69d6e8-b3e7-44b6-a0ca-0192b3d2c7b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbed33fa-14af-48ec-9044-14f8ac28b376"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cab6a2b2-f86c-46d6-bc9d-05aca22f93c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da73fc26-29c9-4d7b-864c-7b1e2e5f8030"
                    }
                  }
                ]
              },
              {
                "id": "3f9160db-13e7-46ed-b597-90e3a76ece1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04ff0cad-d78d-4698-86b7-23614ed44705",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61fe006-2f9d-4eba-ba45-2314659c8618",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e088c0bd-eda3-44a9-8d20-251914995fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28428c1f-1c6b-4505-881f-007c4a0a5393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a57ad48b-509c-4478-997d-c992dc2fc185"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9d6d810-b0e1-482d-9048-d957f0f81490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3ee9e74-fb59-4849-9d48-eb27b012f749"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24cbe93d-ec03-4a61-9560-7bedeb7a9c94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b8b53ee-d2ca-461b-ba6f-0dd6634ded99"
                    }
                  }
                ]
              },
              {
                "id": "4a943334-68be-4e37-af9b-9cbd2b65fab5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "533586d8-42c4-45ad-bfaa-5228d1b56bd7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163bff8f-88f3-42a0-ac5c-f60d691545a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "12f254e7-ec65-4d1d-b655-fa47459804ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556f2cb2-4ca9-4a74-95fc-8a046fb842a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fca184-8bb4-46f7-864c-7715c5d2051c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b63d447d-4d40-4944-b2d3-9976a0de5bba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf249034-f5f3-4f96-b1d7-a5d4eda9f729",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb2431f0-7b3f-4fc1-9efd-0e6dfda1b740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "79d1b3ed-d8ed-46ed-81aa-4cac5b7ff732"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "090a1989-3d39-4c90-86bd-611bab1f0aeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ced14a34-64ba-4d5a-85e3-10497a863d97"
                    }
                  }
                ]
              },
              {
                "id": "5686105f-91c6-4060-b1f2-ea74008ec5cf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2720d292-bed6-48bd-b664-41012c9533fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96d0ee83-3fb4-4792-bc57-e3ca88e2c5ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b107d1e-6245-4606-9478-9e5d4cf3a0dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a02d45e8-95ed-451e-ac62-c5b98fdc2ab1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10e8095b-73fa-4283-ab89-b88624877d6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f99af032-4786-493d-ac2a-134d03c6a706"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "579ee462-01a2-47f4-a9e5-8e5e6d1d12a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d41ae00-6cd2-449b-b18e-cde5bdb085bc"
            }
          }
        ]
      },
      {
        "id": "a9723c51-beff-444a-a21f-ceff66143c7a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c878935d-7f83-46a0-9b41-5f074fd71c88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "726e1eef-7b35-4646-b8e9-eee36333ddf9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dab5b514-6500-47ff-9127-bc154f5d957e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f510b2-a771-40a7-8cca-370d950008ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "796f7cbf-7fff-4576-9e22-bfa02639d91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56942fd-5a4d-40ac-96e4-572465e2e785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bc136cc-fd61-4589-a4d4-592b362b7795"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3443b2c8-f049-4263-8ad4-9471dee0d4be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7179e10-8e52-443b-8762-ff8247df4380"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4436cc5c-bf46-4f4a-ac14-ebe9dbf8ddb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0b841a4-517d-466a-be1a-90183c2bf0c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3951fb62-88b2-4fcc-8943-380bcca1961d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "796c946c-2306-4b95-aad0-2a7bdd4eb4ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cd25e2f-ef2a-441c-9501-6d1d2222c1e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c59e3e4e-b384-4098-869b-21aab8e6cb78"
            }
          }
        ]
      },
      {
        "id": "9fd8b762-b644-49b2-a782-aca0c18bb78e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a2a79233-bba3-40ec-8984-064b21f6ca57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34a8b3d5-fe36-4c0d-be16-10008407b3fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b17b2368-f410-45a0-ab60-361d9177cf5f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57687112-238b-4443-8202-a9e0a76c31d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a979fa9c-9112-4270-a99a-b254943ff8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca76084-f9d4-480e-81d0-5f58a1258891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "024f3066-e8e1-47cf-808a-d631d3cfae9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abc6fb68-af4b-43b5-9f1c-e2aac5300548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ec56a90-7408-4a65-8876-28ef79b7a51b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d248249b-3144-4a35-821e-e1dd36b00e19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a7703c-04b3-4edc-946e-1525594c1fd0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d830f21-aaa8-4faa-985c-401d0a477552",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f472d516-1095-4e97-b7af-fdc6b1884d4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96abdb9d-7bd3-4906-b32c-eabb21359f74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1638f753-c5c3-4671-96d1-c1fbd7b3647a"
            }
          }
        ]
      },
      {
        "id": "8487f949-416f-4442-9fc7-0d253e4b4f1c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4ceda7ad-4ce1-447e-8616-1467650f82d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23caa486-25cb-47f3-ab33-fa20f91b20d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5f50fd8-2c21-45d9-a31e-bef778f5a5ce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d414c7-fccf-474e-823c-59bcebe591c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81e253e2-fede-4340-98d2-3090f9b644d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0f6220-b7cf-4f67-8424-4f67ff317750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c3edfa6-4baa-447e-8c26-4c9aa03d9e26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1a5f1c5-5105-4355-8952-668f3ddf6a52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4c3eff0-d8de-4986-ad81-90869502e88c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98a9db23-8805-490f-be57-8e08dd14558e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0bd4d67-38cd-49a7-9f2e-ef6cbdbcf412"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3b8c7d7-7025-4d65-9a8a-79449a74432a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f38141a-7c98-4fd0-9ff0-9d758360c290"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7483c5e7-020f-44d6-b344-d79d2ae85505",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "077a8021-6ff5-4158-a823-c0fe0020c3b8"
            }
          }
        ]
      },
      {
        "id": "24fb7f7e-bb7f-421a-aafe-8e0a233f19b1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b759a1c-e415-4afc-895d-bc1d8bc88df2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93db16e1-de0a-4e5c-a2f5-b99b0531ea6c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f58dbdf3-7fe3-48e1-a3de-b0fa77abe23a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d14ac7a-1421-4e65-8330-4e32f454c5fa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95d9664c-8429-4078-917c-86dbb2a38504",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 111.61754385964912,
      "responseMin": 9,
      "responseMax": 2616,
      "responseSd": 309.26420495127286,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702859821918,
      "completed": 1702859863261
    },
    "executions": [
      {
        "id": "4d192e01-0cac-40d2-b558-487c9b43ee99",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e78727bc-b658-40bf-83bf-92a64eeb038b",
          "httpRequestId": "1b400e1c-5e07-4857-bb3f-27f207c26283"
        },
        "item": {
          "id": "4d192e01-0cac-40d2-b558-487c9b43ee99",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "78f741c4-7e62-4a3a-b440-5272e80ab512",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "c46a4739-c787-4f65-8768-80734e332be6",
        "cursor": {
          "ref": "dcea097f-083a-4a88-a9cc-be258daa95d9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1d99c871-bd81-44db-b728-1d36910dcdcf"
        },
        "item": {
          "id": "c46a4739-c787-4f65-8768-80734e332be6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "efebe448-adf6-4089-80b4-fc93fd42182a",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "82515a1e-8f57-459f-9cfe-5297b85792e6",
        "cursor": {
          "ref": "495894d6-8a08-4bfe-ab19-b1f31881befd",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e5248a5b-30b9-4787-b9cd-839258e4631e"
        },
        "item": {
          "id": "82515a1e-8f57-459f-9cfe-5297b85792e6",
          "name": "did_json"
        },
        "response": {
          "id": "703bbc81-3de2-4f6b-9d1f-cffe0786b993",
          "status": "OK",
          "code": 200,
          "responseTime": 762,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e506caaf-f4ae-4237-ad90-2ab7c80bf115",
        "cursor": {
          "ref": "e98c5490-e81d-4425-9a55-4dca775f1e8a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6cb6a8cc-c018-4fad-822a-377cd18473b3"
        },
        "item": {
          "id": "e506caaf-f4ae-4237-ad90-2ab7c80bf115",
          "name": "did:invalid"
        },
        "response": {
          "id": "914e112a-1cd5-4f99-b2b3-1a34f10c2dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e506caaf-f4ae-4237-ad90-2ab7c80bf115",
        "cursor": {
          "ref": "e98c5490-e81d-4425-9a55-4dca775f1e8a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6cb6a8cc-c018-4fad-822a-377cd18473b3"
        },
        "item": {
          "id": "e506caaf-f4ae-4237-ad90-2ab7c80bf115",
          "name": "did:invalid"
        },
        "response": {
          "id": "914e112a-1cd5-4f99-b2b3-1a34f10c2dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7eba80-6d4a-4ce9-ac98-930695198fd7",
        "cursor": {
          "ref": "d395e69f-9ec1-4fb3-aed3-4f739daafdfb",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d529ca41-802a-482e-9325-e3973fdba748"
        },
        "item": {
          "id": "db7eba80-6d4a-4ce9-ac98-930695198fd7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32a1ea90-deb4-455f-b106-af7eb66444f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 127,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feecdc4-8814-4b8f-8dae-a30a5e54916b",
        "cursor": {
          "ref": "ca773c26-de10-4f34-a794-23f3c370e8ab",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f54ab1f3-6803-4d44-84c1-2c89412265a4"
        },
        "item": {
          "id": "4feecdc4-8814-4b8f-8dae-a30a5e54916b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "79d23690-2252-4d87-a910-fabcb2b31a4d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99de86e1-c699-4dba-8ddd-b48cdd7bda78",
        "cursor": {
          "ref": "6492d1ec-3650-41f5-896d-822a1ced1824",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ded4e293-2408-4847-8e03-61519bdec510"
        },
        "item": {
          "id": "99de86e1-c699-4dba-8ddd-b48cdd7bda78",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a64ae124-2a38-4bb6-9006-fc84a13ca6d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91bcb9f-371e-4c81-9a26-c746afb073a1",
        "cursor": {
          "ref": "092022e3-20f3-465b-8f26-05cb65d45347",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "942899eb-e560-470f-a04a-fa7e5714163a"
        },
        "item": {
          "id": "f91bcb9f-371e-4c81-9a26-c746afb073a1",
          "name": "identifiers"
        },
        "response": {
          "id": "50c5729a-fa26-42eb-ab9e-4aae3cd7dbda",
          "status": "OK",
          "code": 200,
          "responseTime": 389,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76a7e87-433f-4077-a819-c04e6856bbbb",
        "cursor": {
          "ref": "b87100d4-3ca8-4df2-b36d-91f87dfd5406",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "56e7eda2-729f-4596-9b60-1da2c9b2f129"
        },
        "item": {
          "id": "c76a7e87-433f-4077-a819-c04e6856bbbb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "932340fa-e327-4985-99b5-12e0a168fba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301dde1f-bac4-46e3-a40a-687188412531",
        "cursor": {
          "ref": "29e646e4-9b4e-4745-9f15-49c0fda9f398",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "41ebe1dd-ddd3-4b35-84c5-a4e1d2d7ef91"
        },
        "item": {
          "id": "301dde1f-bac4-46e3-a40a-687188412531",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6de3eb81-8997-45df-8e53-6101592113ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ad7a8e-4687-4389-9462-2e6c747b0d0f",
        "cursor": {
          "ref": "cc7fc659-cc2c-4ee0-9624-bdac44fd844b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e9586c40-f61f-4233-baef-d867c6d23b38"
        },
        "item": {
          "id": "e3ad7a8e-4687-4389-9462-2e6c747b0d0f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "525d25bc-a684-4d4a-bfd1-65caa4d28564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7144491a-0fa5-4cfa-a5dd-f7850b2ce0ab",
        "cursor": {
          "ref": "731abc07-e79b-4075-88a6-c286141cfd6f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7c5e6204-978e-463c-b3c6-fa4d922ce31d"
        },
        "item": {
          "id": "7144491a-0fa5-4cfa-a5dd-f7850b2ce0ab",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "436843a9-7623-4421-bcce-aa4f7171935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ecd08b-20f4-4bdc-8de7-db360b4b5e35",
        "cursor": {
          "ref": "f1c03027-60ad-4f2c-b515-a373c339b835",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "36d2ce43-42fa-464a-b728-9c7fe2638749"
        },
        "item": {
          "id": "54ecd08b-20f4-4bdc-8de7-db360b4b5e35",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "53d0ee7d-18d0-45e1-a398-0e0b61ed345e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049c4426-f577-4541-bbd2-585ed0bafc5b",
        "cursor": {
          "ref": "3e49c2c9-4e9d-4e65-909f-8c4e6e5c7c86",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "65f7e435-9d4b-4bbe-8d89-fdb8f739c3f1"
        },
        "item": {
          "id": "049c4426-f577-4541-bbd2-585ed0bafc5b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "99bb1628-5d77-496f-9864-f9eb7d821606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103a50bd-3578-4b23-8da1-fd7df1755621",
        "cursor": {
          "ref": "00968296-663d-4047-aea9-04c461e4c62e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bbd1ce0f-e8b4-43f6-8db5-7e497d41ff4c"
        },
        "item": {
          "id": "103a50bd-3578-4b23-8da1-fd7df1755621",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2cb9e837-56a6-4145-846a-a21eab5a376f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9985157-037a-4156-8398-522cdc3ff08d",
        "cursor": {
          "ref": "843993ae-8e39-4f95-9d69-21f3750e7e72",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2accd4a6-b65e-4258-af1f-32043b46160b"
        },
        "item": {
          "id": "d9985157-037a-4156-8398-522cdc3ff08d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4b63cd5b-de44-4662-9400-e078762f2292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c6fa57-2168-4436-a8d6-d45eb7637379",
        "cursor": {
          "ref": "0b56ae8c-69d5-4026-8693-b9cbb6e17a99",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f4014210-e7c5-46e2-88be-9b8d5d09066a"
        },
        "item": {
          "id": "d3c6fa57-2168-4436-a8d6-d45eb7637379",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "318c53f2-3c58-4f6e-883f-8427ec383ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f63afe-9342-4cbe-b7b6-dda5c50287f9",
        "cursor": {
          "ref": "1ffcb672-75f2-41ab-bf5d-6c6664e8c1e3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4c1a195b-79cc-4945-9078-b982545cd0f5"
        },
        "item": {
          "id": "97f63afe-9342-4cbe-b7b6-dda5c50287f9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d352263a-8d60-4378-84b2-5ee2467d027d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e8dad-5715-4cae-be66-db6b2ac331a5",
        "cursor": {
          "ref": "cc877e41-214c-4669-b759-0e75ded62a12",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a09af99a-8ddf-45f7-8817-27ba214c9b8a"
        },
        "item": {
          "id": "a97e8dad-5715-4cae-be66-db6b2ac331a5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d5976afc-2b9c-4800-89ea-7831bb81e28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b82f4e0-5dc7-452c-acc6-d44bd3e779ca",
        "cursor": {
          "ref": "8c9e9aba-bd3e-4a39-bdc7-31f40dee75fa",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "59695587-7232-44cf-a253-4447af32c9e5"
        },
        "item": {
          "id": "4b82f4e0-5dc7-452c-acc6-d44bd3e779ca",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d0296ff5-699e-4e55-8c20-d8f5a1b14c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2c30e3-3de6-41d6-8b03-48f3de60f2cb",
        "cursor": {
          "ref": "59b9ca84-39a4-4155-a4c8-f20502a33207",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d9a8d12f-1976-4625-96a4-ebf8a8017c75"
        },
        "item": {
          "id": "ca2c30e3-3de6-41d6-8b03-48f3de60f2cb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "efc934e5-5dfd-4e04-b1c7-df838383493c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2187d5eb-b92d-48d1-979d-d77457b50dbe",
        "cursor": {
          "ref": "2032df08-0313-4e8d-840e-76b86af7f089",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "70855c41-e6cb-42c6-977a-e46c80eacf20"
        },
        "item": {
          "id": "2187d5eb-b92d-48d1-979d-d77457b50dbe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ad2d5c4f-13d3-4332-8592-e257b5985bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d078f3-cd1f-4d5f-a3d7-ecb2d6760dd0",
        "cursor": {
          "ref": "cd17a857-ba95-4f3e-be54-64277fa46b2e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "56186d8c-ae63-4c82-9699-8300e1fcc41c"
        },
        "item": {
          "id": "a8d078f3-cd1f-4d5f-a3d7-ecb2d6760dd0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "813ea663-0731-45d3-82cf-db2b668555ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15678acc-9f00-4cfc-8621-3c3d8d635cfc",
        "cursor": {
          "ref": "0c702786-3ae7-4d1d-8316-f8112a2e12a2",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aec3f732-8e18-4905-8220-b5ae8c13197f"
        },
        "item": {
          "id": "15678acc-9f00-4cfc-8621-3c3d8d635cfc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "394d3522-e255-469c-a12f-90c0dfceb700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9a5c06-d58d-4997-b3aa-c4664b788ab1",
        "cursor": {
          "ref": "9aa10c98-5477-4bc9-bf0b-9fa2a4bc01c3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7944c2b1-ad64-45b7-860a-78c5f7059f7b"
        },
        "item": {
          "id": "0b9a5c06-d58d-4997-b3aa-c4664b788ab1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a47f14e8-89a7-49d4-9bc7-532f1c84df3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a1f795-a005-415b-9e3d-c4f31e2d934c",
        "cursor": {
          "ref": "09d918fe-60b5-43df-a0e1-1bf728a797d4",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "326fdeb9-ad93-4707-90bc-fd3e49edd182"
        },
        "item": {
          "id": "81a1f795-a005-415b-9e3d-c4f31e2d934c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f5d239cd-d63d-4b0b-aa71-c22da8918446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be01114-2fd2-40af-86c9-d41511123154",
        "cursor": {
          "ref": "d5a3cb76-3b7d-4f04-8066-7132b676d287",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0e9d5ef5-581b-474b-bc56-a51025b56096"
        },
        "item": {
          "id": "7be01114-2fd2-40af-86c9-d41511123154",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ccc00acb-0e49-40b8-8ec3-6a9626fabf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73a016f-9a41-492a-a2df-a3e3df3cf2cb",
        "cursor": {
          "ref": "0d2073ee-21dc-4b6f-b112-7e16a745ec48",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "38c42915-c355-43f4-b39f-cc1db1259bbf"
        },
        "item": {
          "id": "c73a016f-9a41-492a-a2df-a3e3df3cf2cb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8fdf647a-b63b-445e-9a58-288ddeb46046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaa74d7-640c-4ce8-bac9-60f91e7c4981",
        "cursor": {
          "ref": "32c595ef-7db8-4681-9e50-65a42c8a10c7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5e66e45e-333e-4524-89c2-c4a907fcd3cd"
        },
        "item": {
          "id": "9eaa74d7-640c-4ce8-bac9-60f91e7c4981",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "03cc019d-b622-4b3f-bff0-20df9a7190df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f12543-54ab-462f-bb30-d46889a5bb62",
        "cursor": {
          "ref": "fa64ed45-86fb-4e80-bdf1-3e967f4071ec",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ad40e49c-cf77-4ada-9046-362d98fd3b23"
        },
        "item": {
          "id": "70f12543-54ab-462f-bb30-d46889a5bb62",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8a57eba4-0e26-4d13-a451-c3ce97f7c6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3231b9-6370-4eba-a350-d2ee136dd58e",
        "cursor": {
          "ref": "b3696d59-c549-4523-b768-e628c462760b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1428193d-2bd3-433d-a980-1d18cec8f4f9"
        },
        "item": {
          "id": "6d3231b9-6370-4eba-a350-d2ee136dd58e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ecc4c449-7341-47eb-943c-5a3678c8fe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5f13b5-1e72-4672-97f4-fe245cd250e7",
        "cursor": {
          "ref": "ca937e81-3ce3-4d36-bf49-204e57e2d1e9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "be09efc4-af1a-4328-9e95-7c76d36fc508"
        },
        "item": {
          "id": "fa5f13b5-1e72-4672-97f4-fe245cd250e7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ec7cdcc5-07fb-45a5-aa46-3cffc188727f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a2f5c-e554-449a-835c-db45bea83d82",
        "cursor": {
          "ref": "fb561ba3-e261-4606-9f21-19aad3b4e5a7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cbd9051c-2990-4abd-8254-7ea23e163409"
        },
        "item": {
          "id": "a51a2f5c-e554-449a-835c-db45bea83d82",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7b9f83e8-0395-44f1-baeb-155d7d328a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6515289e-f3e2-485c-bbbb-8013c73e11ca",
        "cursor": {
          "ref": "ffd7c73e-cf69-4a91-b6a0-c1731726e1d6",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ea938da7-8ff5-4be9-92fe-1745b7815a78"
        },
        "item": {
          "id": "6515289e-f3e2-485c-bbbb-8013c73e11ca",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0c8cf015-c5bb-4b9a-bf51-4925446d8b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240a6fba-6e3c-441c-92fa-60e0a2ae62c5",
        "cursor": {
          "ref": "1ef5273f-6f66-4f67-b7fe-141eae368138",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1810ff0f-82da-461e-9a0c-a0c7302ccf3e"
        },
        "item": {
          "id": "240a6fba-6e3c-441c-92fa-60e0a2ae62c5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c9c0b717-ea94-43a8-877e-671dab094d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755bed80-ae78-4fa1-b406-cae0d900894a",
        "cursor": {
          "ref": "d8964dea-68f5-4940-a37e-5d816c10e6bb",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5935d3d1-08dd-45a0-951d-c136999153b1"
        },
        "item": {
          "id": "755bed80-ae78-4fa1-b406-cae0d900894a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f9179020-fee2-4750-be01-e97fc4b7e3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e96677c-8ffe-4db1-97cc-24294c72ab55",
        "cursor": {
          "ref": "03601635-0d07-41ea-9059-7172f1efa49a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1210632f-893f-467a-80e8-7cb0bcdfda3f"
        },
        "item": {
          "id": "0e96677c-8ffe-4db1-97cc-24294c72ab55",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e6f764c0-eddd-49e7-bb22-b9eccf29adeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c626198-1490-4851-bdb6-b837ec058d8c",
        "cursor": {
          "ref": "150c7796-02a8-44f8-8d61-8370080a4ca1",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "28133038-d775-4fe9-84dc-7d0764386c25"
        },
        "item": {
          "id": "7c626198-1490-4851-bdb6-b837ec058d8c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "87706d2f-0b4d-41b2-9e4b-638c23ae9aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b16dfb-165a-47ba-8696-7a4ed9ad9246",
        "cursor": {
          "ref": "d201f5eb-b7f5-498b-b0e2-2d73ab2fe164",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a7962204-72ee-4847-b542-0cabba4bde48"
        },
        "item": {
          "id": "92b16dfb-165a-47ba-8696-7a4ed9ad9246",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "032eff47-0dee-45be-b0c0-fca128320bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5030c6-d2b2-48bc-8a0c-c0e57746417f",
        "cursor": {
          "ref": "0d6f5d85-bca4-4fa3-ad6a-a9ba88fdf560",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f623ff44-def4-4a75-8f72-adda8e4f21b8"
        },
        "item": {
          "id": "8e5030c6-d2b2-48bc-8a0c-c0e57746417f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a1c0752b-c68e-4b25-a1fd-8d2afb5918fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb20b32-322e-4676-a95e-c5ea4932ca78",
        "cursor": {
          "ref": "2a28b875-f0d1-4f88-badc-d40c34049521",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a97ce52c-c352-4210-9cc9-957669a0e0f6"
        },
        "item": {
          "id": "0fb20b32-322e-4676-a95e-c5ea4932ca78",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "51532aa3-9b9d-435c-96ea-97ebd6fb9ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dcf6b3-813e-4ce3-a61f-94622ed93980",
        "cursor": {
          "ref": "3dd186f9-5ee4-45c9-926f-8e34f4d20e6a",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "45e3122b-038b-454c-ae00-3c513c0ef863"
        },
        "item": {
          "id": "41dcf6b3-813e-4ce3-a61f-94622ed93980",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3d304afc-5ec2-4d68-bdcc-23f187e35de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15212d6e-4e51-47c6-ba06-adae45231458",
        "cursor": {
          "ref": "18cf8999-08da-4e75-b813-e1585e129b99",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "163d487f-1655-4206-b80a-1902f602d354"
        },
        "item": {
          "id": "15212d6e-4e51-47c6-ba06-adae45231458",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "853c7da7-40af-4cfe-99f2-96b6d96673ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143de68b-26aa-4390-a798-ffd5b2e9455d",
        "cursor": {
          "ref": "74c550c4-d955-4415-a20c-323b70028c09",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cb3aee0a-2c85-487d-970c-9e1aa1dccdfd"
        },
        "item": {
          "id": "143de68b-26aa-4390-a798-ffd5b2e9455d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c30c6e65-5095-4e59-8f06-e6df4a34e82c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 333,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd657d1-743f-40d3-98a7-b016f69230fd",
        "cursor": {
          "ref": "1b7bdead-91ea-4fd6-90c7-87fdb785981b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "64fed3ad-bde6-4a03-90f0-0876b64270a7"
        },
        "item": {
          "id": "8cd657d1-743f-40d3-98a7-b016f69230fd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db5c98c3-e369-4487-9d65-f61ae2171248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93a6f10-ec95-44d1-9be1-d648c4b55cae",
        "cursor": {
          "ref": "15a312cd-72c9-491c-b7af-dcfbc521243f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "abd5c0e5-236a-425b-9ce3-98ee3e9329fc"
        },
        "item": {
          "id": "c93a6f10-ec95-44d1-9be1-d648c4b55cae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "862afb8a-6788-4fa6-b290-e49d372fcb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd62585c-f681-4522-a162-a3dfc64bbbc4",
        "cursor": {
          "ref": "0d52f536-7f93-47ea-9e16-2070b9072c41",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "01a62037-534d-461b-8a3c-a5708bd24bfc"
        },
        "item": {
          "id": "bd62585c-f681-4522-a162-a3dfc64bbbc4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ab9203b6-4d91-400e-a4f1-e45ddc244ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d7dfdd-dd7c-4d81-8b59-e410c27bb26e",
        "cursor": {
          "ref": "a204de48-7ea6-4717-8636-ce0b576b53d4",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "89ed4c03-2d4f-490c-86cc-61c107047faa"
        },
        "item": {
          "id": "e5d7dfdd-dd7c-4d81-8b59-e410c27bb26e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c17d34db-0a43-4101-a621-e40f3bd30780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9395196c-2b47-4cc7-b756-2f4e9c95b8fe",
        "cursor": {
          "ref": "5249f898-6645-419e-b687-b6912b4cec48",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4cdc87d2-3c12-46b4-96dd-fd6a5331c4bc"
        },
        "item": {
          "id": "9395196c-2b47-4cc7-b756-2f4e9c95b8fe",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dc212944-a071-41d3-89de-71d81234f7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0f4114-2aa0-4a35-b610-b7791ed08a53",
        "cursor": {
          "ref": "e9c7e588-d062-46c6-af19-40077c0b0136",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cc5276c7-07ea-463e-85ce-834adc757330"
        },
        "item": {
          "id": "3e0f4114-2aa0-4a35-b610-b7791ed08a53",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5d1dc653-bac5-4ba1-97ed-95d546610ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80db86e-5946-4c8d-ac50-d9df20b1e184",
        "cursor": {
          "ref": "40c43988-bdd9-4e36-bcdd-7cccac56ae31",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7d8ba1c9-c1eb-44ce-9903-9d9d8b43358d"
        },
        "item": {
          "id": "f80db86e-5946-4c8d-ac50-d9df20b1e184",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d214cfa3-64c9-4913-ad3c-23eca23afb87",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 333,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68d1488-c8df-490c-ac87-e236e982c027",
        "cursor": {
          "ref": "b46e079f-1dfd-4633-b153-6e7358e73570",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e9cd0112-54bf-4930-805c-f5c3165540ed"
        },
        "item": {
          "id": "d68d1488-c8df-490c-ac87-e236e982c027",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8154406c-6665-4eb2-a72d-c722b6a261e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07367b20-ee15-4556-b76e-0a822c15f2dd",
        "cursor": {
          "ref": "b886a03b-7f09-4a5e-88b3-9f8b9cc43ac2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3f646d87-94e1-427f-8e31-05ec5063dc7f"
        },
        "item": {
          "id": "07367b20-ee15-4556-b76e-0a822c15f2dd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "29664d68-3ab7-4d2b-9280-ebb4daa8728c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66548064-53ee-41db-b7c1-3a4caa1618b3",
        "cursor": {
          "ref": "70cc7f6c-a80f-4483-b0e8-578ab45262e2",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0cf138c6-4532-4036-a853-b0868de0b579"
        },
        "item": {
          "id": "66548064-53ee-41db-b7c1-3a4caa1618b3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a213a3bf-93bc-41b5-89c8-2cedf6575bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068e719c-f891-4d56-85c8-434e01900cb8",
        "cursor": {
          "ref": "283057f2-8b2f-4daa-89dd-1b963516b55c",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "be0dd0c5-9002-4e86-81f0-5a082d5719f0"
        },
        "item": {
          "id": "068e719c-f891-4d56-85c8-434e01900cb8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d35b27c0-eb45-4841-8181-bc0baa7fd42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d284b-8cc5-432f-a484-7ac5bd91306b",
        "cursor": {
          "ref": "36d0cb84-2f20-4947-818e-dea86aa18ca1",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c0bdbe3b-e050-4d6a-9333-ffbbfda44355"
        },
        "item": {
          "id": "ab5d284b-8cc5-432f-a484-7ac5bd91306b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "53038fc5-b1af-4011-89ae-7912d42bce22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f697b4-c965-49bf-b4ac-9dd8b9c36916",
        "cursor": {
          "ref": "a33647d8-d077-4c1d-a5bb-55e89c9ebeb1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a56e1250-5d18-478c-926f-039ab95180ea"
        },
        "item": {
          "id": "35f697b4-c965-49bf-b4ac-9dd8b9c36916",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2c64af73-48df-4d04-90b9-a9369987a5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f696cfc7-94e7-4d8a-8f12-f30a2b4323d4",
        "cursor": {
          "ref": "1dc37885-36e8-43f9-976f-fa6126c643b7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2ad7eea8-0cdf-4bc5-a594-4695c31da566"
        },
        "item": {
          "id": "f696cfc7-94e7-4d8a-8f12-f30a2b4323d4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4627843b-9e89-4f71-8e36-cad779287740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6477330-1eeb-486a-8601-3993d7a97b9c",
        "cursor": {
          "ref": "27a119cb-32ed-4b15-8e5d-10c7042d5433",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "25110d7d-4df3-4ace-b86e-73ffd6fa6dc9"
        },
        "item": {
          "id": "d6477330-1eeb-486a-8601-3993d7a97b9c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a6ded1cf-eae4-41ee-a9c0-18e2bfab12ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d508013c-8bd2-46f4-bd03-c10ab9dffda5",
        "cursor": {
          "ref": "06689307-bec1-4492-956c-e08ad17be75e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d56f2ae8-a034-469e-9aa4-02b5c601ab80"
        },
        "item": {
          "id": "d508013c-8bd2-46f4-bd03-c10ab9dffda5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dafad485-7ba7-4547-af8d-cee87aa0404e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e07a86-4cd7-4517-be86-963440f2ea96",
        "cursor": {
          "ref": "e1c50d0b-256c-49d5-8830-8157d2ae9a98",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "eee06a85-da49-4633-a1eb-ca984f556aad"
        },
        "item": {
          "id": "71e07a86-4cd7-4517-be86-963440f2ea96",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fde6d953-6079-4bf6-8c5a-1de6152dea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5c78c1-0082-4597-98d9-65210dc99d23",
        "cursor": {
          "ref": "d2b21f92-a4fa-4168-ba9c-f90d4344b128",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b46ed7b9-fdbe-4c95-8921-c74db85785f3"
        },
        "item": {
          "id": "9e5c78c1-0082-4597-98d9-65210dc99d23",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "93e60172-3572-4cd2-afaf-cfb77945c3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7a51ff-d4d0-4621-9a17-6ee5f8476d5d",
        "cursor": {
          "ref": "4571922a-b0bc-4f5c-bc99-dab3f72a3f12",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "18d89238-d4b8-4f91-84a5-f671eb7ebe55"
        },
        "item": {
          "id": "4a7a51ff-d4d0-4621-9a17-6ee5f8476d5d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d69268a1-9268-4e37-85eb-688bae82a5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dfbf0a-ece3-4ebb-97ff-e96f62ca16ad",
        "cursor": {
          "ref": "16a6db3c-ce0a-4393-984f-585e84e82883",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1a584772-a5cf-438e-878e-04b2a9e0e98c"
        },
        "item": {
          "id": "88dfbf0a-ece3-4ebb-97ff-e96f62ca16ad",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ffd2279c-313e-4182-a9bf-14257c17be5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d114dfe-cb61-4dc8-b7a9-c4b865436e27",
        "cursor": {
          "ref": "75095939-dc10-4e45-9fd1-bf8a6ca1164f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5483b552-d506-4010-a1ba-c64c47453c11"
        },
        "item": {
          "id": "6d114dfe-cb61-4dc8-b7a9-c4b865436e27",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "12329b21-ffef-48fa-8b72-06c28a21a311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca11b00-134f-4410-914c-e5a39c820741",
        "cursor": {
          "ref": "95011d15-73ae-44e2-95ac-b88950c97f8b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ff2be84b-02c6-41f1-aa43-b0fe3aea9392"
        },
        "item": {
          "id": "aca11b00-134f-4410-914c-e5a39c820741",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bbe3b0dd-624f-4e44-855c-679b4d3a37f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e45c6a3-0a6a-469b-83f2-aa7a0c43191e",
        "cursor": {
          "ref": "c0e56e88-aa46-4b7c-9384-c9ff08bcc80f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c5e866fd-2165-430f-af9f-9f168d978929"
        },
        "item": {
          "id": "4e45c6a3-0a6a-469b-83f2-aa7a0c43191e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54192368-4523-4a88-8481-4b27e8eb8857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a499adc3-eaa6-43c5-a91f-1e0a5cca0598",
        "cursor": {
          "ref": "5ab504d9-2e14-4cf5-942d-27ac03b9396e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "99156bdb-c484-44dd-a293-4ff46e64ad09"
        },
        "item": {
          "id": "a499adc3-eaa6-43c5-a91f-1e0a5cca0598",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a84de621-9d10-4dc2-9f8c-d4fb128c937f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5539dfb8-cefe-4175-9a81-b2f6a236841f",
        "cursor": {
          "ref": "2a655d9f-df29-4efb-a706-13339bc0eef6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4caa587d-9c33-499f-ad1f-c69aa53af790"
        },
        "item": {
          "id": "5539dfb8-cefe-4175-9a81-b2f6a236841f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8a3783e0-0f95-4498-8934-f7f4c57c1641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dce889-22f4-4a01-bd48-a09577a7223b",
        "cursor": {
          "ref": "86c9d5fa-6f4b-4f3a-ac3a-5a2b94d48ffe",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3018684f-1b33-42d0-a0a7-3824afe3d4ac"
        },
        "item": {
          "id": "b2dce889-22f4-4a01-bd48-a09577a7223b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f8d42a98-fd66-4d14-884a-739b2b3c299f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef9873-c60d-430b-903f-8e1d95a37233",
        "cursor": {
          "ref": "e0c2f485-0168-4e5e-85bd-417637438000",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "36b0278c-ac33-4eed-9de2-03d64d6b5a13"
        },
        "item": {
          "id": "bbef9873-c60d-430b-903f-8e1d95a37233",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f4c85d18-3e6f-4670-aa06-485e26dbe550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bffae33-0b2b-44e2-ba3d-308aaa0a196d",
        "cursor": {
          "ref": "bef70791-4b82-4118-bf9f-406d70273f7b",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4d856d82-eac7-45f5-8925-73f9e317bfdd"
        },
        "item": {
          "id": "9bffae33-0b2b-44e2-ba3d-308aaa0a196d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "db3934de-ef8a-4e4e-abf7-b90602dca4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c560ba28-3123-4689-bb68-39d1bbad59cf",
        "cursor": {
          "ref": "cc34fba3-2406-472b-8bbd-7ae5d7e9d458",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2538753a-de23-4c86-9715-9e01817c3270"
        },
        "item": {
          "id": "c560ba28-3123-4689-bb68-39d1bbad59cf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bafd9d83-23c7-46b1-a3b0-6933187e1368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb5ff34-abbc-48d5-a425-c46a2293ad8b",
        "cursor": {
          "ref": "deaf1622-c663-46a1-b737-6c4437445ba5",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "218b635d-8347-46a2-b963-10dac7f99cd9"
        },
        "item": {
          "id": "7cb5ff34-abbc-48d5-a425-c46a2293ad8b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c94e83d5-c5d8-4a2f-b972-6d7bc2b88425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88897b17-53eb-461b-8682-e3cb0d6ca749",
        "cursor": {
          "ref": "1e559619-e648-4cfe-ab72-20b613e09ff7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c649c3ea-cb66-4dee-b300-7d1d40d8694b"
        },
        "item": {
          "id": "88897b17-53eb-461b-8682-e3cb0d6ca749",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5c623b20-c1a6-43c7-9ba2-6d44f9aa226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee59274e-a826-4d78-9f99-e9a5763a7efd",
        "cursor": {
          "ref": "c589a6fd-3fbd-424d-a517-e17c0a4f561d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d58c370d-32b7-418a-b72e-3f5ef2818704"
        },
        "item": {
          "id": "ee59274e-a826-4d78-9f99-e9a5763a7efd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d1d53bc2-5506-4aef-9c59-e9fc311b7ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265dda94-ec61-4e63-a7ff-a807eb4d9f06",
        "cursor": {
          "ref": "66dd59ef-6b2e-421c-9afb-facb31b87096",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b7f9471e-c33c-4dc0-a6ac-53c8be1bea70"
        },
        "item": {
          "id": "265dda94-ec61-4e63-a7ff-a807eb4d9f06",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "92f8b5fd-0b25-4867-8095-bcecb1c9c6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce065b6-2d9d-4f63-99c9-e5dbc1d81870",
        "cursor": {
          "ref": "76d92e71-46c7-414f-9b1f-1bcaf66e50f0",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e216bf2a-ba86-41c2-8a60-87018ff85542"
        },
        "item": {
          "id": "5ce065b6-2d9d-4f63-99c9-e5dbc1d81870",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f8e2b315-b60a-4238-8fbe-e550f2bcb23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a8f429-1cdf-4e97-8389-ce1dd27f8282",
        "cursor": {
          "ref": "8979eb1f-5543-45cf-8e61-872e9c09baa8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6016cdf5-d284-49d3-b049-1384c6e6f805"
        },
        "item": {
          "id": "e9a8f429-1cdf-4e97-8389-ce1dd27f8282",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "baaf2925-4a4b-4c03-bd50-50ae499414ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea980176-b3a3-4fa3-8d5c-4fafaa896672",
        "cursor": {
          "ref": "d24d0c65-a014-4fef-a1e4-6ee72ac37ee7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "311cea63-4ec5-4763-9de0-4346a2d4b4fe"
        },
        "item": {
          "id": "ea980176-b3a3-4fa3-8d5c-4fafaa896672",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bda247c4-753c-4eac-9747-040b6a5ac6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34574c2-d1e8-45c6-b0ba-29fb6a43485a",
        "cursor": {
          "ref": "60348f46-177a-44fd-bcc3-e97035aacc69",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "182cf79c-be27-48b5-aa6a-59abe4dd6d8a"
        },
        "item": {
          "id": "e34574c2-d1e8-45c6-b0ba-29fb6a43485a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e6a237f6-849c-4e43-9aa2-ad97a72e752c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07a1a9-10d7-45df-9333-ef8032f24c07",
        "cursor": {
          "ref": "75cf7392-e3f9-40ce-a5a6-ea222e1c8428",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "65597aa0-e16c-4933-9970-fcaabe39ea1e"
        },
        "item": {
          "id": "cc07a1a9-10d7-45df-9333-ef8032f24c07",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "821d834d-6806-4821-85fa-80486407e0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d1e813-77ef-4db5-9065-0b061fc9f737",
        "cursor": {
          "ref": "1c53a1ac-252c-4cd1-a9df-2487dcbd5696",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9246a471-2ff1-4870-9503-f9575cba4fdc"
        },
        "item": {
          "id": "21d1e813-77ef-4db5-9065-0b061fc9f737",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ffd0c5da-5c76-4c6e-8f1a-c734e767e23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7928e2c3-74c2-419b-b69b-9d03ffd993d2",
        "cursor": {
          "ref": "b06f8b6e-984a-4c9d-b746-6bf60bf79850",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "de88c213-3293-40f6-975d-ee5bcabe282d"
        },
        "item": {
          "id": "7928e2c3-74c2-419b-b69b-9d03ffd993d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "39862078-3718-46b3-bd05-a37178231cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72172be-14b9-428a-8446-d539c9ea9d7b",
        "cursor": {
          "ref": "6d2cbef2-13ee-49eb-86ad-a1434dfb067e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "40753395-2931-4790-9079-bb47eb0fbe9c"
        },
        "item": {
          "id": "d72172be-14b9-428a-8446-d539c9ea9d7b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "54624aac-e8c4-49e0-8ef5-9b8e02b0a03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1ddf3f-c8b2-4bf3-b70d-c0255e13ec7e",
        "cursor": {
          "ref": "e2989329-4d39-421b-8d1d-dfe9e22d0011",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "baa97bb8-4049-4158-ac9d-6a1d18e5dcfa"
        },
        "item": {
          "id": "3a1ddf3f-c8b2-4bf3-b70d-c0255e13ec7e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "85bb1e17-7891-4d47-bb49-e3880d388c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadf4cc2-5789-4be8-aa52-f1a4b8d5fc3f",
        "cursor": {
          "ref": "c2c49830-1648-4e19-a6bc-2f1900b1a3d0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b0037b60-313c-4719-9a86-042b4941d394"
        },
        "item": {
          "id": "fadf4cc2-5789-4be8-aa52-f1a4b8d5fc3f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a3be1876-fb98-4e2d-8a4d-af0df6bf57d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94be33b-807e-4808-9b0c-186e6bcd35c8",
        "cursor": {
          "ref": "ba56109b-3057-4d4f-9b89-b56402232b03",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b37e2f84-fd27-48ab-b5dd-c03488bffedf"
        },
        "item": {
          "id": "e94be33b-807e-4808-9b0c-186e6bcd35c8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8ee2bdbd-2165-41dd-bb2a-dc5f770f9ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552496f6-eed8-4643-9e21-876ca70fcfe9",
        "cursor": {
          "ref": "6ff3da60-ec56-4761-8f69-88720db52853",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ea3de911-e9b6-4bf6-a673-c2464ad85876"
        },
        "item": {
          "id": "552496f6-eed8-4643-9e21-876ca70fcfe9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3023ef2c-ece5-44a8-9fde-a1278abf0586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e564ab4-b954-4c1d-be34-015fc3037a51",
        "cursor": {
          "ref": "7bb73939-6f8f-4dae-ac33-9cf00042fb94",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "724e6af9-75c2-4e31-8d0b-c53f47d42f1f"
        },
        "item": {
          "id": "0e564ab4-b954-4c1d-be34-015fc3037a51",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "176eff02-0f22-4454-9959-06885b947e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d7bb39-2220-44a4-9f87-577da2de2596",
        "cursor": {
          "ref": "753315b0-1f2a-4ed1-88ab-d4732732bf08",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd4d654d-066b-49d8-8f0b-964a3c7efe0a"
        },
        "item": {
          "id": "09d7bb39-2220-44a4-9f87-577da2de2596",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "72debd16-1a60-4906-b9ed-13c680253c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e81209-671a-4c89-b378-a799dff4f685",
        "cursor": {
          "ref": "d25a1e31-28f2-4af7-a15d-167dcfe09457",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f82d2fcb-7b7a-42e8-a2b9-956c7fdc77e6"
        },
        "item": {
          "id": "b4e81209-671a-4c89-b378-a799dff4f685",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bc1c21b9-7037-435c-8416-48cdb6f71e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae4b025-c833-4dc3-86b1-a7c8fb3c4d20",
        "cursor": {
          "ref": "82024478-73ad-47a4-972d-d86a00515c61",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2107f5f8-1918-49e0-bae7-94b0df2b80d1"
        },
        "item": {
          "id": "5ae4b025-c833-4dc3-86b1-a7c8fb3c4d20",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8b9c0fdd-cdc6-428a-baa6-325ef7737247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdb174c-d7b8-4e42-b4e9-b7e896c86b1a",
        "cursor": {
          "ref": "ed78fbe2-cb3a-408d-97d0-d91ce73c8a8b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3d7004ef-39cb-44cd-b4c4-b088db721bb9"
        },
        "item": {
          "id": "8bdb174c-d7b8-4e42-b4e9-b7e896c86b1a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "896a7b21-a17d-471f-9179-0b6e8bfc5370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44da867b-4d0d-4cd1-a40b-fbfe720b0cac",
        "cursor": {
          "ref": "2c262611-e696-4524-b8fe-f60f544111da",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b5cfc1f-2ba2-427d-8630-9d373cfa5ede"
        },
        "item": {
          "id": "44da867b-4d0d-4cd1-a40b-fbfe720b0cac",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2e183a5a-20eb-4a2f-9e28-41d758d8483e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0cdda4-afc3-4f06-8b2c-778401d4eddb",
        "cursor": {
          "ref": "15150cd5-c2d6-420c-9de5-d260e7a267bc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9ee7092f-2f5a-4664-b4a5-f123abf71e6d"
        },
        "item": {
          "id": "0c0cdda4-afc3-4f06-8b2c-778401d4eddb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ca1c8625-6d7f-443e-a9bd-e3dbaed53a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e9e51f-65e9-48d9-a566-1799303a6031",
        "cursor": {
          "ref": "ab9eb899-964b-4cb6-96e5-97e807ed2a66",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fff531ca-459c-429e-a99a-68a04c950125"
        },
        "item": {
          "id": "a2e9e51f-65e9-48d9-a566-1799303a6031",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3b8633e9-ed3d-4d06-8379-f1d6b6a9de23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b4e888-e5e3-472d-97d0-e05e98365777",
        "cursor": {
          "ref": "167b2395-f6e8-43b9-bdf6-148efea4da41",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dc4424bc-dc45-4749-b9b5-fe3b873ad15d"
        },
        "item": {
          "id": "d4b4e888-e5e3-472d-97d0-e05e98365777",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1e48ba84-c1e6-4540-a1ff-c9536196ae9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89ccc99-fd6f-4cdb-9428-9775e439f282",
        "cursor": {
          "ref": "2fc3464e-92d2-45e7-acff-e443f3e79e77",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6939e1f6-ed63-47e7-87ba-7fb516548033"
        },
        "item": {
          "id": "f89ccc99-fd6f-4cdb-9428-9775e439f282",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8d317432-a216-4747-827a-b4fad44d282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9043796f-bfbb-4f36-acd1-70e29dbabb50",
        "cursor": {
          "ref": "bebf7a4e-ad1b-41c5-8355-4ad61db6f026",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a52145f-4c7c-44a2-91aa-c625aaa9734d"
        },
        "item": {
          "id": "9043796f-bfbb-4f36-acd1-70e29dbabb50",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2e107749-8d69-4008-b934-f571f171731e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e014f6d3-58b8-43db-a2c2-2203108019f0",
        "cursor": {
          "ref": "cbed310c-3173-4140-b168-15198002c73c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "33dff866-6fc2-40b8-87c7-19c510b26c20"
        },
        "item": {
          "id": "e014f6d3-58b8-43db-a2c2-2203108019f0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0c89d109-0c46-4518-90de-461ebda0d184",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757d81da-509e-4a91-8e5c-df91d2874d05",
        "cursor": {
          "ref": "693e6e7f-6769-4089-ab32-bea10cbd55ce",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "892bd9c8-63ef-4119-a8e2-3abc3dcbe29f"
        },
        "item": {
          "id": "757d81da-509e-4a91-8e5c-df91d2874d05",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "064ade68-dd21-43ac-a013-83848b349b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "55e4e792-5431-49fa-80ad-ada23e639fde",
        "cursor": {
          "ref": "40c17e49-8ac8-40e5-9163-3ab6f9d5ad84",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cf88f722-ecd7-44a4-acc0-287893597e20"
        },
        "item": {
          "id": "55e4e792-5431-49fa-80ad-ada23e639fde",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d5592cc5-90b2-4e9f-8332-fe09f404c56b",
          "status": "Created",
          "code": 201,
          "responseTime": 2616,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda34c62-b70e-44e5-9e7b-d4f771a3be04",
        "cursor": {
          "ref": "ab520040-a77c-437b-8923-fdb83dbe9dd8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ed00549e-8edb-402e-9b34-555895161b87"
        },
        "item": {
          "id": "bda34c62-b70e-44e5-9e7b-d4f771a3be04",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "701dfdc0-96b5-4616-9b44-3aa1b6ad11b1",
          "status": "Created",
          "code": 201,
          "responseTime": 2035,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b195b97-e38d-4011-8bc4-e78f2a7ba3fc",
        "cursor": {
          "ref": "778ea800-a124-4d4e-98f6-68181cbea3f0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2b584c8b-5453-47f9-b30d-84a976015073"
        },
        "item": {
          "id": "3b195b97-e38d-4011-8bc4-e78f2a7ba3fc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09a0258e-7067-4adc-810f-e58efbbb82f5",
          "status": "Created",
          "code": 201,
          "responseTime": 2114,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45a18e1-b1e1-459e-a97e-81d9521c6ada",
        "cursor": {
          "ref": "bc729404-d24a-430c-8b0c-1ac9ab068fec",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "39b66105-31d1-4234-aa4b-606ed2dc5b7b"
        },
        "item": {
          "id": "d45a18e1-b1e1-459e-a97e-81d9521c6ada",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4e65b35b-c078-4de5-a700-70e2b6e5943e",
          "status": "Created",
          "code": 201,
          "responseTime": 2468,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f332f48-ec85-4d24-bca6-5c75d7bdb767",
        "cursor": {
          "ref": "48aaebbb-17a1-4913-973e-0f86e000e479",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b82109b0-1fa8-4d1e-9208-6bb33b90d9c9"
        },
        "item": {
          "id": "2f332f48-ec85-4d24-bca6-5c75d7bdb767",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "327d32ee-5ac5-4ba2-983a-0bb3a2164536",
          "status": "Created",
          "code": 201,
          "responseTime": 2043,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "27936a9c-6c0c-4eef-8cba-ba6cf561ab22",
        "cursor": {
          "ref": "add54376-73af-4554-9bdb-89be218ffdce",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f1a5b2cf-d80d-49f2-9207-476c3732f91d"
        },
        "item": {
          "id": "27936a9c-6c0c-4eef-8cba-ba6cf561ab22",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "eaad4065-f9e9-4e8c-8c00-fd235a0dcc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ff0ad8fc-d5d1-4c6c-ad69-077b72054ef7",
        "cursor": {
          "ref": "ef468fc8-ebec-4ecb-96a7-b5c0300afa5c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6ca4be4b-623d-4626-9a2c-d1b118de1ee4"
        },
        "item": {
          "id": "ff0ad8fc-d5d1-4c6c-ad69-077b72054ef7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "68e0abe5-30a5-48b8-8f88-feaded595beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e945b180-b128-4463-a9e2-d580050b23d0",
        "cursor": {
          "ref": "fb6283fd-d390-4335-9056-a2c1b2cf6ed4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "07592bc2-f591-4e89-a23e-18efda674b1e"
        },
        "item": {
          "id": "e945b180-b128-4463-a9e2-d580050b23d0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bcc09342-c783-48c8-b716-987145b5363a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3d73b1-3ecb-4a2f-8952-5c874d044862",
        "cursor": {
          "ref": "0a07dee4-8e1d-4625-93fc-57aa70e4ea9d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c3d4a59a-8e93-4b37-8b61-8e2c65f7066c"
        },
        "item": {
          "id": "cc3d73b1-3ecb-4a2f-8952-5c874d044862",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a9adab8d-f0a6-4cdb-ba21-0bf173579d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fbd70f-d486-4843-89de-536212e67203",
        "cursor": {
          "ref": "ea8c7b01-dd43-4679-95a4-3f76c50ec2d5",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6aad1812-8032-4ff7-9d53-772a25714d7e"
        },
        "item": {
          "id": "07fbd70f-d486-4843-89de-536212e67203",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4bdc52fd-0ed9-4e90-986d-1a79bf7ddd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92405ecb-0321-4af8-9a08-b3c69cbe197a",
        "cursor": {
          "ref": "ab657a02-d6bd-437e-8941-9e3e28749253",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6a666133-4f35-4499-be93-19229d9f82a9"
        },
        "item": {
          "id": "92405ecb-0321-4af8-9a08-b3c69cbe197a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2398ac28-fff1-422b-8a9d-2ff9c58f5130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9c2d79-8698-4ad4-a487-99609766bff3",
        "cursor": {
          "ref": "7e798a73-bf54-4c4b-9135-5bbf3907fe82",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3ba47bcf-3215-43e8-aaa8-c9082ba31d92"
        },
        "item": {
          "id": "3b9c2d79-8698-4ad4-a487-99609766bff3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8b1ed607-3de0-4214-a0ae-05c66f995b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53935bc-eca9-444a-bc69-d1067a0d1872",
        "cursor": {
          "ref": "2a6d4ce4-aff9-4074-937f-31d549fbc696",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b73d7515-8192-45f0-990c-631f6147c550"
        },
        "item": {
          "id": "a53935bc-eca9-444a-bc69-d1067a0d1872",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d341841-51f0-408b-ba08-9a7680563291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2999298-f5ae-47c7-83fe-befbbc0007c2",
        "cursor": {
          "ref": "621d5fc0-9f14-48bf-b1f1-f5961a49993a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "11b66282-931e-43a0-a8a9-e0ceaaecfbac"
        },
        "item": {
          "id": "f2999298-f5ae-47c7-83fe-befbbc0007c2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c147658b-fbc3-4b94-bb2e-de3d3976cb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9740a5-e3db-4490-92bb-b1d50539558f",
        "cursor": {
          "ref": "319c0675-e3e7-4ce9-bec1-b52c48bca42b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "26cf46a6-3e23-428b-9298-1b29f1c71495"
        },
        "item": {
          "id": "ab9740a5-e3db-4490-92bb-b1d50539558f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c6378ab4-9e70-4bf7-8c39-d7257755e9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a60e481-f955-4955-aa42-67535b349550",
        "cursor": {
          "ref": "10c5a856-bafc-4b76-839e-716df06e0331",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0a7dec69-4e12-4f6c-a96a-941ec08e34ca"
        },
        "item": {
          "id": "8a60e481-f955-4955-aa42-67535b349550",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ddc6993b-0774-473f-a11d-03edf7f0c770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7931c12-9ba7-44e9-9fc4-30b6518f45f2",
        "cursor": {
          "ref": "b378b275-0903-4c41-bc91-90511f063762",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "950df05b-9b4f-415f-941f-587b3e00ef19"
        },
        "item": {
          "id": "b7931c12-9ba7-44e9-9fc4-30b6518f45f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3dfc2210-79c5-41f7-a4c1-38f10d570976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec809265-57c9-499a-9c48-ed81d8d5e253",
        "cursor": {
          "ref": "1799cf2c-42f4-4d5e-b723-3dd62145187d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a0c4d2ed-4dcc-47d4-b7b5-b72cdbea4d7a"
        },
        "item": {
          "id": "ec809265-57c9-499a-9c48-ed81d8d5e253",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a8331d35-3818-4743-9b30-3408e08a1aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222071bf-6fd5-4b07-8729-00cc205a0da3",
        "cursor": {
          "ref": "a038d015-8ff7-4a0c-886b-317380e8d512",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3e00364e-f5c1-4ddc-a7da-6b0468012e41"
        },
        "item": {
          "id": "222071bf-6fd5-4b07-8729-00cc205a0da3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7d8b5864-f56e-40d5-be45-200bca10e683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d434bc6-b1d4-40a4-812c-70f2ad57aac7",
        "cursor": {
          "ref": "37ca6251-c812-4408-af32-335f290889d0",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d5801b85-0d5b-4678-a786-d9c91ee93b10"
        },
        "item": {
          "id": "0d434bc6-b1d4-40a4-812c-70f2ad57aac7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "555b3af4-6197-47f1-9f76-7c64af8b9cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec680e53-94d9-49c3-9d10-5a334cd547e5",
        "cursor": {
          "ref": "96bdd4e7-5873-49b8-b0d1-817e4324116c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f487240-7fae-4d8c-8958-08556541d868"
        },
        "item": {
          "id": "ec680e53-94d9-49c3-9d10-5a334cd547e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "77ade79f-7869-4535-894e-ea73dad42499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa7af9-5caf-48d3-878e-66b438a992a8",
        "cursor": {
          "ref": "cd65abb3-49a5-47c9-b589-4b579c036378",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a8aee89-5752-4619-b30b-091d82b8b55c"
        },
        "item": {
          "id": "39aa7af9-5caf-48d3-878e-66b438a992a8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e1eb600d-d74e-4af5-9be4-47759e2246b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17960e15-b248-4083-8f3b-79a1582aec6e",
        "cursor": {
          "ref": "55f28220-0e7e-4515-9d5f-c9a4c335778c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7b692092-40ae-48f3-83f5-78d69a327616"
        },
        "item": {
          "id": "17960e15-b248-4083-8f3b-79a1582aec6e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb269aaf-882f-4254-a00b-baad9e4e4e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d7b2e2-34d4-433d-b49a-1b452d173910",
        "cursor": {
          "ref": "ea8b51fa-9b71-4638-b065-69c7bc799794",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0324ada5-77e1-41e5-8e91-fc9b607c86ed"
        },
        "item": {
          "id": "36d7b2e2-34d4-433d-b49a-1b452d173910",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ca36b84-920d-4a5a-9e31-fbda9ddab4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecf526e-9e2b-4548-a6ff-112f8eb688fc",
        "cursor": {
          "ref": "0543c369-ac16-4a8c-8514-b6fd4dcf07fd",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72d3be86-68d2-49f2-89b2-4d9ed1f3b796"
        },
        "item": {
          "id": "4ecf526e-9e2b-4548-a6ff-112f8eb688fc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e3f40b2f-d773-4be3-b904-154c6b42a33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae83c40b-23e8-4b67-ae2a-0e1ceac41379",
        "cursor": {
          "ref": "77a70c74-b9df-41ce-95d5-21e2884ccfb8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c82b7c12-df85-4d39-9af1-9f4818ee117f"
        },
        "item": {
          "id": "ae83c40b-23e8-4b67-ae2a-0e1ceac41379",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5bdf120-a2c6-45c6-84c4-bef745d063be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a31af2-f267-4615-b94b-36aa58af511b",
        "cursor": {
          "ref": "e55bf460-4412-4eab-b200-7f1eb41ad87c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7670fea1-41fd-4039-b68a-7218ce9acf89"
        },
        "item": {
          "id": "40a31af2-f267-4615-b94b-36aa58af511b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c2c23311-b3af-4d52-9a65-f21ed918c94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cfee2c-886e-46be-aac8-b930fc37249f",
        "cursor": {
          "ref": "2f542df3-1370-414c-b30c-009a8189e8f4",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "add783a4-104e-4fe5-a459-7c2520b59b57"
        },
        "item": {
          "id": "23cfee2c-886e-46be-aac8-b930fc37249f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0d9996df-0061-419f-a554-dabc6e2a3ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a0ac97-1a50-4f1d-a521-7a11d59e5237",
        "cursor": {
          "ref": "e6b1b30f-93d7-4aeb-b7f3-76a60e4abb67",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "23c5b28b-e0fd-4b3a-b55a-2bbaa1622add"
        },
        "item": {
          "id": "32a0ac97-1a50-4f1d-a521-7a11d59e5237",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "368a93a3-c46b-43d2-a442-034e4dda5ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b16d773-69a9-4855-84c5-d9fa3e784850",
        "cursor": {
          "ref": "416ab1a5-8f6b-4102-b5dd-163151621579",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8336000f-cde4-491a-8f57-48e06addf474"
        },
        "item": {
          "id": "3b16d773-69a9-4855-84c5-d9fa3e784850",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a58cbb1b-86d2-41b9-989b-2a3e498dc84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847f2175-bac2-4e45-a7f4-1be2f1734663",
        "cursor": {
          "ref": "a33917ab-2868-43e2-b20a-ca7ab347a963",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ec3a6024-a1e5-4998-93e8-618d9ca071cd"
        },
        "item": {
          "id": "847f2175-bac2-4e45-a7f4-1be2f1734663",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6d87b78f-a139-486c-85c6-252332b0402c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd4b967-e0d8-4fa0-8f4d-446f8ae99ebd",
        "cursor": {
          "ref": "2454b8f4-7332-4b57-9963-9db393ffe835",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6bd48a6e-2334-495a-afd1-d7d91d9bdf32"
        },
        "item": {
          "id": "3dd4b967-e0d8-4fa0-8f4d-446f8ae99ebd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "605ee19b-723c-4e46-b7fb-df31888b0cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23080d0e-414a-4586-a4d7-2b1dd4441568",
        "cursor": {
          "ref": "36f4710d-e543-497b-8ae5-7393b507c22d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8621d01b-56da-470c-8015-4cc1d9a18dc6"
        },
        "item": {
          "id": "23080d0e-414a-4586-a4d7-2b1dd4441568",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c1396cca-2417-4df3-99ce-62cd6c273f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decbe05d-d2c8-4883-8df5-94f7b09529f2",
        "cursor": {
          "ref": "d2212d11-2d5f-441a-b8af-4c8b72b8ffd0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b58699e5-7232-4edd-8384-b30b8b7cbcc2"
        },
        "item": {
          "id": "decbe05d-d2c8-4883-8df5-94f7b09529f2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ae4e1629-1cf9-494f-a8d5-861838567a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200bb422-c6a9-4d88-81c4-d7c79242b19f",
        "cursor": {
          "ref": "17a930f4-4c5e-4e2c-8db5-6fe8dd1fd15c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5b1a1ee2-c976-4e74-8c28-12c1dba4cd44"
        },
        "item": {
          "id": "200bb422-c6a9-4d88-81c4-d7c79242b19f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b4098a10-fc75-4b1d-980a-c99802a0f45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a65839b-a476-4cd9-9ce4-10a06a390dc1",
        "cursor": {
          "ref": "086dd91b-f574-4221-b689-a41d42bfb9a5",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1fce3ab6-cd50-4764-9252-24125b8d439a"
        },
        "item": {
          "id": "9a65839b-a476-4cd9-9ce4-10a06a390dc1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c68a88b-58de-4b0e-946a-6b80f600364c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1d6f4d-543e-4f74-87bf-a49a1b2bbf71",
        "cursor": {
          "ref": "5e4f3f07-1649-451d-bd01-0c5b5bd11c2a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "14e33dbb-9525-4009-bc9b-e15d4c985196"
        },
        "item": {
          "id": "1a1d6f4d-543e-4f74-87bf-a49a1b2bbf71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0d34bab8-1d50-4629-9456-62c622b1f50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679ba6a3-bf83-4e0a-aef1-6e4929b70ef5",
        "cursor": {
          "ref": "6af77d7a-ba42-4c48-b49c-6056d9c9d44a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9fe8e01f-e4ae-4e33-a8e9-bc7f7aa0c4e3"
        },
        "item": {
          "id": "679ba6a3-bf83-4e0a-aef1-6e4929b70ef5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e658861e-b633-4a7a-88bb-d3cffb37142f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1560aad3-0159-42a2-b011-acf114fd6d75",
        "cursor": {
          "ref": "88ba9d15-b97c-4dfd-9707-7bc1229007f4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "57f5fc05-dc01-483b-84fe-3d2c0fbf7949"
        },
        "item": {
          "id": "1560aad3-0159-42a2-b011-acf114fd6d75",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f44af0b-4504-4982-ad3f-4b11c0dc7905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53620eae-0e8b-4174-b7db-239fe2da208e",
        "cursor": {
          "ref": "90746e4c-7bc5-49c1-9c9c-bdfafbd7bf8b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8e24fc6c-db60-47fa-8d00-2adb59110edf"
        },
        "item": {
          "id": "53620eae-0e8b-4174-b7db-239fe2da208e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d23b1ed8-ae7b-4a75-b2b5-4d44c96f355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f235a339-fadb-4f93-9a0e-4d60755ca05d",
        "cursor": {
          "ref": "20bbb311-3acf-4381-a771-3400b99a9e0f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "837f4e7c-0a5c-4a97-a49e-ebc2b07ce1f7"
        },
        "item": {
          "id": "f235a339-fadb-4f93-9a0e-4d60755ca05d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "38e8172a-248b-4843-98d9-7811b431dd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665614dd-dacb-47c5-9e36-ba75dd2658e9",
        "cursor": {
          "ref": "e095895d-8f18-4f6b-b3e6-a153a2a530e7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3feabed9-c305-4e0d-b8cd-0413a14ab198"
        },
        "item": {
          "id": "665614dd-dacb-47c5-9e36-ba75dd2658e9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d6b1bd3-b2e0-4fdc-860c-6acfb78bdbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2a8ffa-f054-47c1-a07b-7d52f11f8d8f",
        "cursor": {
          "ref": "3266b69f-adb9-4fb1-a192-507e8b50c541",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4bd8e857-e8a1-4381-aeac-c63989dd9963"
        },
        "item": {
          "id": "de2a8ffa-f054-47c1-a07b-7d52f11f8d8f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3605a7df-a838-4d4d-9ccb-b98c401bf986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cecfcbf-4c4c-4ece-a03d-2bd009bb4a7c",
        "cursor": {
          "ref": "f5d9f549-998d-4305-a4dc-2ec0ea91ec64",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9a366b72-d312-4f63-8dd5-ad023ec775af"
        },
        "item": {
          "id": "0cecfcbf-4c4c-4ece-a03d-2bd009bb4a7c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1d791d01-ff81-466f-8e73-3843d698beeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47566c9c-3a48-4d57-92c9-8ed804cf58ff",
        "cursor": {
          "ref": "f7fc5208-c069-44cb-8ac7-1fa07f199f23",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2bc841b1-458e-4e9c-9f66-5f499bdc02b4"
        },
        "item": {
          "id": "47566c9c-3a48-4d57-92c9-8ed804cf58ff",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aacad529-9b9e-4da8-a890-9147613707d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c18e34-3100-428a-bc73-5b8d9e324a62",
        "cursor": {
          "ref": "5a8c6650-6d83-431f-8b97-088247c8047e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d1b7d8f7-c3cc-4e98-8137-ecfb50262bce"
        },
        "item": {
          "id": "c5c18e34-3100-428a-bc73-5b8d9e324a62",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "24395846-48e1-4411-b776-675ef7a85673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d919512-9b2e-4d78-a359-e8478da0d55c",
        "cursor": {
          "ref": "9981aaa0-98ce-4021-8aa9-fb0691d4c2c5",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bd3c5f2f-1301-49d6-af1e-50c87009fab7"
        },
        "item": {
          "id": "2d919512-9b2e-4d78-a359-e8478da0d55c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f0f95574-3c91-4796-ac52-efef51871cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2a42ed-3d52-459d-8e50-c7326c5627cb",
        "cursor": {
          "ref": "b1f7c680-a615-42e6-8c81-f4fb9d249677",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1cb49ac2-2a72-43f8-93c7-d8614e81dd42"
        },
        "item": {
          "id": "dd2a42ed-3d52-459d-8e50-c7326c5627cb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "53d6421e-c895-422f-acdd-e37a0d8ab5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9952b1d5-3a26-41c2-bb1b-0a9750708b06",
        "cursor": {
          "ref": "1ee2c0c9-48e9-4809-94fa-da2d4476fb20",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5811e378-63d4-4c19-ade4-16313febd609"
        },
        "item": {
          "id": "9952b1d5-3a26-41c2-bb1b-0a9750708b06",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "77f64eed-27b4-4171-9cc5-348ec803875e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46032fa-3e32-4809-a1a4-87cd9f19a1dc",
        "cursor": {
          "ref": "de044f07-04d8-4688-a245-594e955d9daf",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bc87be8f-681f-4ee0-821b-50fe27953ef3"
        },
        "item": {
          "id": "a46032fa-3e32-4809-a1a4-87cd9f19a1dc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d78f8685-0182-4f03-b193-5abeb5c1956a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24458343-be30-4461-8642-1b4675b130f2",
        "cursor": {
          "ref": "6a69d51f-9314-4db4-9e99-5d5fc9f1227c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3e36000f-1be1-457b-98b1-d98f989631b1"
        },
        "item": {
          "id": "24458343-be30-4461-8642-1b4675b130f2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "072fc60e-691c-46cb-8927-05e1a4a4bb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9986b562-fd99-48e4-b92f-05930cbcae6d",
        "cursor": {
          "ref": "f0fdf7bd-526a-477a-8af1-e4be17287ae5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "40711cbf-a4e9-4995-8000-fb442df5deed"
        },
        "item": {
          "id": "9986b562-fd99-48e4-b92f-05930cbcae6d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0297aed-c98e-4fc1-b7db-4dd09d97d300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd0fa9b-de00-4abb-937a-288c8ed3acb4",
        "cursor": {
          "ref": "a2da7cd1-1015-4c6f-86c6-df3aea26c902",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dfef9f13-6407-49ca-b813-4fd34db6a287"
        },
        "item": {
          "id": "acd0fa9b-de00-4abb-937a-288c8ed3acb4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3abd48dc-5cc0-42ed-bdf6-c96b5b698fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e2e4c7-c3d3-4d4a-a5ef-7ee002a20d08",
        "cursor": {
          "ref": "a7cd93ad-4b70-4996-a3b5-48a52397f7ef",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7a216b5b-8c5f-4198-a926-162ce7f41624"
        },
        "item": {
          "id": "69e2e4c7-c3d3-4d4a-a5ef-7ee002a20d08",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7e37ad1a-5f93-4101-85a0-7ab19a461ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373939b2-f97e-4f1b-bc41-339a42f11506",
        "cursor": {
          "ref": "06447488-4dfe-4ac9-9b9d-4c21e20d6a13",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "421323de-818c-4358-b3e9-1a2acb5b925e"
        },
        "item": {
          "id": "373939b2-f97e-4f1b-bc41-339a42f11506",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6cfeff6d-4f81-494d-990d-7ddbc8ef36b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2a737c-c0e2-4ebe-8c0e-6495ed1ddfaa",
        "cursor": {
          "ref": "39272f01-e99b-4fce-90cd-9aee542df6c9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "84050514-abc8-4288-ac2a-839592cb4ded"
        },
        "item": {
          "id": "bd2a737c-c0e2-4ebe-8c0e-6495ed1ddfaa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6e1a5882-1c74-4d99-8b39-a3da75038484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57a0d43-1dd9-4d41-bd14-237e1a1b2ca2",
        "cursor": {
          "ref": "241d4726-3b60-41f1-8e72-5ba383f1c04c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b3ee923d-8f03-41ba-8ac1-a9852dbbc719"
        },
        "item": {
          "id": "d57a0d43-1dd9-4d41-bd14-237e1a1b2ca2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "46c19aca-7f14-4d75-b2de-4f477c94fc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2109cff6-3762-4a0b-999c-27d236bb7f08",
        "cursor": {
          "ref": "6958b3a2-6670-4fef-baf9-b2253c7ca737",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ed24e231-be37-4cff-9876-588034e389d6"
        },
        "item": {
          "id": "2109cff6-3762-4a0b-999c-27d236bb7f08",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "157d78f4-7391-4fea-95d3-63e7dd45ee76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae03d3cb-d09b-4470-a1f0-d90d4895a096",
        "cursor": {
          "ref": "0af1c99e-fc87-4614-8df4-69fae748b402",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bd6cf794-ea47-4790-85a7-4e143130602b"
        },
        "item": {
          "id": "ae03d3cb-d09b-4470-a1f0-d90d4895a096",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7fbd33e9-ea3f-4656-838f-c09345e6e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f761e0-3986-4efe-9d3e-3bfa8c5687d5",
        "cursor": {
          "ref": "908880f9-c0bf-433f-ab6d-42a7e3bfdcf2",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2c80599a-a78f-4d38-9634-822a5bbd49e6"
        },
        "item": {
          "id": "72f761e0-3986-4efe-9d3e-3bfa8c5687d5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e01328f-abeb-4cd9-9884-86028e6cf250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5812d90e-aecf-4a0e-9f55-42180bab72b9",
        "cursor": {
          "ref": "feb3c55e-63e8-4f19-b424-915ac776bcd2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "615da97a-af19-4524-9181-744a27bee57f"
        },
        "item": {
          "id": "5812d90e-aecf-4a0e-9f55-42180bab72b9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "09a6f63c-8c62-4d61-878b-9560a5506ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d242c1f-2576-45b8-806d-a07d517458c7",
        "cursor": {
          "ref": "d04dd332-2518-456a-8797-21b678c4258d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "22c820a2-98fd-4155-952a-c2900f358b53"
        },
        "item": {
          "id": "0d242c1f-2576-45b8-806d-a07d517458c7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7e3c0fcd-907e-46c1-afc5-1b935117f152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1b1957-d319-4b65-bf80-238bb903eab9",
        "cursor": {
          "ref": "3c1e3db3-51e7-47cd-8294-d8d66e99b5bd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ed53603d-a20b-41a6-8818-4741131b5f5a"
        },
        "item": {
          "id": "7c1b1957-d319-4b65-bf80-238bb903eab9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "22516984-baf9-4087-b7fd-87b68cde1433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df27fff-891a-4072-afee-460a7c41ffb7",
        "cursor": {
          "ref": "2d3702df-8071-48c4-9dda-1c6488870b85",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6b4ef105-0421-418c-9de9-a6469598b4fb"
        },
        "item": {
          "id": "4df27fff-891a-4072-afee-460a7c41ffb7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fa2792b4-bdaa-4022-ad95-12975360c47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7aa777-0fc9-4a78-9ac8-804d4518f15f",
        "cursor": {
          "ref": "75602f77-4cca-4640-b81b-bded1fd01869",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d1354184-aebd-48db-9df8-b7970b7cc678"
        },
        "item": {
          "id": "9a7aa777-0fc9-4a78-9ac8-804d4518f15f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "498a1df2-732f-4cf3-b954-75b475ade380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f61a0e-a4e7-40eb-8036-134f298fb7e2",
        "cursor": {
          "ref": "1ad3b403-b431-40d9-8966-49fe649b9d78",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d3336a7-99ef-47a3-8af6-0e653563bd1c"
        },
        "item": {
          "id": "a5f61a0e-a4e7-40eb-8036-134f298fb7e2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed8a3625-15ef-424e-8893-1c0688f05920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acd2f02-d3aa-4cd8-b6c7-cd067bff3c17",
        "cursor": {
          "ref": "d52a6549-cfb6-439e-94eb-629242704827",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fc07448d-10a0-4a5d-9ca8-1a09d3b1fe0d"
        },
        "item": {
          "id": "6acd2f02-d3aa-4cd8-b6c7-cd067bff3c17",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eb1e6c6c-85b5-4a57-9d75-69936519cc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470de0c6-c77d-4335-b1e2-d947219512bf",
        "cursor": {
          "ref": "9c5728f5-953c-45b0-8aa2-abdae334aaea",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9b909f3f-097c-4185-b506-49becfa061a5"
        },
        "item": {
          "id": "470de0c6-c77d-4335-b1e2-d947219512bf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b9d58988-0aae-4af9-910a-ebc87dacebec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c649d1e8-af14-4ae7-9ff3-f306f55aca9d",
        "cursor": {
          "ref": "fb09fbe7-dca1-4622-916f-f725e59827e5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d3f6a263-dc69-4468-b8cd-5c3a09da76d5"
        },
        "item": {
          "id": "c649d1e8-af14-4ae7-9ff3-f306f55aca9d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c23153c-d3b9-48ae-8dc5-586887168b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c681985-27fd-4749-9fb0-81766ad81f6b",
        "cursor": {
          "ref": "c13eabcd-e343-4a7f-abf1-7ee38988941b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4bd7a2af-1b61-4f58-b2de-79deed64646f"
        },
        "item": {
          "id": "2c681985-27fd-4749-9fb0-81766ad81f6b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3a0b8dd6-91dc-42d0-b041-7a40f07a4171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820fc489-a457-4d62-8bfb-8add0c1327b7",
        "cursor": {
          "ref": "be44802f-af60-4c20-a3d1-90a55cc87909",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ce7a9572-11b9-49e6-8381-dbcee97e4ad3"
        },
        "item": {
          "id": "820fc489-a457-4d62-8bfb-8add0c1327b7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c2206369-bcca-4d6c-95c5-958a0836a2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c8a5dc-ce59-405d-8285-fa672618a2db",
        "cursor": {
          "ref": "09fe6b1b-5a76-497c-a9fd-e8550d5427a4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1dd5e27c-f165-4777-971a-58d95a7c2122"
        },
        "item": {
          "id": "f0c8a5dc-ce59-405d-8285-fa672618a2db",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ee88e70e-bbc5-4c38-85da-f58c63a5333f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66909e-fe0b-4abf-a3a7-92addd165c29",
        "cursor": {
          "ref": "9743e9fa-31dc-4b1b-b893-60951d933afc",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fbf0b4fd-1430-41c2-b347-ece3baf09cfa"
        },
        "item": {
          "id": "4a66909e-fe0b-4abf-a3a7-92addd165c29",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2bab466a-bc0f-451f-9561-4b8ae6025d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07612d6e-8530-4311-9cd4-c05e788eac36",
        "cursor": {
          "ref": "4e528dc6-7c1d-4f36-ad1c-6e50426c51c1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b3bbc4c7-dbcc-42aa-9851-e7c1ad618205"
        },
        "item": {
          "id": "07612d6e-8530-4311-9cd4-c05e788eac36",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fd769740-b800-46ec-879b-2d652fe71c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e2adb2-5702-4f70-a35b-9005451ae134",
        "cursor": {
          "ref": "843c1f04-f42b-49ca-ad13-79b783586780",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "28ace6d5-e9d5-446c-9c79-3dff0e13e956"
        },
        "item": {
          "id": "15e2adb2-5702-4f70-a35b-9005451ae134",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "66813f83-e003-4343-ba75-0f9f7a329892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c91bae7-2f85-418f-a874-0dc432385295",
        "cursor": {
          "ref": "7211b10e-1c9a-4c01-a8a5-a0b03af242c9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fb60e01b-6b3b-4043-ad16-901923a6f194"
        },
        "item": {
          "id": "6c91bae7-2f85-418f-a874-0dc432385295",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "49da12bb-fb72-466b-b7eb-b4aebbf9a872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bbb7bf-03f3-4c72-950a-3636ad4452d9",
        "cursor": {
          "ref": "4f467189-56c1-4dde-8bbf-44908fda231f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5d08a055-6ed2-4e15-b17b-b84878af886e"
        },
        "item": {
          "id": "08bbb7bf-03f3-4c72-950a-3636ad4452d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "602e94ec-cae1-41fe-970a-e5ba1eb96ccf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c14baa-dc13-45a2-849b-650c1885a201",
        "cursor": {
          "ref": "d66ea1f1-7ed0-46d7-b93b-4393f5518984",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c69282ad-068f-46ac-a422-68728ef7ac6b"
        },
        "item": {
          "id": "f9c14baa-dc13-45a2-849b-650c1885a201",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0edb56db-3783-42a8-947d-ed785d2b8812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fb7781-ad76-4618-b9c3-ff75b405645f",
        "cursor": {
          "ref": "0be91c95-cbed-4d62-b6bf-74d7718cd3bf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e2d7ad15-1fa4-441f-8f4b-f100963d59c7"
        },
        "item": {
          "id": "34fb7781-ad76-4618-b9c3-ff75b405645f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c6b06e6b-9840-44ef-b747-01061df49cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93e976e-f91d-43b7-8c7d-3c6505e0f0a0",
        "cursor": {
          "ref": "ef3edf65-ba10-4ac2-9eb5-75aa2fdf3ef6",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2850d1fb-082f-47af-aee2-86b8d8616b59"
        },
        "item": {
          "id": "c93e976e-f91d-43b7-8c7d-3c6505e0f0a0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0239256a-d46b-4ce9-a873-4899ff08a3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317afd21-d8fc-4788-9c05-0b8b5d2e547e",
        "cursor": {
          "ref": "597cf77b-9042-4469-b4f8-8790d9183018",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e67fa457-4b93-46cc-8292-2605f39ce080"
        },
        "item": {
          "id": "317afd21-d8fc-4788-9c05-0b8b5d2e547e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "84800dae-b320-49a5-ab6f-172fc29e98dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8faedd-38ee-4f55-a1cd-848070045385",
        "cursor": {
          "ref": "12b1f6ae-2797-44ab-a029-44fb23522bb1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6d5f1b29-8cb0-4896-b8e0-807110339809"
        },
        "item": {
          "id": "3c8faedd-38ee-4f55-a1cd-848070045385",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9f74173f-4d5b-43d6-843c-e605b22fafe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdfa3c0-e2f6-44af-89b8-6f753cfd910c",
        "cursor": {
          "ref": "330b81f1-dbf9-4ed0-9155-4a381ea4fdff",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "19c5bf6a-6746-494a-98de-bccf56907203"
        },
        "item": {
          "id": "8fdfa3c0-e2f6-44af-89b8-6f753cfd910c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d32ac222-af34-4d94-9871-c1db1fa80ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267dcdb9-7db1-47c4-8785-821b2d572183",
        "cursor": {
          "ref": "36fe600a-4b24-48c7-af00-9de231852583",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ac95cae3-f96a-4667-8237-322f067617ae"
        },
        "item": {
          "id": "267dcdb9-7db1-47c4-8785-821b2d572183",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f6c7beb8-c037-4c61-999d-8db5c1071a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46638133-b815-4c26-b044-28249f63115b",
        "cursor": {
          "ref": "9d3feae9-7679-4131-80b4-9a423586c50a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "22509170-b761-455a-98d2-6c0f5e58ff2e"
        },
        "item": {
          "id": "46638133-b815-4c26-b044-28249f63115b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e7ac5875-faa8-406c-8eea-d2e0f06afecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42ed6ab-f755-4979-abc0-3af1aef08e1e",
        "cursor": {
          "ref": "5c1adc35-f6a3-4a1b-bfb6-8876080f47ce",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2c7a0000-b17f-44db-b53a-5a9b859edcbf"
        },
        "item": {
          "id": "a42ed6ab-f755-4979-abc0-3af1aef08e1e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "687d8a44-fc52-4e68-98c8-6f89f8539208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43244908-c4c3-4054-91ff-21b98e1898c1",
        "cursor": {
          "ref": "d42f8d04-c499-4cc5-8878-e628ef25d7b0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a1fbb1e8-5df4-4527-9a58-47f3b78a811c"
        },
        "item": {
          "id": "43244908-c4c3-4054-91ff-21b98e1898c1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "308ee04a-c1aa-4676-b92b-6f9a881434b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d80d44-ee2d-45bf-9f36-51966fc8d459",
        "cursor": {
          "ref": "de76ea1d-e50a-4105-951c-042fbfa98e8e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e866a9f7-a13f-431c-83c5-ff49eda7b821"
        },
        "item": {
          "id": "25d80d44-ee2d-45bf-9f36-51966fc8d459",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "20ecfaa8-c880-491b-8014-907c8d0c1a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0592be77-79cc-4db6-ac81-090078e60c75",
        "cursor": {
          "ref": "11c38d95-45bf-4659-98ab-3a1471c7afe8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a587d43a-7e66-4a18-b2ca-ac84b49739ce"
        },
        "item": {
          "id": "0592be77-79cc-4db6-ac81-090078e60c75",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4810215a-e635-4ea6-a34b-5bb5864e220f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615a3093-50d5-4c22-b40f-e9d1bda6e262",
        "cursor": {
          "ref": "4e18508d-1806-4b72-ae06-9398d80d10ec",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1f945a64-54b6-4b3d-a351-858c737390ff"
        },
        "item": {
          "id": "615a3093-50d5-4c22-b40f-e9d1bda6e262",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ab3830e5-5c85-4217-be36-139cb07c2117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083e890e-8e88-4ab9-83df-db2843197241",
        "cursor": {
          "ref": "1728ea62-b5ec-4d1b-bd77-e01ac7668d9e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d24a58ae-9fbe-49b4-a38f-636a0e680c08"
        },
        "item": {
          "id": "083e890e-8e88-4ab9-83df-db2843197241",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "24e8e354-6854-4b42-972f-bd6ecc7242c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449c4af7-af27-4ac4-8a46-338906d12fbb",
        "cursor": {
          "ref": "88fc2f8e-bfcb-4b2b-95b1-6d1576340dc0",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "703b5589-3355-447d-84d4-7f4811ed5835"
        },
        "item": {
          "id": "449c4af7-af27-4ac4-8a46-338906d12fbb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "221de486-ebbc-4745-bdd9-956e0bc545fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b731ac5-9dd8-480b-b4b3-701e7279af71",
        "cursor": {
          "ref": "0eae5201-fcf9-4839-8af8-3e725097df98",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6a361f90-8489-489e-bbe7-a3a2071dfc40"
        },
        "item": {
          "id": "4b731ac5-9dd8-480b-b4b3-701e7279af71",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a9d071e6-edfe-4162-9e3d-b5c7115b8f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e381d0-670d-4f3e-afdf-5a32a25a8a4d",
        "cursor": {
          "ref": "d7018596-3871-498a-97b9-6bb9ca1397e0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "87d327e7-18c3-4e04-8052-7f5aade0b09d"
        },
        "item": {
          "id": "19e381d0-670d-4f3e-afdf-5a32a25a8a4d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "aa5bc3bb-bb67-41b0-950e-4d6aea2a5a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f92d3c9-7ee7-4047-885a-4eea4f351019",
        "cursor": {
          "ref": "10bb1a9c-cb93-46c0-838d-69594892c4d8",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e9dd31d4-2ee1-4d88-ad19-e24f740624a6"
        },
        "item": {
          "id": "5f92d3c9-7ee7-4047-885a-4eea4f351019",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "474ae9a2-95ed-4d95-a9d9-2f6c1dd36789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd02732c-af5a-4ba0-aa59-ddf5a10e8744",
        "cursor": {
          "ref": "cf4f78b8-b67e-4f71-aefb-3688bd25e8b3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e466d7d9-2e78-41e8-a961-31beed199273"
        },
        "item": {
          "id": "cd02732c-af5a-4ba0-aa59-ddf5a10e8744",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "20b53fb4-1d31-41d0-aa19-f0aff771293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271e8c44-b61f-4916-b58b-bfba8ae7101f",
        "cursor": {
          "ref": "8594c037-8437-4843-828a-c7c90aa504ec",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "37d70e5a-cade-4bc0-96b9-ddcfa58267ab"
        },
        "item": {
          "id": "271e8c44-b61f-4916-b58b-bfba8ae7101f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9e9d6d07-997f-4766-a994-c5bdef304512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aee019-3991-4d90-bedd-a577cf49db27",
        "cursor": {
          "ref": "eb393f35-cfbf-45cd-9b38-6dc85c704b67",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b816b62c-e544-4f1b-8fdc-dc50aab4516a"
        },
        "item": {
          "id": "f4aee019-3991-4d90-bedd-a577cf49db27",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c2d1c5a8-e342-414e-b5b3-2b157cc42f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abab4e9c-ff7a-4f20-a33a-993bc605f17f",
        "cursor": {
          "ref": "c15de6c6-8467-4024-ad21-ecf965f321af",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "254305f3-c468-49fc-ae40-fc4858cf29db"
        },
        "item": {
          "id": "abab4e9c-ff7a-4f20-a33a-993bc605f17f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7dbb7a8a-1aff-440c-bc26-07445fcdab89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141ea9d1-fae5-4188-9e36-f0bb431047d8",
        "cursor": {
          "ref": "16d63bd9-7bd3-4352-9d11-6030349b2ba7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2757f5b1-b0d2-40b7-8c21-235a152ce8b7"
        },
        "item": {
          "id": "141ea9d1-fae5-4188-9e36-f0bb431047d8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8eaf46cf-2207-4c7e-a897-b2462d64e0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d16e94d-e03f-47d2-bc33-0bf25a306818",
        "cursor": {
          "ref": "021f5e73-3a27-4c51-a044-98fbabd6927c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1ebe6179-0cc7-4810-9996-3b8a3e96f20b"
        },
        "item": {
          "id": "7d16e94d-e03f-47d2-bc33-0bf25a306818",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dd645ef3-2648-4b01-bdec-2ebf4943e922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d318fc-5936-40bc-b6c5-33b63a0b16c4",
        "cursor": {
          "ref": "39a55684-777c-4f49-bc32-64ba63af61e1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "af096b0e-903d-48a4-bedc-366c62ff9298"
        },
        "item": {
          "id": "90d318fc-5936-40bc-b6c5-33b63a0b16c4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a13cc6e0-e556-4aea-b305-aaf6e61f60f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951f19b2-10e6-42ff-8df6-58df1b0e0c07",
        "cursor": {
          "ref": "462ed504-5e4f-4e7d-a288-55a4ccf3ec0f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "02c28a83-4cf2-49ed-9f7f-15f616c0b2ce"
        },
        "item": {
          "id": "951f19b2-10e6-42ff-8df6-58df1b0e0c07",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "23e93f61-2eed-457d-a71c-068390ac41b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d49e8a-3c3f-4856-8123-2b56ef88181c",
        "cursor": {
          "ref": "ac9d2eb4-d99a-47b0-9ed2-c884fb02b5d3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6c8eebb5-fad7-41aa-986b-b2d8edd58571"
        },
        "item": {
          "id": "b5d49e8a-3c3f-4856-8123-2b56ef88181c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "70cf639d-b9e1-449c-8dea-ca98315338ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeaaa3e-9e4c-4f7b-b490-bf7229bcc4b8",
        "cursor": {
          "ref": "11a827f1-4692-4505-9097-b1a60a9f39ad",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "139e92ef-338c-4571-9b7f-2163b3f10a5d"
        },
        "item": {
          "id": "dbeaaa3e-9e4c-4f7b-b490-bf7229bcc4b8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7eddf2bb-3af1-46de-b6c8-8bc90db377bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35283a7-7100-40b3-8458-9eb45376d713",
        "cursor": {
          "ref": "247a591f-f88b-4fc7-a5b8-cf0a02af1e77",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "52c02352-dd54-4714-b98a-a394c02f0e9b"
        },
        "item": {
          "id": "b35283a7-7100-40b3-8458-9eb45376d713",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc7566aa-c19c-4b24-998c-087e8eefc172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e1c6ab-d4bc-4164-b7c5-4e1ab73c4469",
        "cursor": {
          "ref": "64c6894c-a4fa-45ec-a71b-ed00d2f50a2c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1573891e-8de0-4c4c-9dae-03b697fd3d96"
        },
        "item": {
          "id": "70e1c6ab-d4bc-4164-b7c5-4e1ab73c4469",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9667c234-7f96-4d9f-a0a6-bd251d585173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c408609-d764-4b64-ba23-bc50f87213e9",
        "cursor": {
          "ref": "bd27e7c1-78a8-4234-aa1a-d12c2be445b7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a7751307-a02d-4a60-a672-c1fb6408f8b1"
        },
        "item": {
          "id": "9c408609-d764-4b64-ba23-bc50f87213e9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "52f4816f-1710-4f93-b0bc-d1bca70328e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a436eb77-4df3-4a8f-b77f-c5d885039760",
        "cursor": {
          "ref": "e3eab901-9fb7-488e-b16f-24edf7bfab06",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2ecd2260-3fd0-4564-a33c-5c84bc11db2a"
        },
        "item": {
          "id": "a436eb77-4df3-4a8f-b77f-c5d885039760",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1a6537bd-7813-482a-93d1-44543c09679f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac29cc2-9abe-48f1-810e-074da68f157e",
        "cursor": {
          "ref": "6923cd3e-1369-4227-98ff-ded08fbea7e3",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "38966c2b-17aa-4010-88a5-0c01f996cc61"
        },
        "item": {
          "id": "9ac29cc2-9abe-48f1-810e-074da68f157e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "36276100-6ff5-45b0-a213-e5ce53a7c5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775ffc28-2b50-4914-b3cf-5df6cf1e7864",
        "cursor": {
          "ref": "df4c0d51-e5e8-45a9-9348-55a76186dd4a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "99164d0c-69b3-4876-a6a2-01fd61f31c10"
        },
        "item": {
          "id": "775ffc28-2b50-4914-b3cf-5df6cf1e7864",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1ec09b12-5aa0-4726-8f02-9ecdfcdefa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff2df96-dbad-4da2-a409-409d88917b64",
        "cursor": {
          "ref": "4fab25fb-bbd0-426a-82d3-fe6171f31c36",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "06737460-d5b0-4410-b3f7-5ec03ac1c527"
        },
        "item": {
          "id": "8ff2df96-dbad-4da2-a409-409d88917b64",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a4d7536b-58a5-41de-bb61-bb8fef9303d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123719b9-87d3-442e-b2f3-fa755ccce9a4",
        "cursor": {
          "ref": "9b6259aa-bc03-4d0d-a747-9a06a8e9bed0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f6576ce5-e7fd-48ac-a067-8f93ced55537"
        },
        "item": {
          "id": "123719b9-87d3-442e-b2f3-fa755ccce9a4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fea65a05-5cf1-4dee-9ea4-cc7fae9e76b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b9b4f4-9da0-4cf0-846f-f8c0530ca2e1",
        "cursor": {
          "ref": "2c5be247-3e3a-4921-8a90-576ec3dc1788",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4ee39ee6-bc8a-443c-b87f-e563c7fd307a"
        },
        "item": {
          "id": "89b9b4f4-9da0-4cf0-846f-f8c0530ca2e1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c8509840-b885-46fa-854e-6ef4df004867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91b4908-32cf-452d-b4ed-ca0df1add404",
        "cursor": {
          "ref": "a1a79463-9de0-4eac-b3c8-e357c0150836",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4854ba94-3ccf-4a40-af2c-4e801f37e45a"
        },
        "item": {
          "id": "b91b4908-32cf-452d-b4ed-ca0df1add404",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "076a5313-c0b3-4472-bbe6-9e15dc3fe104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bf33df-52df-435a-9791-a2440f58902b",
        "cursor": {
          "ref": "a4e94d60-e1ad-49c3-8d4b-214ce7690774",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d6b5b18c-5dba-4f28-9337-26bae90ae950"
        },
        "item": {
          "id": "90bf33df-52df-435a-9791-a2440f58902b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5232a6e9-5017-44d0-a9ab-2864dcde6fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b282f6-7bba-431c-bf4c-c3eca9f8bea9",
        "cursor": {
          "ref": "b2af4790-92b0-422b-a401-58bec5cfa9a4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c45609a7-42f9-4f03-83ca-f7c7e7314497"
        },
        "item": {
          "id": "c7b282f6-7bba-431c-bf4c-c3eca9f8bea9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8a0fb4f3-fd06-4335-ab7b-7e00468d6e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6d0eb4-0a94-4cc7-93a6-e179d8c880ab",
        "cursor": {
          "ref": "9fcdbc8f-c4fc-47e6-b639-41dff438e3b8",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "28c6ae44-d226-472c-aa82-b97e815b18f5"
        },
        "item": {
          "id": "1f6d0eb4-0a94-4cc7-93a6-e179d8c880ab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0630e702-a4d4-4ff8-890d-ac1e28be67f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e531adc1-8699-4eae-aae4-8aeba6fbc210",
        "cursor": {
          "ref": "7576ea54-72cb-491b-beca-6b0808135573",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2aab22b5-9d75-4695-873d-09113d1d2e89"
        },
        "item": {
          "id": "e531adc1-8699-4eae-aae4-8aeba6fbc210",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "78d92493-186f-4cc7-91c9-57b8ef7c7208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b6f815-810e-4dfe-ae79-882f3780ccaa",
        "cursor": {
          "ref": "f271fbbb-8c35-482e-86d7-7089ac3018b2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "03868b52-8fcc-4dbe-8232-28888093ea90"
        },
        "item": {
          "id": "12b6f815-810e-4dfe-ae79-882f3780ccaa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5acff759-b126-4df8-b57e-64965a5e25eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e5740f-2474-4150-8a86-b7e7c79ce833",
        "cursor": {
          "ref": "25cdeecd-885a-4ef4-b7e6-06ff69d26697",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "25543497-fff0-42c8-bca3-65c653c5beca"
        },
        "item": {
          "id": "a3e5740f-2474-4150-8a86-b7e7c79ce833",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "16f58513-27fe-4104-a4e9-fbc87019726a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4640344f-93b2-4d94-b24e-373e330eade7",
        "cursor": {
          "ref": "e3ad53e7-86ad-44a3-acfb-8654c36abed2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9d7b162f-6b19-4631-82c4-89b2be20eb3e"
        },
        "item": {
          "id": "4640344f-93b2-4d94-b24e-373e330eade7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9fa4d84c-4eff-4ded-bd65-8ca572ec8f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1521b1f-59ea-426d-9c26-3f0888758310",
        "cursor": {
          "ref": "5a68f3e2-449f-46ff-a888-f218fdec56bd",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1d8d852a-a0a1-4361-a002-2a15033dec6e"
        },
        "item": {
          "id": "d1521b1f-59ea-426d-9c26-3f0888758310",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fd01f102-e124-42f7-8fff-c6b3c944da2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ad4ee8-ad03-4ecf-a350-82427797f527",
        "cursor": {
          "ref": "639420fa-4c53-45ec-9fd3-3c76abcf7b1f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b8707f9d-7cdd-475f-8770-2cb89bf34414"
        },
        "item": {
          "id": "49ad4ee8-ad03-4ecf-a350-82427797f527",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "af697d88-4fd8-4823-8f52-c51c9fde7bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a977228a-2806-494e-adf5-1c9eabb3088a",
        "cursor": {
          "ref": "65ef95d4-66a0-4ed0-8758-f144d9c1003a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "150b9f40-931a-4104-9544-65d8887aa1f7"
        },
        "item": {
          "id": "a977228a-2806-494e-adf5-1c9eabb3088a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8703b497-cf54-46ab-8e28-01967ede2c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf8b145-90f2-442e-8088-40326e8650eb",
        "cursor": {
          "ref": "949fde9d-b463-4a2f-b160-2d612fd4b8c1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dccfbd76-0023-4c45-927d-4f32a94c0062"
        },
        "item": {
          "id": "4bf8b145-90f2-442e-8088-40326e8650eb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "88f8b8ef-a93f-459b-ad45-b427396d9206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b85c1d-90e1-480d-9139-9baced129bc4",
        "cursor": {
          "ref": "c2b0cb4b-7b06-4d24-b174-9bf5fa7b4613",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "426b789d-47e9-4c70-99e5-daa6590e93bf"
        },
        "item": {
          "id": "b1b85c1d-90e1-480d-9139-9baced129bc4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d89d110a-aeae-47a8-a219-01ea70104598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b6bd62-7f17-463e-ac6f-4ac78f43bffc",
        "cursor": {
          "ref": "744be809-1407-4597-8418-607cd434123d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "64f4a93f-5cb6-44d9-9070-594ccd98a845"
        },
        "item": {
          "id": "15b6bd62-7f17-463e-ac6f-4ac78f43bffc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1980acba-5b36-47f1-b697-26d4b4205a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe049bf-a807-4439-8d58-d6fd2c4543b8",
        "cursor": {
          "ref": "9951ec10-575f-4e5d-a124-f6e6989aabca",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b75bb72a-5caa-4c19-a601-6209def9e832"
        },
        "item": {
          "id": "5fe049bf-a807-4439-8d58-d6fd2c4543b8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "215426d9-d76c-441f-ae8c-bb6565ee8f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ead190-dcfe-47fc-90e5-1db770ae25d7",
        "cursor": {
          "ref": "c7119f5a-25e3-4b92-9102-5875be2406cf",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "54ea5d0d-8a34-42dd-a305-7758598ce48f"
        },
        "item": {
          "id": "67ead190-dcfe-47fc-90e5-1db770ae25d7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2f20f1f6-edfd-4d6f-823e-199ec4c44b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2974806e-d2f5-40e3-ac0b-0e7459a502de",
        "cursor": {
          "ref": "e92a43b8-9656-46a0-becc-3c3148a0515e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b43407a1-3775-4843-b068-a299e3060b35"
        },
        "item": {
          "id": "2974806e-d2f5-40e3-ac0b-0e7459a502de",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6ea05023-6e28-4db8-96e5-01678fbfad60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787fd81c-10bc-4ae0-b92f-221067a8a395",
        "cursor": {
          "ref": "8c4c16d6-0ab2-4762-a0be-a6ac8d820fdb",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "46915605-2656-4099-b3fa-deea87fabdf4"
        },
        "item": {
          "id": "787fd81c-10bc-4ae0-b92f-221067a8a395",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8d56a8b6-c691-407c-b262-ca44832fdb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956370e0-5250-4080-bc29-e4c7dc3d8459",
        "cursor": {
          "ref": "a2530cec-53c7-45bd-8efc-860a8207c765",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "66862367-c4d9-4919-a9c7-668065402b08"
        },
        "item": {
          "id": "956370e0-5250-4080-bc29-e4c7dc3d8459",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9cc3b0e6-f753-46a3-af00-5be7009ecd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbdfef-103e-46ba-9798-5910603db075",
        "cursor": {
          "ref": "57866c7a-f735-40a9-8eb7-9b75de81cc0d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "404879ab-bfb3-4a8f-8f8f-373b115dd6ce"
        },
        "item": {
          "id": "07bbdfef-103e-46ba-9798-5910603db075",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cb2dd94b-09aa-4407-bd00-ecb0d46d3239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c34f99-fd65-4507-a6a6-8e91b5be11ea",
        "cursor": {
          "ref": "16da4658-6c3e-4175-a468-75270963f144",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad5ba2b1-b753-47f9-a305-fea1ee160a9e"
        },
        "item": {
          "id": "83c34f99-fd65-4507-a6a6-8e91b5be11ea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6d5a6fec-b0d9-4f9c-b3d4-7f4aaaa30e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55297f98-c09f-4a5f-ad9c-c9b779c440e0",
        "cursor": {
          "ref": "10f784f0-aa05-4d99-ac40-73bcb53864fd",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4efb7522-cb9e-4337-a428-43f89723a5e2"
        },
        "item": {
          "id": "55297f98-c09f-4a5f-ad9c-c9b779c440e0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ed9ef6fc-2d91-417b-a991-7a02a39d9068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7668ff3f-6670-4870-b823-d2eab77eba82",
        "cursor": {
          "ref": "d4c3dec5-efb1-47b4-90f5-83ca01467aea",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "08a25638-37ef-4e77-a2cb-96c1f01b4b66"
        },
        "item": {
          "id": "7668ff3f-6670-4870-b823-d2eab77eba82",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3cac795a-bccc-465b-bc9f-df2066524895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41a4f9d-da4f-4feb-a4f6-4eea9f642990",
        "cursor": {
          "ref": "b093f40e-3dbd-4143-b893-90d2a35b5bde",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "038cf1b2-48e7-4580-ad7a-efa27f20962b"
        },
        "item": {
          "id": "c41a4f9d-da4f-4feb-a4f6-4eea9f642990",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a929b14c-16ba-4163-881f-b3d513f4c347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689700fe-dc98-4362-b53f-a44ec162d071",
        "cursor": {
          "ref": "41c486ad-c2eb-49a9-bc0b-e652b0716358",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "298f801a-385f-4932-9d93-e62f23943dee"
        },
        "item": {
          "id": "689700fe-dc98-4362-b53f-a44ec162d071",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9488c810-3e5e-4d6a-bc51-f9174f1f7fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610416d3-58e5-4762-90fc-9ee50888cd7a",
        "cursor": {
          "ref": "49c3d60a-f2fe-4d56-b587-e0a476ed25e3",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "88c02532-a605-4984-8535-00990277bce1"
        },
        "item": {
          "id": "610416d3-58e5-4762-90fc-9ee50888cd7a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cfb3ea80-cafb-4c80-be68-8b9ae1433cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e36563-a0d6-4d28-a5bd-466b036c81f1",
        "cursor": {
          "ref": "765ff252-e3c8-4f89-9e25-0cb01f6e620d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "db7fc6e3-cb75-419b-ab3b-eeb23faa4be5"
        },
        "item": {
          "id": "46e36563-a0d6-4d28-a5bd-466b036c81f1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "49df2425-3405-4006-8f9a-db33c5fc24eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af05cad-327a-4c62-aa96-e5f50f923c26",
        "cursor": {
          "ref": "a97975aa-ed89-4c61-8319-07f1614c4016",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4b362cb5-d89c-41bd-8923-68cc68e734d3"
        },
        "item": {
          "id": "6af05cad-327a-4c62-aa96-e5f50f923c26",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6f112af3-e4c3-4d02-a6ff-08824eed3557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db53957-c868-44ac-b400-47f3ff0ec786",
        "cursor": {
          "ref": "26fed0d0-b371-4bd9-ad7f-0d79a351cde7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "253a1378-e65f-4dc4-ac53-044cd50e74b5"
        },
        "item": {
          "id": "2db53957-c868-44ac-b400-47f3ff0ec786",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6d935e33-0298-4c06-b22e-a3d831e64c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12907e13-a4b4-4cd5-8d0c-74bf36c52995",
        "cursor": {
          "ref": "4990722c-6f6d-4182-8ca6-de1e42614165",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "be5ea2eb-f0f1-4089-befd-4cd93c3de611"
        },
        "item": {
          "id": "12907e13-a4b4-4cd5-8d0c-74bf36c52995",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f06ccefa-6eab-4bda-af61-443eeb78f48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d7076-dac1-49ff-88b4-77ac556d4228",
        "cursor": {
          "ref": "f5e4d801-c9dc-496a-a852-a46c0871ff78",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bf978ba8-35a1-4dd2-a50a-b3cf4aa1c548"
        },
        "item": {
          "id": "ef4d7076-dac1-49ff-88b4-77ac556d4228",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "00b5c7d9-19f2-463a-b107-418458d86266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a60c407-cfb6-4ef9-854a-efeb9e11bfdc",
        "cursor": {
          "ref": "2b1ba820-8d4e-4ecf-ba22-55484dd66230",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4f6b28ad-2be2-44fe-9acb-0843dd216729"
        },
        "item": {
          "id": "6a60c407-cfb6-4ef9-854a-efeb9e11bfdc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "13e3b282-2957-46b2-9a5f-181ebd2bb69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cc8eee-ea28-40ee-ba75-8cb7712c9420",
        "cursor": {
          "ref": "5133251a-b91a-4e3e-b5d7-f85065bfeae9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "beb50a01-3676-4701-b634-5215d80cc4cc"
        },
        "item": {
          "id": "35cc8eee-ea28-40ee-ba75-8cb7712c9420",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a9904b41-3cf0-4fde-b868-ad910dc92c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e369eb-483d-42f4-998a-a691a20b52b4",
        "cursor": {
          "ref": "969e59cb-4f77-497d-9ace-23fc4c36fd62",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ead21b86-37e8-4a82-b243-12be15f2483d"
        },
        "item": {
          "id": "d2e369eb-483d-42f4-998a-a691a20b52b4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "de8fe277-c0ae-4c76-81d3-d0030ffd3723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4425d06-9aae-4ebe-b7fc-09bcabf0724d",
        "cursor": {
          "ref": "f942a6d8-fdbe-41ba-b6b0-b14afc276b00",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "920272b9-5434-492c-a2fd-19cd5a9d5adb"
        },
        "item": {
          "id": "a4425d06-9aae-4ebe-b7fc-09bcabf0724d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b869c7e5-c739-4508-8dba-b36ab2f70a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7b558b-9b54-4961-b2bf-ceb95ed0a997",
        "cursor": {
          "ref": "bbdc7c38-b95d-4053-84c1-c8cf23fed43d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e74ee0ed-d836-4881-a496-77c4dc0b38bd"
        },
        "item": {
          "id": "cf7b558b-9b54-4961-b2bf-ceb95ed0a997",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1d7413a8-8070-41ee-a981-a28c08c843a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec117ec-ee21-46f1-a094-98a8445ddecf",
        "cursor": {
          "ref": "8f0591eb-3d51-4699-bb23-7d4fee6c7949",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ffc265a5-7299-421a-9469-70ba06e5659c"
        },
        "item": {
          "id": "4ec117ec-ee21-46f1-a094-98a8445ddecf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d1f52449-87cd-4677-9653-3a794e12a205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d9f7a4-39e1-4af3-8b4a-f8098e8c8f7d",
        "cursor": {
          "ref": "63f60762-dd4c-44fe-a5d1-3e5a1d51e640",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8e46e992-1372-41f0-a6b3-40a393648eef"
        },
        "item": {
          "id": "58d9f7a4-39e1-4af3-8b4a-f8098e8c8f7d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "613e4ba9-9a03-4c79-a606-59586e8560c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a111a1-cf69-4686-97f2-fc6c3f96d74d",
        "cursor": {
          "ref": "2a5827a8-c989-4274-b2ab-0da314bb5b0d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cc226b22-4023-40cf-a2bd-5f1b32ae4b90"
        },
        "item": {
          "id": "14a111a1-cf69-4686-97f2-fc6c3f96d74d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5c078d6f-7339-4aba-9830-1c8985c7ebb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96107211-f1f1-4ac5-a668-6d4763dcc6f8",
        "cursor": {
          "ref": "e5f6651b-2817-4ccd-a69b-bc2d6969b416",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4764097b-8804-4ee9-9937-55d813755c32"
        },
        "item": {
          "id": "96107211-f1f1-4ac5-a668-6d4763dcc6f8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "64d78f77-63a8-4469-a687-06b78fa5af9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78416389-48c7-4a2b-a3dc-75815a6e6f05",
        "cursor": {
          "ref": "6cee8290-a966-4425-a965-f316f75f8b04",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f619c3fe-f3d1-442b-beec-31443af66a03"
        },
        "item": {
          "id": "78416389-48c7-4a2b-a3dc-75815a6e6f05",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e2df76b6-ef96-4a6d-955f-83840b37e5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83b3b59-bd90-4a68-abb6-299c1dec299d",
        "cursor": {
          "ref": "f413ace9-bc12-48e4-adb6-d3fc46b674b4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8425d1e2-7e2a-480b-a57c-2a7e2b42f33e"
        },
        "item": {
          "id": "c83b3b59-bd90-4a68-abb6-299c1dec299d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fdaba8d3-af8f-4eba-a04a-cde122e2fb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f4f329-0eac-40fe-8074-d2b3eb543810",
        "cursor": {
          "ref": "757b7f1d-2085-476f-9fc6-e65d3d38a8b7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4a05fc5f-ab59-430b-a298-66ec1c26d984"
        },
        "item": {
          "id": "01f4f329-0eac-40fe-8074-d2b3eb543810",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "99d84edf-4780-4cb9-b3fd-c86107d6bc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795c51a9-9cdd-49a5-b0f4-e004cb7ae9cb",
        "cursor": {
          "ref": "7b6f5a3a-1b53-4ca5-bba7-750005a626ab",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "3bb312f7-5717-4d49-a9f3-fc7a3a73f1d9"
        },
        "item": {
          "id": "795c51a9-9cdd-49a5-b0f4-e004cb7ae9cb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c7924b28-fc6a-438f-ae7e-9dac9384fa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02152c0a-649e-43f8-8bbd-23003c790626",
        "cursor": {
          "ref": "e50045f0-a85d-4d13-8180-669d94a3e7a0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "07837944-4dd9-4372-ae10-9862a1e95ff5"
        },
        "item": {
          "id": "02152c0a-649e-43f8-8bbd-23003c790626",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5e24ae79-506e-4a7b-aed6-207ec1350ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1b417e-a4de-4552-b5c9-c5c08a40798e",
        "cursor": {
          "ref": "e11a67ad-e66b-40f7-ba7e-0c7fbff708a7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a8ca4e05-d993-4f7a-9f70-7bf2206fac4a"
        },
        "item": {
          "id": "fd1b417e-a4de-4552-b5c9-c5c08a40798e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c7354bfc-0b01-4dac-ae0d-4fa08055e2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244300cd-507f-4d2d-9160-852d098061bb",
        "cursor": {
          "ref": "f49360e1-9d03-48f9-a14c-6f8834be6f8c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a9e1bb2d-c433-4862-a490-17ff329328ae"
        },
        "item": {
          "id": "244300cd-507f-4d2d-9160-852d098061bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cbe1e408-e204-4260-bb4d-b7784cffc415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb923f5-7068-4958-b39d-7e041ab8b545",
        "cursor": {
          "ref": "0abbff55-1c91-4845-bdf3-819f4e678f29",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a27f219d-11a7-445f-96e9-1bea0adf08dd"
        },
        "item": {
          "id": "9eb923f5-7068-4958-b39d-7e041ab8b545",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bca1c1c0-2177-4da1-98a7-77c7f454ffa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4feba0-9a68-45dd-9f84-8e2376f1c3d4",
        "cursor": {
          "ref": "ef80dabd-ef4e-4609-94c2-3ec230a41662",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "07f8c4e9-ed1e-4c3a-bf0c-0861c91d6375"
        },
        "item": {
          "id": "5f4feba0-9a68-45dd-9f84-8e2376f1c3d4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "303398ef-4fbc-4aa8-9ecb-4f545ecdd9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1706eb0-47ee-4d84-af1d-eff0513759bf",
        "cursor": {
          "ref": "a7183603-3fe3-4329-a94f-7cb2ad1e7bb5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c9b39be0-8e3e-401e-b4cb-84b05209a7da"
        },
        "item": {
          "id": "d1706eb0-47ee-4d84-af1d-eff0513759bf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "746d8196-f822-4e45-97c0-5b7ddd45e439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca2e87d-6c48-4f9e-90cf-632c6e0f01e5",
        "cursor": {
          "ref": "8f5b066f-a803-41d9-8356-a14c89f93ae6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c5ed9228-6994-46e5-95b5-65c622b6bcd2"
        },
        "item": {
          "id": "dca2e87d-6c48-4f9e-90cf-632c6e0f01e5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e3c89a53-1851-4712-a97c-b68ff3300317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0639751c-e72b-41ae-9847-3cd16f225eae",
        "cursor": {
          "ref": "191b9bc8-b6ee-487e-aa80-1d94f9218083",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2eb0dc6a-d1a5-4bb3-80dc-73c4ec591b8a"
        },
        "item": {
          "id": "0639751c-e72b-41ae-9847-3cd16f225eae",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6dc9a945-0ab1-4043-9ae6-b70ace27ab80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc43619-3aad-40fc-bc49-bc6d72291fdc",
        "cursor": {
          "ref": "caae203e-beb2-4b99-94c0-4e3173a4ad2c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "586f62f8-8dcc-4045-b0b9-3d6f82d766fe"
        },
        "item": {
          "id": "3dc43619-3aad-40fc-bc49-bc6d72291fdc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9a6b2844-3119-443c-887b-c7e00a2e9452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5daf172-346c-499e-b942-0657f1b47636",
        "cursor": {
          "ref": "b55b4941-c0c0-457c-b6ea-0269203a1850",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "edbac5b3-8575-468d-be3d-9afb695ee723"
        },
        "item": {
          "id": "a5daf172-346c-499e-b942-0657f1b47636",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "33881f8d-5da3-4e8e-91fb-c671eb4aea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c35124-9470-408e-aa19-01456b3bde6d",
        "cursor": {
          "ref": "b0bea6c2-7431-4adf-b932-9be18d01690f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3ffd56c8-1fdd-4510-bf2a-02094735e2ad"
        },
        "item": {
          "id": "d9c35124-9470-408e-aa19-01456b3bde6d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d32d2131-d0df-4216-9103-9e068d17c5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452cd231-0487-45cd-af54-cbf396f91950",
        "cursor": {
          "ref": "ddddcc02-7a39-476a-9342-e7c856de6d06",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "aa9eac15-c1fe-4208-b5c8-54505bb6d6ac"
        },
        "item": {
          "id": "452cd231-0487-45cd-af54-cbf396f91950",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f221f3ee-a251-4272-be5d-81e3d2ed3244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e76f7f5-60a6-4305-b4e1-efe3f02b1ee8",
        "cursor": {
          "ref": "fed97ef5-a923-4109-a1f1-b610a771e796",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ec2d5379-dace-466d-935f-88be39a574f2"
        },
        "item": {
          "id": "9e76f7f5-60a6-4305-b4e1-efe3f02b1ee8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00f14dca-f4a4-40bf-8210-965089be187a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0b4b7b-f746-4286-b160-53d9e3b74ce5",
        "cursor": {
          "ref": "f561bd4b-88c0-490c-9884-abd97905dcb2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4fbe5844-712e-4466-8c63-2faacac01867"
        },
        "item": {
          "id": "5b0b4b7b-f746-4286-b160-53d9e3b74ce5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a20dacd5-abc9-4d07-a503-c0a632461167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a8351f-235f-4b0f-b060-54140e08fa28",
        "cursor": {
          "ref": "a118e8cb-3b0a-4978-a454-36baac030db6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "550ee2a1-6605-4ac4-8864-af80afeb9989"
        },
        "item": {
          "id": "31a8351f-235f-4b0f-b060-54140e08fa28",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "38de4781-5f9a-43a2-a84b-658c2b593882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1617b3-5f11-4475-9ff9-a1670a442819",
        "cursor": {
          "ref": "fff4e1f7-31f7-4eff-94ff-ff849b87a862",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9c5be705-4e6a-42aa-b301-1205898d9fc6"
        },
        "item": {
          "id": "cb1617b3-5f11-4475-9ff9-a1670a442819",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0304b845-c0f2-4d63-8a65-049a8ffff453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ff0cad-d78d-4698-86b7-23614ed44705",
        "cursor": {
          "ref": "d9217610-2d57-43cf-b576-9f210958f311",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5b8e4d99-89ea-4a39-b876-80216d11ff76"
        },
        "item": {
          "id": "04ff0cad-d78d-4698-86b7-23614ed44705",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc393978-b92f-46f2-a30a-650e66d5a27f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533586d8-42c4-45ad-bfaa-5228d1b56bd7",
        "cursor": {
          "ref": "5c44fbd8-3090-46a2-8c96-9cc84e017528",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "04f23de3-caf0-4754-b374-ad887c7abb0a"
        },
        "item": {
          "id": "533586d8-42c4-45ad-bfaa-5228d1b56bd7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6a2bd873-2cf6-43cb-b777-51cece929e24",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf249034-f5f3-4f96-b1d7-a5d4eda9f729",
        "cursor": {
          "ref": "d116da3c-ab3d-42b1-b834-62eab662f723",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4585535d-1dd6-418b-beb8-4ae8c3c3d8fd"
        },
        "item": {
          "id": "bf249034-f5f3-4f96-b1d7-a5d4eda9f729",
          "name": "credentials_verify"
        },
        "response": {
          "id": "90a12be0-e51b-4ce6-925d-7585b54afad6",
          "status": "OK",
          "code": 200,
          "responseTime": 1209,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5686105f-91c6-4060-b1f2-ea74008ec5cf",
        "cursor": {
          "ref": "9739d98d-8f14-4ece-acc3-8ec5e67fed6c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7c2cb304-8a3f-4b05-830d-f0675b83886e"
        },
        "item": {
          "id": "5686105f-91c6-4060-b1f2-ea74008ec5cf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "48cf034f-685b-41b6-b524-cc8f1ff1cc7f",
          "status": "OK",
          "code": 200,
          "responseTime": 1211,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab5b514-6500-47ff-9127-bc154f5d957e",
        "cursor": {
          "ref": "15377237-d733-4925-bd24-146b6814cd21",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ba263972-a5c4-47a6-8524-b02156b648fe"
        },
        "item": {
          "id": "dab5b514-6500-47ff-9127-bc154f5d957e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "706bb9a9-bc6c-4f9f-bbb0-f3466f144ad3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab5b514-6500-47ff-9127-bc154f5d957e",
        "cursor": {
          "ref": "15377237-d733-4925-bd24-146b6814cd21",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ba263972-a5c4-47a6-8524-b02156b648fe"
        },
        "item": {
          "id": "dab5b514-6500-47ff-9127-bc154f5d957e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "706bb9a9-bc6c-4f9f-bbb0-f3466f144ad3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17b2368-f410-45a0-ab60-361d9177cf5f",
        "cursor": {
          "ref": "5ef1862c-603c-47e7-a398-2a0a4547d5a8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c35928a6-0571-4eb1-82d4-e76323e06e99"
        },
        "item": {
          "id": "b17b2368-f410-45a0-ab60-361d9177cf5f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4c9c3567-3fa9-495d-aa2e-e04ec5bd28d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f50fd8-2c21-45d9-a31e-bef778f5a5ce",
        "cursor": {
          "ref": "ef706f83-6a84-4767-8f24-b660c71c9016",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "054f7f56-d1a9-4d56-bac2-25e8a6b8b4ac"
        },
        "item": {
          "id": "b5f50fd8-2c21-45d9-a31e-bef778f5a5ce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3cf40126-7600-46d4-ba5f-f92cd658d228",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}