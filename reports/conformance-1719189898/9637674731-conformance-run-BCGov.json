{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1a3ed96e-0aa5-4a6e-b4f6-da3541f875f6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "50f697a6-c08d-4345-9f7e-2eb5545b7436",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef125c12-deed-4ad8-bb04-94f41d406d00",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "70d886ad-9b1d-40b3-8279-c4c8125e1a5f"
                }
              }
            ]
          },
          {
            "id": "a1e01ab1-7b94-4c35-86e5-cf448c7ec45e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b955bae-088b-4552-9e2b-db8eddf2bd96",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "486cd78f-c447-455c-a1e1-7385647feccb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4bb56059-923d-4c0a-b600-ec2db90f35c7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "80605e92-415b-473a-9b3d-927ad5d6e817",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7df7343-0e3b-4eae-9e26-c4a309f4f0e4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dde7106-bc57-4bd7-9c97-1e80af38ed71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbb34d94-9b0f-437f-8c41-da8290eea309"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "069a8a68-823f-4661-8ea4-3c7e8145d36b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8f5556c-8485-493f-adb9-9de0b7817855"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fa470c5e-b5f9-4357-bc2f-b9c499dd8c03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1484673-29a9-43f6-9330-afa4da0bfae3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e142cb77-a0e1-41e8-a77f-4d6cded8b2dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3d629d35-f0d9-4b07-94f6-7c9050764c26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b7ab665-d3c7-4451-8ec6-2f49bfca9a36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01472337-26d4-4593-aa58-0154e2f9ce14"
            }
          }
        ]
      },
      {
        "id": "1f616c76-fc12-40dc-a213-f9f8ff58ceac",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c69ab895-3bcc-4841-bc3e-e59449e0ec5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f31e665f-966c-4540-a84a-e566812d67db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6f3699c-5ab0-47da-9cb5-7ba3dfee679f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1c7cb0-38e1-4792-b1bb-d9c9ba791bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "267847a9-d5d6-4784-8e2f-3a1a6b76a0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc89cf9-0fef-4cd9-ae45-a99c8ccfb7ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039508bd-9e32-49ae-8b53-e67996e26429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d98f565-bd68-4a39-b42d-55c165c5af4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dfdb79-c19f-4917-84d5-d4f98f2dd711",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0344ff-bb55-44d9-b6ed-e5b9564423a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438c9919-7c7d-4fdb-b735-ee87ed82c9ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6196a2f2-1d37-4a0c-b6d0-feb3e643ebf2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "976bb44e-53ea-4366-b08b-d4f77f306961",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adbeaf6-acfa-4b7f-8170-104d85da90b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aeec45aa-830b-4963-9279-c5b240b52e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824d6a99-714c-416a-8024-3cc1d29839c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c31afed-0d22-4080-b724-f82141b17a8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6692bf1d-569d-4f10-a3af-16099317e1da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45e389ae-3756-495b-90c4-3f6d54d4d0f4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8a937d6-ef26-4caa-a647-342c52ccb28c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f710d6cf-9f7d-4109-b534-ce411fc1bd0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05712e8d-d46a-4b8a-89a1-eb3c557a078c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5be54e54-8b9c-4c54-aba1-29382133838e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4e358d0-5942-4b1e-8327-ee757b8c2972",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9184d1e-bb97-41c7-bd6e-15bb2448f107"
            }
          }
        ]
      },
      {
        "id": "04fcc918-dd75-4862-a84d-1e9a3ffe2083",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c6b88d13-1d10-44c2-977f-83dba5afd1a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74659645-a085-4564-8855-1346342f9ef9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "61af0ac7-1344-4654-9fbc-05565662c1dc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee647ee-0c2a-459c-838d-f0a8cd06788a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ed01e0-32cc-480e-89c7-076acdd720c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263e7f24-4be8-41f7-a116-6c3853046c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e6f1755-e900-496f-85c6-19ca0e857802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ee69ed-6015-4253-9cb9-5f11c824c687",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ce0e08-20a3-4a2f-ae5b-ecb048f53906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a48b9c-ac3a-4599-818a-e04c732c3433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1aa4ed-f0f0-4cd3-8ad4-9acd63a4e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6d4f86c-0576-4410-9e0a-1acc0621bad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05410958-ca3a-4741-8b48-0b29e144661d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b38fbc-8197-4952-acca-5e184b840a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98983995-0a59-44ab-a636-e0758d20b9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34566bc5-b623-4dec-ab7b-f35a275c8e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4c78e8f-8759-4aa8-81a5-2344e80657ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9ecbbb-170d-4b88-862d-0afb477c6385",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955f67fe-e7cc-4ccd-9aa6-f2802017c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0647d38-434f-45eb-93b5-10f0f5f20981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7bbcb4-daf7-4d5e-be92-8d480db583f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e681f4dd-e3f5-4016-baef-ecddbd01c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9637ab-109f-4562-96cb-905840ae2954",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b265f54c-8f09-46a2-8f5f-ea9d595a37fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d4577d-a340-4d2b-9200-598d5572605b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7967bad7-45cc-4d34-8285-c70f7b6188c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8756304b-2fe0-4fb5-bd08-3428c62c1888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be66b90c-85ca-4cd9-9fc7-1d789f8ab442",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5164a2de-60a6-4468-aa04-ddfdcda4b1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667840f2-3960-4b4c-84b7-a7d50605135a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd18096-45ae-427a-a51e-dc40dd403177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45407d7f-6583-4de9-ae75-a9ba5a40c46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1302bed6-f4b2-490c-8142-6157dce4d8c4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db80114d-654a-44bb-8ca3-eff9e5ce069c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba83ddd8-81a4-42ee-8913-a01a36f7fb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f17d06d-30af-42e2-99ea-275199746256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81d53166-20d7-41d6-8a95-26ddeffda730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f812b95-afaf-4b48-98e1-bcd75239ec70",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53954ed4-e77c-4fdc-8ec2-174cd0a22c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84f3544-4927-40d0-b8ea-78007d797a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23aae4ff-ee87-4e42-a57b-1b53f94d92a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "140677fd-7304-4ce6-bffb-9253d34dc3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78ca785-b43d-480e-99a4-89cf8298680a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2b1c3e-6e45-4f89-a072-11563c78370a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ce8ca0-7fa6-4e42-a910-9c3e28dafc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6634ff39-661b-49fa-8209-12716902d667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bec003bd-952d-43cb-9e0c-66941f79c93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd6e41d-865f-464c-ae02-04466b20fefe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c76227-fc10-4bac-8a43-41f9f987b2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a57eb1c-6b23-4dd7-95ad-6e0459dddab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fbc7b1-ff99-403b-867b-d21df7263045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd6b30dd-75d3-437c-9722-3a14d920ad63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29a11bb-88ef-40e7-8e42-eb016377dfdf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af48d5a-8304-413c-b90f-eaf1300bd491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53603d5-f59c-4478-b8df-3b3a03048453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6ba5cd-c758-44e9-980b-6ea2292982c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0517628e-8bfc-4191-af52-0841e70cbb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a16eef-dca3-4cc9-829b-df620af74db5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7f3ea-1611-4e38-bfac-d5cb32738547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737c20c2-7d4c-4163-a051-6979964df3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df498455-20b5-47d1-94e5-a199028d7225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f1b45ea-5167-4a1f-bd21-0a6f393310a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e3784b-57c7-4315-aafb-598f5586db00",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4728820b-8347-45ec-9175-ed1c3b4dd680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc716909-678e-4d0a-bfdb-c01538cbc472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a0101b-3429-4be7-9c34-d04d8dbc9d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d38dba6c-4bed-4777-bf67-cfb33435052e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150b95e6-0cfe-4ce6-8557-851e284d9370",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06405dd7-e329-48c1-ab39-6c83c550a3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f80903-9904-4da0-adf3-96778fa91da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7509ec-191b-436b-85d9-413eb2f7b76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93ad33d8-52c6-42fa-9b6b-ac395f8e4fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc424e76-b94e-46f5-8aa6-f1129c9d69ed",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201fa630-345c-4b2c-a3c8-f85a5f0d66e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6700d847-3ceb-4bef-abea-923a0fcb0552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4384f84-071d-44ac-a4cb-eca8fa86e8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec32a88e-d45d-47e4-b1cd-bef09c54cdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97797f58-d807-4b27-8808-856a1c79e633",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1f9848-23b0-4a21-95c2-7d19ef9f6d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da14375c-bfa0-4d3e-9f17-0fc0eb0bc2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644f7dd0-00fb-4053-b60f-2b948dbe6cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c9780c9-7143-4160-8ed5-9af93123fbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabd9a3a-ec83-48a4-8f4e-3d28101abf3c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ad5d8e-5ac6-4da3-a5c9-fc6dc6885698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f864ddc-259d-4c2f-bb29-a64c343dcc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d209092-1173-4767-8627-e9bbcddd4305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6c4a343-7f96-41b7-a829-d1ee6fc0d6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17483ab7-d907-414a-bae2-df359a4e57b3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f894ca-6149-4823-af74-f207353d755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53544b57-f4f6-406b-a4fe-1f014e6407d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11170f8a-7572-4340-999e-d73bf87bcd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "129fe44b-0987-4b31-b21b-42ba3e9b1c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af11f203-9589-4754-a5ce-af9aa45f8811",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb55744-1bfc-4644-a347-9e374e910101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474ba40a-fad1-4fda-8645-0ff8e1e3bb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97874e11-1a1e-4d62-9e50-26b95e725518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d188c69-3517-4bcb-9343-ade8d21b393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193e1a61-ef85-4f7c-bb86-a33d8f4b3b18",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d38f31c-0861-435d-a1e9-5ead19d24f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff04fa9f-dc08-4424-b969-74bfaabf076a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd46c79-e31a-42f1-9d42-0670c0e69348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb636292-74b0-4913-92ff-4df29de6b012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68d2b14-7429-4460-a9dd-553385f6435e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e8381d-7bb6-4927-9366-a9794edcc2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb094285-6a64-4070-90d6-15e2d2e8ffcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72768101-9d01-442d-8dea-9e3c92c26d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b6def1-4b86-4cfd-8467-45cc916f69c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2cb791d-f036-4b7a-bd03-b0ef41cc9251",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e43fb2-a072-435c-b0fb-ae757069be76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad9c6e2-8fd4-4558-a13b-482e7e34987b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8052ce8-df23-44f8-9140-75882605df4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1880e5a5-4921-4472-ae19-35332fd6b365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad403da7-1e0c-4cde-9d3c-adc034799ab9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a78450-2bb1-4e72-b709-22e238e9ce72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8787a1-2660-4e73-9876-b35bb05c7757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550ac97f-d3e0-4c38-a1df-c93387a1509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "beb3cf31-0980-413f-9585-e62cc06572e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e19b5da-0970-4d0c-9e07-e576821ca367",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85e89d0-d615-46e3-b3e6-87eb63f7d7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f099e3f-f7a8-4742-bfe8-707e66412415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779d49c8-ca15-4877-967a-409d0d4d4807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c82b0943-16a0-4d21-9db4-c66a60f2f683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d219fe-8c8f-47ff-aa57-a78085caa1de",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cf66cc-e090-4a00-b1ea-ed8d22840174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0f30f3-05bb-4ed3-b04e-c0d911851c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3b4759-9bc3-4418-b11b-f67313eb9873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf7740d-8b13-4e05-a898-f0fd0db1f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8908e9-06bc-455b-8c1e-122162acaacd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c23460d-f430-449c-af06-d2b1c0d6dcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c375ef6a-2f98-46d7-bb76-22eeae8e98a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5573b706-2200-4754-ad14-d6313e10b47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec49d8b-3224-447b-9562-075078826b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d32843-a357-4f8f-b554-b6bfd81307fd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8e55c-8cf5-43b8-b64b-c44451c92194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ef956d-a589-4210-b8e7-78ec094f8cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ac6f5e-e4ba-4596-b6e5-4e322fb00441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be39e79a-6a33-46a6-b981-50307af2899a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae6d41-cf0f-4929-8457-2143dba20dd1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc545c35-665d-47b9-bb02-642cfc4baf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d42341c-799f-4ae0-8032-7ccf807ae1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a02c53-592a-43bb-9f1d-862d61e2d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffaf77d-c606-4dd9-ac0d-5d8398586d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1cd431-5c6f-4d78-860c-bd3848bdfda7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1a509e-834a-4a24-aa34-2511806ec1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078023c1-fcb8-41fd-81bb-106b3ed96f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ee7629-41e8-4901-98c0-7f137a1d1601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46f60cb-9101-429d-abb4-f6d55f1c9b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9e6b58-2e4c-4afb-b772-75f7b0ba1760",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5829f0da-cb06-40e6-bc55-665809003051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858da438-4a46-45c7-aede-1ff67ce4a5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4861589-ebef-43ca-a8c1-7a10ed56a9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "01482bd6-e8a4-423b-a51b-5fd8e6584e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b91efbe-56c7-4c2d-9616-9951648c7d06",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c134f42-a5e8-4f96-b982-ac947ecd8ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86448551-39ac-4880-9599-0a72130fe7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4d6d84-87cc-4a85-b43d-7d1c04890466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff5331a-4236-40d1-b6a4-63901f9a1ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36627b7d-fc31-483b-ad05-324068a0428a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f752f64-67a4-4cbc-a27a-f9de7293d49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22c05ab-ce01-47a9-a5c7-d62ae920419a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d2b932-192a-4ab0-8e04-df73f213b3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbaf8c0-e54b-4706-8c00-114ecf9ad70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67603852-85f1-4b48-a270-7a215f833577",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57460ab0-dfaf-4b9d-b60d-66ac5394d0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca912bcb-6bde-4a10-bf34-b7fe624bcc11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c80c390-57be-47df-9385-8253459bd6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e90187-7ecc-413f-b31f-fe13b158bf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee20b557-42ea-42eb-ab54-6e945b1996ba",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e17cb75-1bf9-4511-b0eb-6807fac50ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b07b0e4-dd0f-49c0-8f02-685a6507c003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651b589e-9186-4064-b655-24f38b0c8988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c021bd87-9b24-43f1-91e1-8be401910e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb0a2ea-0663-4d74-82f3-44c15506abed",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbffcfb-fec4-4a91-8109-a6b95b754479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd28140f-ec1e-4351-aa86-2d08a2d231a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b3eb7b-6151-4a18-a1a9-ae10ad9b0fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6272da28-c4d0-4b06-a0e4-2ad5721b124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ec7027-0d4f-4123-8792-6256c637f607",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7b527-4f44-462d-bb4a-b74d345d7538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e5712bc-50d2-43c7-81bd-af289c9739a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef71d20d-113d-4c65-9a75-6acba7e77fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "897f0c67-6da6-4548-ab85-d697e6de9ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a4408a-fbba-4c70-a1a0-947a43c36ea2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7747fae-cc59-4e56-ac4d-c6770f7afe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc73ad5-0e01-47ae-94c7-281b7cdba872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00b7342-2873-4512-b2b6-e9239a16c3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "044ecb80-fd50-4383-8cc8-f1effc59d3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f962b2-2fce-4c6c-a3e3-f884e5311466",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c512bf-2cd5-473b-958d-24e491478da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d4036f-2e1f-4f3e-9a2d-9237c6caa33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcccf25-ffed-4368-8cbf-1acb37c8530c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20c9536f-e780-46da-a68b-628707aab47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4f5d26-270f-412b-b786-1180afb9cd19",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d0ef1c-9085-48e2-992b-9df487c9cdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2d2ae1-dfba-421a-b9cc-d0db233982a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a94619c-cb84-4b6f-92a2-d61d0500a615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c77488-d51f-4ffc-9b91-bf4f39b06e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3012d133-8e00-4bfa-91d0-afb3508ead3b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad2f784-74fa-4c7c-96e1-7d90eb144e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe11c78-ce22-4b7f-ac64-a317e6b2fe33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0228c0d9-b3ab-43d3-8abf-f7442e903ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5d9894-70fa-4992-9093-c4bd91d30cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9d8f15-8b05-43b3-ab2b-477133fe6d00",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864fc7ee-e5a6-4167-921d-7ea71919a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d220f4b-dfa8-43cd-9c17-6e36d4b39e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15a34bc-22dd-4d15-9c29-435b76f3f186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5afc39-ffc1-4d10-bf7f-16f014c797c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eff3d3-faf2-4e87-a6db-05c8a141f655",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0010224-b88a-4d70-9f0d-1e3413a5782f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fda37ac-f3a4-458c-bc2e-9ff4722a2cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ceffcb-560f-4a69-9edc-62a2efb0e27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9e35bc21-53ce-4a55-9a9d-2698b626fc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b814f012-17cd-47bb-9c7f-6bc03067d90b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615bb083-064e-4180-b51d-152925a49f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a9c8e7e-f092-423a-ad2f-c7ff2e01c8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21412a27-b572-4fc5-ad88-6698bce58dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac86a836-729c-442a-be6a-b44a29bfdd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfb7c48-af4a-4ba4-a789-29cfc82ef4a3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0f4f7c-6cfd-49dd-b921-9f8fcbae99f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dcbd52-75c1-4aaf-a4e1-c199e5d42fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e1f453-ea63-48e4-a978-9172359287f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "36d5aeb6-134e-48ee-b7e7-e4cb903d50fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf233032-b6b2-42e2-9bf6-a7c4499446b6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8734d18-6112-43bf-9cc5-d22e0ab4009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe744db-52aa-4e29-95b6-c160d6346e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fd317d-6212-441d-b7cc-80c6197ff61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10a8d124-728e-49ba-bc11-237ef9d2b4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d96ee6c-b20e-4a7d-81b7-6cc6fc5668b7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c2b63-2daf-4c84-93c2-28f760a09a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f1d72b-9023-483c-83f5-d99761bf4bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca067b0b-3172-4fde-b115-fdb4f49224a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0066f0-fce7-485e-9516-8780b6ae195b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1210e8-8231-46a8-ad15-1625ad920828",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54148a46-5120-49ca-83d5-30eb0ede3eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48843d70-fd88-4109-9d2f-f2607e9872b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d165f0f6-5225-487a-82c5-24f00228a62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9588f994-a865-4afb-ba29-ddc87d2a604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e88325a-9742-4c6d-a861-4590429c909c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beab994-d247-4b50-88bc-1f8dcabfde97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf444eea-6997-493b-a399-67458af9d1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a931b6d-af39-40c0-8017-fe6eac34a7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f30c02d-d5db-49ea-9770-e5274bf953bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5250a7c1-e554-4dcf-8f88-0a999c8efa08",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2d861f-d43f-48ea-a00a-292bb533a2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d95f51-2214-4d82-996b-d860a94a8f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1ddb82-dc91-449b-a97b-861ec1bfcdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af429cd-771a-477d-9f94-a9b3250c9ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7e83cc-31f5-4449-ab0f-14c1ac8dadd3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1e52b1-69ce-4ccf-ba1c-8db93cc7e5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57315f1-1517-4f62-a226-f9ab76467406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ce8c82-eb6d-4850-b682-7ea939e2d01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35fb717f-6a55-4459-b2d3-372def60472d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b85de4e-8245-474b-9309-200d56b9c6d8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17e8df6-cbe6-4630-949f-26726b9d2693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727c5a6a-62fa-4b7c-8bc6-f7acb1557c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee88873b-8946-48c1-8d8f-ab3d6696e3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "367c3b97-2cab-4614-afd6-38f2c0e9d0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1158853a-d61e-4007-9823-7909ddf17528",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dd47e4-1443-455e-8ae1-5ba84094c979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f8f40f-ddba-4eab-bac8-e38c5d9de226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4834fe-6834-454d-ab8b-4a2468ae25dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d8562b-8d7f-4e85-9c06-0699cf611440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d80139f-ca59-44ee-9045-b7248f5ca5ea",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd2a92d-7eb0-4fde-8c9b-bad33d62c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dde91e8-c709-4307-84fc-c5b6a80accaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ffe953-1096-4ff4-a029-3c3a3b64125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0446da29-b573-4950-80db-760fea5c3258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39275e9-b3bd-49b9-9023-ada08fc22a0e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e5357-4564-44c7-896a-a96754d5d050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bcd955-bce6-47af-9acc-0d6e72dcacd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472523a2-414e-4ed1-9b5e-75eb555b33cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe278bb-af96-4eae-9fe1-1b5cdc75f4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e85c559-fc7b-4446-a14d-dc0e423a7286",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344f564c-ae81-4ad9-a7eb-12ac47f9c409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaf4b14-6d0e-40af-9405-eed862db390e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e04e942-f739-4787-bf34-fe522a39145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae63eec-5207-4d76-bfcf-5be95aba7f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62faf3d-6dab-4534-b132-d6639d4a49f1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec407b8f-381f-4806-a9cb-fcbbb8ba4138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c986b34-b7e6-4137-ba60-4c3f44950225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941f20c9-ac16-474c-91b2-21569b933928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c42f7f27-cdff-4e0e-9154-9ef1a9c0bf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a8a364-8bc9-443f-abb6-0728d437e367",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb5e1f5-4cab-406b-ba39-25522fb283cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6900c01-d2bf-4b3d-9809-9027bb4a5e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bda17d-cf41-4304-a4ab-5883daf577f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56d15950-229b-4d95-b112-fb1839b66680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d635711-28a7-4dd4-b7ba-e71bf0f7177d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d5b379-b649-4d8d-8e2f-01122c523133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1beed9c-65b0-4ff4-8986-adb64767d2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e193a13a-5812-41bd-b652-14ffe306f9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6908985f-981a-4551-85c2-4e253f2a98ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e8471a-16f4-40bc-8b69-39f799d8694e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb56a7d-765e-414d-8a16-e91cd00ac12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a6d747-abaf-4b1b-b5d2-9563372fc8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0d89be-673b-4a30-acf5-4db617730d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "098b4b71-f5b8-49c9-9cfd-0728a15fdbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c958ab05-ad1f-4a83-bc9e-b3f2a1e21d52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d7660b-1631-4167-a4b9-b4af04a97a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb3e7da-1561-44f5-bd41-29890890fc04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2908c0ba-2809-4a9b-9122-bee85f5e51b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00df8565-4e42-46f4-a915-9ade1654be4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7b4ad8-e214-4937-8736-8e1a2f6f6377",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d37e9f8-017e-43a7-bfb4-c857ef304f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd0cd30-25b1-4d1f-ae7e-2120eb437230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2821748-2ee1-4d03-a149-aad039914a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76070b46-f989-4160-be2c-a53290bef122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12746008-1483-4e4b-9eaa-df5123f4fda5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1758c509-ca93-4d5f-bfae-118ea8864be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a2294f-664b-4e06-b8d3-cb9749ec65b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de3825c-8855-4a48-bf70-5d34fa246711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b3f01e-57d4-4897-b7b5-5aae0ba6d979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96356151-0375-448a-a412-4c39890c26cc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d87b1e-13a8-4f2a-9d24-62250ae23073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1083c298-d8d6-43df-839e-441b9231b33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9340d884-767b-41b6-8726-b5d7d96419ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad621fb2-6dd4-495e-8df5-b6d259a95c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec756bf-341b-4e1a-af17-40ca8ddcef49",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc31b75-c171-4332-8140-b5645809cbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7af9e5-f961-4bda-9c39-5e064cd47594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2951a0fa-265a-4534-85c4-46d54b58f052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "485ef871-1117-466b-94fd-1d78e7be861c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302945d2-a49a-482c-80f1-b1d5f6e938c4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39245e5d-857b-4f2e-843b-8e3a569ebc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4812aa4d-60e0-4057-be23-b6b5c1898122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9e02d5-ff87-4c9e-be34-9cd36cec86c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8981b992-3b1e-40d5-bd08-8e304f66dcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ebf3ec-e19c-4d29-afb3-e68a79b4d11b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca97c8d-1d40-40c8-9d89-56b63ed5456c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66927a68-bf6a-4217-8e87-01e6e4d5a4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990b687a-ec9a-4b67-944c-56bf93a905d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dbc49d4-785e-40b4-9849-d1676ae9fe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc67701-7332-44a9-bf52-a4c69330fd92",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfdc0f0-9012-4ee7-ba2d-88d488386c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a37320-fd5b-4b49-942f-677bc61e8f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e106c1-1926-412d-ac66-0db152c67014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7c70e2-e0f7-46cb-9481-c06e18fddff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c21c88-4e09-4ae6-9c10-b0decf6f7d1f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae27c56-2a97-4278-9802-e2bd4c1b63ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b921a17-a558-4cbe-bfe2-477f148db7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46aab11f-0fdf-4f32-a274-c62d2ab207d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "650d1b95-a2fe-49bc-8275-6ba19229135b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51203557-7131-4913-a6ca-8b9d161b279f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "489328e3-9746-4b72-a7a8-75357a74cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2544c5e0-0111-4a98-b039-765a15a9ce95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7910b6b4-4606-413c-a838-52d76a718f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e029b062-a441-485b-ba65-3551895e5bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3eb418-1a23-459f-8623-fc839f97ea30",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142f7118-c3cd-46e1-8ea1-2eadd69cf44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8820a586-8677-4df5-84e0-cfa220272784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2df5549-5773-40c4-8607-bf97d339bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ac1476-eee5-4e4f-928c-d94a6883777e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab49b40a-f6dd-4b8c-8166-6bde9f018540",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274e5eb9-ee7d-46d2-ac12-3ff468ac77ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b73c7e4-b502-4138-8672-797994a0984b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bf646d-c5d5-48aa-a4c1-121d827bd500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf2c184-047a-4028-9880-82af91bb9bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b79f442-f171-4b19-ae88-b48d541b7e42",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a7bdb9-f769-488f-969d-30467bf99e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41985553-3984-45c6-a47f-0e0542c9e525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360f18d5-f150-41b3-a792-26e787af6c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a14da30-b598-4906-9066-3b512671a484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7dfa20-9962-4c91-9c98-fed9dea545c1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5219c875-f2f5-40a2-8437-69bd8921b6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c3ebbd-45bd-4322-85f3-21a2bd7f74ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2a13cb-27b4-4013-bdc0-cabb842a553a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27bba110-fa5c-4d55-934c-8265da15a16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0823aea3-c524-40bf-91aa-35dd2fdda30d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4937b4f1-8db6-4842-aa42-60ef4d3d873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea403564-9810-4a30-b713-fdbb0ceaff8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc40451e-aaaa-4aba-b9ef-41f330f818e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1edd7cd3-a914-4ee7-91db-d3e66513bbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f95754c-a72f-4cdc-b120-882e4e50b30a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7facf33-2588-42ab-8215-4d555f6cb3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a40f5c-6adb-4e13-9390-a46ae17064ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f10956-139e-4abd-bffa-a8cbd45ff727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22f0c148-b122-4ae9-85e9-f6215ec5ce59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdcc4a4-b4f1-45ef-8390-ae6541f71805",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1143b3ef-46c5-4f9a-a6a7-45d19c556acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246ec9ae-d7fe-4beb-8830-8f17e85b081f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca790fc-5be3-443e-9460-05fca78fb40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a05891fa-17fc-4b0b-8c0f-515fb84918c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0326ff6-f0f3-4f73-9159-5a744f1ba24b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bfe50c-0ca4-4d04-a156-3eccc61b56d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7528241e-a062-4cc0-8155-45610fd23146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6bb0db-beab-488e-b914-ab0dee05f28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81879133-bda3-407a-b889-bbbea7e82089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70716949-cde9-41f7-a073-8d5655fd9fac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b9e454-0c45-4d9c-869a-69d7df7dc8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aeb481-80c5-47aa-911a-5aa051978997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb253e79-b460-44d9-bed9-4c90b171b2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67f0ac7c-08c3-4228-bb12-68ce4014c7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f255b9-5868-4fce-80b8-1980846a2c8b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e548463-bb6b-4368-8d35-ec6f55f7a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e58a96-a895-43fe-83eb-104a31cfae08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f80b627-5166-48b9-aa00-978433505456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb5f80d-f3a0-4bc6-97b7-dc8c3a614756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4f0bb6-c763-4bba-a9d9-0ac3a80bc86b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ac6da9-715f-44d4-83d9-4234cc2c5069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cba0aa0-ad6f-48f8-a5ca-36b7b499f223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8db3e64-45e4-4385-a108-38d2791192ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "031e03e6-49e2-467c-afcf-9a9bb5abc1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f77f05-8568-475f-9829-893cb2dc124b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689523c-cffb-4d3c-b9f8-cd595d793bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6bf265-7a46-4ce1-800c-ba5cedf361f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff47042-124b-4c1b-b67e-57c0256d2ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7de4e69-2fe1-468f-86e2-e768d1b366bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df738939-4d24-4dff-b8d0-85ae08d3c09c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5f2605-e9b9-4f1f-89e2-44ec41cb3777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc7298e-8e79-4d1b-88d1-d6d36c773964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f9191c-9583-42d2-8c43-480413daa7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c04fe329-d5be-463a-8442-932df39b5111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bc68ea-5b8c-48f5-8726-2e3482635fd2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9dedf2-7534-4c11-bf50-9193b1d9ed99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b699cf-2908-4786-9bf7-eb542c6b5127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d423fae7-d38e-45e4-94b1-bf6b71f07fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6638374d-5203-4390-8c6d-70345c0a21d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473bc24b-2d27-4485-b816-8df28319db02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f034d0a9-c898-4042-ac6b-b7fa478ae537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2152bf3-48f6-441a-bcdb-9c3e8451bfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4143366d-3fed-42d8-8f0a-41700279f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74d9ef5-d93e-4f82-bb05-7b5efdf23e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6997ef-a766-427a-9512-6fc2ab553afb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0e0bc4-9834-4118-a5fa-16eb78a248c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e071711b-b15b-4a34-a9d0-47c99d85182b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5602904d-4678-4c91-b89d-7c4e1ed75b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6027bf56-ef3e-471e-92fa-1814a5f744a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ec7b01-2e0b-4531-9220-23c36dd537d3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681d7f77-90eb-4e77-a320-dc653d9ca058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532dc60d-cd04-4ef4-95b1-e3ea91be850c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5959ecbf-3cc5-453d-9612-b76131d0f71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdb1135-cdf4-451e-8fbb-17ce7f88dfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919193ad-8785-400e-917d-e452975d6dc4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee502a1-dbed-42b6-a341-32f9478dc389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4b1b7c-9032-41a4-a8f6-ec121a66e12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64869994-74a0-4c0d-8bf2-87e012e7b72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "52f89aa1-7074-4633-ae2e-b23b869395cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4580a3ef-fbab-4bba-8c76-0c53f2dafc0b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb3497d-0dbb-4540-8b67-e9a68af82357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b071247f-0efc-4318-8612-76e2fae21f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8997d6b1-c467-480d-ae7e-4df480360874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c2a52f-b9be-43c8-a66a-723f2a9db410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdcc48a-2238-4adc-98f1-8fe61ebc4210",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426d9d32-b83a-48c4-b8d2-4c3d85d847b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62ab69a-5fb1-4d47-9888-e2ea68ec6842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f05b0e-2d52-4711-bdad-a4a9ca3dcbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c76a4bf-80ec-46f6-a639-af9a9e220573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0b0e42-e65f-4201-b32a-86145e513ecb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76abafc-08e4-4933-8817-6cf696b4e867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f335cb75-d527-4798-a751-dfdcb457442f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd67e153-207b-48dc-a364-1d5f08a08d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6baf5c-89e5-44ce-8180-77ef66f15b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c001b51-0a6b-46fe-b9e0-23b238cc8269",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac4f538-53c9-4684-903e-3e6322418bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b957a8-378a-43d4-8fe3-14e121d1da74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83b449c-9948-42d9-9d67-653dd6d20950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e80af57c-70a8-4d8f-bac6-a7655a07f592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ea92b-4bb3-4379-9b1a-ad93968cdc79",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ca7c15-30c2-443f-bf25-453b16c5abc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "16f4c899-8a64-4e51-9f7c-9c388cb3414d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08ca178-2a5e-46bf-9a1b-c57ef1a7fcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec681da8-72aa-44da-973b-7b2363892b43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "badc47fd-f476-4146-87c2-cc2f6b51754c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e065356-7816-4d0e-bdd2-fa1e4f884c3a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9defef33-dd21-4a5b-88fa-6903b0b7f9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "878f137a-42d9-4e52-a9c2-89841692ddb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99888cb-f22a-452d-b504-9381e86e3836",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a22096e8-9b5b-4194-a7f9-a93cabcd9558"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a64b26-ac82-4989-9903-1615e43e8f71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9011c78a-8843-4f2c-94a7-130fe0929229"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6d315a3-ce41-4b73-9f58-a792d9bf59e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e411b03-625f-4433-b256-660d41b97cbd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6690573c-3204-45fa-aea7-ebbc928f8bd2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6459bd0c-ea01-4453-aa7a-d436b9633c9e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "21b59c16-b076-448e-804c-2ced5cc9d1d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76bb3795-08c0-4e66-9d6a-2bf0485722d1"
                }
              }
            ]
          },
          {
            "id": "10424d33-feb3-4905-8902-f89cc070b2de",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b47b43e2-65e5-45ba-8088-e4236a8b98a1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "91642ce3-fb14-494c-8535-276b48dbcff6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c5e49b-179e-4779-8cc0-15ea93c63d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1a218271-305a-4398-99f8-863cdba3408f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11ec428-b6db-42b1-9349-17774fd30299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bee76ba-c26d-47b0-b6c6-cad918747ea7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95e43d79-df94-4205-b134-afb1bab3cfd1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dc71e2e-6938-4369-8364-b39b540d21e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c29601f-bf02-48ca-b569-e79806062bc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b68f1eac-972e-4783-8fa4-f621881084bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a973a8a-1084-440e-9618-25a579b5f6c5"
                    }
                  }
                ]
              },
              {
                "id": "89da0fdc-0e3c-4c32-a591-edded166b339",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aaef82f-6fd9-40f0-920f-819a15c6c88e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7644e6e7-76ae-48f9-b497-204c055d7d35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59623e24-1ac5-4fcd-b4d4-60f18ffe383c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "436d8206-6224-4223-afde-cc50728d5edd"
                    }
                  }
                ]
              },
              {
                "id": "1da7d326-fe61-49b9-8487-d8c70b30ad50",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1638129-cce6-453f-a390-e65fad65a26c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92d5c764-3aff-4c5f-ab56-3552e63a2862"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c304e01-80cf-4d51-9d00-db5aeb1c468e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3277ed91-b822-41db-ab32-9f150f48a6c3"
                    }
                  }
                ]
              },
              {
                "id": "60315424-5b1e-4db2-b35c-2a820894408c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67484697-827c-4ce0-8c90-00fa49249cca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "870d9191-5b3a-4ea4-8aba-bb9cf43b7fc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70a464f6-2605-4523-a1e7-775cd6776ab2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "51a3150f-47e7-4822-b433-020767dd0a2b"
                    }
                  }
                ]
              },
              {
                "id": "420ae107-98e8-41d9-8f77-d802766b5410",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be69aa4f-b9e4-420d-b579-b121f19c93ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7193ce11-7aa1-42fb-afcc-c0fc5a6e4bc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2edf1004-4806-4af3-b951-7532ad111a7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "efe1e2cf-be8b-46a6-9a60-58af8d5b0070"
                    }
                  }
                ]
              },
              {
                "id": "188c6d69-f830-4203-829a-09f96ef8114a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "358aeeb4-f5ae-490c-bcae-2e7f8519955a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d87df4c9-4e76-4990-9c9e-33626446319a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ff600e3-6685-4184-b037-87785f4e689c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b76c74a6-31a7-47cd-84a4-f241ec32dfcf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "deb5f67a-0e6a-4fee-91ff-1f65e423a38b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "baf530b7-4f31-48ef-bf52-0d03772a376d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "040ca307-f796-4bf9-81d6-2963f80ac8ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ee662d8-9c93-4561-8eaa-7d55a7fad558"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d42dd3f-76bb-46f7-980e-c1ba6cd301fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "999ff2fd-164c-4240-a24f-fd5c0f4e8f49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25b303fc-a375-4e3a-8c77-b9b1fad7ccb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af139c03-ea22-4f13-a54c-bb8ab9ac785d"
            }
          }
        ]
      },
      {
        "id": "687fc0c3-7468-4ebd-8049-cf638f8d9761",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c65a5f10-fbcf-4b48-b83f-52dfc0bb46cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3db65c65-793f-417b-a6be-d3682883ab54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b5e33c8f-0634-4623-b684-379a4e86b45a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d41cfd-db3c-49fc-b95e-1d5791ffdc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09e72c3-357c-42cd-96f0-b8bb4c4cba68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e32dfc-d631-468c-8417-6bc27e8dff6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ff19b3-fee1-4c42-adbd-0db2b6b218b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64bca95-4b39-4cc1-83ca-ee603e0167cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066c7b1-cb87-459a-9de2-aa4482730bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcc4054-2c26-41ca-bf1a-eb6ceeafc517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2782a3-c292-4bc7-b5e0-b71a814eda42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6bc96a-9628-4ea8-9f60-0443de4bdf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e37cf0f-b3e4-44ce-9c3a-3d893e9e9ed3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a17df3c-44a3-4fb6-a7ea-737290ac7ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7c851c-7be7-40b3-b774-bef2cd668126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e47bf7-d982-489d-b9c8-a89215155375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0932609d-72f0-4f51-a241-c5585e80555d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a985c3-04d5-4bf0-9e1b-9196dff5c4e7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35e63f1-7595-49b6-9041-4797652a8a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9606dc0-e06d-429e-8ec1-594234fdeac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86315c1a-25e1-48cf-9c30-4581f2a1f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "623ae7b7-350d-48da-b6d1-4edf169ad454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72ea839-36f2-4190-bed4-b35d3efdd015",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcb17df-718b-4c45-9848-f99931cf4edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5714d6b-2e48-436e-8ff8-f8cf3a7cbf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6ea220-e919-414d-a6d3-2cd3dc509bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11f7bd6-c63e-40bf-9fda-23f233887057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fcb6ef-43eb-404d-8d84-eb6ecdc6b1b1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9591d061-8278-46c9-8331-4d26e0573efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685c6385-3525-4daf-ad33-815f81f3fcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd14d3c0-dcbe-4c18-88a6-dd1ee391729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f242c1-da36-4565-bc10-0ff93ae6d0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f40803e-127b-4ea5-b723-8f65afc3f016",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b7d59e-128a-4075-b67b-975ca02fbde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3070b374-febb-40eb-b46a-00a7cadc39ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd015e6-efc0-467d-b100-2d6b92b38561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "70f91774-0ada-4d96-8d80-6dd862e0fd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d78fef-7d88-4ece-b7e6-e112c7a4c48a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cda5ef1-619e-4443-affd-60d5ab65afba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f19a80d-9845-464c-b7a6-7111eafa9e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dfb0dc-fd43-4c89-8ade-858d0d94f898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "334f2b6e-9dd0-4dc3-93db-cdae09169558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b002eee-a3b0-46ce-8c1f-a83786be15e3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8110dd59-b934-4677-80f3-7adf944e4650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcc00c1-4cf0-4017-82f1-28ebaa2040c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b11d878-fbcd-4fd4-bdf4-39d1f6a041c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aad7602-4fa3-4cde-b0fb-faf1b29e421f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91253e6d-6fff-4fba-9360-b136786acd68",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599fe095-8c9d-4120-9dc0-831ff36c99a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7aa228-911a-4527-8722-2615021430a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b8ed7e-c726-471a-9359-b80a2867da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c197ca1d-55c0-4397-900a-3c02e6f6bf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36045b59-0af7-466e-b70d-acc2317a4c41",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d96bb6-0989-405a-bd73-78bb9aaaf5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198417b5-0ab5-4d94-a042-0f6359432954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1a21a4-8e5f-43f9-a8d5-e0b2c042cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3f3456-2169-457a-8194-f0622648ab58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf74aaa-a8c4-4393-81ea-afd8d7abf6e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63abc050-2160-4c02-96d5-5fc4619d0251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef26938f-22e4-40ee-9972-ce998f717847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a57efc-bfdc-4bda-8b67-9ffb495dc4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5994b822-2a8e-444e-b326-44f205889324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1456c51e-8e1f-47a2-9ac4-d9d71b22bfe1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49f5e8a-e96c-4f0c-81e7-99c3b06f948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43102fce-619a-464f-ab40-fb56b4cdd1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8824aed8-6b72-47eb-9ab9-1e8f9912e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe423ea-b3c9-4015-8142-98c244f378f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad77d0e-f845-4afa-a445-24ca623cb0a4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb0d41f-5d2c-4d41-84a6-0f4a7a50ed96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e21472b-ff6c-4f20-875f-c969ad96ef5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f417d65b-8597-4fa5-bc30-32fa514f11c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bdc669-1199-475f-b87d-64b3f3beb59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca9355b-9683-4d2e-9404-8d06ac9b5e42",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de0bdc2-813c-4620-8c39-ef3cf663581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ee8948-63d0-4867-b951-eada5391f9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fccdda8-c5b5-4819-b76e-43df6b1af34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ec900f-cceb-4cf8-b956-eda145b685e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374baa83-3756-4a2a-9f9c-04a552305b0a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3efeb4-1e24-418f-b2c5-8111a44e7ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e61e6a4-011f-413c-b03a-76fab8d2096b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0146dd-bb76-49a1-88b2-d70331f308d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33897845-f88d-4b89-8e88-d5cb6008d8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf3066d-ed56-48ec-b2ef-7b3209286330",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5205ef-c8e7-4bda-893c-570bfd26fa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b55897-7b38-4881-8f86-8728a64858f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5239e5a5-537d-4e9e-80ec-ef9b78f4c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5a46e8-7b02-4926-92e9-5c16a04fe7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22145ec-5eb4-4011-a0bf-a93a8a09a571",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4745dc34-9248-41e7-82ee-128e3ac6962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4399bd-1af9-42bd-853e-c327240e150a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1526836-b244-480c-aa73-0b177a1e6044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef0e197-371e-4d62-a02c-09bcd91db74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f5bf73-ee62-4282-8e22-d58ad19b2eaf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6bff8b-cf0f-41e7-a258-55901b4557bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361d5ca7-57d9-48b6-8aa8-4bf710a09460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4891d90-edee-4548-bb63-2d93bfcadf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f31cdd9a-d828-4529-9ff5-e8869204d07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba747fa8-2258-4341-9eb7-b201dd7ff289",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5fb4ea-1e9e-4474-a0ff-baa1f6fefa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5c2c5a-58d0-4db4-b740-0f130908d3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730ee812-a559-4bdd-bb1a-4bbc069921a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e206076-d31f-4fee-9c58-3cad8e4ecb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a637aed-bcc6-4365-a749-3d67606a4cd3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb3be1d-d96f-4492-99a9-29464ce206e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cbf6f5-f1ba-4968-ab1e-314bc1df9c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c392b3-11fd-4ee3-a9a9-699081ead066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4714a03a-f5fa-4d35-8026-cc4a91f3563b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0a804c-1dd4-4d6e-9b79-a5b2c90e2a8d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6c1ee7-5400-414d-b3e0-dfcacf919421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c90cd0c-8ea3-4eee-8276-f5bfb295aa15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb847a0-2970-4b2b-a76b-33b5b21d7b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d424e6fc-1e2c-4d83-bf75-1794c6f6d4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5955fe-9269-4408-86b9-fbd57d6a7073",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40ac962-03cc-4f31-a293-21642ccca756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633b4f8d-0d63-422f-9b38-32a3f922a141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74546953-15d2-44bd-9f89-f2aa81e27148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de1cd233-2368-4cf7-b8d2-3468f0235fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0c63f4-8408-4080-a134-1c2ea5e6d8c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3129d039-152f-4652-ab5f-a627420ad9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf17086-20f7-408d-aee1-00ee6614d97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e422f125-6e6a-435c-9023-9ab7be2a401d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a43eb18-50cc-4822-968d-0308dace1a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0394ddcb-8bba-484f-9bf4-36d48378a20e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3f151a-8e3f-4883-84cc-b9df14d5ff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d41ee6-35ca-444c-991d-74945356d8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b7d3b0-9e8b-4bf7-a81a-439444960712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a367c84d-ec7c-4a00-82ff-9cd610c381ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f815fcc2-5db4-452e-81cd-e91fa177eccd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de395d07-8b0d-4ec6-a88b-dcdaa38fac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac4094b-ae9e-4be4-82c1-d61318901159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1020fccb-9811-4100-bfbb-68dd70ab4516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "510f9aad-4131-44cd-a391-ed9820016578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab20fc5-314e-438a-b464-de1ce10d440e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e8e8cc-4790-4c16-9ec1-d3042b38fb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f94724-bc76-4eb5-85c4-95c8d50a1383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4862893-395d-46cb-bfd2-9c6341b907f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e4aa5f-9c43-422d-b7be-f083158b4eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6f66e8-465c-4c01-aba6-ab097a7eb963",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c720429-2615-4429-8a8a-82232208c40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cb7c80-27fe-4443-b425-2c0d19109bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccab3b9-ea07-46fc-b381-95c5d2e70ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72419a44-5d23-48ca-96f4-c431f58a5a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebfab46-943e-4ea1-9428-2e397ee92e5f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095be0a9-b6ec-46f3-99e7-f84d0aed7806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79466c8-a36f-4f44-8266-e09652bf43f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58edbf07-837b-4b32-82ab-b8e1f9c5cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff482c32-4e48-4904-ab1b-60aaf8141666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7f0dac-55f6-40a7-a8c9-8b6c29a6cf4c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf52d2a-dc9d-4b2c-a414-dceef7fdfb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fdd1c0-8021-474c-8a78-d6f922d9426b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa854ce-9b7d-4349-ab24-190cc1b68a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03cec9c0-7157-468f-b03d-ae282b5c9656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2aea09-a9d5-41c7-94ed-d2bfe8d2c70c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec157ce6-2e7b-4685-adee-64b704bcfcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a45983-8ce3-4d27-8e56-f79f1c95e336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a5b2a2-ceac-4fe6-8aae-2cf1b23c7767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae73af7c-c2fb-46c1-86a8-9715db565038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6bd82d-d9db-44e5-9611-3630f845bfa8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f23d694-bf8d-4ff3-8496-e982f8712d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abe8366-7379-4cfa-9e57-f5743e5a7fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948d0025-d23e-4a0d-b0e3-5eb51feda07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ee5c24-5cd0-4ded-b252-cddf98a53811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239e3e81-daa6-44fc-bb63-99d242fccdd7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18255908-970f-4b93-bdfb-b1d59d6fc12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f01910e-9f02-4a4a-84c4-b69ef22c4ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee12104-c649-4851-ac11-701cab11dc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf824b1d-243f-4526-9c8e-4799a3467a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f136f467-3bf5-4b32-a20e-96a64786845e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37312f52-a916-462a-a47d-384d8b66f537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915e0417-9c70-443a-9b27-4bf6847041d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed34305e-3566-4b2b-afec-b82c8cec6403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01493ec3-f7e3-4f22-a02b-7b1a56021a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380b143e-6d2d-4a21-83ca-ff7875fbb759",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a7746e-371e-4b1b-a4ac-bc03525157d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b29fd5a-4a49-45ab-ac2f-eb665e9b9e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37d333c-e8c3-437c-8b8f-94859e5a1590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4457b39-266c-48af-a156-0868f2d0e560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9446e4-d8a7-4258-bd1c-30d126eabc40",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329271e9-e4f5-4248-853e-2b861e8d3132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f1c0ce-563c-4154-998b-94caacfa6417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a552dec-e7f3-407f-a8cb-ff40b23535dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3342bcbd-00d5-4491-8e93-d09ed3f75483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fcccaa-17f1-4946-88ff-b4b6f782c7f2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5052bc19-8a3e-4004-a974-e5fb6ff51aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83317a9a-a535-43f5-8f0b-763883594151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b721248-0a9d-4a49-84d0-e51ed715d7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be48dd1b-9431-4fa5-8856-da427174d0d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "16f87483-9df3-4865-bd8d-ccb3bc1b36db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24391a18-46fb-4564-a633-03ac383e7b47",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8778c742-5a64-421d-8076-00e3abddc6b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f633dbd1-bc74-42f5-b6da-e4b6b04f3cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b621fc9-6956-429f-b12f-fe345003d07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b75748e6-6031-48df-bf79-c8a1aaabcd37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4e5cab1-886e-45b5-9546-51bc5310a7aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c03f947-8655-44ed-aab3-8c8ad887b4c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "087f337e-24d2-47dc-b654-edfb51a3c064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d799b127-0af5-4dd3-9a4a-a4238b015c84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b25097d-5a53-4987-8301-175def5c7a46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4a140f3-8e6c-42d9-9ea5-714d760f3e5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b306068-070f-4ddf-9d9c-b7e548cd6571",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cde8c117-2385-49bc-91e3-bdd07c2eaddb"
            }
          }
        ]
      },
      {
        "id": "123278e8-1cab-4bab-aad0-67f4b86c270b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a9c8c418-c856-42ee-a376-16cbbdc473ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e432a17d-177c-4651-9735-55b41b6dd202",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a93f612-8597-4901-bac0-6caf044d68c4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c406bea-a6dc-4a52-b298-ca85e9e82824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62cc37d-ec2d-4061-bc28-904571efd4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec758294-33ae-44ec-b820-cdf3793f31ef",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3757628-6e0c-42f3-b2fb-7ce3586ce6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d75a7d3-9e12-425a-8ec5-35c57c0b964a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84f7b23-b77f-41de-b9fb-40606ada19c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4083a7ad-5374-4ba3-a73d-491df3ee6cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f0838b-adfd-40ba-bd18-ecf5467b6fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e979e9ba-9480-434e-96c5-e7aca7a0d3bb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1628817-14fc-4101-a91c-963ee6796fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b07694-c0f4-4a1f-8f60-50faa9c3216d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ec3597-c1cb-4a35-92c0-a18af2042800",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12f98ce-b37b-4e8e-babf-bd430d5e0f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192d2b4b-5981-45d4-96d6-92ca16af09aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2a1be4-3a68-4ba1-b5f2-fbd83bb2106b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e731c4c-273d-4b72-88b2-35451f593879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2dc8ea-17f5-4a8a-9ae4-de55aead54ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60299a7b-b732-42cc-8e7c-5cb59c028f96",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ff53e1-ee26-46ef-8172-9a578085ea16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792c6b14-3f6a-4feb-b98f-ebd27be51975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01e9f2e-a8fb-4a10-b402-2911f02511be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09773b67-c478-41a0-886d-86744f888a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8303e59-f2ef-42fe-83e0-09dac1bb0953",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ce6541-ec98-488f-8741-02ec9ab42e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d50841a-4ad0-435e-8bc6-99c87334df4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea5a127-baf0-4e42-bc4c-431c6d8b5134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d23a127-d692-40d9-a385-c0135d778a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d217a28-924d-47a8-a847-0293916a40f9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64cf07b-f376-46dc-945c-a899587ce8fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd75edc-968f-48a2-933f-32fcfd93be35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f0cbac-bb2f-44ae-8540-0728e9e3b27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb415259-a89e-483a-8d29-51961302eaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05f336f-f8f2-49c2-974e-5cc48a5b9a97",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3160ef-d4ff-49a4-a275-ce315837e23b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5d5d11-9a2b-41ae-85fc-3129b9bf86fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840925fc-1ee5-4933-b312-dda13469b4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5712e91b-edcb-47fc-9fdd-f69b624796ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85b84a6-0286-48eb-b116-62720db8b4f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3888dadd-b3e4-48c5-a676-91ea35def1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f24b563-0471-470a-adba-c39184806530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb73f1f-b9f0-4195-8fb5-1742758e56bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f5f64d-6707-4f0b-a09d-b35b5494e17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14003370-5bb8-4414-b50f-4ea3185c2a15",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62117817-ceb4-4067-9815-d0ebaaba60e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd14f497-4e49-4a08-9cc6-e66568ed2b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60432f7e-0a00-4c56-bc14-600e7bb206cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a313656-f08e-438f-8648-0d2089fb89a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d2f027-3c81-4b5f-a577-684a1f9ab8b5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767ab400-8574-45ad-9333-bb371658f3c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01eead86-9f91-4d0c-86cf-5ecc36029416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3e9d3d-c200-41d6-b2ff-0ed48838c7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24eec74-9d06-475e-839f-65643cc0a92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bd09ab-7933-4678-93b2-64f5e64f3d9b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bdb2b5-b4a2-45c6-a350-a51f94f15a36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "902ed611-d42e-4501-8a0b-670829acab31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535a137b-f5a2-4471-b0b2-083c9e90a624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5413deb-dc94-4a35-bb0c-556711758804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba58994c-db81-4f3b-bc63-814f856c5381",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fe4cd2-97f1-46ed-94e6-8d6a1093769c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c27efb7-c38d-417b-9bc6-e111cdac870d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78da7df-c060-4a12-83dd-692bbe217c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba6cbee-193f-420f-aaac-ad6dbd2b4c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee09e28-fbc2-4e0a-8814-a93297349339",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14b47fe-3a88-46f6-a41f-983f40f89c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb030ce3-667b-4768-8dd3-6e22f7f8a040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0419250c-c756-4c92-bb0b-2e94c90e0803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6408cf0e-c395-486f-b035-9eebda8e8602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59312cf2-6cc4-4d4e-943f-7868d49330f6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4153cae4-1e93-4b75-9e16-114496c5b064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bbecc0-acdb-4226-b0c4-b09563dba60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815fc72c-dc0c-4a41-ad0d-31a7c25a19e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a73041d-4891-4e0b-9d0b-eb2ffd85aa98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737ecf62-6730-49f2-9a6a-d845c65dd667",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f412f0e1-1986-4429-9a5f-823ca22f4e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea632d2f-8c40-49c8-bba5-b6f74a2f9485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7bea3c-33cd-4c80-8170-5bd5ea6ade3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652fbbe5-8415-48dd-a791-2bde282adfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289ed60c-d0c6-4801-a2a6-cecaee5f9d86",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f824fce0-6eb0-4dd5-89d0-3439e71c2298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3619aa-5df1-475e-89c7-a06b644ae172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64981dc3-09b6-4ec9-91d6-d9f551c525d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda41cda-95aa-411d-a51a-ec85a568dd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efcc930-5a1c-49c1-ac10-e00472224a05",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b03160-772c-44f5-a0ef-c01c4e481a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018acf3f-a7fe-41af-a54d-5f202ee3da7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84655889-6087-4b93-b781-5e72a2869358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c908e4d-ae26-402e-ae63-6c582e1d8e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b9425-7cd0-47d8-b7c0-4df73004d6c7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fcba76-e869-4882-8f67-77ce696073ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad05b85-5eb7-48a6-9ce6-e3d8b78ae6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf85c6b-3b6e-4016-a7c0-36eee4966f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022f5751-f145-4fa6-b9d9-7320f04d1e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e00a9e-b271-4d1f-8127-9a57d1b82cb9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87628e89-e06c-4ca3-ae76-0e3aaac5b37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae6aa3a-2c9d-452f-93fb-b6de1f2c322e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19512380-9e57-437b-8acf-e9c686980fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11ce5f4-7444-4fce-b2c3-3b4a94769f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b8131c-626f-4baf-aa3d-a7a89298cc2e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8663296e-34d5-4550-90ba-dc630474fbd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bbdd87-4328-4dcd-b8c5-43d5f23394f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbb3f69-1f77-4edc-88b7-b1aae69aae1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088e0f1f-d71c-4d60-926b-03179401f4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26acdbe9-d947-44d6-b29a-563185298055",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3dcfca-2ccf-499f-8988-ed77672865f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302fccfe-b5d3-472e-9cf8-e35de8832d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f855adf7-29e9-4e70-bb4f-5435909f3526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcab239b-dc8a-4742-92c8-fd0f6b5bde01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaa1e76-e63f-4353-ac1b-a509951fb3ca",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea966df-0fe3-4397-8ca9-7878f0a8f4df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8473d5ee-510c-4557-a20f-4170a11da4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f491c06-3e40-49a7-ad79-77efd225aad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addd99f3-2311-4e64-8530-019ce42e2516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cec858-e26b-4f73-8d4d-7314194a7802",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a094550-5ca4-4a5d-8aba-77395f585f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bcef895-1c98-4b06-b243-def7f0848190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d880df2f-d6af-414b-b7a3-b25ecb4e96c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb78f3a-22a5-4947-8a2d-38821f5448d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa8cbc2-342b-4285-9469-34a77c9c10cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06877d68-bd05-4e65-9a0c-0ee2c28914f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81dbe4c5-84ac-4da5-8798-dad1ac42935b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c652134-273d-4e2d-a588-69ea3aa29a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2824553-8bc8-41ed-a34c-33101d784fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac85c77-56d2-4ba8-a4c6-a882216d2ac9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5200ba90-d5ce-4617-a3fd-30629063f082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18b4c56-f289-49de-82dc-157ca3df1317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30c370b-8e89-4064-9586-43dad8ffebd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b52b6b4-3051-46af-bef2-d62784b035c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc014a1-1d21-4583-9216-2d4838434e92",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827432fd-0ed3-49a9-9e94-bfd094ac9508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249a153d-e317-4421-a177-ce1cd33b60d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba214522-c2ca-4447-a08d-b13ad80a6352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553bc9ba-195e-470e-81f6-3aaf99ea8380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a08ec4-cb4c-44cb-a253-8fcf458e8585",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b449ae-30bc-4e0f-a7aa-116675c63149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663603d8-6b26-46c6-9ca7-4d36088f5ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a45f429-dee6-4441-a31f-656c6d122aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03391085-37cb-4726-8ca5-899caa5c202a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fd180a-1b97-4a73-9c52-bb76bc6f4a07",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c91cda-24da-467c-9c96-7dcbf953cdd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0586e4cc-a4c9-441c-ba13-b53bcb14ba3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5316ac0-0d13-44e8-9b58-37e49cc14db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac3d8b0-77d0-4823-af68-17f882e5ef2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ecaa0b-132b-49d6-8dc0-4f2df2ac922b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b3b4c8-acef-4f15-8a1c-299b59ff6775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8eaac4-240c-419c-807c-cc862221308c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218315e4-925e-4a4c-bae2-0b2633fb5f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b180b33-966a-4e9d-9c50-9dbc8188d8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b8dbed-0e91-43c3-8039-9ba0c83bfcaa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dcbd97-c89c-488f-82f4-e5856808e869",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ff6fff-dc91-4f7a-b0ef-38f722660599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f178273-c7dc-428a-bd0d-862c6a2edbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6326db4d-672c-46f8-848a-96c91d0b25b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c46a2f-7931-4963-9fd9-a87b9a5e1187",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805e5968-92da-4e6b-917f-7c4a9ebf624a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c955432d-a6b4-427e-8f6f-95a5f112c7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06969d54-adb7-4f28-8946-567bffbb475e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10273975-c0ce-474e-9854-f676662571ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f00ae25-98bf-42e5-920e-04fdfcae6b44",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ad28cc-9754-4f6d-9b6d-850ac69acd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b90243-a58b-4f7d-8222-0bdbae8697c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746066c5-7562-403d-997a-a575739aef0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb839f9e-846f-43c9-951b-736c5785089c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060f0ac5-f253-416a-89ac-231e6dc2148f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76e8d33-cb40-4126-b9dd-504edd46cd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce62917c-f931-4c55-b39c-d432e01edf25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f775317-1052-40bd-91b2-d050ddb7e473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44a9a9a-c8aa-4116-a781-47fb5da31a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7984ba6-2d6a-454d-9560-1e68fde6848f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066303ef-088d-4908-ad96-be74c5aadf16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9087b1-2f31-424f-8013-28ba845790c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed0a669-fbe1-471b-9f7a-b3118dc594f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1b0e43-d845-43cd-b5aa-0e15b91a7ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122962c8-3f6a-4098-b6ef-12f361fd620b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be48a5c6-5853-455e-a183-01d7db623d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3e2628-33fc-4762-b3ec-077aa0f329a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f110abc6-bebe-428c-87a6-4b163aef197e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c913585f-8269-4680-9d90-d3e23b8601e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ae6db-b89b-47b3-82dd-40260353bade",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf5865f-2ad3-43a2-80ad-a0a995e7e51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48b8c43-6e7d-489b-af4f-27c6f92fac8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e495b83b-34d4-4de1-a8c1-17f107eda1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778cd5cd-0895-4770-9ba4-156fd5aa3517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e089538-5582-4783-a8f4-4deeefdd7a39",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a150fee-7fa0-461f-a7b7-ab33e4f24899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc05e75-78ed-4b61-bc1f-45fa024d06b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dbad1d-7f65-47ce-8579-34e3f4ddbe32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8052d54-8e43-42f0-a974-3258d45ab726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04fbe48-ce09-4b8b-8520-2f747498e6c1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edd6363-3a4a-432e-a79d-fffdfefe9126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6088eb-1acb-401c-b644-8062ed26107e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b471211f-ab35-45a9-be47-d9c4fbdc098f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30d777e-8fa8-47e8-b9e1-512cc28bcd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d421c163-a1c9-41c2-a675-607e70ad4744",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c312f1-b250-4d8d-b205-7fd8b41a0231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8cbc0c-9bde-4c9d-8138-ab78f900094f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4877246e-93cd-4f39-b84e-4498957767f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d462f918-b991-4bde-91e3-4849841cc676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ed621d-5df8-4999-aae4-1b3ab722836b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f72d56-5c36-4188-a367-4540470afaca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfe1fbf-9f61-4dfd-a1a0-139525bfbc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e3fc70-7266-4381-ab61-94a78261f7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125d2c89-68cd-4643-a413-75321538a8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d97175-4daf-4379-a147-8bdbddbfa426",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf38e8-cf53-4184-a768-bbac67ef7e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908b8f92-08c8-4d41-ae08-c92ba021d2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a01bed-8458-46f3-91fb-7c8c4d462bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ed3bd9-f7b6-413d-8f25-9c0756514872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92455a7a-06be-4655-8066-d12c2dedc92d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c556eb-1bae-4795-9b78-302edd1dc59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7917fed-ce13-4f03-945b-fe6a968f626f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f6300a-4789-4e4f-ad67-9a4c6f9a3d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e644ff11-043b-435b-8312-8aa209f4b402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6e6af0-76ea-4750-849c-255df523c75b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ae6b4c-956b-45e6-8e8b-cc6dfc0c2122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e91794-00a6-484b-a84d-6c5ecdededc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa7ae92-8b52-4b97-bf25-559be3f32bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddfce1d-1d71-4636-a00f-f93989a7e3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22ab578-0a3e-4009-83ad-99a9daba5292",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b4f599-0a68-421c-af66-af310a90de47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb552c7-38fc-4c21-a21e-4aea0e342a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29a9350-4dda-40dc-b89b-f8fd6f1200eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba1b7b0-6b21-400c-8842-db7ffaac0a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71b833f-e4a8-4c4a-a181-57a62f72d0d7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be68f1ae-c029-4490-8fd4-a4d289c05bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0dc45c-1bee-46ce-86de-479f65493fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b044e024-2290-48da-b578-84b3a32f9b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197c8000-ec3e-45bc-a5b7-21dac40078d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de92b697-d4c3-41f4-9a7c-33319b2babef",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb8cd45-e3ca-4ec0-8edf-174f788c58ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3939e476-8fd9-434b-ac37-86f722cba3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad83b3d6-49a4-4099-afe2-d7c207ea5a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262311a6-902f-41d3-bba1-f7c332935219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11512cf-19cd-402e-ac32-3aef7ede1823",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b23c91-4783-4b05-8c94-7a175ab02b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57356055-5702-423e-9046-8abffcd8cdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8c690e-737a-4652-aa16-2658a6992806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a532a2-0301-4b76-b247-95c661fb2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1821f962-52a1-4be6-8c23-d7c86f118a2e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c63ce9-ad1c-4f80-82c8-d5c615e1d50b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf07491-5dbb-4fe9-91e0-342497851027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cb10b4-f1c1-488a-a3a7-8a1ef0458ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3029f4-cf37-410f-bb7c-2577443a4224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242dde48-523e-4044-9359-56d348ee4598",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aff15e5-8c75-4cc2-bae9-69e55f9add3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f029371f-ed1b-41d8-8aab-8349e8787a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc4b8f0-7c73-430d-ac66-afc6b533256b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb6873a-7d7a-4b08-ae4f-00dcadcfc25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23ed5a7-f0a4-45ce-9d10-6724895d8dbb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a204e864-cda8-4508-a7b9-687bbe2500c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0ae965-6c40-41ec-ab3c-e34a6d4d2b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec03e0ea-3b5e-4861-abc4-4adbfb146663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef9fdfe-43e9-4063-9faf-0d06322b1c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7882e930-ee31-44dc-9f07-057f62bb2cf7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214cc5d9-17a4-4ef3-9b8f-ffd66903e553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61950c0a-d5bc-4e8d-9273-a5d8bcf76fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40bcbd48-0b82-444d-9c31-34c62e4aa38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719cda28-c5ba-4543-9502-fbeb94120d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99c015-c420-4a25-a077-017ebd4d8927",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b13e83c-eb63-4406-9ddd-2483996e44f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3555095e-e9be-42d0-b666-a7e9313822e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b80bf6a-0f8d-43ed-bf07-275076e5f75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50dbcd4-4ce6-476d-a04b-1ef1d8911d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf96f18-656d-44c3-8efe-7669a0305cc6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec83d5da-fd4e-4b6d-82ef-ec3900513832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cabaa81-7ef7-4c93-8883-b50d25c2b31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95fd0ab-b8f5-4916-acd7-c8744529f0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b74444b-9fd9-4225-bb25-0248c24a7df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793030bf-991b-4cf9-9d5b-dcfd0b9bcf55",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e2c7f4-8d3c-43d5-ae55-672837840de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5a5c23-d926-48a1-b579-f41bf54906d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb14c49-31da-4a6b-86ce-e984914f343f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fb8a91-9566-4faa-9ebc-87d5670ca5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f46fdf-4051-4f7d-a71d-28affa3bafa9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80381d6d-895a-43fe-8c7b-480fd519601f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5149bd8e-1c4a-47aa-8828-d22057ed37d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f60ee3d-5b88-4771-9251-a2fbb31b6a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da484e57-0371-47d0-91c0-a6d25184afc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bc875d-a951-4f1c-90de-6e8d3cbb9740",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fabe1a-9710-4bfd-b50a-e75dbd77770f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ebb5e8-0668-4bfe-a539-3b01a9ba81c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c34361-f118-43af-b0fc-8b0517f8bf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c26e07-cb93-405b-b671-0fcae8e27a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b6143f-f74f-4f8b-a91b-c1070dd7f991",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a116dd4c-9ab2-42b9-939b-163e3418971a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a17b2e-4975-4fe3-bee9-ed96c44e7aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320d5c58-15b2-4774-95f5-d8c073156551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c3192e-e559-4cfb-90a8-bc247e12612d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0ec9cd-4812-4820-8c71-3933c7f08226",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ab42ff-20d5-4ac9-bfd4-53141736facd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb007d8-5d31-4974-87f5-828af2e11973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589f7632-1a58-48b1-977c-5ff8a7954776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5eded5-f974-4b1b-b15e-7fc6e373d064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa2f078-9433-4bc7-8dd5-307ac420afc8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e82f94-499a-42b3-86e6-ea87d4b6a01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e8a22b-1da7-4dd8-8a16-a51396dd86cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa86e8f-0254-46c9-86d6-2c74cecc87de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51257376-79fd-479c-87f1-f97454e4dda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc9c4e4-d47d-4309-b9ba-6a3d5513eeb4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9436bd6e-35f4-4590-96c9-8f00d603759b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc02c2ac-e7d2-42d0-9a95-2029463d36fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70b8d49-c188-4977-bd38-8270ecc95231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8d4dd6-aea0-40a7-bed7-a085044a29c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78140ab8-ec18-4114-98c8-ad079567e4bd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0800e7-69ea-46d4-a4e5-9eda4206f959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28faa916-8c1b-4a31-be0f-a059fffeb7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e65a7a7-1c4b-4042-b8fa-4fe3d46c0366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0f5b27-2841-47ab-ad27-04dc2d265f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7794e7-d2c6-474f-9237-0c87f86048a8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde7d4a9-447a-4f64-85cd-d16567c73222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3527f96-6203-47ff-997a-0ec03a0b4a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3272b9e4-3bdd-4ebe-941c-1856c86cd234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19124874-e380-4686-81f0-8dbd6219a08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9d547b-7ce0-4fd1-a7a7-1695c4e1ee9c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef6d75e-080b-46ef-acc3-4b8b14e1fa8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e61ce37-b16d-466d-80a1-295235ca8f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef8bd41-6e1a-4cc1-ae7a-d287cdb88ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db46eec-ea21-4633-87a4-745f72961302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3312b6-28e9-4d31-890e-ca7618603072",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea465b0a-cfa9-4b15-8df6-5323d1a5bbeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91172f0d-6fcc-4b16-835e-8304cbc961e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc4c817-b54c-454b-867d-3f0c3191cdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c64b82-5371-4c3c-b671-9b07ca13795f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b23d82a-bc44-4b27-b118-dfb12b937a2e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36f7619-0ac4-4f9a-950d-a892594fcd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e78386-3e86-4282-97a9-ce6b0a19669c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ab123a-c369-411a-94dc-65172f718b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ad9bfb-159c-452a-b27a-098f4eed5b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc608112-bb37-404c-ae95-cdd42b92ff0d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e5e845-e29d-41f6-a730-37513a706f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5dab91-4dc7-421e-bbf5-4cdfb6a36e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cd3161-ca1e-418b-bf69-535d6f223ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bfe31f-83f9-4d8a-9f9f-8720385b8498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0810fb05-d41c-4443-9387-05c103422c3c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ef5f21-920a-43fa-b037-573a510c33ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a092f3-6bc3-48cb-aa7d-db412f4cd39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a59a52d-1d17-4627-9c9d-a3f33e71e9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b7e05d-02c0-42fe-b5e2-8c3a2de42223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a962df10-e2d8-44fa-bbd1-994e97cfaa44",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be01805c-cb13-40b8-80de-bd508eb5db51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21e28fbc-9014-408a-b5f4-8a53c56bf2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af5cb64-3128-4519-8c7d-81f85b10e786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94758dd1-aff3-47e3-a870-5632d2e17eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ef27f9-f694-4dcb-8030-febceefadcd9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14305013-4da9-4c40-bea8-0f7e1b53ec18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "401819bc-540e-4520-846d-5f476a85c8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da061865-540e-435e-909b-9608fd821003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a23757c-1cbc-4fff-895c-1eea83b97b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f16207-89fb-4863-ad1f-d9fcd0fec07e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1177b3ed-102d-4fa5-866e-24ad126f0afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7a6f8a-c124-49ef-a893-a67631ac51cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b0fc7-8b55-416a-8f5b-c4ad78def168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b1ea56-1c28-43cc-8e3f-2a045af4e990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e115a7-23a9-4bfe-8f44-7e53dbeb9fad",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efed89da-5972-42e4-b037-435bd1174601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b466dcc-75f5-4e75-9e76-3a0e62d87058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a869ae89-988b-4f0a-95c1-1a8b22483f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0ffd41-30d9-4ac7-8ed6-635d297ada9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ec4a79-95b0-4814-87cf-fba5be621892",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9ad7b5-8bec-44b5-91c3-a47bc86f04fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d5c5fe4-41aa-4a0e-8bcc-376bbf279725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce286b4-9ee1-4118-8381-682677ecb394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6a284c-3ee3-4160-b3ca-eaf962b8cff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab86b718-b46a-4248-bcf0-1166b3142dd8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3824917-15bb-4383-9700-10ffcade6133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915f591e-248c-42c0-9e39-981784ceabda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a05746-341a-401a-a5a4-ee7bb8387706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4ccfd0-cf93-404d-a453-7f2b05849091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51142dcd-0119-42ef-bf44-e653ec6a9888",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82797366-6f99-45d2-a964-809195d9dc45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d29425-b070-4889-9796-72883c14412e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9641c935-46b4-4ca4-9fd4-e50144b7e22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a497e51-606f-4352-ad1d-45fa6dc36881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2d49c9-2709-40f7-bb01-0887beaf39b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fe2370-bb13-45c6-83b2-a39ad196e516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f748bcbe-d6ee-432d-a2ed-c8f3136072cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d452aca-e5e2-4a75-8211-45597d1faebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2affac9-76a0-4b25-ac6d-da89ed8568d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18893153-5111-489a-a288-0797ef311e05",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c3b895-04f0-4a4d-8647-9d1d17c85577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de8e316-5bc5-4de0-a728-63c3e5f938a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cbc082-b256-431e-a546-4918c5069fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea44b659-d7c5-488f-ba75-361cd6553aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dfafbd-2707-4a85-a3a0-2ea672659cc6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf5721f-32b8-4d28-9713-dec3302148e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf5634d-8b79-4beb-a41d-bf26c67537d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15db6000-5f84-4903-8b36-7f2c657445d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b2e19f-3990-4323-af7d-05c04b720b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d576fcdf-4bc5-4e03-86dd-3c85d0054962",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5cb8d5-4d83-4fc3-a634-0d13fcbb66d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253399c7-b9d8-4cc7-a42c-230257bf70b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38567b15-f9de-4a94-b4d9-905734aef573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9a658f-aeef-44c1-84e2-7ebcf921a068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ba13fc-c1c4-4846-86cd-a15bf1d32829",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c716bcd4-726d-4013-8a6e-1977b68b062b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a80fdb7-8e75-4ba6-b0ec-b9765616c717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b14ab9c-1dbe-41f5-a3e2-a168f2658d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caffc446-25eb-4780-86fb-a16f752f043c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af45076a-12ae-4890-93fd-762bcf527a46",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d44b98-95bd-4e3f-8b71-f601921c13e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "645b4879-b2b3-496a-9ed4-88009ed8f89e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af56a37-ebf3-4de8-9b2d-fc935011e130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd36aa46-36ad-4137-853a-30d71f2c1aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eeea13-796b-4424-bab4-c91bfefe82f1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfbbafe-8c7d-4789-899c-e10bcc8e9c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed3503c-80aa-4aea-a04d-1927e2f7bd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35bfd0d-b650-4279-81bb-ce35a1cc839b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19d91a8-2ebb-4f12-bbeb-babffc834a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7a9e5d-0d5d-441f-91ec-3e9c7e26f090",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e7ba2a-d129-4daf-9951-db2b0885ac92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25024c62-1f39-4fa2-b6ec-ca0bc7f625bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c35013-0a8d-4c18-bef0-f5b76fdb662e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f8a604-ad76-4b20-bba5-51b69415dc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5367a471-3e2b-4972-a0a6-a3a4c483f0ca",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb6e257-681d-49d2-bf16-422180287be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e43f72-23e0-4dd3-94cb-26439cad4add"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a3f5b6-5f2d-4563-acd3-6e541d6f59a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8220eb64-ef22-4d5f-a05f-c5191229e396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7300e242-4339-4a26-b863-1c64ac5d27ce",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830221b5-a305-4eda-9aee-7137917daade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9389786-06ec-4b83-a43b-8cd1443df397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6fe694-2452-4fb0-8f74-f33d761b7eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d2e804-9c96-4776-8374-5522c38ea5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8dc34e-ccc1-4c8b-80f0-6d34014f045a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b661875a-edff-4880-987b-c9338c8fef29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d742c42b-f259-477b-a055-18e15154a4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3bdb60-01a5-4c9c-892f-5a52be4b6c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bccca43-34dc-4787-b62d-5f9eb910ea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc3748c-1760-4af8-9571-01a1f954543d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2c2dd4-32bd-4afc-9809-4501a7a6658d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00857388-0a55-43c8-8564-ecdfd3600692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090a1bf2-bc6a-4da2-af7b-aa80f2681e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3f9a1f-933d-4260-b613-fae3c70b3a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458b1925-3a38-447c-b9cf-150337c01a09",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa48bd8b-fee8-4770-af01-3fcba5b9de33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2964f4e6-c6f3-4bc4-b8c2-cf5fb5936653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce967452-742a-4c88-8efe-3a6ebcbb3b7c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05860650-d6bf-49d6-8533-e5f68f0bfe56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ff4237-2508-47ab-94b8-f70747096d55",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116582cb-021c-42d4-8e7d-d0f844da875b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03acf24d-6e7c-4cae-bbb6-8f6a445cf727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cd2b04-97fe-4f2a-9995-a8a47a16fef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3852febc-a4b5-4d98-ad54-2f999db05b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530d0a1b-6e97-4e64-a6c7-96c625681eef",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f8678f-0b26-4ec7-850b-a4eb4fd14067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebc4616-7328-4103-9862-fcecb6d8e363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f74a17-9010-4932-910f-aef4016a3060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f567439b-7824-49d3-89c7-6c62a9205643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc99a46-3408-4167-86ab-c97c10b4b01c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2af65a-a232-411d-b3e9-ed1b375a082d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd9595c-270e-4c83-980b-dd3a3d23051b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9599653f-43fe-49c3-8405-11b3fc0ca46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b239f49-968e-4fd1-9e2f-aa5048417f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77873348-2290-4365-9766-96e5d94bd755",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c6c9f1-d78d-463a-86e7-85425bf1d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b7f5ab-416e-4dbe-900a-b6a780977860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b31a65d-4dee-4381-8ac5-e19c45ab9714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac7b675-a812-4684-8f1a-4c5c925a846b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbce8a4-5d2e-426a-a1a9-a87f03662fdd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75a057a-8bd1-47dc-b6b9-0894468ae7f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ca2618-50de-4bdb-9f56-9de51814ec26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5936b3bd-6114-4c08-9597-d18bef623535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f6dc1c-c596-4b67-8127-ec3b8e803f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06bacad-4e20-4e88-aee1-9452f66d2e0f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637f7617-452e-4e44-8b71-f047c91a5ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89effd18-b9dd-41e5-87cd-de40ef083b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2d9f29-bd77-493e-875b-285ace5433e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3acbfeb2-234b-45e0-937a-3b501b79b107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130a27b5-27e5-4615-b4a7-1bb8905a93e9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9619576a-de23-4225-91f7-2dcd572df930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b182dbe0-8b59-4186-a9af-475c7206cbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6982f37-c311-4df7-9a9b-50d481223ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b49260-f0cc-400b-ae54-e85f1a3472c0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8983182-ad7d-44a4-b9cd-0de9b276563b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dd13376-cbab-4978-a767-bada265020fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "37c52b39-b60d-47b8-8b8d-c67c34c2fb04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2749723a-797d-478c-84e5-3b9b45ecbc68"
                    }
                  }
                ]
              },
              {
                "id": "2e540fca-000f-41e0-b487-1258ac646d70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69602288-fef4-45d1-a6eb-3523ca43c1ab",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d5776-2f9a-4358-91c3-23e3ad7e5c4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a9b5c866-00f0-4c79-a6f9-22a3b01f07b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad27523b-4460-4304-a7fa-a5379dc68254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "147abd45-2699-41fc-8044-37e0f9a40f2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b05c615c-3d6a-4255-813b-b19fc53c06e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ecc2d85-0062-4561-8336-ef7eae69b114"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e4ff36c-e9d6-4722-bef8-6b6229df66be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e7f73b3-5540-41f2-89bb-d7db8994a265"
                    }
                  }
                ]
              },
              {
                "id": "2d2b1515-830a-4dd7-b93e-eea63ddd78f6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ee7cfa41-89c2-464d-88a9-dec88be24932",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8335957b-97d3-4471-96f1-7da8da7d0cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "84b64844-6d91-4281-8513-24c0a8d343d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79ac91d-4bf9-4581-be80-19c158f65eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b18fb56-de7a-487e-8b9d-fdf43e4eb5ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b5781bef-2c04-4bbe-bd7c-60e4954004a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1bbb3287-d3c3-45ae-b53a-2dfc0d88c02e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3890db6d-347f-4442-851c-ecd31dcad4ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c5f44eff-a85d-4bb7-962f-2701029b8993"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23154b41-09dc-4665-b8df-a5e3d136a9f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44cb76c8-d451-4121-b37e-dad611f4e15e"
                    }
                  }
                ]
              },
              {
                "id": "46af4bec-4a14-48bf-80a7-26e65c45ba1e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3b17ac5-56a6-4f62-8c6f-85eb28f11157",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b2126bc5-eea0-4db0-9769-2e80926544cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2d0c325-6ce0-41fa-83b5-e0469ec6792e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d898631-1961-41b3-b071-109d01314d7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dbcec98-5d85-4dc9-b1eb-d38f45223776",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a424793b-2797-4f91-aa2d-d25fbae8469d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb3bddf4-79c0-425b-a9fe-4a6dd0ecf9d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37cde396-a783-471b-bd11-aa6816a8a46f"
            }
          }
        ]
      },
      {
        "id": "c38b86f1-057f-4808-9683-101fbca93984",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5bc7a7d5-8beb-4f81-80b1-d4371fa08bfe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dda01812-7c91-48a6-b60e-ce0dd712b324",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ce90699-5c9b-4020-9f8d-eb70015afc08",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5153e5b-53f7-4ce8-9963-aa2fdf042eb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6302611-ebb7-409e-bad7-248deffa6b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563e7b63-a7df-4912-a5b6-be7f64f440bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67678327-ef7b-4e71-a50d-25bed7205d5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17bc3a61-4f56-48d1-a70a-6bbd27e42392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e2f632-809d-4ad0-8efd-4c1bcef7dc07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b710014a-10bb-4776-bcae-bf895ef26062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3402e96c-a887-45d1-b505-f560b2752530"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dad58a56-68c9-48cf-b567-1c31e76c35cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dd782ecf-4637-4bfd-b392-2e50e5c8a5f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f9352bb-67d0-4f10-8770-170cbaaf882d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "681472c4-88aa-468c-bfab-faf62f856d7c"
            }
          }
        ]
      },
      {
        "id": "d1bc2157-3ec1-46a6-8dda-fb7fa5e3d4ed",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b94d97a2-97b8-4146-8474-7698756b7176",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbf37315-42fc-485e-bb91-306ff1451729",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19244182-552c-4f14-9355-ef946a51d276",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf5c0ae-a373-45ec-8771-2e0e5f01ce96",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50cde554-2dfa-47d7-872b-1fa7f1744e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e502624-7af4-44c7-b822-e9cb18286006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d0b94df-616b-4226-a312-6e5df3178c1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1255020-a024-4cae-80ac-dcfce6f6d793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44d39fa9-98f4-4e1d-86f2-db87ce5c00d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "737c0837-846e-4cb2-a6ee-b8ca86ea1956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c95cd27f-72fa-40d7-8c07-119c840f622e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5424b99f-dc03-4930-af89-71abe5683e6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a21395ee-d9e3-4857-b5ae-a4f8db179d78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45c24256-2369-41e3-bae3-51c7cfcd4c36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fbcb79d-e298-4c7d-b3a9-0a6e834a407e"
            }
          }
        ]
      },
      {
        "id": "19db6269-46b1-4c95-ac46-bb8ce0b61dd8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4bba7625-1c80-4423-865e-1b7c89b69ef3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d75f8b50-d3d4-4b2c-885f-a5c9e6255e71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e28baff-986c-4ae9-910a-fcd3bc04ee7c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30340b19-29a8-4768-98b6-586c40bf903a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8129ebbe-1763-4dc3-96b0-5b85372ccef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba47de9-3872-4929-80f1-ad67d543aaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "955891a5-149b-4cb3-bce3-d00a07fa391d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c863f9fd-20ce-4556-9d25-1ce020427709",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98dfcbeb-fb1c-4dad-8b81-06d704f3f1d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ba60d56-899c-43cd-9bbc-d96637c8b1e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dab4e55a-a12b-40b3-9621-9b20df9ad076"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdade801-e9b6-458d-b282-7bf228f7acaf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "730114ce-aea5-4ab8-89c2-0abea25520f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69878868-8109-43eb-b2e5-1bc5f6adf566",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9af686d7-eb37-4fb9-bb80-abb01a54c5d1"
            }
          }
        ]
      },
      {
        "id": "6421e7c4-9fb3-4967-a32e-acf06be34d43",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b5132fc-a29b-4573-ba69-40d7b9be6cbd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "712d7c79-dba6-4c50-83e9-946ff8ce15ce",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "932773d0-2f15-4295-94f2-173c4b7ee541",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "060d9b2f-65d6-4b14-b90a-32c83829d389",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "718dbce6-59e9-42d6-b4de-a64ee71e1c08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 333.51587301587296,
      "responseMin": 6,
      "responseMax": 8731,
      "responseSd": 1268.1039291575732,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719189598548,
      "completed": 1719189691153
    },
    "executions": [
      {
        "id": "50f697a6-c08d-4345-9f7e-2eb5545b7436",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2a0ba86b-33e8-4972-8942-c15165127ba9",
          "httpRequestId": "30fdf73f-3795-4a7f-88a3-af9bbf345648"
        },
        "item": {
          "id": "50f697a6-c08d-4345-9f7e-2eb5545b7436",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c291ab7d-81cd-4c4a-8daf-b2f8aa3e3270",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "a1e01ab1-7b94-4c35-86e5-cf448c7ec45e",
        "cursor": {
          "ref": "d6aa4724-ced1-4caa-b407-ff7cbf6c55e2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8d773317-f235-4cce-8147-76ffbce7fbfc"
        },
        "item": {
          "id": "a1e01ab1-7b94-4c35-86e5-cf448c7ec45e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f24a967e-6c95-4eba-ab78-c7ae786b0f9d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "b7df7343-0e3b-4eae-9e26-c4a309f4f0e4",
        "cursor": {
          "ref": "cd98203c-ae5e-4c59-9754-3d6a7d610611",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "785e483c-934a-478d-ae9a-4a95ddb9f7de"
        },
        "item": {
          "id": "b7df7343-0e3b-4eae-9e26-c4a309f4f0e4",
          "name": "did_json"
        },
        "response": {
          "id": "464e6cc5-9d7a-47df-8b29-cc56c60b47de",
          "status": "OK",
          "code": 200,
          "responseTime": 295,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f3699c-5ab0-47da-9cb5-7ba3dfee679f",
        "cursor": {
          "ref": "bf4ad309-8383-4c96-a2ff-d203321740d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acd404ac-c741-4eb2-bc81-cbd385df59c0"
        },
        "item": {
          "id": "b6f3699c-5ab0-47da-9cb5-7ba3dfee679f",
          "name": "did:invalid"
        },
        "response": {
          "id": "39d64dad-14fd-4113-8b49-461d87b1e237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2379,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f3699c-5ab0-47da-9cb5-7ba3dfee679f",
        "cursor": {
          "ref": "bf4ad309-8383-4c96-a2ff-d203321740d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acd404ac-c741-4eb2-bc81-cbd385df59c0"
        },
        "item": {
          "id": "b6f3699c-5ab0-47da-9cb5-7ba3dfee679f",
          "name": "did:invalid"
        },
        "response": {
          "id": "39d64dad-14fd-4113-8b49-461d87b1e237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2379,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc89cf9-0fef-4cd9-ae45-a99c8ccfb7ea",
        "cursor": {
          "ref": "a410207f-504e-4853-936d-327f6669c4ee",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "189babfd-1425-4f92-af02-20c119b82952"
        },
        "item": {
          "id": "9dc89cf9-0fef-4cd9-ae45-a99c8ccfb7ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bd6abbba-bc80-419d-b6bf-17678fda31d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2380,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dfdb79-c19f-4917-84d5-d4f98f2dd711",
        "cursor": {
          "ref": "2c9faa9b-df87-402e-886e-29f0afe4de3d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39142aee-ed2c-46b6-b54e-5eeeb2d17749"
        },
        "item": {
          "id": "e6dfdb79-c19f-4917-84d5-d4f98f2dd711",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "29c6bf33-2e92-4e58-bb64-5f8a88f856d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2012,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976bb44e-53ea-4366-b08b-d4f77f306961",
        "cursor": {
          "ref": "08c4e5d1-bd67-442f-a505-d7fbaaf1c6c2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b62f8658-60ed-4b08-9f57-8a22ab1e432e"
        },
        "item": {
          "id": "976bb44e-53ea-4366-b08b-d4f77f306961",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "64c2151b-1123-4957-b863-ec81ce25840d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e389ae-3756-495b-90c4-3f6d54d4d0f4",
        "cursor": {
          "ref": "326a53f1-03e6-40e7-b47b-39ad4ed1fba9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b3f8f01d-e0b9-4613-99ab-4572c36cd4ad"
        },
        "item": {
          "id": "45e389ae-3756-495b-90c4-3f6d54d4d0f4",
          "name": "identifiers"
        },
        "response": {
          "id": "7ba654ba-4abb-4aee-8700-6a291e53277a",
          "status": "OK",
          "code": 200,
          "responseTime": 2488,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61af0ac7-1344-4654-9fbc-05565662c1dc",
        "cursor": {
          "ref": "01951c6a-9b02-4908-a601-fad43c6775d0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b7379c88-d657-4911-aed7-ffd9f591e55a"
        },
        "item": {
          "id": "61af0ac7-1344-4654-9fbc-05565662c1dc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2c0a2202-3c31-4aed-9abb-96d9d2074a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ee69ed-6015-4253-9cb9-5f11c824c687",
        "cursor": {
          "ref": "df864c26-dd65-4057-850f-c0dd5f5f9ee7",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "53b3e241-b81b-4a07-822e-f19417de0675"
        },
        "item": {
          "id": "75ee69ed-6015-4253-9cb9-5f11c824c687",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ad9fde5f-c18f-4430-89d5-a28cffe0069d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05410958-ca3a-4741-8b48-0b29e144661d",
        "cursor": {
          "ref": "49ce295b-f8a9-4f79-8a66-4240c7f0fe5b",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a8283037-1ef1-4f72-b8de-026e7f8f6b17"
        },
        "item": {
          "id": "05410958-ca3a-4741-8b48-0b29e144661d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4aeeb6f4-01f4-4205-988e-988052cc6e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9ecbbb-170d-4b88-862d-0afb477c6385",
        "cursor": {
          "ref": "594261cb-a4c5-40f8-82ac-7897e829b509",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1045f89a-1bd9-42fe-9fd3-77a8f8220255"
        },
        "item": {
          "id": "6b9ecbbb-170d-4b88-862d-0afb477c6385",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a0b90bcc-c550-4c78-8818-fcd512a7553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9637ab-109f-4562-96cb-905840ae2954",
        "cursor": {
          "ref": "b126d340-3a7b-480a-9c5e-2467c55f84fa",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f04ec015-230e-47bf-90e5-fb845e5daf4e"
        },
        "item": {
          "id": "ba9637ab-109f-4562-96cb-905840ae2954",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3fc4f455-3b11-4384-8f05-9b7e30d473b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be66b90c-85ca-4cd9-9fc7-1d789f8ab442",
        "cursor": {
          "ref": "f4f4e439-503e-4a67-9f93-b7aa66f7a813",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3a91d315-0333-4e17-9577-556a96e1db0e"
        },
        "item": {
          "id": "be66b90c-85ca-4cd9-9fc7-1d789f8ab442",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "98d075ad-9c2d-482b-86ae-035256f0528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1302bed6-f4b2-490c-8142-6157dce4d8c4",
        "cursor": {
          "ref": "ed64d0ac-0494-46f3-a2fa-9c77f9c691f6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c37ad1c9-c202-45fc-8b7a-78ddaa1d6a3d"
        },
        "item": {
          "id": "1302bed6-f4b2-490c-8142-6157dce4d8c4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f97b16bd-759d-441a-8297-7a0e1c8a01fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f812b95-afaf-4b48-98e1-bcd75239ec70",
        "cursor": {
          "ref": "9eb3ed21-bc0a-4da5-9684-5501f2bc4083",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "56fcd332-f1c7-4513-8a9a-9d002e69de81"
        },
        "item": {
          "id": "1f812b95-afaf-4b48-98e1-bcd75239ec70",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9425c9df-09ee-47c2-bee9-20c6eba3d8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78ca785-b43d-480e-99a4-89cf8298680a",
        "cursor": {
          "ref": "e6a3b4a3-5bf3-4845-a58b-6244ab371fb0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "83d5d2c5-9671-4a61-b8d1-6f2f444dbf07"
        },
        "item": {
          "id": "f78ca785-b43d-480e-99a4-89cf8298680a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d15b96c-a369-447c-84c0-4d410924f875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd6e41d-865f-464c-ae02-04466b20fefe",
        "cursor": {
          "ref": "f16c07cf-b322-49a9-9132-3091719e8b74",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bdc5799d-25e6-46f3-bd0d-b954053c4e51"
        },
        "item": {
          "id": "5fd6e41d-865f-464c-ae02-04466b20fefe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8644b5b0-9e8b-41b2-9a66-45e5a0fd5649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29a11bb-88ef-40e7-8e42-eb016377dfdf",
        "cursor": {
          "ref": "403cfea0-26e2-4615-bbf3-dc7ef26462a7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "43ba7fbb-c5b2-4562-9ec2-4ce83e03e128"
        },
        "item": {
          "id": "a29a11bb-88ef-40e7-8e42-eb016377dfdf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4c6b3206-2c2a-49fb-848e-ceceb00bb168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a16eef-dca3-4cc9-829b-df620af74db5",
        "cursor": {
          "ref": "d3e284ab-eeda-47a8-aa3f-d0ace42b7bf5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1bac9f55-8dbf-40e2-b630-f3a3f276d1d0"
        },
        "item": {
          "id": "57a16eef-dca3-4cc9-829b-df620af74db5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1c1d2e59-476c-4580-a7a0-0a798429faa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e3784b-57c7-4315-aafb-598f5586db00",
        "cursor": {
          "ref": "fdaa4021-1cbc-4178-8fa2-06a0a39c708c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e827a3c4-fa02-4f7b-9204-a365d44bf84f"
        },
        "item": {
          "id": "f8e3784b-57c7-4315-aafb-598f5586db00",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8011500e-8f12-4c37-8e0e-f3f256c8b026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150b95e6-0cfe-4ce6-8557-851e284d9370",
        "cursor": {
          "ref": "3f827eb0-c2e4-4ca3-baa7-ffe3b162c1d2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0772fd14-feae-4760-9028-f36e080de145"
        },
        "item": {
          "id": "150b95e6-0cfe-4ce6-8557-851e284d9370",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "09235104-749d-41e8-9370-ffaccec1c86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc424e76-b94e-46f5-8aa6-f1129c9d69ed",
        "cursor": {
          "ref": "e75bb55c-83ec-457f-bef2-6854793a72d5",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ec3d38bf-cdfc-41a7-8db9-64abcf962c80"
        },
        "item": {
          "id": "fc424e76-b94e-46f5-8aa6-f1129c9d69ed",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "67274c70-9a66-4098-941b-17284818a3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97797f58-d807-4b27-8808-856a1c79e633",
        "cursor": {
          "ref": "aed72b0d-7cbe-41b3-9bfd-d59956ba5131",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2c05e62f-7bbe-4453-84d0-f9f36fec7a78"
        },
        "item": {
          "id": "97797f58-d807-4b27-8808-856a1c79e633",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e6f2bdd4-59ba-43ca-9f9a-89360721d74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabd9a3a-ec83-48a4-8f4e-3d28101abf3c",
        "cursor": {
          "ref": "10e8770a-0a6b-437f-b2b0-d3f278a6287c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "64e21efd-5f31-43b8-af79-6de968af3262"
        },
        "item": {
          "id": "cabd9a3a-ec83-48a4-8f4e-3d28101abf3c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a3c78d3-d3bb-442a-b900-d49ddccd45b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17483ab7-d907-414a-bae2-df359a4e57b3",
        "cursor": {
          "ref": "705a0cb4-0680-4a6b-a6db-5a9cfa17bd6b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "abc168b2-d433-4169-8388-0b273efc4751"
        },
        "item": {
          "id": "17483ab7-d907-414a-bae2-df359a4e57b3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8ba56169-c796-4908-8c3f-9db2ff4e3759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af11f203-9589-4754-a5ce-af9aa45f8811",
        "cursor": {
          "ref": "8fee8e73-f4ba-4c16-b317-cc0627fd6ade",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ea1dad65-ef91-421a-a892-0106d56eb787"
        },
        "item": {
          "id": "af11f203-9589-4754-a5ce-af9aa45f8811",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7d34c1a7-3298-4b1d-8371-2c5134a6e9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193e1a61-ef85-4f7c-bb86-a33d8f4b3b18",
        "cursor": {
          "ref": "1431c3cb-cff7-4e4c-87be-ae1ec08f7480",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6a9b36b2-074b-4ed2-9870-ba99ff7ab983"
        },
        "item": {
          "id": "193e1a61-ef85-4f7c-bb86-a33d8f4b3b18",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5c26f668-9375-4445-8c84-3713f34d2ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68d2b14-7429-4460-a9dd-553385f6435e",
        "cursor": {
          "ref": "51c0f045-e323-4ddb-b593-2f4792ae80d4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1011d3b3-6396-4a35-87d6-5f56a92e948c"
        },
        "item": {
          "id": "a68d2b14-7429-4460-a9dd-553385f6435e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d423848a-ddc3-4d2a-b268-6537b1033b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2cb791d-f036-4b7a-bd03-b0ef41cc9251",
        "cursor": {
          "ref": "4767b45d-a284-4996-9369-102d2c85e6d8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "736117ca-cb86-4f30-97da-1a58aeabf85d"
        },
        "item": {
          "id": "d2cb791d-f036-4b7a-bd03-b0ef41cc9251",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5c38d113-5d55-4eae-a2fd-8768eb895ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad403da7-1e0c-4cde-9d3c-adc034799ab9",
        "cursor": {
          "ref": "fa1886f4-e205-4011-8a8b-02b5664186b4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b12e3bda-59b0-4363-8eed-a4159588baa9"
        },
        "item": {
          "id": "ad403da7-1e0c-4cde-9d3c-adc034799ab9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "89d684a5-c938-4a50-8bda-b327a9f0d2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e19b5da-0970-4d0c-9e07-e576821ca367",
        "cursor": {
          "ref": "30afeaac-8b73-40c2-99bb-c7a65b150d94",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f02d4f4c-a6a4-4049-8921-fc43e235c966"
        },
        "item": {
          "id": "0e19b5da-0970-4d0c-9e07-e576821ca367",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "263299b9-cd3f-4100-9fd7-b394a1cb4969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d219fe-8c8f-47ff-aa57-a78085caa1de",
        "cursor": {
          "ref": "873fc08e-7b9c-420c-9f07-6242b2730b53",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e2af37d2-1059-401f-a78b-a733b88678f1"
        },
        "item": {
          "id": "c3d219fe-8c8f-47ff-aa57-a78085caa1de",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5f6a194-6bb3-4f4e-be36-0d1cd811abfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8908e9-06bc-455b-8c1e-122162acaacd",
        "cursor": {
          "ref": "e914f820-a00e-4d20-8c5b-3dae7c5e7960",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2b3a0781-5a20-4446-8856-a16034b1b8eb"
        },
        "item": {
          "id": "0b8908e9-06bc-455b-8c1e-122162acaacd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cb7c5500-c326-4c07-9d76-af5197fafda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d32843-a357-4f8f-b554-b6bfd81307fd",
        "cursor": {
          "ref": "9b64e2de-1c6e-4b99-8cfc-56bbe4185edf",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ebb777c4-83fd-43c5-afcb-6b881fc1778e"
        },
        "item": {
          "id": "41d32843-a357-4f8f-b554-b6bfd81307fd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "accb6fe5-638c-4b9f-abff-12a7d0db2705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae6d41-cf0f-4929-8457-2143dba20dd1",
        "cursor": {
          "ref": "fe41a10b-c89a-4bbc-abda-86bdfad9e4f6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0f34de9f-1c9d-442d-93bd-a60a87ed9aa2"
        },
        "item": {
          "id": "9fae6d41-cf0f-4929-8457-2143dba20dd1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9492aad4-a682-4097-9cbb-1a18f295086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1cd431-5c6f-4d78-860c-bd3848bdfda7",
        "cursor": {
          "ref": "6c5f6dcf-c996-4121-a777-2c00e219a1ed",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ab1f95c7-0e3f-41e9-a48d-30e1a9e05091"
        },
        "item": {
          "id": "ba1cd431-5c6f-4d78-860c-bd3848bdfda7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "338cc01a-81c9-47f5-a473-2537ac839ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9e6b58-2e4c-4afb-b772-75f7b0ba1760",
        "cursor": {
          "ref": "b9ffc0ae-cab4-4bb8-bc9f-c15dc4f22a7d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "02031a8e-46bd-46e0-811c-4f0f70a85ddb"
        },
        "item": {
          "id": "9c9e6b58-2e4c-4afb-b772-75f7b0ba1760",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a63caf06-c9f7-46ff-b0b6-d3467c6bf6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b91efbe-56c7-4c2d-9616-9951648c7d06",
        "cursor": {
          "ref": "df118420-fc9c-4ad2-a762-f0ff3af99f10",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8f20718b-d7d8-4d2b-8196-612a0ac1317a"
        },
        "item": {
          "id": "9b91efbe-56c7-4c2d-9616-9951648c7d06",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b037440f-0cd4-4f57-8651-489111278de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36627b7d-fc31-483b-ad05-324068a0428a",
        "cursor": {
          "ref": "74667823-2044-4488-94b1-1f42818fecb5",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7fbd13e5-e64d-49df-9d0a-dcfc65773c0a"
        },
        "item": {
          "id": "36627b7d-fc31-483b-ad05-324068a0428a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dc698b93-2f23-4f4a-ae07-30f7140ebc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67603852-85f1-4b48-a270-7a215f833577",
        "cursor": {
          "ref": "8ee04929-e3e7-4ed6-9cb5-6f1afae96b1f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7227e339-57fe-4e98-850d-6a6e1efb62f3"
        },
        "item": {
          "id": "67603852-85f1-4b48-a270-7a215f833577",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "409b832e-62b0-41e4-ad8a-cb0fb63f0865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee20b557-42ea-42eb-ab54-6e945b1996ba",
        "cursor": {
          "ref": "de5d010f-6b52-4699-894c-74328232461a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d2dd2484-d9e1-43f7-8729-92b4fde11c86"
        },
        "item": {
          "id": "ee20b557-42ea-42eb-ab54-6e945b1996ba",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0930bcb2-b0e6-45cb-b446-32e44900627d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb0a2ea-0663-4d74-82f3-44c15506abed",
        "cursor": {
          "ref": "51b8a052-cd02-4ace-9cab-d7638aa06a51",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2dd353e7-d4fa-4dd7-9ea6-ad83503ca310"
        },
        "item": {
          "id": "2cb0a2ea-0663-4d74-82f3-44c15506abed",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9af7f9cd-501c-46d1-9bc5-b07468c2cd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ec7027-0d4f-4123-8792-6256c637f607",
        "cursor": {
          "ref": "528484ed-51df-4198-a0d2-e85c864ed897",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "69c940c4-c388-4f17-ab01-6881f62d8990"
        },
        "item": {
          "id": "74ec7027-0d4f-4123-8792-6256c637f607",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bd646536-b8f4-47b6-92c4-b087ebb537b0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a4408a-fbba-4c70-a1a0-947a43c36ea2",
        "cursor": {
          "ref": "c878cbe4-3803-4f82-8aa6-9ae981e9f61f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8108316f-8847-48b4-8445-afb898741f2c"
        },
        "item": {
          "id": "96a4408a-fbba-4c70-a1a0-947a43c36ea2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9356df27-1d2c-4085-ad16-b6baf4374690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f962b2-2fce-4c6c-a3e3-f884e5311466",
        "cursor": {
          "ref": "309a2d25-5050-448b-85b1-63592327d700",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "58a15cb8-221d-4565-9795-68a4bdc97a62"
        },
        "item": {
          "id": "06f962b2-2fce-4c6c-a3e3-f884e5311466",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e7d39d9a-cbef-4a1f-b0bc-0eaf0c540a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4f5d26-270f-412b-b786-1180afb9cd19",
        "cursor": {
          "ref": "259add60-e8ac-4bd3-af4c-6c868c5802cb",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ec5c4173-268d-49ec-a02e-1535696d57d7"
        },
        "item": {
          "id": "8f4f5d26-270f-412b-b786-1180afb9cd19",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8b3c0600-c991-486c-998c-7915800aff8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3012d133-8e00-4bfa-91d0-afb3508ead3b",
        "cursor": {
          "ref": "dbf19b6f-0426-4f5a-81be-b2f89279fb94",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2ca0c0a6-e422-474f-96dd-67bdec185896"
        },
        "item": {
          "id": "3012d133-8e00-4bfa-91d0-afb3508ead3b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e33b8834-2649-4e63-a0e6-a2487dd4ef58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9d8f15-8b05-43b3-ab2b-477133fe6d00",
        "cursor": {
          "ref": "7aa56ae8-f48e-4272-92b2-5d86184e64eb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a472454b-9d77-46b5-b139-084d099b190e"
        },
        "item": {
          "id": "ce9d8f15-8b05-43b3-ab2b-477133fe6d00",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "206c12f7-209f-412d-b852-7faa1b2028ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eff3d3-faf2-4e87-a6db-05c8a141f655",
        "cursor": {
          "ref": "a502bb5d-6147-4594-b2c7-025ab79bc003",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "055742b9-60c3-4a2c-875f-ab05380d1f51"
        },
        "item": {
          "id": "96eff3d3-faf2-4e87-a6db-05c8a141f655",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "13ff0d86-d55b-4a31-9941-4a1970b6fa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b814f012-17cd-47bb-9c7f-6bc03067d90b",
        "cursor": {
          "ref": "a8eca31f-4d15-4080-9b70-31a71515b918",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "97c095c2-efb7-4129-9564-a565e3dc16aa"
        },
        "item": {
          "id": "b814f012-17cd-47bb-9c7f-6bc03067d90b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9e2af785-93ed-4daf-b802-4720d816f5d8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 81,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfb7c48-af4a-4ba4-a789-29cfc82ef4a3",
        "cursor": {
          "ref": "c88920af-656f-4f03-920e-a5e6614b4027",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3e1abf81-790e-4bfe-998e-0dbe60e0c377"
        },
        "item": {
          "id": "1bfb7c48-af4a-4ba4-a789-29cfc82ef4a3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6a9beae4-8e16-4793-a99e-a87b8d88982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf233032-b6b2-42e2-9bf6-a7c4499446b6",
        "cursor": {
          "ref": "dba34454-96c0-46f4-b812-4f632d7b80ee",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5b9fe203-9400-4fb0-952d-778df228f56b"
        },
        "item": {
          "id": "bf233032-b6b2-42e2-9bf6-a7c4499446b6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9f419d06-5690-4496-9153-452403963f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d96ee6c-b20e-4a7d-81b7-6cc6fc5668b7",
        "cursor": {
          "ref": "e4da0b19-ceba-4385-83b0-a8306c206cca",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9378a847-e127-44c6-bb71-84aa62e10037"
        },
        "item": {
          "id": "7d96ee6c-b20e-4a7d-81b7-6cc6fc5668b7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1a64d21e-a8ee-45a5-98da-bc75485b2601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1210e8-8231-46a8-ad15-1625ad920828",
        "cursor": {
          "ref": "dd16d6ad-dcd2-4de6-aedb-b346ad84c222",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "442082df-35d0-48c7-b8ea-959066c6da57"
        },
        "item": {
          "id": "fd1210e8-8231-46a8-ad15-1625ad920828",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c409191b-70ae-4150-80b0-b5f765346e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e88325a-9742-4c6d-a861-4590429c909c",
        "cursor": {
          "ref": "c43b2c73-a41f-4951-82ff-42ab9b3ad663",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8c19e4af-867c-4639-9494-400a5c18ed14"
        },
        "item": {
          "id": "8e88325a-9742-4c6d-a861-4590429c909c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b51ff7c2-ead7-445f-8573-e1b2f73245e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5250a7c1-e554-4dcf-8f88-0a999c8efa08",
        "cursor": {
          "ref": "ce83e169-9e5a-4b65-95d6-e8f9be85545c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "69c543a8-a5c8-4bf0-a819-3e6c57189f63"
        },
        "item": {
          "id": "5250a7c1-e554-4dcf-8f88-0a999c8efa08",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9867239f-fa64-445a-8dd2-09f9a6a90b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7e83cc-31f5-4449-ab0f-14c1ac8dadd3",
        "cursor": {
          "ref": "5b5f29f7-d7a0-4160-98e2-f25f6cc885f7",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "18bc69ac-115b-4870-89aa-da90f2ddd0fe"
        },
        "item": {
          "id": "8e7e83cc-31f5-4449-ab0f-14c1ac8dadd3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4b303b78-07e3-4cf3-a434-248e1825596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b85de4e-8245-474b-9309-200d56b9c6d8",
        "cursor": {
          "ref": "fd70f9d1-c44b-4cf0-a2dc-3864d603bd11",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "38077ba9-9c45-4381-baae-0c433c7d3743"
        },
        "item": {
          "id": "4b85de4e-8245-474b-9309-200d56b9c6d8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "85f1b92e-2c12-49cf-b177-58dc6c9a75c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1158853a-d61e-4007-9823-7909ddf17528",
        "cursor": {
          "ref": "f32884c9-fdf4-4b63-8e37-e7498523bf28",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a165b677-b98f-4e96-a217-ee78b8eb05c1"
        },
        "item": {
          "id": "1158853a-d61e-4007-9823-7909ddf17528",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "af56fff2-d551-401f-b6d2-e911967e9f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d80139f-ca59-44ee-9045-b7248f5ca5ea",
        "cursor": {
          "ref": "7f48c847-6332-4f35-9f82-fca3fe75c52a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3495f198-75e6-4a70-a32a-27607b55d1ac"
        },
        "item": {
          "id": "5d80139f-ca59-44ee-9045-b7248f5ca5ea",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "59593aec-b2bd-49be-9f79-f5c2379cacba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39275e9-b3bd-49b9-9023-ada08fc22a0e",
        "cursor": {
          "ref": "26a1caa9-c330-4716-af87-15ad5f29a5ed",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e0770973-a8b7-445c-a96f-720ab475db85"
        },
        "item": {
          "id": "f39275e9-b3bd-49b9-9023-ada08fc22a0e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bcb88f74-309a-4412-b8df-c8b55519afc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e85c559-fc7b-4446-a14d-dc0e423a7286",
        "cursor": {
          "ref": "89f0ccf0-98f5-47e9-b051-7b2942884c1c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "52ba52b6-fc98-4188-812e-d96232ba432c"
        },
        "item": {
          "id": "3e85c559-fc7b-4446-a14d-dc0e423a7286",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8dc6d8c9-3033-47a9-ab61-2ed4194fee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62faf3d-6dab-4534-b132-d6639d4a49f1",
        "cursor": {
          "ref": "3d4c5b4e-6ceb-40f7-a617-7b23653b635d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e0b8022d-87aa-4d47-a10a-3d82ee117eba"
        },
        "item": {
          "id": "c62faf3d-6dab-4534-b132-d6639d4a49f1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "593054f0-6270-4723-b0dc-a3cf53b15b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a8a364-8bc9-443f-abb6-0728d437e367",
        "cursor": {
          "ref": "673dff80-45e3-40ed-9e08-87df25b441ab",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cc1c7027-d6b5-424f-970e-2c2f43d43758"
        },
        "item": {
          "id": "17a8a364-8bc9-443f-abb6-0728d437e367",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fede32d6-996b-47ac-8219-9eb2aa0e82be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d635711-28a7-4dd4-b7ba-e71bf0f7177d",
        "cursor": {
          "ref": "ad694f4c-9856-460e-9427-25c380c92c42",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9a3a9cd2-d0d7-4fb9-9bcf-ec03253596b0"
        },
        "item": {
          "id": "7d635711-28a7-4dd4-b7ba-e71bf0f7177d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "63cfc2e1-9e44-48fd-9d95-6fec494d263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e8471a-16f4-40bc-8b69-39f799d8694e",
        "cursor": {
          "ref": "ab51d9a6-79d2-47da-9bb0-b98194f5a29a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "683c8a90-c2cd-49e7-a1bf-0a0aaf17014d"
        },
        "item": {
          "id": "76e8471a-16f4-40bc-8b69-39f799d8694e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "92f5a95c-ba95-4d53-b20d-c35672b297e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c958ab05-ad1f-4a83-bc9e-b3f2a1e21d52",
        "cursor": {
          "ref": "8e2949bf-046d-45e3-be08-35199ea50f50",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3d93eb0a-55ac-4a9c-ae24-1f7b4854bb2e"
        },
        "item": {
          "id": "c958ab05-ad1f-4a83-bc9e-b3f2a1e21d52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fc56c486-8222-4a2e-b30f-5ec78a5ab772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7b4ad8-e214-4937-8736-8e1a2f6f6377",
        "cursor": {
          "ref": "5cb80839-32e0-4457-a88a-a92b63945030",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "27d7ba28-6fc7-4266-aa07-625976c5e2bf"
        },
        "item": {
          "id": "ea7b4ad8-e214-4937-8736-8e1a2f6f6377",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "22cec77e-1a0f-4ce4-a7ce-939648fcbfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12746008-1483-4e4b-9eaa-df5123f4fda5",
        "cursor": {
          "ref": "b3db3ed0-717d-4128-8507-aa98d6832a57",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bcf225ca-ee3c-49b3-97c5-26f96d952ad1"
        },
        "item": {
          "id": "12746008-1483-4e4b-9eaa-df5123f4fda5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "35dd861b-bfeb-4abd-bb0f-d9bd3293b0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96356151-0375-448a-a412-4c39890c26cc",
        "cursor": {
          "ref": "35f9d0ed-655d-48b4-bb74-48503d8b8836",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ca979821-41cf-42fb-bed0-d6b135be6847"
        },
        "item": {
          "id": "96356151-0375-448a-a412-4c39890c26cc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "40e6f015-4e58-4323-b4ca-f4967aeb6b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec756bf-341b-4e1a-af17-40ca8ddcef49",
        "cursor": {
          "ref": "2f50d4d0-8ee2-4902-a3a2-c6aee4b1a0ad",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e16d433f-f5f5-42c1-9b2a-745cfa722cdc"
        },
        "item": {
          "id": "eec756bf-341b-4e1a-af17-40ca8ddcef49",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4b60f4a5-f7c7-44f6-bde6-35ec317bf9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302945d2-a49a-482c-80f1-b1d5f6e938c4",
        "cursor": {
          "ref": "8c4e953e-1c13-430c-a635-85dc7d21ebec",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "849fa53b-0b0a-4517-aa45-02ecc1221085"
        },
        "item": {
          "id": "302945d2-a49a-482c-80f1-b1d5f6e938c4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6b1f7b69-cf41-4a95-8af3-06f714e8d15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ebf3ec-e19c-4d29-afb3-e68a79b4d11b",
        "cursor": {
          "ref": "a6d7fee9-a996-400a-8a7e-2dd0f0c95490",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7c9d64dd-bc9e-46e7-b81c-f6f93ace1448"
        },
        "item": {
          "id": "97ebf3ec-e19c-4d29-afb3-e68a79b4d11b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f190ff5c-532f-4177-878f-99b7ef2738e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc67701-7332-44a9-bf52-a4c69330fd92",
        "cursor": {
          "ref": "b996b5c8-1e9d-44b6-af52-530a4faf64e5",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1af4da41-2a05-4137-885e-610c7e047c17"
        },
        "item": {
          "id": "0fc67701-7332-44a9-bf52-a4c69330fd92",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f5b47678-1329-459c-9fa0-8fa3650b676d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c21c88-4e09-4ae6-9c10-b0decf6f7d1f",
        "cursor": {
          "ref": "9e998f67-3580-4bca-9b41-1c6ab156be39",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2661c790-78dd-4cdf-a180-59728eb8c1ca"
        },
        "item": {
          "id": "f1c21c88-4e09-4ae6-9c10-b0decf6f7d1f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cc6e8498-58c3-4acb-af88-aba718ab95ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51203557-7131-4913-a6ca-8b9d161b279f",
        "cursor": {
          "ref": "2bc385a2-90ae-4983-aae2-9d722fb6c983",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1e5b187c-ef9e-49dd-8097-95d9ecc2b981"
        },
        "item": {
          "id": "51203557-7131-4913-a6ca-8b9d161b279f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c156e692-ca59-41ff-804c-5995f0c676c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3eb418-1a23-459f-8623-fc839f97ea30",
        "cursor": {
          "ref": "3752099c-d308-492e-87b5-c705fdd4e755",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3d5fe030-191e-460c-be39-1482a77f84bc"
        },
        "item": {
          "id": "6b3eb418-1a23-459f-8623-fc839f97ea30",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cddbb36f-39a9-4776-946c-4d9f25559b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab49b40a-f6dd-4b8c-8166-6bde9f018540",
        "cursor": {
          "ref": "1e704b95-25d7-4222-a111-77445493ec66",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "47205877-d135-437d-84af-d42053d32fca"
        },
        "item": {
          "id": "ab49b40a-f6dd-4b8c-8166-6bde9f018540",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a4378d55-bb4d-444f-ab20-708fa2607d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b79f442-f171-4b19-ae88-b48d541b7e42",
        "cursor": {
          "ref": "d1c14362-c9ec-4582-b523-f0ce8b840aba",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8069f3b8-6eee-416c-bc4a-a58e0e32c2cc"
        },
        "item": {
          "id": "2b79f442-f171-4b19-ae88-b48d541b7e42",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1aed53ee-a280-42e6-b15b-bb8d2a3b5c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7dfa20-9962-4c91-9c98-fed9dea545c1",
        "cursor": {
          "ref": "bf557019-4a1d-46fb-8fe8-ad70091be96e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9adf35d0-1046-4d81-ba41-fd135bc05552"
        },
        "item": {
          "id": "bc7dfa20-9962-4c91-9c98-fed9dea545c1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3d15a71a-3de9-4651-bb58-3d707182f03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0823aea3-c524-40bf-91aa-35dd2fdda30d",
        "cursor": {
          "ref": "c4b86de9-a85a-4251-9d9b-3420815094b8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1eee0718-5e5f-49db-93b9-9c23d832159d"
        },
        "item": {
          "id": "0823aea3-c524-40bf-91aa-35dd2fdda30d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e511307d-78fc-4709-836c-06034718fbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f95754c-a72f-4cdc-b120-882e4e50b30a",
        "cursor": {
          "ref": "47633304-a792-4337-85dd-e33968788f5a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fe45f88d-d70f-4b72-81cd-421654339a0c"
        },
        "item": {
          "id": "4f95754c-a72f-4cdc-b120-882e4e50b30a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4ce14dc1-ce07-4018-b9b0-be1a12fe635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdcc4a4-b4f1-45ef-8390-ae6541f71805",
        "cursor": {
          "ref": "ffa12269-26b0-45ab-adf2-ae9fba66d4de",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7ce60e61-7a23-4519-afe4-6a92a0d53c1d"
        },
        "item": {
          "id": "6cdcc4a4-b4f1-45ef-8390-ae6541f71805",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ffaf71de-d9e8-4b94-a6b1-aeb7847ec518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0326ff6-f0f3-4f73-9159-5a744f1ba24b",
        "cursor": {
          "ref": "3579a561-0742-4b38-aac0-4e02406bd569",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "805f0fe7-cf50-4797-a4d9-e1b5cddf1d6b"
        },
        "item": {
          "id": "d0326ff6-f0f3-4f73-9159-5a744f1ba24b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b24f1049-8dc7-48b2-87c1-c9039cf5f51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70716949-cde9-41f7-a073-8d5655fd9fac",
        "cursor": {
          "ref": "5d758af0-b9e6-4127-aea9-6eec834a3ef2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3dcaec8e-e104-45f1-9f9a-c97b02cf26c6"
        },
        "item": {
          "id": "70716949-cde9-41f7-a073-8d5655fd9fac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "58625ffd-2c77-4fea-9c5e-5eb3a873ebd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f255b9-5868-4fce-80b8-1980846a2c8b",
        "cursor": {
          "ref": "df39ccf6-0b19-43d6-a401-3cbc9c53b4ef",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "50186a18-0fd2-40b1-8eba-4fe516717c49"
        },
        "item": {
          "id": "c9f255b9-5868-4fce-80b8-1980846a2c8b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7bb12c6c-ee90-4bb7-9046-79ade304c8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4f0bb6-c763-4bba-a9d9-0ac3a80bc86b",
        "cursor": {
          "ref": "6a68cacd-6f48-4399-9d66-c97b186cd0f3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "345a5012-7c32-4a5b-b510-726dca427f1a"
        },
        "item": {
          "id": "7a4f0bb6-c763-4bba-a9d9-0ac3a80bc86b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "74717df9-f895-4ef9-867d-ba46885e995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f77f05-8568-475f-9829-893cb2dc124b",
        "cursor": {
          "ref": "41974253-2734-42df-904d-fba89dc67f01",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b9fefa43-f7f7-415d-9038-7c00d8f04ea3"
        },
        "item": {
          "id": "52f77f05-8568-475f-9829-893cb2dc124b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "720dc53a-604c-4b7e-b6e4-c4c8a3c102e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df738939-4d24-4dff-b8d0-85ae08d3c09c",
        "cursor": {
          "ref": "58d3b33f-85f8-4bf1-a122-48b544be513a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "88fb32fb-fb1a-4fe2-aa96-1b85d8e9b221"
        },
        "item": {
          "id": "df738939-4d24-4dff-b8d0-85ae08d3c09c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "74b46d94-4318-4161-a547-43e9c88d6275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bc68ea-5b8c-48f5-8726-2e3482635fd2",
        "cursor": {
          "ref": "c519e5ae-6e13-4f6b-a236-bd2eaff985dd",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1e8a474f-1505-4138-b56e-f5fbcc394e77"
        },
        "item": {
          "id": "42bc68ea-5b8c-48f5-8726-2e3482635fd2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "556dfdad-6124-413f-8e23-2f868d67427a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473bc24b-2d27-4485-b816-8df28319db02",
        "cursor": {
          "ref": "0bcb183c-d582-4fc6-9dd1-1cbac1f103d1",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1654329c-5dd9-47b5-b917-041fa8b40082"
        },
        "item": {
          "id": "473bc24b-2d27-4485-b816-8df28319db02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f36644b0-a5aa-4de1-8791-55920042965a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6997ef-a766-427a-9512-6fc2ab553afb",
        "cursor": {
          "ref": "cbcfa974-3fb7-49e2-90e7-e0412a282014",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a7bf81fe-9941-4d0b-8ab3-9d96f046548b"
        },
        "item": {
          "id": "7a6997ef-a766-427a-9512-6fc2ab553afb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9ee6cb9b-9dc7-4d4f-ba19-b2d74cbfa3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ec7b01-2e0b-4531-9220-23c36dd537d3",
        "cursor": {
          "ref": "93926417-9779-48bc-aa72-8da7e716870d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "00dce5aa-a1af-4a90-bef9-535911374661"
        },
        "item": {
          "id": "d1ec7b01-2e0b-4531-9220-23c36dd537d3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d4ef1fe0-a4ab-42ea-adbc-801b93978875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919193ad-8785-400e-917d-e452975d6dc4",
        "cursor": {
          "ref": "693d1077-423a-4cf2-a472-aafe7140f446",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e0e39868-f2c0-4e0e-9acc-0b5054ce93c5"
        },
        "item": {
          "id": "919193ad-8785-400e-917d-e452975d6dc4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7b233660-4ac6-4c4d-ad79-40f56b3425c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4580a3ef-fbab-4bba-8c76-0c53f2dafc0b",
        "cursor": {
          "ref": "19e04101-fae0-46d2-8815-b49ebc257d06",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "76e08cfe-492a-4bec-9b62-28964605f0fa"
        },
        "item": {
          "id": "4580a3ef-fbab-4bba-8c76-0c53f2dafc0b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "319cc69a-62b8-4bed-b426-4828d9b2a5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdcc48a-2238-4adc-98f1-8fe61ebc4210",
        "cursor": {
          "ref": "bf7874d0-7c23-4757-850d-573e87b93dfc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f15f5177-8e83-4923-a384-37d04bd1290a"
        },
        "item": {
          "id": "bfdcc48a-2238-4adc-98f1-8fe61ebc4210",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "33579786-5b99-41e5-9499-9840ae27b52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0b0e42-e65f-4201-b32a-86145e513ecb",
        "cursor": {
          "ref": "bd82e2fc-2812-4e07-a14c-9ac80185d02b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "070c9e9e-c539-4d99-ae2a-7ff9458f4db7"
        },
        "item": {
          "id": "fc0b0e42-e65f-4201-b32a-86145e513ecb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d3885284-3db7-4c80-b930-fa9f4f03fb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c001b51-0a6b-46fe-b9e0-23b238cc8269",
        "cursor": {
          "ref": "95529263-e69f-4867-9155-071531337550",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "524970e9-8a3d-4216-8feb-538507363cea"
        },
        "item": {
          "id": "7c001b51-0a6b-46fe-b9e0-23b238cc8269",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6ecd1137-5782-4d59-a50f-75901705d74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ea92b-4bb3-4379-9b1a-ad93968cdc79",
        "cursor": {
          "ref": "1a9d239c-51ce-4b19-a080-61a7590bcbae",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2fab68c1-a29c-463a-a5c6-7c7abe444356"
        },
        "item": {
          "id": "000ea92b-4bb3-4379-9b1a-ad93968cdc79",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "212759c9-87ae-437f-a556-f9135f2d4c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e065356-7816-4d0e-bdd2-fa1e4f884c3a",
        "cursor": {
          "ref": "58e4265e-86e0-4bf4-a134-5b260f9e5cee",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d08f19ea-a685-4c2e-a960-61375e470b8f"
        },
        "item": {
          "id": "6e065356-7816-4d0e-bdd2-fa1e4f884c3a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1105b4db-1c44-4dc7-b131-502278c2e1a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 254,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91642ce3-fb14-494c-8535-276b48dbcff6",
        "cursor": {
          "ref": "44a08e7d-370e-4db5-8ced-74e7a09615de",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "45308a32-a4cd-499d-9c5e-2867675084d6"
        },
        "item": {
          "id": "91642ce3-fb14-494c-8535-276b48dbcff6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a43e58d5-7739-4043-9654-3ac90c5b3986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "95e43d79-df94-4205-b134-afb1bab3cfd1",
        "cursor": {
          "ref": "8b95a173-b0e3-4460-9d02-bd35a687a142",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c85db2e5-ed89-4fa4-8803-990c0af9dd97"
        },
        "item": {
          "id": "95e43d79-df94-4205-b134-afb1bab3cfd1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b4bcd3e8-1e33-4ba6-9e6c-c09e068ddda2",
          "status": "Created",
          "code": 201,
          "responseTime": 8731,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "89da0fdc-0e3c-4c32-a591-edded166b339",
        "cursor": {
          "ref": "46dd95c9-e932-4599-923f-1c241d75fba1",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4b23db28-06bf-45ac-a2d4-660523b348ba"
        },
        "item": {
          "id": "89da0fdc-0e3c-4c32-a591-edded166b339",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9b27c04c-4a7d-4760-a32b-ddf932e9c3ba",
          "status": "Created",
          "code": 201,
          "responseTime": 8120,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da7d326-fe61-49b9-8487-d8c70b30ad50",
        "cursor": {
          "ref": "18f8017b-96d4-4ded-a301-9b3bfd0af8bc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7ab43cae-8e9d-4a33-8fa0-913ef36f4902"
        },
        "item": {
          "id": "1da7d326-fe61-49b9-8487-d8c70b30ad50",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b78f8f09-043c-434b-ae8a-3ab63e4ec4d1",
          "status": "Created",
          "code": 201,
          "responseTime": 8014,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "60315424-5b1e-4db2-b35c-2a820894408c",
        "cursor": {
          "ref": "4a4bf653-b52b-4080-8629-2233935a9155",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ffd5bca2-b5b5-45f3-82f3-da00a0c21c80"
        },
        "item": {
          "id": "60315424-5b1e-4db2-b35c-2a820894408c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0f64163e-888c-415d-9d5c-34fcac9cdf7e",
          "status": "Created",
          "code": 201,
          "responseTime": 7691,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "420ae107-98e8-41d9-8f77-d802766b5410",
        "cursor": {
          "ref": "8e370f2c-74c1-41aa-b74f-04fd984a396f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8f0bace2-8cbf-4bc2-a669-cc12fa94decc"
        },
        "item": {
          "id": "420ae107-98e8-41d9-8f77-d802766b5410",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "79d6b1ee-3e4c-4f15-aff0-20a959ae8260",
          "status": "Created",
          "code": 201,
          "responseTime": 7658,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-24T00:40:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-24T00:40:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "188c6d69-f830-4203-829a-09f96ef8114a",
        "cursor": {
          "ref": "c0f1086a-4e6e-485d-a5ed-97ae1044303a",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "30a78920-f94e-480d-8cd3-c0d226dffc1d"
        },
        "item": {
          "id": "188c6d69-f830-4203-829a-09f96ef8114a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c000cb1b-5a05-4d4b-9965-a66feb7b9ebf",
          "status": "Created",
          "code": 201,
          "responseTime": 8350,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e33c8f-0634-4623-b684-379a4e86b45a",
        "cursor": {
          "ref": "8d588afe-bf8b-4076-a855-34db44cbe366",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f159e8ab-d437-49e7-b02c-1c47d5b0eb3a"
        },
        "item": {
          "id": "b5e33c8f-0634-4623-b684-379a4e86b45a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2203442e-bef0-4cf7-8507-b3f5a921bc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64bca95-4b39-4cc1-83ca-ee603e0167cb",
        "cursor": {
          "ref": "d445dcab-ebdf-4dbd-a924-0599d1ad0298",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b1c62339-d1a0-4050-97a1-103c97dd7732"
        },
        "item": {
          "id": "e64bca95-4b39-4cc1-83ca-ee603e0167cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b8f9bfcd-69fd-4dc9-ab51-10e1e089f2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e37cf0f-b3e4-44ce-9c3a-3d893e9e9ed3",
        "cursor": {
          "ref": "c633bec1-b96b-437c-bbd0-4fa69be4b5c0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4110e83d-cc14-45f1-8e9b-1004b1e4ed37"
        },
        "item": {
          "id": "0e37cf0f-b3e4-44ce-9c3a-3d893e9e9ed3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0487a022-7f3e-45de-acd9-1b8adfdaf5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a985c3-04d5-4bf0-9e1b-9196dff5c4e7",
        "cursor": {
          "ref": "c6eb8310-509e-4684-b782-19f32a7770d6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a0242a68-d813-446b-8017-c47366bc3026"
        },
        "item": {
          "id": "71a985c3-04d5-4bf0-9e1b-9196dff5c4e7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5216be2-3720-4806-8746-7a6beee65bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72ea839-36f2-4190-bed4-b35d3efdd015",
        "cursor": {
          "ref": "3052a082-bdbc-4378-9eba-c3c2d9094a33",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "566b3737-c9be-454a-a819-7c0117e63d34"
        },
        "item": {
          "id": "e72ea839-36f2-4190-bed4-b35d3efdd015",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c7164d41-7805-4cfc-8e76-6f0c20162ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fcb6ef-43eb-404d-8d84-eb6ecdc6b1b1",
        "cursor": {
          "ref": "80281f2f-603a-4fb3-b752-86ee56960cb5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "75bb782c-158b-4c01-955c-2ab4ba3d75f1"
        },
        "item": {
          "id": "44fcb6ef-43eb-404d-8d84-eb6ecdc6b1b1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0b75d892-3fab-45ed-8b8c-cb3df1b8e3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f40803e-127b-4ea5-b723-8f65afc3f016",
        "cursor": {
          "ref": "b30e8390-1ff0-470b-ab1f-ed04f9124244",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6f59c1ae-c5f6-4a4a-8fd4-68943b85f205"
        },
        "item": {
          "id": "5f40803e-127b-4ea5-b723-8f65afc3f016",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "daf8ee97-c602-4e08-84f6-fc9c1b7cec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d78fef-7d88-4ece-b7e6-e112c7a4c48a",
        "cursor": {
          "ref": "f611f935-ae2c-450b-8937-e9fa56462c16",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1292b541-1251-4863-9680-3aa2c216d394"
        },
        "item": {
          "id": "14d78fef-7d88-4ece-b7e6-e112c7a4c48a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dd385d92-3642-40cd-a93f-59f7fed2cc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b002eee-a3b0-46ce-8c1f-a83786be15e3",
        "cursor": {
          "ref": "ca8836ea-6bf2-45d2-bf46-8d8b1ebd828c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b9daf92f-63bc-47e3-8076-e078fee66ab4"
        },
        "item": {
          "id": "3b002eee-a3b0-46ce-8c1f-a83786be15e3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "29765300-c998-4563-9271-d39c4cff9d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91253e6d-6fff-4fba-9360-b136786acd68",
        "cursor": {
          "ref": "2210d7bb-57c9-4a74-9dc4-7ae841f7bfbe",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9fad558c-62e2-4bde-904d-ede396216a3d"
        },
        "item": {
          "id": "91253e6d-6fff-4fba-9360-b136786acd68",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5774ec2a-4922-45d3-b7b6-05e720ea31f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36045b59-0af7-466e-b70d-acc2317a4c41",
        "cursor": {
          "ref": "f35b00ce-1a00-4a84-b3bc-34dfc3ac686a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "aca84bb9-0cf6-4b83-9734-86e151c45a4c"
        },
        "item": {
          "id": "36045b59-0af7-466e-b70d-acc2317a4c41",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b51d34cf-12a7-4b8d-8f64-f301e5143506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf74aaa-a8c4-4393-81ea-afd8d7abf6e7",
        "cursor": {
          "ref": "ea27d969-e600-4cd2-87c8-ea57391a8240",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9d254f50-2cd4-4dcc-8503-2331e4fe80ae"
        },
        "item": {
          "id": "6bf74aaa-a8c4-4393-81ea-afd8d7abf6e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5f2cd999-6ea3-403c-8863-cd41cc382d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1456c51e-8e1f-47a2-9ac4-d9d71b22bfe1",
        "cursor": {
          "ref": "9cec3475-8306-4645-8a3b-b926d5d996e9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "828e7374-d54a-4bd3-b422-5ae93d833c9d"
        },
        "item": {
          "id": "1456c51e-8e1f-47a2-9ac4-d9d71b22bfe1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "00f717ac-e4c9-4c7b-9e9a-c9ef9dfadf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad77d0e-f845-4afa-a445-24ca623cb0a4",
        "cursor": {
          "ref": "d1df9da0-4ef9-4bb1-ae90-309cf96ebb90",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "529e4ebb-0179-4d2e-9450-99e83cb01500"
        },
        "item": {
          "id": "6ad77d0e-f845-4afa-a445-24ca623cb0a4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aed1eef1-6195-489f-96d9-682e0608d7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca9355b-9683-4d2e-9404-8d06ac9b5e42",
        "cursor": {
          "ref": "492928f8-9b51-48b6-a234-c5025984f58c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3f82fba7-4a25-4038-b58f-60ac3f3e69bd"
        },
        "item": {
          "id": "4ca9355b-9683-4d2e-9404-8d06ac9b5e42",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b63081e-1c47-4ec2-a8b4-4a94c0914b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374baa83-3756-4a2a-9f9c-04a552305b0a",
        "cursor": {
          "ref": "2ac34e1d-554e-4b86-84b7-2b4f27192076",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8fa7c7ac-fdaf-4eeb-8abe-03b6193c8003"
        },
        "item": {
          "id": "374baa83-3756-4a2a-9f9c-04a552305b0a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "517b9a3e-8719-4a0d-862f-88f42ecb1119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf3066d-ed56-48ec-b2ef-7b3209286330",
        "cursor": {
          "ref": "cf526e2e-e5e9-4e71-85ab-05e486ab5a6f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3e68406b-a972-4ffe-a682-2a636ca19081"
        },
        "item": {
          "id": "edf3066d-ed56-48ec-b2ef-7b3209286330",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "83aed35e-677b-4a50-9127-91dddfd0303e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22145ec-5eb4-4011-a0bf-a93a8a09a571",
        "cursor": {
          "ref": "5c811949-d9e0-4426-8c4c-b939d4073f47",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "293ebc50-c497-4476-8d4c-19a265a76ad0"
        },
        "item": {
          "id": "c22145ec-5eb4-4011-a0bf-a93a8a09a571",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f912fed1-9c11-4c42-b701-d9251afc4579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f5bf73-ee62-4282-8e22-d58ad19b2eaf",
        "cursor": {
          "ref": "dbcd9462-2cb6-4b0d-a365-a507e6a5755e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1812e08d-2156-43f0-9376-165c08b7009e"
        },
        "item": {
          "id": "d3f5bf73-ee62-4282-8e22-d58ad19b2eaf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "943bdf4e-70ef-4570-8438-09f46ad893a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba747fa8-2258-4341-9eb7-b201dd7ff289",
        "cursor": {
          "ref": "4e2279be-bc19-45c9-8c02-af0eb9c3c749",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1b972f11-59c2-4317-9ff2-c3e1e816bba0"
        },
        "item": {
          "id": "ba747fa8-2258-4341-9eb7-b201dd7ff289",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fc2b9cab-e89b-441f-9d3c-905aeff20861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a637aed-bcc6-4365-a749-3d67606a4cd3",
        "cursor": {
          "ref": "aef61a8f-f293-42a6-b55e-7e0965e27bde",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0174db6-4157-4dab-9c7c-1f35883d77fd"
        },
        "item": {
          "id": "9a637aed-bcc6-4365-a749-3d67606a4cd3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb7bd01c-029a-4136-a90e-5b676ebc47cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a804c-1dd4-4d6e-9b79-a5b2c90e2a8d",
        "cursor": {
          "ref": "cb4ecb97-f602-489c-ba2c-cece6f223739",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "125e5336-5715-4b23-b385-dce82bf6da08"
        },
        "item": {
          "id": "9a0a804c-1dd4-4d6e-9b79-a5b2c90e2a8d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a4786317-4f71-4e9a-ad17-757d47070a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5955fe-9269-4408-86b9-fbd57d6a7073",
        "cursor": {
          "ref": "071d77ab-23ef-49d4-b20d-219644722899",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d8de8f84-c90b-4726-bdb2-b2a698734aae"
        },
        "item": {
          "id": "ea5955fe-9269-4408-86b9-fbd57d6a7073",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8fec76ff-e710-43af-b8e1-9ba982a6f224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0c63f4-8408-4080-a134-1c2ea5e6d8c6",
        "cursor": {
          "ref": "3f62edab-a22b-4a2b-9ac5-2e77f873a596",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9a6e079a-28aa-4c01-8066-423195c50a25"
        },
        "item": {
          "id": "fc0c63f4-8408-4080-a134-1c2ea5e6d8c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6cbb3baf-eeb8-4745-939e-0fa177a0f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0394ddcb-8bba-484f-9bf4-36d48378a20e",
        "cursor": {
          "ref": "9d5aa7ea-0fc8-45bb-ac32-61afebceac8f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3c47278a-34a4-450a-939b-7f994375bbf7"
        },
        "item": {
          "id": "0394ddcb-8bba-484f-9bf4-36d48378a20e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "df7af127-bc69-4548-b41b-15ce139d1d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f815fcc2-5db4-452e-81cd-e91fa177eccd",
        "cursor": {
          "ref": "9378bc23-f4a6-40d3-a04f-1dcc3a6a058b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7d682082-d8b5-426a-8022-10597aeeb409"
        },
        "item": {
          "id": "f815fcc2-5db4-452e-81cd-e91fa177eccd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "641adab6-7cbc-4dbe-b00d-05b7380536a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab20fc5-314e-438a-b464-de1ce10d440e",
        "cursor": {
          "ref": "d56c61a1-107b-42f5-ba3c-7ea7dd8138d3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "88fb8906-a5b2-45e5-830c-e342caed1255"
        },
        "item": {
          "id": "cab20fc5-314e-438a-b464-de1ce10d440e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1c280afe-17ec-4c19-84a9-63926684794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6f66e8-465c-4c01-aba6-ab097a7eb963",
        "cursor": {
          "ref": "9e506778-b6bc-4aa0-ba2a-ab47f698db7c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "889ccee3-e6e5-4e4c-bb79-749e557de4dc"
        },
        "item": {
          "id": "5f6f66e8-465c-4c01-aba6-ab097a7eb963",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c610aae2-dbf4-4735-b248-8cd906df098a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebfab46-943e-4ea1-9428-2e397ee92e5f",
        "cursor": {
          "ref": "f5fd14db-d720-4d3b-bfad-0d84235fb20d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fca679bb-5914-4664-9266-228b2dae9da7"
        },
        "item": {
          "id": "cebfab46-943e-4ea1-9428-2e397ee92e5f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b65ba7e1-a0ce-47cd-a62a-895352cbe6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7f0dac-55f6-40a7-a8c9-8b6c29a6cf4c",
        "cursor": {
          "ref": "225aea1b-0026-437e-83a4-e4b75076f0cb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f5ca3dc-27a5-4cca-8738-0d1c830c5213"
        },
        "item": {
          "id": "2d7f0dac-55f6-40a7-a8c9-8b6c29a6cf4c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e4e1bdd2-26c2-4d6c-908b-b9f8c1805247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2aea09-a9d5-41c7-94ed-d2bfe8d2c70c",
        "cursor": {
          "ref": "ef52d4b6-7de7-453d-9731-07cc53cd72bf",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0b146731-cef7-4e1a-a89e-bbcde2729e58"
        },
        "item": {
          "id": "2a2aea09-a9d5-41c7-94ed-d2bfe8d2c70c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8a14a21b-841a-4593-b1bd-4085999ed403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6bd82d-d9db-44e5-9611-3630f845bfa8",
        "cursor": {
          "ref": "cd0b46c0-51ec-458f-9218-1653637c8d46",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "85d165f4-1b81-45ec-992a-2a79fc665f75"
        },
        "item": {
          "id": "5d6bd82d-d9db-44e5-9611-3630f845bfa8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "67ca4c53-3299-4996-9fca-296eda50f848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239e3e81-daa6-44fc-bb63-99d242fccdd7",
        "cursor": {
          "ref": "8e3c6e7d-2d16-43de-8dff-c5957a9359e8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1755ddfe-86e3-4699-99ef-534aa291ebe5"
        },
        "item": {
          "id": "239e3e81-daa6-44fc-bb63-99d242fccdd7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "12e76cea-aae7-4841-830b-acd52fddba03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f136f467-3bf5-4b32-a20e-96a64786845e",
        "cursor": {
          "ref": "3fca37f7-7012-4dcd-8637-190ca58d3778",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3c02ed23-1845-49d3-be33-bd1d7ab51c02"
        },
        "item": {
          "id": "f136f467-3bf5-4b32-a20e-96a64786845e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2145f3fd-61f9-489c-8be4-c1c66aefa5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b143e-6d2d-4a21-83ca-ff7875fbb759",
        "cursor": {
          "ref": "82ded538-4efd-4b49-afcc-ea8a8b770daa",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f4d63491-4fcc-4501-a927-62b10becc053"
        },
        "item": {
          "id": "380b143e-6d2d-4a21-83ca-ff7875fbb759",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "75d3ed76-7510-47b7-8e11-de5f85f65299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9446e4-d8a7-4258-bd1c-30d126eabc40",
        "cursor": {
          "ref": "8c6c8ba3-de79-4c3c-9ace-b3f99b1fa53e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "54518c26-103e-4e7d-916e-2dc0c58d4a36"
        },
        "item": {
          "id": "aa9446e4-d8a7-4258-bd1c-30d126eabc40",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3b81e679-650f-4f76-b6c3-873681f23a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fcccaa-17f1-4946-88ff-b4b6f782c7f2",
        "cursor": {
          "ref": "9a3dc696-8a87-4f1c-9247-5e47df12fdb0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "79440ac2-ce99-46ee-89e8-2be03fb171bb"
        },
        "item": {
          "id": "05fcccaa-17f1-4946-88ff-b4b6f782c7f2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a714a282-e364-41bb-83d9-45ff0e7b44cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24391a18-46fb-4564-a633-03ac383e7b47",
        "cursor": {
          "ref": "3c661b2f-1157-4c70-8faa-f9f54aaadc1d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "52d5bf88-d867-4d06-bb56-95a5df8f1d5b"
        },
        "item": {
          "id": "24391a18-46fb-4564-a633-03ac383e7b47",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2c0689f-2590-4995-8773-10e8f7d7526d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a93f612-8597-4901-bac0-6caf044d68c4",
        "cursor": {
          "ref": "327f426c-6984-49fe-8b9d-6ac0fc92ef3f",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "482388ff-f76e-42c6-b780-977d81c1174e"
        },
        "item": {
          "id": "3a93f612-8597-4901-bac0-6caf044d68c4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f64caa38-e4a8-4f23-8618-0558f667e753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec758294-33ae-44ec-b820-cdf3793f31ef",
        "cursor": {
          "ref": "8196d187-3368-478f-a713-2f489accc399",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bb488785-7658-4604-854b-a1860b88e4ff"
        },
        "item": {
          "id": "ec758294-33ae-44ec-b820-cdf3793f31ef",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5e96cbe6-41f1-4b6b-af5c-d63abd181368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84f7b23-b77f-41de-b9fb-40606ada19c8",
        "cursor": {
          "ref": "d61bc708-077d-482a-a977-c7ad6da4e681",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "71c0e467-384d-4ca9-9192-7dee7bae9174"
        },
        "item": {
          "id": "c84f7b23-b77f-41de-b9fb-40606ada19c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9983a404-d656-47da-a1df-5958ca714e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e979e9ba-9480-434e-96c5-e7aca7a0d3bb",
        "cursor": {
          "ref": "861442a3-f305-4391-acf3-c17238943d79",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0c8e3621-a3d4-4de5-b72b-09277725d650"
        },
        "item": {
          "id": "e979e9ba-9480-434e-96c5-e7aca7a0d3bb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e5a0a89c-0cfe-4ac4-b6db-00ee4b6f2339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec3597-c1cb-4a35-92c0-a18af2042800",
        "cursor": {
          "ref": "e5388543-fbf0-4aae-9d6c-79c3c1009aa4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a44ed6d2-82a2-41e8-93dd-be2355d6037a"
        },
        "item": {
          "id": "21ec3597-c1cb-4a35-92c0-a18af2042800",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "28d00c41-83b9-4e0f-84aa-607a0733f93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2a1be4-3a68-4ba1-b5f2-fbd83bb2106b",
        "cursor": {
          "ref": "1a2cb169-fe75-480f-a403-a29f789f60a9",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "78f92beb-e489-4cb5-847a-2cf0e0185c49"
        },
        "item": {
          "id": "be2a1be4-3a68-4ba1-b5f2-fbd83bb2106b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6ba0cff6-e2b9-4701-b6e0-d8535193ebe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60299a7b-b732-42cc-8e7c-5cb59c028f96",
        "cursor": {
          "ref": "8906b0f2-e631-4db5-b4c0-3cc628f1887d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d3b3fc29-f751-4cdb-ac0d-212abfc4c0cc"
        },
        "item": {
          "id": "60299a7b-b732-42cc-8e7c-5cb59c028f96",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7299fe0c-b1b8-4863-8900-211d6497769a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8303e59-f2ef-42fe-83e0-09dac1bb0953",
        "cursor": {
          "ref": "131f538c-427d-45a1-adb7-60b11d37bb55",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "07a731ee-2991-49be-9377-03070c1c0d92"
        },
        "item": {
          "id": "b8303e59-f2ef-42fe-83e0-09dac1bb0953",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "67e58942-6e9a-4c00-aeca-bafe5157128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d217a28-924d-47a8-a847-0293916a40f9",
        "cursor": {
          "ref": "120a2780-63b0-4958-9672-118e768292b3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d9d75fb8-90f1-4a8c-b019-85092a500b2b"
        },
        "item": {
          "id": "7d217a28-924d-47a8-a847-0293916a40f9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "52edca72-ae0f-4b64-ae70-4edd31dfcdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05f336f-f8f2-49c2-974e-5cc48a5b9a97",
        "cursor": {
          "ref": "fe902aea-4099-43d6-982f-dba420e63a36",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c03819cb-52e2-403a-9fea-655c08271fd0"
        },
        "item": {
          "id": "d05f336f-f8f2-49c2-974e-5cc48a5b9a97",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "668138e3-c230-4c63-a52d-d215b76ed111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85b84a6-0286-48eb-b116-62720db8b4f7",
        "cursor": {
          "ref": "384da49d-878e-48da-89f2-c0e6deff7ab8",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "27218974-88e5-46b1-aab2-588469eb2521"
        },
        "item": {
          "id": "a85b84a6-0286-48eb-b116-62720db8b4f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c616399f-551a-4848-a1a2-d38125936ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14003370-5bb8-4414-b50f-4ea3185c2a15",
        "cursor": {
          "ref": "726f234c-ede9-4f42-b5a7-69ad517128f8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "95f468f7-a087-4b46-b997-bddfd74a7591"
        },
        "item": {
          "id": "14003370-5bb8-4414-b50f-4ea3185c2a15",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4be4197e-2431-430e-a14c-ec671d74d2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d2f027-3c81-4b5f-a577-684a1f9ab8b5",
        "cursor": {
          "ref": "45831006-9a2e-489c-b2ca-618d3f94ff31",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "af9732f2-7211-4a79-8428-ccd8248531fe"
        },
        "item": {
          "id": "f1d2f027-3c81-4b5f-a577-684a1f9ab8b5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "04f235f4-6e6d-48c9-aea6-0086272f846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bd09ab-7933-4678-93b2-64f5e64f3d9b",
        "cursor": {
          "ref": "6b310db2-6471-430c-afb7-6d427ff51e03",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "873e1f77-469e-492b-a2df-d44bbb7d6aa1"
        },
        "item": {
          "id": "51bd09ab-7933-4678-93b2-64f5e64f3d9b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "562f4281-bf15-477e-b428-dd1c1699fdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba58994c-db81-4f3b-bc63-814f856c5381",
        "cursor": {
          "ref": "4c580c00-46b0-4ac3-bd7e-a7629c5c3aec",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "87c27dd6-7f62-4e70-b855-bdebd7fc432e"
        },
        "item": {
          "id": "ba58994c-db81-4f3b-bc63-814f856c5381",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6bab3c1b-a33c-477d-9d6d-425dab3f30e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee09e28-fbc2-4e0a-8814-a93297349339",
        "cursor": {
          "ref": "4b8260cd-e13c-463b-b419-e1aaceeeff2f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "82e886cf-5735-45f4-8d8f-20da8bac63f4"
        },
        "item": {
          "id": "fee09e28-fbc2-4e0a-8814-a93297349339",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5de66d29-9d53-4a5d-8c77-ebecb68812d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59312cf2-6cc4-4d4e-943f-7868d49330f6",
        "cursor": {
          "ref": "5f38e7ab-402d-4f0d-9163-2ec7266f3ed3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9dd8968c-08ce-4539-8f7a-e65263348b0f"
        },
        "item": {
          "id": "59312cf2-6cc4-4d4e-943f-7868d49330f6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "475af71e-551d-4c55-a6a4-1916f77e249e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737ecf62-6730-49f2-9a6a-d845c65dd667",
        "cursor": {
          "ref": "7d8a39e4-e04f-444c-b3fc-eab5d0e1daa5",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b5c048cf-8349-4362-89b1-f24c2d8a4de9"
        },
        "item": {
          "id": "737ecf62-6730-49f2-9a6a-d845c65dd667",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9dd0fc0d-2dd1-4756-94d2-ae5601a736d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289ed60c-d0c6-4801-a2a6-cecaee5f9d86",
        "cursor": {
          "ref": "a52f8a82-d252-49bb-b245-e1dae48e69a4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fef6578d-7c3a-4a54-bebe-b5ebdda5e689"
        },
        "item": {
          "id": "289ed60c-d0c6-4801-a2a6-cecaee5f9d86",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7adac04c-6129-476e-969b-a9919744d0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efcc930-5a1c-49c1-ac10-e00472224a05",
        "cursor": {
          "ref": "e2fb00ca-57de-4201-a371-a5e8bb2f87e6",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bcb2d43e-bdba-4e7e-af5e-f02ec7062b21"
        },
        "item": {
          "id": "6efcc930-5a1c-49c1-ac10-e00472224a05",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8422d73c-dc9c-4b07-aedb-6a3b890e1825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b9425-7cd0-47d8-b7c0-4df73004d6c7",
        "cursor": {
          "ref": "b44efc34-20d1-4dc2-8719-870f5f84d8b4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b6611b74-61a1-41c4-a1ab-6f16870c62ec"
        },
        "item": {
          "id": "565b9425-7cd0-47d8-b7c0-4df73004d6c7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ef743ba2-d0d7-4557-a8ad-2db9686e4990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e00a9e-b271-4d1f-8127-9a57d1b82cb9",
        "cursor": {
          "ref": "019f0f7c-68f4-416f-88ad-9b592071743c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0226f4a5-34b7-41f4-a765-791f5e7deb7e"
        },
        "item": {
          "id": "c6e00a9e-b271-4d1f-8127-9a57d1b82cb9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "49209b3a-e538-4daa-a0f3-4e55d6bd7fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b8131c-626f-4baf-aa3d-a7a89298cc2e",
        "cursor": {
          "ref": "522715cc-d678-4be0-831d-091f9111d39d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a83691bc-9eb9-4ed1-8c34-01dbef3a0940"
        },
        "item": {
          "id": "66b8131c-626f-4baf-aa3d-a7a89298cc2e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2ae2b447-3dfa-4745-a687-854b55c2ae4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26acdbe9-d947-44d6-b29a-563185298055",
        "cursor": {
          "ref": "1d283d15-a2c7-43ff-8c56-8a595ec2598b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "55bbaf13-fb46-4a0e-ae1a-8f5007b66b04"
        },
        "item": {
          "id": "26acdbe9-d947-44d6-b29a-563185298055",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0d46ecd7-495a-4f1a-a8e1-91bf83de909d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaa1e76-e63f-4353-ac1b-a509951fb3ca",
        "cursor": {
          "ref": "9482b2c5-1f3d-4c67-a573-ce0fefe1278b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2b40b4c5-d150-4cad-a956-d3573dc394ba"
        },
        "item": {
          "id": "dbaa1e76-e63f-4353-ac1b-a509951fb3ca",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "63c9b142-ce39-4d27-afcb-8bbbe044348c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cec858-e26b-4f73-8d4d-7314194a7802",
        "cursor": {
          "ref": "028c7703-9f0f-4578-a4d7-1955a798eab1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b0ab63aa-558f-4203-a9e0-3bab26a5310d"
        },
        "item": {
          "id": "10cec858-e26b-4f73-8d4d-7314194a7802",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0c66e891-8b37-473a-aa06-11453af23e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa8cbc2-342b-4285-9469-34a77c9c10cf",
        "cursor": {
          "ref": "2403e1e5-befa-4a0c-802c-c39cead4367c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bf90503f-00a4-42d6-9594-eddc8049d855"
        },
        "item": {
          "id": "dfa8cbc2-342b-4285-9469-34a77c9c10cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "441bca82-6b36-4878-9721-c00c6d4e6b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac85c77-56d2-4ba8-a4c6-a882216d2ac9",
        "cursor": {
          "ref": "37bce4f3-01c6-475e-a6df-7752c50df767",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e7b32eba-d5aa-48ac-9146-e738b8a7916b"
        },
        "item": {
          "id": "2ac85c77-56d2-4ba8-a4c6-a882216d2ac9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "17593c8b-5d16-4b1b-9d58-e1e0f68bb9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc014a1-1d21-4583-9216-2d4838434e92",
        "cursor": {
          "ref": "b6f7578d-40cb-4213-98d8-60d52b48a593",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c51a5ccb-ae65-4c21-bdcf-53e2409518e9"
        },
        "item": {
          "id": "edc014a1-1d21-4583-9216-2d4838434e92",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4ba3e2a2-f372-4d27-873d-a0de85e22544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a08ec4-cb4c-44cb-a253-8fcf458e8585",
        "cursor": {
          "ref": "6be8d1c5-47c1-4efd-90f1-bb1b06e84075",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b9858a9e-cfc9-4884-879c-7810c8100287"
        },
        "item": {
          "id": "03a08ec4-cb4c-44cb-a253-8fcf458e8585",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d67040e4-8e5c-4cb7-b63c-9c6afae4944d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fd180a-1b97-4a73-9c52-bb76bc6f4a07",
        "cursor": {
          "ref": "3b41e349-d222-437c-954c-8a3edd073aa6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "266eaf19-a987-4435-8fa2-c80f3dbd52bf"
        },
        "item": {
          "id": "98fd180a-1b97-4a73-9c52-bb76bc6f4a07",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "41720984-dab1-40b7-898e-d14c3453f70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ecaa0b-132b-49d6-8dc0-4f2df2ac922b",
        "cursor": {
          "ref": "acc4d0b0-14b1-4c45-9d32-bd0615f9da06",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d627d491-2ad2-44ca-a1f0-bc266efce7f7"
        },
        "item": {
          "id": "f0ecaa0b-132b-49d6-8dc0-4f2df2ac922b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ba2472b5-614e-4156-b612-16496c0f3964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b8dbed-0e91-43c3-8039-9ba0c83bfcaa",
        "cursor": {
          "ref": "c81c9a8e-f372-45f6-8116-3fd5a0897daa",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "64ecbbbf-809e-4ca6-a02b-b0a0342160b0"
        },
        "item": {
          "id": "b4b8dbed-0e91-43c3-8039-9ba0c83bfcaa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7859174e-5b92-4cbc-b8e2-0115f6741b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c46a2f-7931-4963-9fd9-a87b9a5e1187",
        "cursor": {
          "ref": "91770e19-04b8-4873-9f87-7ce4b124110f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c2db3d24-183a-4a12-81e1-9665b532e636"
        },
        "item": {
          "id": "c3c46a2f-7931-4963-9fd9-a87b9a5e1187",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "39600b39-065a-4269-b6ed-84fe737deff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f00ae25-98bf-42e5-920e-04fdfcae6b44",
        "cursor": {
          "ref": "490bcab5-9829-413c-8908-40c88e16973f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7e6a9635-3c25-45bf-a3fe-efbee46009c0"
        },
        "item": {
          "id": "7f00ae25-98bf-42e5-920e-04fdfcae6b44",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "81485a8e-f22a-458c-bad6-0780457c104f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060f0ac5-f253-416a-89ac-231e6dc2148f",
        "cursor": {
          "ref": "74e9e66f-6208-4abe-9a86-3e63fc549267",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "89609c80-c946-4189-93fe-16064d63c8d7"
        },
        "item": {
          "id": "060f0ac5-f253-416a-89ac-231e6dc2148f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "561c7834-c80b-4473-a4a8-6da173550133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7984ba6-2d6a-454d-9560-1e68fde6848f",
        "cursor": {
          "ref": "a8b8c1ae-fad2-4296-8874-5fb7ffe84d21",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8ed2886f-5723-46af-afdc-fec2909c0017"
        },
        "item": {
          "id": "e7984ba6-2d6a-454d-9560-1e68fde6848f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3dfaa2db-095a-4758-bcf9-c64b3dc73ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122962c8-3f6a-4098-b6ef-12f361fd620b",
        "cursor": {
          "ref": "24b7c11b-c740-49e0-a3f8-17e94fba9aa9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d4ef882d-c7bf-4045-9d67-45980ec10a22"
        },
        "item": {
          "id": "122962c8-3f6a-4098-b6ef-12f361fd620b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7c126551-4540-4664-9b35-fcc383f0869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ae6db-b89b-47b3-82dd-40260353bade",
        "cursor": {
          "ref": "f18e1846-8045-43b8-bbad-3d0d441e4cbc",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8dca9f57-8043-4152-9778-1e0496ac88b5"
        },
        "item": {
          "id": "6e0ae6db-b89b-47b3-82dd-40260353bade",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6f50cfb8-28fd-4140-ab0e-277b0effe4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e089538-5582-4783-a8f4-4deeefdd7a39",
        "cursor": {
          "ref": "b87e178a-ed84-4238-a038-afe2e1021535",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a8d11415-8882-41a9-8395-a18e69aec7a8"
        },
        "item": {
          "id": "1e089538-5582-4783-a8f4-4deeefdd7a39",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1c6d7546-f678-4a3c-ad29-688e98fda13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04fbe48-ce09-4b8b-8520-2f747498e6c1",
        "cursor": {
          "ref": "3f1ea694-4ff1-4c19-922b-582abed9f919",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "88d6a69e-c395-44b6-8010-1a00fc287c8b"
        },
        "item": {
          "id": "f04fbe48-ce09-4b8b-8520-2f747498e6c1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "237fe843-c695-4ca5-8aa5-11626d9235c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d421c163-a1c9-41c2-a675-607e70ad4744",
        "cursor": {
          "ref": "fb37706f-8988-4da9-9e57-6fae2577f179",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6cb7e46e-2a03-4f08-b485-c9617fa1b34b"
        },
        "item": {
          "id": "d421c163-a1c9-41c2-a675-607e70ad4744",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2cf9ba81-d4b5-463e-81b1-06518f466fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ed621d-5df8-4999-aae4-1b3ab722836b",
        "cursor": {
          "ref": "075e1b34-52f3-4a9f-a532-1c6676ae35da",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4eb2db64-1856-4365-bc0e-ea6db673a821"
        },
        "item": {
          "id": "90ed621d-5df8-4999-aae4-1b3ab722836b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0c537eaf-1ca5-428b-8711-200cb882a9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d97175-4daf-4379-a147-8bdbddbfa426",
        "cursor": {
          "ref": "6ed6a8a6-1934-4ee7-9069-252d28ff18e5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b067d9ec-80fe-4412-a560-471ddbba3536"
        },
        "item": {
          "id": "16d97175-4daf-4379-a147-8bdbddbfa426",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "752ccc3a-7fbe-456c-b33f-6a3f2ab1102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92455a7a-06be-4655-8066-d12c2dedc92d",
        "cursor": {
          "ref": "36be043a-e5ef-4b08-9d4a-1e9d4cfa2164",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ef247d5e-fe39-4d04-993e-ae341ca11ddd"
        },
        "item": {
          "id": "92455a7a-06be-4655-8066-d12c2dedc92d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "905b876b-2148-46ef-9401-a26f7e691af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6e6af0-76ea-4750-849c-255df523c75b",
        "cursor": {
          "ref": "4aeb1e63-ae1e-4207-9f01-1a1e2d66c189",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "663fbfe3-6bb5-404c-8cd1-7d97178e0ab3"
        },
        "item": {
          "id": "aa6e6af0-76ea-4750-849c-255df523c75b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a6aa09af-078b-434e-a4f4-19ebf74e6485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22ab578-0a3e-4009-83ad-99a9daba5292",
        "cursor": {
          "ref": "fe8e5890-1687-4732-9540-4b7bb5cf4e59",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "71580b15-8d99-42f8-8051-a93345d395ad"
        },
        "item": {
          "id": "f22ab578-0a3e-4009-83ad-99a9daba5292",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d8839094-6129-4e0a-8522-3bd4d407f20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71b833f-e4a8-4c4a-a181-57a62f72d0d7",
        "cursor": {
          "ref": "253fbba3-fe57-495a-a8c7-63cc1fc00a9d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "63144232-31e7-45f9-ab8f-3c8bdabff3e5"
        },
        "item": {
          "id": "f71b833f-e4a8-4c4a-a181-57a62f72d0d7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "05219c5c-2f11-42a4-b362-14529753b27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de92b697-d4c3-41f4-9a7c-33319b2babef",
        "cursor": {
          "ref": "92c8e464-955c-4ace-aeed-b87d6a2c8227",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac04b582-0903-42b2-854f-eeeb8adb19d6"
        },
        "item": {
          "id": "de92b697-d4c3-41f4-9a7c-33319b2babef",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9c5356d2-2c4c-47c4-9ffd-2299a18fd022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11512cf-19cd-402e-ac32-3aef7ede1823",
        "cursor": {
          "ref": "8c210230-cbb8-4b74-aca4-43ea5d6cfc21",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4b8747ae-fc35-42f0-af69-0e2a7844d2fe"
        },
        "item": {
          "id": "e11512cf-19cd-402e-ac32-3aef7ede1823",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e723fc33-4f64-4264-9bed-f790a7a5c2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1821f962-52a1-4be6-8c23-d7c86f118a2e",
        "cursor": {
          "ref": "aebdd2a5-8ee1-48ad-86e8-0c3f7b874142",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "998bcf35-f1a7-4a7f-8be1-0626df1cca7e"
        },
        "item": {
          "id": "1821f962-52a1-4be6-8c23-d7c86f118a2e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "715a7e8e-46e1-4857-9523-7e7440983a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242dde48-523e-4044-9359-56d348ee4598",
        "cursor": {
          "ref": "14cbf8d6-36e6-43ee-ad02-aff01f600ccb",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cbd3bde0-7fb5-47a3-bca5-8eab5a4cf1e7"
        },
        "item": {
          "id": "242dde48-523e-4044-9359-56d348ee4598",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b3785bae-7012-4fdf-9aae-586b4e1ea6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23ed5a7-f0a4-45ce-9d10-6724895d8dbb",
        "cursor": {
          "ref": "e96e9060-ce46-4577-bcab-530c4569bf8c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f8c7b827-d636-49dc-bd0e-549696b16f47"
        },
        "item": {
          "id": "d23ed5a7-f0a4-45ce-9d10-6724895d8dbb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b9239b9e-fab0-4f09-91c4-2df6919262fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7882e930-ee31-44dc-9f07-057f62bb2cf7",
        "cursor": {
          "ref": "25e28df2-d824-4306-8cab-01af91bc9459",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6f5b92be-e7a5-4c77-916b-278724efbc52"
        },
        "item": {
          "id": "7882e930-ee31-44dc-9f07-057f62bb2cf7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0b0e3e70-8f65-442d-9f2d-a622135e81ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99c015-c420-4a25-a077-017ebd4d8927",
        "cursor": {
          "ref": "cc6e4c8a-583c-4a2a-898c-1b4e21e3aba9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3b00f33e-d402-4ef8-9869-1ce219d1c038"
        },
        "item": {
          "id": "0e99c015-c420-4a25-a077-017ebd4d8927",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6faab756-efc0-460b-8d83-a905450df370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf96f18-656d-44c3-8efe-7669a0305cc6",
        "cursor": {
          "ref": "5677741d-100b-419c-b00f-8a43a3fb63d9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "29ab5d36-78e8-4d76-9949-5e3ecc57370a"
        },
        "item": {
          "id": "fdf96f18-656d-44c3-8efe-7669a0305cc6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "12245b5c-424e-4cd1-a639-becc1df13e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793030bf-991b-4cf9-9d5b-dcfd0b9bcf55",
        "cursor": {
          "ref": "2b669bb1-a827-42b0-b066-33cf318a5ead",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "34fd52c1-8126-4ead-890a-1c197f7adfc2"
        },
        "item": {
          "id": "793030bf-991b-4cf9-9d5b-dcfd0b9bcf55",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c042dfc3-4bb4-4e6d-b685-83304c32e133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f46fdf-4051-4f7d-a71d-28affa3bafa9",
        "cursor": {
          "ref": "a23eaf83-8860-4e35-b83d-86f03d281d10",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f0e02606-f192-48f3-8137-c64523d8c44f"
        },
        "item": {
          "id": "b8f46fdf-4051-4f7d-a71d-28affa3bafa9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6e6d7cc5-829c-495e-bba1-24d567caffe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bc875d-a951-4f1c-90de-6e8d3cbb9740",
        "cursor": {
          "ref": "fd3efa62-33a4-4a1f-96ba-4d17816ad4d3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "03f8f30b-62e9-4422-9a7d-1c4eabd542b0"
        },
        "item": {
          "id": "01bc875d-a951-4f1c-90de-6e8d3cbb9740",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a23c7d64-e9c7-4802-945c-07266f6076ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b6143f-f74f-4f8b-a91b-c1070dd7f991",
        "cursor": {
          "ref": "3242ecef-533d-45d6-aac8-4fdf1958c510",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4e5721fc-6cb0-416d-9db4-f2e4d830dc56"
        },
        "item": {
          "id": "15b6143f-f74f-4f8b-a91b-c1070dd7f991",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "75427c71-32e3-4b91-b0be-798f55540a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0ec9cd-4812-4820-8c71-3933c7f08226",
        "cursor": {
          "ref": "c9ea6eb9-a812-4a5f-b3d1-eb065192820a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a4e0a30e-a432-479f-b78b-aabfb287ce5a"
        },
        "item": {
          "id": "5b0ec9cd-4812-4820-8c71-3933c7f08226",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2dab9b4d-92d2-4c1c-bc71-f400964ac36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa2f078-9433-4bc7-8dd5-307ac420afc8",
        "cursor": {
          "ref": "aa32a22a-9a95-41ca-8266-12a43996ccd8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5dcac99a-e04e-4da1-a2a4-99039a00a66c"
        },
        "item": {
          "id": "0fa2f078-9433-4bc7-8dd5-307ac420afc8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "115a2424-b676-4393-80bf-b13043fc3551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc9c4e4-d47d-4309-b9ba-6a3d5513eeb4",
        "cursor": {
          "ref": "4301157e-77fc-4a28-836c-c8aef66b6bf2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a5577b15-4d2e-4938-9a93-341c3dc137c7"
        },
        "item": {
          "id": "8bc9c4e4-d47d-4309-b9ba-6a3d5513eeb4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c7227a3c-2e12-49f2-b47e-dc8911b31ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78140ab8-ec18-4114-98c8-ad079567e4bd",
        "cursor": {
          "ref": "c9bf2df1-fdd7-487c-8de3-72d7aa8352a3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9986f7f9-04cd-4a70-affb-92cc8272c34c"
        },
        "item": {
          "id": "78140ab8-ec18-4114-98c8-ad079567e4bd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90f072e3-8cad-4d80-a967-fa5ea78271a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7794e7-d2c6-474f-9237-0c87f86048a8",
        "cursor": {
          "ref": "2f30e11d-0015-4b6f-8be9-70c3229dab10",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c84064ff-a34c-4453-8ce2-af8fe715f2d2"
        },
        "item": {
          "id": "0d7794e7-d2c6-474f-9237-0c87f86048a8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "de8a6382-9a3b-46da-9e6f-e6be806b6300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9d547b-7ce0-4fd1-a7a7-1695c4e1ee9c",
        "cursor": {
          "ref": "d0751d1c-7380-437a-b157-de1a0580265d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "60c7e3b4-002b-4051-a79e-26ec61b78af4"
        },
        "item": {
          "id": "ea9d547b-7ce0-4fd1-a7a7-1695c4e1ee9c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7e74f34f-aadc-4ddf-a43f-b3da09967215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3312b6-28e9-4d31-890e-ca7618603072",
        "cursor": {
          "ref": "8195eb11-404b-454b-b5c4-52a82e6bae46",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f2cea3f2-936b-427d-b009-2011116620e1"
        },
        "item": {
          "id": "bf3312b6-28e9-4d31-890e-ca7618603072",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "49d8c73e-25d6-49e6-8d12-608729695ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b23d82a-bc44-4b27-b118-dfb12b937a2e",
        "cursor": {
          "ref": "504b88a7-6832-4903-8475-3719a53730f0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82ea66ee-90b1-47f6-8f04-3d10b3f9da6f"
        },
        "item": {
          "id": "4b23d82a-bc44-4b27-b118-dfb12b937a2e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f4c344a7-259f-4443-aeb9-9c689dbd72ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc608112-bb37-404c-ae95-cdd42b92ff0d",
        "cursor": {
          "ref": "3efba080-4046-4808-8627-042b9ca1e45a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0cbde76d-dfd5-4528-a593-699acbe4a892"
        },
        "item": {
          "id": "fc608112-bb37-404c-ae95-cdd42b92ff0d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d5f3da8a-dedc-4a7e-8071-aa3e8fce9a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0810fb05-d41c-4443-9387-05c103422c3c",
        "cursor": {
          "ref": "254d2439-9853-4c79-ac53-91aff3607e0b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c6e71a5b-32a1-42fa-b25a-88c891384f97"
        },
        "item": {
          "id": "0810fb05-d41c-4443-9387-05c103422c3c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ea8a71a9-c3cb-426d-884a-ca904409da6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a962df10-e2d8-44fa-bbd1-994e97cfaa44",
        "cursor": {
          "ref": "77da68e8-3f73-441b-9b05-3a5ac4429e20",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4f94fa2a-4482-4f45-8160-99ab570c330f"
        },
        "item": {
          "id": "a962df10-e2d8-44fa-bbd1-994e97cfaa44",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1150c4c3-08ab-471f-bb43-5284131ad303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ef27f9-f694-4dcb-8030-febceefadcd9",
        "cursor": {
          "ref": "2ab2efc8-6d63-43bd-a8fe-700770275e40",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f55f4779-e61a-4543-8a64-47b5465fb597"
        },
        "item": {
          "id": "58ef27f9-f694-4dcb-8030-febceefadcd9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d4c39116-b05f-406a-a3f7-d588d5861c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f16207-89fb-4863-ad1f-d9fcd0fec07e",
        "cursor": {
          "ref": "2b780d2a-3ca0-48ca-9613-1fcbe35dba5a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "31500348-b000-49f9-88e1-62fe296d7cf2"
        },
        "item": {
          "id": "b1f16207-89fb-4863-ad1f-d9fcd0fec07e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6293415c-db0f-4013-90c4-99e0115adf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e115a7-23a9-4bfe-8f44-7e53dbeb9fad",
        "cursor": {
          "ref": "c969313f-0050-4d8b-840a-366cfcf085b4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9efff8b9-ec8b-4d02-bcc4-9b15d208046e"
        },
        "item": {
          "id": "72e115a7-23a9-4bfe-8f44-7e53dbeb9fad",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "08bbd186-933a-41b1-867f-9ca76dd527e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ec4a79-95b0-4814-87cf-fba5be621892",
        "cursor": {
          "ref": "7c139c43-9adc-4f91-95d1-5c24165035ff",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2450df83-84ff-4da8-af96-0b91e96bd335"
        },
        "item": {
          "id": "c8ec4a79-95b0-4814-87cf-fba5be621892",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0e1c35a6-f38b-4c6e-a6b5-490de9feb7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab86b718-b46a-4248-bcf0-1166b3142dd8",
        "cursor": {
          "ref": "f6ebe8e7-bbd4-411d-9f5e-5fab328aab74",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d71ea7f2-8c92-47fb-a10b-75b3e94125f1"
        },
        "item": {
          "id": "ab86b718-b46a-4248-bcf0-1166b3142dd8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0cd298bc-6b34-49ef-84c1-3427eae597e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51142dcd-0119-42ef-bf44-e653ec6a9888",
        "cursor": {
          "ref": "473f4b9e-7270-4d4c-bbc2-7d94dbeef186",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0f4dbf8a-73cc-406b-b9f5-7a3e68ccee8f"
        },
        "item": {
          "id": "51142dcd-0119-42ef-bf44-e653ec6a9888",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7779ae26-3d7d-42f7-97b8-61864c398111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2d49c9-2709-40f7-bb01-0887beaf39b5",
        "cursor": {
          "ref": "46a79fa1-7b7f-481e-b93e-d6412d7fd743",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c19f87fb-ccd0-4854-94b0-b6ed15da208e"
        },
        "item": {
          "id": "3c2d49c9-2709-40f7-bb01-0887beaf39b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3f0ce2b7-80ac-4864-b794-4d49dd990340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18893153-5111-489a-a288-0797ef311e05",
        "cursor": {
          "ref": "38a9764c-2280-4aee-9a51-a50b1c4e152a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d644ec84-77dc-4722-b82e-257c62921200"
        },
        "item": {
          "id": "18893153-5111-489a-a288-0797ef311e05",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "235ba520-4c7c-4c61-a536-13b7bb2fdd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dfafbd-2707-4a85-a3a0-2ea672659cc6",
        "cursor": {
          "ref": "0b950dc7-65ca-4de3-b031-ebf4f52d187b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cf957be6-f100-4097-aef1-7651a12cb30b"
        },
        "item": {
          "id": "82dfafbd-2707-4a85-a3a0-2ea672659cc6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d80f6daa-c8ed-4a82-8289-3d310456b700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d576fcdf-4bc5-4e03-86dd-3c85d0054962",
        "cursor": {
          "ref": "910811a9-99cf-4c36-8034-19237a6c2588",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "978b0398-001a-451c-aab3-35d192fdc35c"
        },
        "item": {
          "id": "d576fcdf-4bc5-4e03-86dd-3c85d0054962",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9b68ac0a-7f6b-470f-ad4e-9f25039ef475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ba13fc-c1c4-4846-86cd-a15bf1d32829",
        "cursor": {
          "ref": "c065a25a-f71c-4d44-bf38-3d3b3df6be33",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0a401c05-ee5d-440e-9012-a1836a244cbe"
        },
        "item": {
          "id": "83ba13fc-c1c4-4846-86cd-a15bf1d32829",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "65020667-2730-48a6-a372-e06c5acfbd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af45076a-12ae-4890-93fd-762bcf527a46",
        "cursor": {
          "ref": "2875b8f9-81c4-4b2d-aa1d-1d1e74d091f2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f809460-4060-4ca1-9d15-8af5e0657bf6"
        },
        "item": {
          "id": "af45076a-12ae-4890-93fd-762bcf527a46",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "491b82b8-e92c-4c16-9c59-b5bb2e77fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eeea13-796b-4424-bab4-c91bfefe82f1",
        "cursor": {
          "ref": "cc477931-dec2-426a-8f23-001a3500d115",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2a32c078-d003-4387-8724-880f964c9253"
        },
        "item": {
          "id": "30eeea13-796b-4424-bab4-c91bfefe82f1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4410981b-df9e-4b5f-8f9b-8c4108bcfff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7a9e5d-0d5d-441f-91ec-3e9c7e26f090",
        "cursor": {
          "ref": "b97930b3-9361-4446-8fc5-07a4604b63ce",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "86cab1d5-a616-4dfd-aa25-ead4f090830d"
        },
        "item": {
          "id": "5d7a9e5d-0d5d-441f-91ec-3e9c7e26f090",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "80059802-811f-48da-9ef9-85ffb3a847a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5367a471-3e2b-4972-a0a6-a3a4c483f0ca",
        "cursor": {
          "ref": "b6fdc635-ac94-4910-a3f3-bdcb409aedb0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "147964fe-b3c3-40d1-a62b-6486b9ca91be"
        },
        "item": {
          "id": "5367a471-3e2b-4972-a0a6-a3a4c483f0ca",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1f1fa137-a734-4086-9b67-779826b76e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7300e242-4339-4a26-b863-1c64ac5d27ce",
        "cursor": {
          "ref": "3563c185-0f89-47a3-aaf2-b1f7fcf26c49",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "44648857-1614-4817-a15d-847d755306b3"
        },
        "item": {
          "id": "7300e242-4339-4a26-b863-1c64ac5d27ce",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d924b9fe-83ea-4574-9867-46f7f9c0c041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8dc34e-ccc1-4c8b-80f0-6d34014f045a",
        "cursor": {
          "ref": "791fc1bb-8b65-47e9-ab4d-4c5763c80092",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d71f1d40-aea8-45cc-9287-223acb16f40f"
        },
        "item": {
          "id": "5e8dc34e-ccc1-4c8b-80f0-6d34014f045a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4115e385-2c3c-4e68-9733-2d06db905b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc3748c-1760-4af8-9571-01a1f954543d",
        "cursor": {
          "ref": "2d916732-682c-4c31-b46a-d4c047919583",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cc2005dd-23dc-4dfe-b8e1-39b898577e98"
        },
        "item": {
          "id": "3cc3748c-1760-4af8-9571-01a1f954543d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c32dd00a-c48e-4a61-8b3b-8b044271ae0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458b1925-3a38-447c-b9cf-150337c01a09",
        "cursor": {
          "ref": "2921f333-72c4-42b0-8de5-09ed1360620e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "69d17392-5422-4ea4-957c-770e7306746e"
        },
        "item": {
          "id": "458b1925-3a38-447c-b9cf-150337c01a09",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "97963238-449c-4c6a-9a43-a7a684958d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ff4237-2508-47ab-94b8-f70747096d55",
        "cursor": {
          "ref": "1c61eb4a-4430-4e72-867e-f4b3fb4de35a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "540e7755-7525-4856-b27a-763a1d62344e"
        },
        "item": {
          "id": "c6ff4237-2508-47ab-94b8-f70747096d55",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c3768fbd-d8fd-4531-97aa-927ac1dbe104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530d0a1b-6e97-4e64-a6c7-96c625681eef",
        "cursor": {
          "ref": "73c7c350-e932-463f-9d22-6aa3458598b7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "273d905d-ebe9-4430-ba85-6b846f2c3543"
        },
        "item": {
          "id": "530d0a1b-6e97-4e64-a6c7-96c625681eef",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3677fef3-d965-43cd-9a33-2809f67fcc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc99a46-3408-4167-86ab-c97c10b4b01c",
        "cursor": {
          "ref": "f4dead20-56b4-4304-905d-e844f63ccec3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d60915d4-31b6-494d-9848-53a609587a9c"
        },
        "item": {
          "id": "bdc99a46-3408-4167-86ab-c97c10b4b01c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b1cbc9b1-2d54-46c0-9fad-e3fda271ca4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77873348-2290-4365-9766-96e5d94bd755",
        "cursor": {
          "ref": "7bf26489-af86-4277-baab-72d909f09be2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "46631918-7c8e-402c-bf7f-0d4282be62fb"
        },
        "item": {
          "id": "77873348-2290-4365-9766-96e5d94bd755",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ef254397-a635-4cd5-a0e9-be5736d2b4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbce8a4-5d2e-426a-a1a9-a87f03662fdd",
        "cursor": {
          "ref": "d0112879-9551-47bf-b417-bff2ae0633ff",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bba44e58-f3a3-4f2b-81b7-6fdd9847e95c"
        },
        "item": {
          "id": "adbce8a4-5d2e-426a-a1a9-a87f03662fdd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "585336a4-468b-4e2b-a0e7-66f2dac9b68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06bacad-4e20-4e88-aee1-9452f66d2e0f",
        "cursor": {
          "ref": "299c1dfe-31f8-49b2-bde7-3ec3cff580c1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fe322b41-1a21-4237-b29c-57c28c0ecce4"
        },
        "item": {
          "id": "f06bacad-4e20-4e88-aee1-9452f66d2e0f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c50f1295-87df-4f74-8940-0f923ad2cdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130a27b5-27e5-4615-b4a7-1bb8905a93e9",
        "cursor": {
          "ref": "dd3be896-6529-4f2d-82c2-b349b33371ff",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "33b99756-cc1a-4a12-831d-3fa589f93e21"
        },
        "item": {
          "id": "130a27b5-27e5-4615-b4a7-1bb8905a93e9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "20186730-93cb-40c9-8f33-420ce3afd6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69602288-fef4-45d1-a6eb-3523ca43c1ab",
        "cursor": {
          "ref": "6eca5f31-5663-4230-9483-1472a62bf181",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2e6ae7ac-cdd6-46b2-8c35-93da3bfb117a"
        },
        "item": {
          "id": "69602288-fef4-45d1-a6eb-3523ca43c1ab",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "695aabfa-cfa0-4787-ab8c-0ecad89ed138",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7cfa41-89c2-464d-88a9-dec88be24932",
        "cursor": {
          "ref": "4894583a-28de-4efd-9870-1dbe724311b3",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f283a566-7d46-4821-a623-e0990923a52f"
        },
        "item": {
          "id": "ee7cfa41-89c2-464d-88a9-dec88be24932",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a621e3e5-92d6-40ce-a589-ca6043f6ab45",
          "status": "OK",
          "code": 200,
          "responseTime": 2065,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb3287-d3c3-45ae-b53a-2dfc0d88c02e",
        "cursor": {
          "ref": "0455a297-5b0e-4f8b-ac20-786765804c79",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7bd01e56-0d93-41a8-8b82-548089f7ac10"
        },
        "item": {
          "id": "1bbb3287-d3c3-45ae-b53a-2dfc0d88c02e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d2c5f797-9eb7-4ebb-a015-8404ecef5879",
          "status": "OK",
          "code": 200,
          "responseTime": 2563,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46af4bec-4a14-48bf-80a7-26e65c45ba1e",
        "cursor": {
          "ref": "bd61fd78-10d6-4eb7-8505-5aec4be8cd6b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "300e412e-71d4-4516-9ba1-f792cee98b46"
        },
        "item": {
          "id": "46af4bec-4a14-48bf-80a7-26e65c45ba1e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "abf24841-ca06-431a-916f-ce36868dde2d",
          "status": "OK",
          "code": 200,
          "responseTime": 2286,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce90699-5c9b-4020-9f8d-eb70015afc08",
        "cursor": {
          "ref": "09c40114-7a00-4cb0-afb4-9b6cb9675ba9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9283c5a8-5c0d-4afe-b61a-da15a0185872"
        },
        "item": {
          "id": "6ce90699-5c9b-4020-9f8d-eb70015afc08",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5b63312-4f39-402f-b713-3a7ed5216144",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce90699-5c9b-4020-9f8d-eb70015afc08",
        "cursor": {
          "ref": "09c40114-7a00-4cb0-afb4-9b6cb9675ba9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9283c5a8-5c0d-4afe-b61a-da15a0185872"
        },
        "item": {
          "id": "6ce90699-5c9b-4020-9f8d-eb70015afc08",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5b63312-4f39-402f-b713-3a7ed5216144",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19244182-552c-4f14-9355-ef946a51d276",
        "cursor": {
          "ref": "7190e2c0-84c9-4933-910c-8c2cf2dd1687",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "174703b9-82b9-4536-95b4-09ca8a37a9a5"
        },
        "item": {
          "id": "19244182-552c-4f14-9355-ef946a51d276",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "319fd211-0c65-42c4-9a53-3b783bb2dd01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28baff-986c-4ae9-910a-fcd3bc04ee7c",
        "cursor": {
          "ref": "3d866f2b-8c4d-42fc-8c7a-4d80ff237289",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a76509a7-dc63-42fd-8475-75c8ab39b79d"
        },
        "item": {
          "id": "7e28baff-986c-4ae9-910a-fcd3bc04ee7c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "61192cff-b3a7-4c91-b3c9-de20f52390d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}