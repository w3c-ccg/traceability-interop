{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2d5f8e2c-a97e-4bda-be28-3a6cd2c0dec2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c19c5748-099f-4b86-960c-ca886336e7f3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6d323ad5-4332-4a34-9762-1fd61d63fa5a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e7b67093-675c-44a0-8a99-5bd883e7410d"
                }
              }
            ]
          },
          {
            "id": "b9ae71f4-84c6-4aba-b092-bee741e22761",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77321c0a-5463-4786-8d8c-51d41b34909a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7adcefd4-8fa2-4f21-a5ab-88def5214a17"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0bc7a544-8bcd-4410-927a-55833c86aae7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "77b06828-e650-4220-adc7-a146b4d0871c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b9c3edb4-1036-4e94-a506-5789273f58fc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c680314e-01b7-45dd-a7ce-cef4654f5f3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6db78144-e613-46e9-af77-c170a7c51dea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a251eb22-1830-47c5-b777-c618b9556c8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17c9232b-41c0-4709-aefb-be23d26ee6c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2f4aeff-0e1b-4e80-8b88-35ea61c53fa4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "501e7a4e-4257-4fbd-9a83-f705b0c0ef6c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0543c7c-21b4-4a81-bbb4-b659c1e4189b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "21a2dcb3-f6e9-4470-bd49-9e4135bcc99a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40d93005-2526-4a10-9267-af4c570cddaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90f6f96c-f40a-4428-930b-dcd1235ac596"
            }
          }
        ]
      },
      {
        "id": "dd4323c5-1084-4b97-a70f-6b9fd855010b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5dd04716-493d-42f3-a3aa-cb5db1d830d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ba152a1-9ac2-4c21-bf5a-ac96acb29e24",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d42c40c-7c90-417b-b81a-bbc7776753e1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905d6d80-a66a-4edc-b26b-0dcbfdd896ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae9000e0-4e2a-4d5e-b1ed-74d64ccaa256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0240a6f-4a66-4fbe-af28-97a503b65d54",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bc4403-7433-4ca4-bd68-32f70969c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73732175-f493-4f28-b374-d7c9baa5487c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99468187-48fb-4113-a5aa-6d256039babf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ba9301-c188-460d-b1b1-e3fd6363d1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30071d08-3f4d-4036-9fbe-3980cf4ac55d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5755715c-28c8-4c18-a568-41db0ea6b08a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3864a16b-d255-49e0-b972-07e72c51bf7f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c63605-a341-4fc6-9838-2790f7a0fa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5282dc85-3e37-40eb-b4ea-d1ce20af5a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c4b7bb-f569-4552-b7b5-d5ccb1579e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f27d9be-8b17-4dcd-a818-a4b7a9980c09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "102b2f26-9336-4fef-bf50-3a428ff9495b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bbc1fa98-683a-4b71-81fd-05fa740fa047",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9513225-d41a-44c8-bbff-689b8ecfd80d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e0f2ae74-627a-4bb4-948f-e891eb1904ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cddae44e-87bc-4eff-91a2-21464a3636e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1d2c480c-3101-4a92-becf-65f75ce24fa1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28944230-392e-4ec9-945f-cfab5a089bf0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8db52703-cae9-47d3-ab0b-a7df6c605c03"
            }
          }
        ]
      },
      {
        "id": "5558cf5e-cddc-4083-9510-141832fa8ed8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "de115180-344a-4614-8674-dc171233707e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a7746c9-c4b0-43f1-a97b-d3e5aff88acd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cbd403d4-c151-4dc9-bbcd-9816a592047f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b8e017-71e2-458f-b4ac-9389cfd12a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6675519c-b640-40d5-aa4b-40d8aa118d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46a7e63-64a4-4ce8-8826-0100f730eadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76b68559-7f62-42fa-861c-cd02d3ab30df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a14b244-af34-4027-9ded-407c2e5a475a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5854f792-ee85-4b52-a3df-ca5b0c020a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364b1baf-c4c7-4e24-9f4c-0e45309e6b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a908ce-0c32-4066-be13-b172b8d5600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6287d8f3-3850-428b-b10d-bf341ecc7913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3601279b-f73b-4dc3-b24c-deb03ba07317",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45b56f6-1ab4-4dbe-adaa-a15c7a87a66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d21551-e094-4a54-adcf-5c101c868835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb1f2a6-18b0-49df-b521-42a9887b6bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00e4482a-58ef-43c7-9b57-cc5af4f31e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c27048c-27f9-4535-8e8c-0a42df3a82b7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdaab6e-a869-44cb-bf9c-5cebc8564100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9fa9c3-13bb-4ca4-bc40-33c241d6b127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b976462d-c10d-4013-a801-527f62ebdd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c67f7dc7-183d-4716-a8b6-e0499e653234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bf295d-0349-4afe-942c-6cf17c9e2c28",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ca12e3-a9ec-4480-aa60-885ea19fd69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc3bdbc-7ddd-485e-a4cc-1fdc10cc1a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6204c420-7623-4a96-959e-78e6fd163155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be53a958-6662-42f2-bf2b-be9c4d385c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e928e978-ef2a-475d-bd98-a8a30f32bed7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cbf2a7-d9f8-4088-b73d-08f2d0b9b3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc021dc-5e84-4be7-afc2-ecea66b91b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc4b999-1cfa-46e6-a6ff-08df1a45c42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "546bca01-b981-4194-8d98-0c6648dba4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fdd3d2e-9918-4c3f-b562-10777e461394",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacdce4d-c38f-4a77-a049-936aa356fe6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87eb383-3348-42e3-af80-5e1c0c7cb694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63965b34-335f-41c0-9251-d19c90da3e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a1725a2-6294-45f2-b74b-6743e07ceeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c562e86-0881-4bf8-b8f8-9896a82ebef8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b778e8ec-90aa-42ef-80f5-edb8c83ec04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b9d3e2-0112-4456-bb2b-37e9b7d71f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99559e46-7e0e-48ca-be66-939653d06295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaa99eea-8d18-4b8a-b790-94cf6e0a3709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0587935e-fbf3-4b1d-bfdb-1fa60344c90a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd03eccb-fbb8-4a28-b004-6c141ff11d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faca02cb-a10a-424a-b58d-6eb7af7ce65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2592ad62-b749-4776-b80a-63117d55e23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf311851-794e-4233-94f2-ca2e18f605f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0c0287-48bb-46bb-aaba-3541985c7218",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96969541-fb81-4e8a-b2a2-e8dd88b5b8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780f2622-e17e-4744-9d3a-69a3fd99994d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0215b671-b9b8-40a6-b7c7-06c4631e0c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0b8b385-11a2-46e4-b4fe-09020d34200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf37293f-f15b-4ec4-b951-0a7e00188430",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b397f547-6777-478b-a194-7006f42def05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5b3506-e3d6-4d9f-822d-09ba9029b272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790cd45d-5870-406b-91fe-f7ab468eadf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11892dbe-fa3e-4007-8795-2202bd0a2970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eba3ed9-051d-465c-9168-d3febe438ce4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c585039f-77b4-459f-a23d-0e66c8b34781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1367d8a-7975-4e0b-a13f-21af1ed29999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085a65f3-131c-4cbc-8962-158db820f76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "852266e0-e356-48d1-8628-3b863f412a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82336cc-4379-4ed8-977a-7361bc5d1bc8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294fbd6d-d7f7-47d2-ae6c-ec4f615461e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c85560-9094-4aae-8e21-bced9bc022ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf94935b-7644-4661-b90e-c0db0732c0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "055da502-00eb-4f7d-b45e-e41d23dd064e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109915b2-a56d-48e6-bda6-2491c36789b4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3212e480-9a87-43b8-973f-6386497b5ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482d6ab8-8593-4b48-b5fa-128d67824f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca6cf09-ab23-4765-aa7a-6d5c94f312ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f645d4f-53b5-4d7b-a9a6-547e8ec078a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b1610d-aa41-4a66-8874-fe2d6101b565",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b8cf6f-eca9-41c0-a979-01e00a5e623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55156b1d-7eec-4efd-8e58-cd6b1f22d829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04645f3-25c8-4825-9de8-b270a57fb165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe6158d6-46e0-4cac-b445-7497dcf00985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6825c9ab-3e14-4384-8245-9567a840be02",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cc423a-639a-46a4-b037-dc5dd67a1266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cc0dd6-eff5-4e24-99c3-53a0ee2bf5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e871ecda-d0f1-494e-bb53-75e9cc1ed5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "654b287a-b0ab-43db-95c6-ffa4b49f0f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acacb559-fc5b-44c8-9761-674c93c05d91",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06aec1d6-7c20-4b63-9596-c395cbe413e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4ed652-1617-411a-8152-7b024b30e4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353fb7bb-4032-4a22-8464-5be2bc1b58ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "780fc22c-f5da-47fb-891b-5f24e7809184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33efd0b3-7f8c-4a18-9a01-48d512b9ccaf",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d399335-db04-47d3-997e-ec1f4aa0e922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bca28c-f37f-4e8d-a64d-c7637650fe63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80842cb-32bc-49a3-a203-2883388ef562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d2253d-4183-4dfd-8b52-92b53ab33ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b42c159-148a-466a-b023-0f37c94cf640",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979a51a1-b28a-4980-a95e-5e200d3299fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2876471-24de-455e-a7cf-69c9c987be44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5699cd5-9b01-47c4-985e-c20d574304c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "936eb226-1824-442f-b5bc-e64ac7440aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df4b78e-65f1-4aac-b9e9-26bfbfbb0957",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc8b5c0-7ff7-49c0-a5fb-0c68ca67e199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e0fdb7-fa0d-445a-8d7c-e955f1b6aa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5756fcc-52d7-44de-82bb-91a3310e4b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11063f46-6e15-4d2e-8c12-3a9173ef2c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00c142a-7f5b-40e3-bfbb-035e0bc461bc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e036d01-81a7-4d5f-bc6e-ec5d4eea7139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19c5876-4bc3-4865-87dc-a694edef8dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0411fbd-c17e-4e24-bf4c-e6324a75c531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdfe9e5-8498-4d51-98cf-30237bc4e60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4d149b-889b-4f5f-9832-65303348db0b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f322d834-814b-4398-b238-0799b1faf224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b7a453-97a3-40af-b757-9c76ce10bd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bec16d-a6b9-4279-aabe-39a5733151e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b214d8f-5cc3-4c05-a568-9f8c8615d902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263f0a89-5c18-40a7-a519-99ed666c7f2b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18726154-a446-4ef6-87f9-b5c22ad0085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b57e6e1-7d31-4ff4-ad77-4afa7c4333dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a9b9f8-daae-4b36-a14e-44e12c3d99d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb674004-835c-4eb8-9994-98cae5408622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdb1a5e-85e7-436e-84d3-77dd12666869",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe6c577-2c72-4269-b684-e4f1395b8a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e393853c-3f11-4e67-9617-45fef808e607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345bd6d8-1bac-4ddf-ad92-8f1e97012954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f23fcfb0-2653-4086-896e-3d3f474bee93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a318b28-4792-4811-adb9-5c318896306f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876894a9-1ab7-450a-9cf5-6ae8b1410883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814cb1de-767f-41d0-abbe-5ecae1c7447e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20dbfe1c-0565-44a4-857d-5a48b98235d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfda0ed9-e736-44f0-8e2e-3330c649d575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb6c051-bd49-478a-9906-6d1d0082d962",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647d8d97-9dd8-4136-a7df-387693285cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3890ef9c-6f53-4025-86b7-716bd8bc77d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d610d-7409-428a-b0c8-25fcea275e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3df336-4fcc-4e88-a99d-181f1a09c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d190e13a-e33b-4990-a23e-f7712b26756b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2dc015-e410-4c39-b1c7-ab95788a9642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171e7acf-044c-4682-9116-73176ff50caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5af6dc-a0b6-49db-b748-0f55e30e936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cae449-b6e4-49d6-91c7-c1e30a6b22b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f800337d-6311-4dad-bbf2-741b3db10d4b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c75a09-320c-4ad0-b133-b327d278e1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c5b2c0-ee94-4548-83bb-de42fa06ac39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987529a1-7c82-410f-ad9f-9cd50e22f609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0276349-4c88-419d-bf19-031625fb1268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c31e10-4d98-490a-a653-41d060692888",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9404f3cb-5d49-45f3-b097-614ab7982180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc57015-37e8-4ba0-8043-618fe05a765f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8b396e-967b-426b-815c-aa927f76e306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11c137d-32f1-4c85-b0b4-62d53efabdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4cddd2-79de-46e0-b96c-d8cecba89ed8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b18b0dc-972e-4371-a124-d8f008af64ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b61141c-b96c-4810-b92b-cf38e4a8f020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec39061-5b00-4813-9400-50a74c674caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "365b2e4e-4adc-4a41-8ee1-55f49a1b433e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78624dc5-1946-49bd-ab55-ee01bcec25e9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0fd055-a171-4b2a-b037-7ea0f4e704b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03bd4fc-4008-4099-bc68-7170853361c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb46cf0-5566-42d9-b3cb-6f2f43a8d84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3ade57-82cf-42cc-a474-81d99358a2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7c7ff1-018c-403c-8830-c9423737e712",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c8f9b6-161e-4de4-9974-0054d9bc9ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f064aaac-9bc4-4034-b5fb-0c586e182ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50ac2f6-a9e1-45b6-b30f-755ec23c991f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08274b4c-e4e7-468d-9f5b-8c99b4e6f145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e53994-6b78-483c-ba5b-aed4cd9c4630",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238a5302-7630-4ee0-a991-9658fe5c1213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88132831-a730-4e17-965b-8ce46d52b79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818eecbd-123f-42c3-af7f-2689cd424229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67b6eec9-fdf2-4ca2-a4ea-b4e31cdfb047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5988c8-0127-45fd-a431-f66d056f6861",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a29db3-d45c-439d-80b4-960a56a57989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205c66dd-8201-40ef-8d31-edd758772a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e39c1f7-2057-4080-ae7f-42241090222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b595fd-6457-4947-84fa-6ff6421303f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a985d197-34fc-401a-accf-67792f4f68a4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6a6401-35fd-4449-a708-76348f017642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebab5d5c-d98e-4bcb-8b0b-093a0228e0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9f1342-65ae-4b3c-9799-6f5fcae6f661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e78c6a3f-1dc9-4462-8ea5-5ff615ebd9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c5447c-af5a-40e5-a1d3-810f7a761ef2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37110c82-15c3-42e3-b7ee-437cdc6a6e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fd8dbf3-cedc-429f-a091-4837e808c051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd70472-5c08-4feb-b376-ca9c2e9eb146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e03d2da7-707d-474f-ab3c-5fe5f2866a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b226c3a-1b6b-4f2b-be63-8fb49ec4fcbd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749bef8a-380a-4fb7-8131-4ce1f58ac785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5aa7fe6-d531-4540-a408-30f23cdd1491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0fb877-f4c3-409c-aacb-c3ec51eb7471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2aac5f-4441-4492-8380-bab37ff0b674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c743dd0-abfb-4295-b583-774585322e30",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4ccd53-fbe1-45cd-a306-33b28acfa030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61c9c84-82a9-4a41-a265-b5bc2566c0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d68948-d30c-4ccf-b4d6-02ee4039bdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "600920a4-a2d4-4118-8271-27b4cfe50b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8137a597-d7d5-46ca-8d0a-20796320cdbe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3dcc6e-e03c-4f7c-9ade-73e722f08cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f04c0cc-7703-43cf-a380-a97a646779d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d1b461-7285-4003-b530-274ceeb33216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "515d9b5a-c6d3-4608-9865-77dcdabea771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8772a509-ce62-4b8d-9d4b-73e266da2baa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a348832-7652-4a6f-ac14-ec8a11594f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90543b7d-9874-488d-80a1-77b94775909e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a7dbb9-2cab-4d0b-82ad-9a7237f24d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "caddf96c-c1e3-42d8-beb8-bf61c2e29a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1b537f-1a9d-4657-8a62-e43b82cf9834",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2881b1-4613-439e-96e8-7380658d3ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff930e2-2e60-41a6-9d1f-13ca68965b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1346d34-6a80-401c-a6a1-d10ad037e3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "18ed74aa-02c3-4054-a6fe-05678d61f531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee0ef8e-e329-47a9-86d8-30417d9a6caa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfe5e85-2385-46ac-83ae-99d4d2891219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e44d9f-2d48-4e3c-97c7-fab96db90f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d35df6b-a75a-4a2a-b3cb-7db82325dfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3c06c0-d80d-4634-baa3-e191e84cf948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480abde4-08ee-44bb-8045-a0a6c8ff5894",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6475e5fb-0120-48ba-8cde-9370d562d557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38588126-4d32-4537-a5a9-b98dfaba5fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e627f7-11d7-4f56-b1ed-71163350c855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a02e50d6-4011-4d6a-a273-a90f2dfee3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a27cfdd-5615-488b-b1c8-07e91976682a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a7a8a-cd45-4400-ba6b-2f0c30155103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db18647e-bd67-4c96-bfb6-bf7063206891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b4e279-bd42-4e9f-bb2a-677f0db5a0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4713e1-5997-4d4b-ba88-64f975e0e0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ed1ec0-36a5-46eb-a22d-22b014108864",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdd7001-367d-4d87-a5ea-00a703d4ba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae300d6-31a9-42c2-b1f0-13e0b1bb1c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291cda01-4f78-4f5f-a185-c83a11398190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0c85a0-84ba-410f-b852-c91b791de4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e213bc6-5915-44fe-80c4-42933f574d9e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a642d53-e725-482a-80b7-fa67f7cd358e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c019a79f-d67f-4776-ab1b-eb8c24acf083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd02545-700a-4c19-ba57-d027568c8b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43db48b9-b3a2-46eb-97ce-a70a1f00dddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1d866d-94cf-428e-85f0-9156ef7d8818",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fb6839-4340-44a4-aa02-9290e0b3606d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22ee761-0848-41d5-acbc-cdc05d601e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91052fc4-005b-4481-859d-4824c43bd170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8515177e-7406-4b0b-898e-9d4c993d847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d8a925-69bd-4003-aca9-370b40f21f75",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da3dc83-cdad-4f79-bd72-a6e9059f9129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35566a7-6bc6-45cc-925c-907219fb66fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b8b83b-5d50-4286-8ebb-c2dea12e07f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "187c400f-22a9-429c-8cce-e87b37e12228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0681614b-90f2-4446-8a43-f714693f0994",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3729f53b-2fd9-41f5-a91f-1f418d3c8e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0169939e-f1e0-4877-bad7-a76ad9c14c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b98d8bd-f175-4983-b4ae-27a49be2a75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d2afba-16f5-460c-9625-32db03fde0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01db4246-2764-40eb-9c84-f2bd2bb07bfc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef726551-39b3-4406-8d4b-4c6b757ac649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46df6e4-748e-406d-90b8-f29eacf52d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632d38b2-d332-4f4e-911b-a43bf0fd35d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4259d1-b00c-484f-91a9-ac7af1fa699f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb15898-efb1-496b-b9ec-a17751fa0122",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093ff292-e8e5-412b-9862-5871dda22136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b460efcb-65e0-4af5-8e30-bf9ff93b1a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758adf59-455a-4607-80d1-ceb484a054bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bc98cd-e4d0-4a0c-b1c7-9765b192c438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280bc304-59d5-4d6c-8735-93f11b7007b0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975e0739-5443-437b-bd5f-5e85af0a9524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c138e54-3858-497e-8b6b-47ee9513fdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46ba21e-5028-4775-9233-19bf8332356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4fc53e-f1ae-46d4-b291-2bac85ac349c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdcafc6-8483-4d4e-8a92-41775a077208",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7952630-ae3f-42f8-a190-51915639b04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658dff71-2eaa-4152-a79a-b307ffb9d0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901f5e78-ebc4-4e29-83ec-c7c93544f3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab06212-ea8e-4867-8010-880ff2c9c087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d25832-7a1b-42be-8287-2c1d7f70b740",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95db3e5a-a378-4802-9f0e-cb08e3d4350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1d7150-9ab9-4829-884c-02be363097cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9315f5c4-9a19-47ca-b549-37c787bfb9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d47e8a24-2b19-481a-afdd-63bec61b704e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc8d6d3-e78c-4575-a87a-3410100ce1cd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ce1e5f-a2c9-403f-b447-fcf8072609fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822398b1-ddb3-4839-91e3-8de6d2614dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655578ac-dd72-4331-9dfb-6086ecb87576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "168dadeb-af48-43f5-b044-6c968086d9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7cf480-fabb-4f17-bc7c-908987a6646a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a98759-e0bb-456c-9d7f-de50e1aaca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6251615a-8403-4886-aec4-22967534867a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dfca35-8891-45b4-aaa0-178e7a0b81c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "29fa56fb-6d21-4360-8cc9-4ee65e7868a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07a817a-d586-451d-8eaf-f6e7e0eb73fe",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc55ff9-ad45-4aa9-b23a-e05fcb103ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1973ea9b-648d-4e8c-9b69-1d31f8610010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee728f95-32b1-40dc-9b8b-6cbdf40993b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fa3a58-72de-4f3f-bb8c-7658f4b02d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee350cec-0081-4666-b808-6829f77f1aac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72a77c8-17b1-43cb-8ae3-249ffbd1fc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266ed3dd-6e24-4283-bd3f-fa71d5db3f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a34298-ea2f-4959-bbab-0b3d12f3d3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10d6da59-a99e-497b-b63a-9b73d1cc62d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c58211d-9e67-462e-9a0f-827a0d5af4bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a6291d-d97e-4972-9cea-5af4ced0bc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eb4e6b-17fb-4ef1-8d7d-cb37359e7671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c0a6aa-14c3-47f7-ad9d-4eb9243cb1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f90b3c0-1414-4696-9bd6-aa814f13821e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86f3b93-f53e-4179-a019-9c986f5275ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3273d4e-dcf3-4628-a855-4424a46281d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37061b3-9721-43b6-9003-7887fd3b63a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a032041-e82d-421e-b9dd-9bedb0978ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4582ceb3-1244-4fb6-9d8d-a107ce27aa4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5fa296-4977-44f5-85a3-ec882009b644",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdab7f2f-95c2-40f5-bca3-0014fddc6812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c1179a-7ad7-4ba9-a622-997c2b743510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88062d2-e54b-445d-a55f-c90bcea1b948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31217cc0-17a0-4134-be65-afe12c947495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791b2d65-144b-48e9-b1b5-fefe8c6221bb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7f8937-39dd-4ce9-830c-8ee6622c6e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce408ae7-ab7b-4037-8aeb-1539ae066d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6854d638-add7-4f0c-8ec3-9489faad8984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "570a20c1-c348-4067-8404-13648764c2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea613e9-ead7-47be-9706-c41f127ca4da",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddaf609-9925-44cf-8b96-5cdfbf668aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dbc0ff-45df-47d0-be4f-3929b7496461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23899eab-e3b2-4889-9743-9fc54d4c4e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5f7551-5ae8-4153-aa6b-8fc8ccc179c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9805d080-4339-4cf4-a8a8-c8b563f63038",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aa6c4d-63fa-42db-beed-d1865181226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465188d6-fd82-4e8a-b5a5-04c2e8262857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2505e34-2ea6-4aff-b860-42360c127740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdc7179-d7bc-4a75-857f-1eddf8efade7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7360a080-ac92-4094-b325-92f51ff3de4a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94968e0-18e9-4594-a54a-217f1f7aadb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17f0217-237c-4526-89ee-33aff828dfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6b1aa3-422d-40ce-8b70-8e61da86f4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ebc5c5-c20f-49d7-82c6-6e2e3b9c6c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e29e14-38e8-497d-ac51-424ee004c4e9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0539b01-5154-40a3-ad9e-a30e356864ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ada67e0-100d-431b-bfdc-47fb4c56bc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f71eb56-b366-4066-8287-3e316048dea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1e3f6a-ff24-4855-9b5e-56b15e7ff1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f3d74e-9841-4305-9bb6-e93f35b49615",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537a3bb3-b912-40f7-84cd-f05211b0de45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a33e35-9c27-4732-b110-abb2e23b1198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9a7ec1-6853-40aa-8da9-1d39c1e66c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98992fa4-d0e7-4d44-8a4b-d8c1afb3c5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb15eec-de13-478c-b805-b98fda931422",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9068eb36-6c03-49fa-a045-23dc134fe670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a36a05-c21a-47af-b8d6-39f1e322d09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b049c280-08e2-4554-93d0-be077bd17b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1530c1d-35a9-4a92-882a-556e032b5f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e983590f-f5c5-4340-baa6-f87a65983aa0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c91ab2-de1a-449d-82d4-d88deddc5ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bee28c-a36d-4139-a0aa-29edcba9ce08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444e8e65-18f8-4798-81ea-13df944320d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8493cf-ff5f-4e53-a1ab-1f57b488d8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acdc18f-f4f3-4e6c-b031-9c0326d40a16",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4158eb-c6a3-4ac7-a5b0-0e9849a352af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c9370b-d4d4-4eb7-bbac-de0d4fba8516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4ea4d3-7db7-45ca-a871-6f64b8cf5112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d1f20f-5687-4961-8a9e-b90bb422ea93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb48d155-c84d-42ed-95a2-0bc2bb1edb3a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a3c3cc-300a-4ae2-bc78-8040c92b0c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af116f2-b3cc-42de-99c9-40afcc2f311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab83427-353d-4cdd-9528-f8e92b7f088a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f951ba5-38b7-4d12-835e-b6d96db9cb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4dd435-e3d6-4c9c-8114-1e757143189d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc2adb0-0631-47c1-bc63-bc2c8b8eb215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e418f699-f76a-4547-8d77-c985c5bc0dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280be505-dd9d-41e6-965a-da829c49eed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6119ae3-6fdb-469c-82b0-6e72bfbf993f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7796c5-d0a9-4d26-bde9-85fd5694cbc4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18dd033-4684-4f79-8a81-0e72e7855f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaf0915-ce8d-4c81-8051-81cc3ba3e8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f69ae5a-30c1-4e2b-adff-5f3b6c6ef1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c35b25-8f61-43d6-84ac-aa6e9acbe9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b2ecbe-7418-4f7e-a24d-b7ff4427d94a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b788a2-65cd-4103-82a8-63fd550c44b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105534ab-0b7d-4a91-ab3e-f5fcad316a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbe6276-edc9-4434-9c3c-cf8b0e1b7eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "662d04fa-79f0-4234-8117-c37e0816d940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea45f2b-7f15-4c5d-a0fa-475f40cff482",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b74508-2613-47a6-a838-0f1835beab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d5dd74-8d41-44d0-9207-ee379800de8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584cb7a8-e557-4721-9bde-ebd91a26f70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae6c063-2fed-4704-a7b1-9eb7f8d9019f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064eed1b-d3ef-4d87-b39f-52a46e0df8ac",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bad1ab6-ba5d-48a5-a50e-933a3a759122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166037db-76cd-4c99-ad93-1dc55f12e096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f2560d-0440-4259-b923-5e9ddef430d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00cb3431-300b-4ebf-87f6-cb21acc547e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e130489-e22b-4bec-87a7-a2219af8a848",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6672241-af80-44a4-8815-d1176b1b7d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c884da3-76a5-41f5-8c7f-4484754a5f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2e378d-a969-482e-9d3e-d44acb34e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b615bd47-339d-4e73-8b3e-56160461b88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490b1da6-589e-4a28-a5d2-53f8fa561912",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02431bb4-2a74-401a-9b34-db362ab7c741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5226e9-7750-4531-996d-c876a50fc606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc3ab1f-3f82-4b91-8dc1-9c551b3d5e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68bfdf36-61de-45b8-b10a-2d5930aa2e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247554ea-2578-48c7-909a-db1ac33df75e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b37a7ce-fa2f-4923-aba9-957180a3126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d9f9cf-3897-499e-88b6-a413b22cb01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41b9a06-ba0b-4c22-a6fb-d83b9e3bc08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2013518-7322-4307-b38e-2565d4d22621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685f64c8-b1da-4fc1-a00c-bb4b5995eab5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a4f9ca-8134-4998-8a4d-696512592245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab35764-8585-46e7-a41f-786640e8256e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa06ee21-d5aa-4932-ad98-5e5770d1485a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed50ca08-c091-4f3e-b7a0-a8381579429d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9849de-7ea7-42f0-b549-827a18bc041b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7473ba7d-d45e-4b37-a88c-4b9bf71c5198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624cb5c9-c11c-48d9-ae00-f6768758c98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6ea8f9-ac5c-4aeb-b155-53cfcb10804d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "737f8158-08e3-4103-b93b-0dc28b971b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93da3533-f881-435d-8e30-0e829f8dccfe",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d3ac28-3f6d-4ab8-94c7-484366969ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204600c7-d1e9-47e4-903e-cd387f392fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda93a3e-6519-45d0-b0b9-8a063e5c4f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e897756-4ec2-48cb-b4a7-bc72db5c09ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5622e13d-cf62-4ecf-bbe4-84ae1c125927",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434008b3-5543-4882-aee2-48cd5c34cc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3279a3-1c07-4bfd-b147-6f37c433fc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfbf093-d731-402f-ad2e-62b9e186f887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a76a1a7-99cb-4b73-9b58-3cca14e0a916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d13ca5-f0db-4542-9f43-f966b3d6b90e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f708af9f-f794-4638-a117-4f87e97406ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f139794-747a-4b8c-9cde-8e0235b02750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298ae990-8051-4e97-9fa2-e2663ebe4b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5de269-33b3-4f95-8a5c-c32cc4054666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d9649b-c561-47fc-acfc-113891e435e8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ef0ef1-18d3-4220-b30d-91a2938d7ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f1404b-4f14-4b5d-9e7f-4c8d97c78363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a482100e-1e5f-4365-8776-3571986289e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c433ad2-8efc-4f3e-94f2-433740d6ff35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e12bd4-34af-4e8e-b0dc-488746544b0a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710f0f97-ce0b-43f4-837d-93cfe6796995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aba7f62-1393-455a-8e0e-895e4b3d7d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056d6e87-f884-4b1c-a1c2-7b6e4b1f1c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f9b2b3-a7ae-4f0a-8091-f97e441289a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2be3e0b-7aff-431f-ab0d-6ed897f847c2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4974a5c0-58f4-4d62-b9c2-f85356859737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c536c88-a420-4494-bd55-ae19394021de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa69220f-bbf2-41a8-9ef3-d9f969830f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81fb1905-3f13-4d70-a797-fa2793f6b6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb969cdc-83c1-4c7e-ae73-105219ff3795",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad302c11-af49-44b5-9d4b-5618c80ebd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "098c0fb1-0ad1-4808-b626-0f6546291ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0975dde-2d49-4404-9a7a-8c845099e660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee827bc8-dee8-4952-b927-c18ebd8a49a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8539ad-3b00-4843-b0f5-4f460b290e81",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5684fdc5-dc8d-4155-a2fa-304fd239f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebec8f6-722d-4afc-969f-ce59d742594d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d40959-368a-482c-a789-524ec9ce1a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "100f5595-5bdf-4708-9d7d-614827d68e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1849cac-165a-43e4-9e20-78d5db8163d6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86993f88-bd16-4495-b6fb-a31bbb44e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b57942f-31b8-494b-942b-417cba7fe302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68ee147-6f49-40f1-b50a-7ac2b3ec7daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdcb6ff-aa85-4723-b141-f72882d7b213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cca45c-0de9-4b9e-b9b0-19011d6ed4b5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d279980c-c441-4edf-b694-07b51f4f636c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc384cda-78c0-4026-854d-9a170ab948f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f62d4f-65f2-4d3e-ad21-d2fd9d92b3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c56cf740-4512-4cd5-9982-7bab1effd885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e32a788-582c-4fe3-8fa3-efc18d6c52a2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc11d42a-63b9-419b-a777-446b519d538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c77d58b0-bcb3-49fd-bd47-eb0af832ff65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0901afa7-2652-4caa-91e2-a5b9859160b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "907e9e24-93a2-42c5-ac62-1017478dc921"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6d9688a-69a4-4eb0-aec2-5948ab5fe019",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f841f30-76b2-49d8-a292-fb11c5ec1abc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b9b51-9962-4ee2-a77d-5a6cf80cf61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "600bc4d5-0ad7-432e-8a4e-23e50b9a19c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad6d32f-70f3-43ba-bb52-8656c4f7fb81",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc369f01-40e1-4669-981f-a6ff22e0f285"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47fa8a1d-563f-4251-b80e-816e2017d85d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "297c5e76-2372-4e98-a8e1-544ecf144fff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9ceccac-cdc1-4714-bcc1-69cd5a0eaed9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "001281ea-aca5-493f-8678-8bfbbd91d754"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3e616c6-7560-480f-b32d-59867a537cf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cec5b275-afb0-46e2-b904-969bacef32ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d96bb50b-f198-4816-81bd-da98563022dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fd0bb45-6f57-415d-8ded-a69354393abb"
                }
              }
            ]
          },
          {
            "id": "336c09f7-773a-4720-b334-7b514b7a6ae2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cfbe92e-88e7-40df-80dc-20e0c172a28c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "45c4b120-c2e2-4fdf-b1d0-6d4aa326b4ec",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70668750-6c21-43b1-86f8-ab1132b3c239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8ca9796b-6662-4619-b70b-c61266369eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f892c0a-b0eb-469c-b84e-93d9b28de689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09841dd-ea3e-40da-b946-f5a1a965d9d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "27042959-3161-485f-8803-4041f7bc5c56",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca31914b-8dbc-4026-ad97-5961f0debd94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95eb2b01-df9e-4014-8ae2-a05e2b6099c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7eedb5fe-e32e-4a95-86c9-feb7ebad714e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "865c8829-a857-446a-8172-2493b331d02c"
                    }
                  }
                ]
              },
              {
                "id": "1c1b6088-0b29-4d6f-86f7-2607c0bc7dfe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "309d0e84-a4d8-46e6-a110-ef74efccbb32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bdb96bc-14cf-4236-b063-7c61d7e98ee1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "194e4007-cec0-4e17-bdbe-8b09214e8caf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "779faf46-d67f-4587-9b72-5eb18bfcb58d"
                    }
                  }
                ]
              },
              {
                "id": "33cd0c66-5efa-4619-aa8a-a7e2488a395b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e67b1b6-660e-449e-a0c5-63077baed683",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a62d260d-75c7-47cc-b0c3-dd538414c6c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03d590d0-978d-46f6-b7f1-0acad8415b74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d5cba71-d563-4389-ac37-954bcdef5472"
                    }
                  }
                ]
              },
              {
                "id": "8e31e2aa-b99e-4ded-93ab-0be7d10757d9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc0f3b21-323d-4142-bc31-e6b494f7c71c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9998aa6-84b1-48c2-a5b7-326e4dffe7e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4351f23d-b376-4116-8b04-30aabcfd3acc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ea88dc06-e93b-477f-9e8b-5b9f812360eb"
                    }
                  }
                ]
              },
              {
                "id": "d81402a1-f1a2-4eb5-936e-90c88e6931bc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9e9365b-4095-4812-b68e-3d416024e8e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "731fcee8-3e7a-411c-abe2-f250596b1a10"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49da2bda-654e-4333-af22-e55e0536f916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ec8c8685-4fa3-4411-bfd6-cd4ddea3a540"
                    }
                  }
                ]
              },
              {
                "id": "b2b04c5c-081b-448a-bb11-2efc106d64d4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3f5f49b-ddb5-47a5-90c4-7e169e0d79fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6294a4e-fb6b-45e6-8492-4b60b6335084"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d061c98c-a468-48c6-b506-c46bc82d6e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "847c7d34-911e-4f1d-9c07-1dd15e2f8292"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cde59588-8c12-4d85-aaa6-484e152f9c67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa23687b-be40-4dfb-8569-4c2d8f52846b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "517475b5-eea2-43ea-85ad-20c97f373b31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73f42034-933b-43bf-9962-29183ec75062"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9801c7b8-feaf-4290-8457-5d986ee57ed8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3fc09e7a-a4e0-4961-8731-c96285bee282"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9016bc9d-ec9e-4574-b711-47dbe426bc2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4074f7c5-2f92-4787-a181-c4613f36d5f0"
            }
          }
        ]
      },
      {
        "id": "e3e20d2d-254a-43eb-9fa6-df6cf7085d1d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "54eba423-ccdd-4c45-84c2-a68c28e2199f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "119fe4e7-5fc3-4851-a07f-679187f9b706",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c629233-ffc2-472e-a293-113ea2a89114",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51a6a58-5f1e-4153-b73c-25dc5b35c2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf21e72-d542-43f8-908f-111d590a2a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0082b24-09b8-4ec1-8514-a14212b750db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "017284f2-a443-4240-bbcb-7ef24ec9814e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ed4d68-d0e0-4662-b800-a816a64b8a16",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac3096e-b402-4865-b635-34622fdc978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7350db8f-ae3b-49b4-9ea4-f05c5a153c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4350d9e-83df-4db3-92bc-97e59cce3c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b719db-628b-4030-bbb6-3e144afc0702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d81169e-5993-4527-9879-6a8392fab3d6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1829ea2d-b3a5-4295-873c-4c26b62ba865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8106a823-c605-45be-88b0-4a31fb410c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4852ab10-9fc7-4bf2-9fe4-a4625775aca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "216f9416-4225-4607-a136-324a7d6edaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330b46c0-8338-4a4a-9971-f2199a1a124e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6268e25-def2-4806-bd27-983d75d4a915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5eda91d-1e45-405d-b5d3-c70b2cc8af29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5444bac-433c-4f99-a9f3-5248b3308461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdbc9b1-c94d-419a-8345-fa82cd13d65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6a41cd-ea35-4ff0-abf3-f646094310fb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80d8109-857a-47b8-98c8-ef031a13cf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c102a4-b24f-48c5-9f91-a1bcbd1802eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0ec383-8a15-4486-a1b5-815c11ce0c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "743a90f8-97ec-43e3-aa7d-5845627b00ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8709ca22-0f67-4366-a36d-af57da9ea7fc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3ee282-eb9c-4d5f-95bb-b56ef943fb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f31330-4df4-47c7-83dc-598670fa255a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26531d8b-211f-4b6c-ab39-8bce5a5d58ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75cc63fc-f21c-45ab-a0a3-ebb96b595e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8faf92-8f78-43ca-9cce-ff26cc1386b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553be498-3db0-48d9-b74c-464d985604ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb72884-dc6c-4a5b-a5cc-ebb50b5a8711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed0b75b-7192-42c4-9305-b8b9b4d96278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb631b7-e665-4a04-8285-094a5c41b124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c879f4b3-8eb8-42bb-a8ff-1feeb08a3fb6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec653d7-988a-4511-8541-7f3c79481651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee626c2-2670-4ec9-b838-6377d72256c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bde3cd-b0c1-45a6-b69c-e654e1485222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4c89d0-3ed9-4f66-8c65-f3ee7bbb76d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba8fe4c-8d22-49db-af94-eec14eef811c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4053a928-7c20-4c6c-83b6-7725ee92e6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80df5be4-c9b8-4dd9-b363-7b7af7f5a7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab97910-4bbc-42fa-bb26-369f52e72985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "576efd81-56ce-49c4-ab88-672d83186447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c90293-88b6-474f-809d-398c6e29b7e0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686c2148-77ec-45ba-a548-6707bd73e43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055b7a20-c450-4f2d-ab48-906aded9501d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27f06c6-ba57-47ef-897b-a72d548cb047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "519e9e6e-d487-4209-a633-245aaa1ef21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdde09fc-2edb-42b9-8404-c356cf412196",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a308c2e9-e859-4f60-923b-f78c3b802f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d972605-e137-4a1b-bb08-716accaf79f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ca20df-8a82-40a0-9818-e0ecb628d212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b09acf64-782e-4d5e-acea-ecda3bd89894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33ef6e6-7aed-49d2-8785-8dcab9aec0e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f013cd99-34dc-4889-92b0-8025bfea046e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68b7f9d-a336-444e-acfe-a2b0b863e985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fcb8f8-062d-4698-9b84-ca9c4efc3d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "616534f2-63fd-42af-848d-841dfa1bff55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c14097-374b-478c-ae76-c6f547729cc4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8f3f74-72b5-439c-88c2-7185db6911b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d66688-41e3-4e05-86a0-1173fc82b8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dbf642-dc2c-4abe-803a-be2c4e77c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "730cd100-2f8e-4cd9-a100-c1a1805487b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afb8b21-35a7-4606-8678-b90c2cf5ca86",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937c9b3a-bd4b-4f50-a4e0-c9ea9bf22020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a54c2d-b797-4c1b-a47d-1aa957d2c4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4721d03f-065c-499a-8495-8bce25b69f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18e1f89-79be-4226-8e1d-5f5396582ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1d1d2a-2b53-4207-9596-ca0730037d63",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b43365-fd92-4310-83b8-48dd1886be54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8a8cac-548a-4ed5-80d3-b52c801f6d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a27c1a-6d53-4fbf-bc8a-52a7240fa223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8afa8c-0cc7-49fe-9078-fe3737208074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee6f916-4ac5-4fca-90d2-472329148bfa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11e2eea-6d7e-4b84-832b-49a2c9e12379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b8093a-3c8d-4c04-a995-6713fbb2218b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f402f46d-414c-419d-b786-b4e4370bebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "925d5549-2bec-4153-96ef-c803ccda3750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf3bb2f-a77b-4719-a49f-64f6dc48213e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef52a0f8-a9e4-4f38-986d-3ca471671015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb80216b-9e6b-4343-ba34-fc5d8bb0dfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03b24f9-113f-4795-bdee-de2c8a85b8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "74eb93ee-b4a0-4fb4-aa51-4565669b7405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf92d48-ca7b-4feb-a0c4-7ad02136bbe8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df58982-93fd-4b9c-85d2-2ada2d2111ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca9516d-8ae0-41a2-aa1a-94e85b69a159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569c8eee-da62-4177-8b03-dae3adedd448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ddc1c0-81fb-4e1d-bc4b-f51f35fdae42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0b4413-9ee9-43de-83f7-d9301b4a5197",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604d94dd-f34f-42a4-92d2-87467204ea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bcdc1d-0a14-4c66-a9e6-5b8ea2fcd288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd4e26f-e284-4fe0-879a-551122bf1443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a5fdb2-e9ec-4413-88f5-c160279afe6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505ead09-cc27-4f01-acab-13ea36c801ba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d442f476-a07e-4063-be55-609da0697ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c88c0b7-7f4d-460f-b3ce-1f4ed02a2414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290b37c3-7f37-4ecb-9f00-b41af229d5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "332bb0bf-dfc6-4ab4-b5e8-25cd44232512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd2e7c1-c07a-4712-937a-2eb37b83efdc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61f1f33-67ec-4372-a274-9c28d5de983d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f564dd69-8047-48f2-9043-4ec45066a554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8130bc-2494-48dd-a487-4b7de1374a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4805ef0-44d5-4ef6-a92a-8b3d82826821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1941c8-14c8-4c78-9bea-7a88de3dbeb6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdcbd8a-fdb3-4262-9964-2fd20de458b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a55f7f-15ed-4972-82fd-60475e3c0c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dd57f5-06c2-40d4-9bf3-a853a49ec9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e401289-8187-4f12-b5f4-8e2d36f748d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cd26fa-b49e-4e35-8177-b120e0411eaf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfdf518-007a-40f6-ad20-9eb2892569cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a27972-3fa6-4440-bdea-0aec6ff5f788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f880007f-2424-40c9-b51f-226fd5cbc021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ce681d-95eb-489b-90df-2b55282bda37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace0afa9-c506-497b-9aca-e043bd53b15e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78bac3d-1b48-4dda-8a36-011505b7ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d84598e-d5e4-45ce-b509-304463229295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f58603-19f0-4869-98b2-6e22a9604c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92fca549-6b98-4803-ae98-d2e1506cb29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce01ad73-a7b0-4ce3-9fcd-e4bdcabf2e74",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d2ee27-97e6-46ef-85db-e47a59fc49f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dd89ba-78ee-4d48-8bd6-75db0b49e18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d30580d-c258-409e-bca1-fcaa7de0cdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4b07ca-493b-4a01-b6da-ffcfc61539a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e26efc-56ee-4186-b227-e7a3c8c91902",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a515a185-a594-4b1e-ade9-db83fbc831c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816c8606-8391-4827-aee0-9cff912b8b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309abf2c-5c41-4edc-9034-4c7932237687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de5c3ba-cf1c-4eb0-a866-53003c3814d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae6a20d-90ff-4262-8497-4286daf6b788",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6decbbe0-fe3d-4c30-8ae5-21426e98a8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b7966c-7d2d-46a4-a031-21a329ce2720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e9bdd9-4f9a-4eba-a90e-511a202570b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92077981-04cc-4aae-9029-6568e5fedfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16abd1d-1e06-41ee-a768-034e2196e0ec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa79edc5-f406-4bb9-aac7-6c322b9793ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7188b807-f297-4f04-910b-6d5de73ba753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36b94ea-9c2a-46de-8ecd-1db70138747b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ed5b49-a5ef-49ee-b9b4-24420a866185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a6321f-2280-4467-994a-9dd87700a846",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8403390e-df4b-4768-a710-de2d85cf21b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a00ecf4-373d-48b6-ac18-41375c55443f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb502a4-7eaf-4da2-9130-e85f3b4e26b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3c8523-f03e-45bb-a9e9-d8b4cf0b00ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456e75e0-db98-4e09-949a-0af8550271f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e231d552-d019-4019-b3b8-d60acd6f5caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c930ed-15dd-4723-976b-20f9967aca76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa68c9cf-b6cd-498b-bd00-f4eca065e3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea20f5b-a855-4f8c-a620-72f433cf52ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81c664b-e3e5-40e9-9ee1-5605aa776b93",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeebd74-4238-422d-9ff1-1a1bea36eda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54902001-4be3-4150-bb0d-539ff38c6892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b26efb4-7d37-4b82-bd7d-8630f78787a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e079b9c8-2117-4c04-bed3-c16e593f9a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917802bc-61cd-4e0e-a49a-493680804927",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23027bc-9a0f-4888-9489-fc4c388bb92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a355c0-297c-4fd9-8362-f2354855507c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56b42fc-db4f-4335-86c2-5445352cc753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1e9aa4-fa73-4e85-aa08-b235a05b8742"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9ddb666-8cdf-4dff-8760-f69b88fae74e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d6ecf98-c982-451d-ad95-f54dc1c80918",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02c2f1b-86b5-42f5-8bb4-b756a89c32e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "372b1a7d-8a5c-40dd-822b-30e7e4ff35cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1503a874-0f1e-4a9d-b91f-416ad15571ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac865f04-d245-4740-8ddd-41c5098dad59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33632a9e-4193-47c2-9970-7bb5d5b61151",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da1f32e2-78ac-4417-a943-7ce98106728e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f91ad447-fd4d-4ee2-b2b2-80af113fecd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6af0888-4553-4d1c-bfe9-2254a0b8a026"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a27a7d55-3a5f-4ecf-9aaa-1cf673e6f40d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eec4ff05-9a10-4657-acde-bb3d98b8c6fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be6cfb93-429e-4239-85af-c5f260d1d685",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2da5ee78-edb6-4ea1-b839-bcfb116a188c"
            }
          }
        ]
      },
      {
        "id": "07b2f85f-2432-45da-9fd3-f8ac2740f7c4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "613302ff-4ed1-4c5b-910c-7bb306350864",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03e51de8-ead9-465e-bf89-9b057d5165c4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a3ed4eed-df26-413d-94f9-edae9196239c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db91050d-5bc1-45a6-9419-3b9aa27379d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01511a7a-53be-4798-8291-9abb6725d0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeef0f89-d753-4ac6-835d-025fc2daa12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d55c9b-0e10-43c5-9e1d-50a456ce11aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62542796-a0c7-4b40-af96-9b6f747a5d22",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8dd5b4-98b7-4926-bced-26a2b0f05e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1886e96-e3d5-470b-9e24-c1e15b921eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d43bdc-63ea-4d7b-b918-3d6a38049c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5027a4d8-482b-4f16-a357-33a91e9a460d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3333d5d3-b9d2-4226-b7a9-38d869a61410",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bfdad5-309c-4670-81ea-d4ffe5dfe349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7430b157-3860-4286-bdcd-27e9a7dcdfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a64ae8d-29b9-4ffb-ac5d-203684a1bd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e751a53-933e-4e54-89a9-d9b6c7c37853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e51f0c-1ca2-4cb0-af21-b65761f2e446",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c0aa78-9b0c-4b23-a7e0-ce91044a11af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a1467f-5903-4de2-9e4e-ba1efeaec26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f05764-68cc-4d5d-91be-5b9e2fdc52b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72c6b823-1557-400c-a91e-d389a58487de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4726e6b-2db4-458f-8a2e-8311ba71bbe2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba143d86-60dd-41c3-907e-127abd0da837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4524f7-d3b7-4159-8c8e-b9d3d9652fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1249283-37ed-41ec-a079-ff9254641dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e0f685-4171-4587-95d0-5e94024de18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2d3216-c481-47f1-8932-1985cbdca605",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d00b830-916d-4f5e-83bd-1dfe38a1f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d72688-719e-4b65-8a50-234acfd1c2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3072a263-c0e7-4293-b56a-8c732945862d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dc1793-be50-407b-86f9-fddddf786787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66236d95-8b32-414a-8a0f-916ade11fbba",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d79b54-c205-4d03-b642-f738e223018e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab11c52-ce8a-4681-aba2-969e346afb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1f1aa5-038c-49da-93d9-754f8597e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9fb295-eb47-4a9b-be6c-7bda3ac3ae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21a744f-3b6b-46a1-8674-2d619f8ce959",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df8c44-fda1-48b0-a6f9-47cd156e821e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430da7cf-b921-4f34-a0f7-eaa080799638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f26137-82ce-433e-bcaf-7d7933370895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cebbca1-ae2d-459e-9eff-45e6fd99007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb41a8b-93f6-4f01-b823-e74b044d222b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa960f30-9731-4617-9524-6a9f48e052ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98a9978-4967-4620-b7d6-4ed9b444684e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f603faf1-22a0-423c-ab4e-ddea65fe7a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e3ded5-920b-4810-b875-834aa004a5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c366dcb-a4df-49de-a48d-e03900dff366",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b668dd6-16ac-4445-85ec-11e5ae591a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e15032-0044-482e-802e-8044d2955a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a41102-31f2-4279-b909-8a7371fb15f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3171196a-2bb0-4e9c-9b41-635012e1ee38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48365593-9cea-47d2-a47b-06a8650124e3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2c8c39-5112-4a4b-9d33-246db695c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cb9ec1-72cd-46ef-824e-9aa76a929486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd571e22-e5f7-4b30-9175-8cc88bb3648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1657ca3c-619d-46a6-aea7-c11017ac7c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a6f32c-b40f-4ec5-afb7-86cc1656f1e2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fa0a39-e4e9-4a10-b7b1-001036c005f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ea3465-c9fd-4fa8-bed6-198cf0780157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752b08d5-1bbe-4838-9301-238c111c422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f60d35c2-a127-4b9f-a12d-320244d590a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640e5ceb-b8f4-4d95-bda7-dda3e4966b5e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34325c5d-4a54-4e8a-ae82-7cdfa26f6cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e695ce55-96d9-4c7e-b173-849ee9c27ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51580a5-3408-4cb3-9d5a-10c8692b8a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c33711-bd2f-4c0a-a5c7-ec3daf1a86f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4283fa-54eb-459f-93e7-8dacf470a107",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5322881b-5eb9-4d43-9aed-edf90c2b5e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293598c7-0b34-414c-a8a2-8fc5f9cbfb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccd877f-54be-4659-86e5-62b63e435741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "731e9021-a912-4e4c-96fb-9d399d60aa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe9d597-cdcb-4c30-94fe-84514fdf90e6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6686f80-2933-47c0-8cf4-f6e747c5a6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61545fa4-2779-4284-9b14-dd9f786d72db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9148561-ea70-43b5-9614-799da21956e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff5aeb6-7d59-46bb-8628-585bbef8692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2472b13c-b4e1-4ad5-a07b-3561aa8048a2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd0c467-a9b4-494e-b37c-c2629775d0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccbd145-2181-4c2a-9668-8bf8430b7a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbed89e-92be-48a8-99ec-2d85897a8d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d474f4f-b0bc-4c5b-80f8-f994421bf456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f479f02d-3547-4f5b-9ae2-3a30c4687801",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5bef29-6e79-4583-b885-2511bca56194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560bbe15-7666-4eb9-8d41-1bcf724be9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71caf14f-a108-4b02-82da-fa8bf6e9ecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a85d6f-9878-47fc-b845-e3b791fb7521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d177d39-d9be-441c-bf82-e72042461118",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fdfd36-1cd4-4e9e-ac88-cdf66ce1286a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5d103d-3edd-4eff-b4ae-efb666ba0fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59381250-1a0e-4212-b212-64f4c0ae2270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a022f3e9-0ca1-4bb2-918c-58b30c5d4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18a67bf-c10e-48fd-a802-2d731b94bbf4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8cf28d-de2d-470c-9c57-354d21d6a6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493be61c-a5b6-4ebd-8749-e41d6ff7aaa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7ccabe-afa3-4a00-a13a-f4d976e5b1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47bd0420-3ffe-44dc-aadc-9a280465320f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdb29f2-7c79-4d90-9e34-03e29b2e2b91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8806e5-8c3d-453b-9ca4-b2ebf8cdab88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e90538-a253-4b54-b99d-7d76a1fa9d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa299833-8051-49b6-9d10-dde57214ada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6346c60d-d71e-4b3d-a6f1-3bc71ee00dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0611ff-054b-449a-9bed-987eca37b712",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1543e27e-3ffc-4eb0-beaa-dd8c7cfd9ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab7e08f-9556-42f3-8cd0-35ed07df34a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b4b3f2-f646-4645-97a9-dfc5690e82c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb7e7d42-1701-4c5e-86c3-c3183e51fe5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0eb020d-83ea-4583-9b5d-af6b45d4f091",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776f754d-eee5-458b-a9d5-22a5414e386a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964eb9d4-bf5c-4cda-a885-81a43a086a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075018b2-bd16-4ddc-a18f-e7128debd8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd53195-2551-40cf-8b6c-139be3c54b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c646fce4-2af3-4ee6-8999-c5079c4f7148",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffceee7-1594-4dfd-8bdf-9521042ce760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fb8ead-692d-4a4d-a3e1-d642ea405942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b71585-8bd2-4415-ade3-2a492754d6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dbf538-79c8-4f17-a4cd-8217d77d75f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f114c55-1b64-41fd-ac0c-cef3642c69c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be30fe44-22d0-490d-a377-4c8f91d7d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f39e1ac-28fd-41d3-a433-d9fa680f9434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a41535d-231f-4dab-8e6b-41e2ccd3198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92cd9e8-54a0-4782-9187-c5be56068de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d85ea90-13f1-4c36-87bd-062e9a9f7501",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56786750-b624-4fdb-beba-cf024a27d926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc76aff-84c5-452e-987d-cdbbaf55fdd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8617f240-3fde-44a8-b559-a04e8927fb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ab3ccf-e637-4aa3-903f-5b5c9a5d9a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329ce346-9b80-41f3-a834-80815ffc48ba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4bf688-667c-42c2-acda-a8c786303498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96a1512-0b59-4518-a1b6-ef32f100c0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0b4887-230c-4071-81db-b5a5c06dd89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f10556-ce6e-44ec-903a-f27d76164c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddb4b9f-a756-4dc0-bcec-7d57bcee1acf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52446cb-085f-4c0b-9d3d-00f4380c4ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efb033b-d2da-4483-9566-adf9ba898edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbf302c-f164-46c1-80e8-a85af263e15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e89fe641-71f2-4544-b509-a3ce32062b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e44734-9942-4630-ac11-cdb06ee7feaa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879ef979-9ca3-4bf1-90c1-13194e65be79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a53d912-dc07-41fc-8c3f-84e3c3c10753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcd1078-047a-4177-8b4e-b4cb1db3bdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f25057b-82ff-45c5-9d46-1a24f98d73c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c4fdbe-cf5b-43b3-b08d-b63d8f2d63a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34c355e-d7b3-4b7a-805c-3d387c736eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8cfb92-5d5a-40e5-b091-2b7c98f8d99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355ea714-4a02-4c1b-b5d8-d06d1a3a9792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e888d6-f981-4edf-ac65-c94e190f509a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e457c05-05c0-40e3-8a83-da35c13efec5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d10bc47-1beb-46d2-b465-1ed6fa5bd3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a51f54-3277-462f-902d-4555df0ec79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb400d5-1258-46b3-ad66-59cabde92ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe3ced8-82b9-43dd-bbfb-57a0c1438bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99380648-5d62-4f8a-bbbb-102397d3eea8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545616ba-c7fc-4f6c-a384-e1d81fa90ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d59bd1-f6cd-4e05-b92e-4f85216e65ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab925aa-98e6-4438-b888-668eba1d763b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f069a0f0-d29f-4d47-8c2a-2990b5f2c0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce67973-39c9-49fb-b7a6-1c8f00baa4e0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d879de2-b2d5-4ddd-aee8-81f7de55d1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d80024-ae1d-44cb-94c0-fcbf0678012b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247c70b5-b972-4504-add7-673707bd2685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "875eb620-d091-4101-8434-a09f0eeb99b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6300a3-5fb6-400a-adce-27371b4d5e1d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c51a09e-92ce-472c-b576-a9ce796d2140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711c388a-a0bb-432c-8526-c5a18e88eb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc9735c-856d-4754-a135-cbc9c7f13996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "303cf339-1db1-4d57-8f30-b5731aedc681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffdb7b9-37c7-4038-b3a4-4a4dcf535af9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf4ae28-01a4-41d0-8058-5dc01a041b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b4395b-450f-4d97-8e5c-fd2925825325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fc7274-06fe-43a1-aaa1-0c03ad5dcc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a454cf-9641-4739-b724-f1b3a6ee483a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5047fc1c-c4d3-4376-bff2-ec022fb2192c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde1cfdc-d839-4ab4-8924-4575b73eae31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b765f1f2-1ddb-4c81-a1ab-5104643e0fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec48d0a1-452f-4a18-9e3e-0d045de67fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0781bff2-9dbb-4438-af32-a2a3ad697c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0717f7b-734b-446e-b125-da7064be3ddc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1098c57b-ea2c-4d71-830f-a735f8eedb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccc13ab-df01-4486-b015-e4fa735c0ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc46074-c09a-4c84-bfe7-13697ff1b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b4e6eb-8d21-4903-ae11-8104df31e76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0845da2-6977-479b-8b43-0c4d006e8900",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f69f2c5-40ac-48f5-a901-c4a71e88e8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef25a780-66a8-406c-9e34-f1df315fd722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd4e390-1466-41c1-a98a-dff0a3d9aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c84e6b-2e32-421c-883c-280d9f83bb1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b60d817-e4e6-4b42-8338-5f2e4ea27141",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08736ff2-5d0a-4a15-89c8-6e08bd8141c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2f8897-7bdc-41e3-84db-56b4f6e04af9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e00351bd-4045-49df-a0c9-1f4ab001f6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562573a0-7bf5-4c34-ae68-94032b59905a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5a9c172-04d8-44ff-bc08-5defe687e2e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "657e80d1-3e96-4aa4-9eea-4cfea20995e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "713626aa-57d5-4651-b1fb-1687a81f535e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43435a97-45ad-4c54-9892-74ea93ffa8e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfcc7366-4fc2-4c42-8dac-af380f021ff9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8bf2e8c-9f06-4311-b4b1-0324d4b3a55c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4cc2c882-d343-4384-9fd8-ffe53178482e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2769e83a-a024-41f4-8c78-4c64fd9c792e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f55c806b-ab32-4a29-968e-8144fa02d3f8"
            }
          }
        ]
      },
      {
        "id": "07384ea0-2c90-4899-ba2e-db2f83757e07",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "228990c1-99e6-4b11-a20d-1895aebf21d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a977e17d-e84a-4ed4-baed-6de328ad6462",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6027536a-0f5b-4d2d-92eb-03fc704e6950",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3993f0-f9be-464d-8160-2f0603be51fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e533b7-f860-4f11-b3ec-ed3637978343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f43187-7897-4e83-9881-ef25c2c6a837",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d3343b-0fc9-47ce-a866-dd5524d370a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92a9126-62b7-4c45-8618-478920f5c67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13edcc40-fa5a-4e2b-a7a6-01326b6e603e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c987ceab-8d2a-46d4-8204-90e28abbedc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c2aae3-1173-4cde-a2be-d31fb808e012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f209d7f1-75bd-4a1e-8d60-d68f9dd11d6f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8107dea0-eb3d-4fcf-a921-1c5fb459f47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ce6fa1-a8d2-4ccd-8337-0fb06b300956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da381961-8be9-452c-8bd9-6ce2d44973d4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ab4612-1e3c-4d53-b9ef-0515e3fad00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c2410e-08cb-43ce-ab68-fb0126ce0d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cc896c-d4b9-48fc-9ad6-845f4a16eaba",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9f4c5f-4a59-4879-b1c1-f417dc2bb16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba53ab7-755e-4141-bd41-159fdebf828b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06255118-49ef-4af4-ae5b-5cae4eea11f3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18bd56d-f25a-4c47-9cd1-883975e76246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d52d416-132c-4b4e-9910-70352f7ed98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade8dd4c-5d21-4de9-9b81-328ec4e2c6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0118c38-a9d0-4fe4-be09-9c4c6ee281c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c343fe-687f-40bc-bbe7-f832216987c4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec56cf4-438b-4a13-9fee-09a4f338bea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee05d2c9-23d9-4031-a728-a82f60674496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704cdaa0-7fc9-4765-ae05-c7aa9ec53c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302a1f6b-dd57-4a9e-b529-742a91475c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766305f8-a485-4019-b1be-78fd45a0b57c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b8e87-9252-4e7a-a832-6a64b9eece73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "539352dd-cf82-46fa-b610-93d5b138e618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f963a952-e297-4181-a133-1e8135c425ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a641815-d972-4881-894c-84b49658f041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f9a6f9-0e9d-44e0-947b-485ca697c50c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162dd3cd-8420-4680-8b79-406fdfa6422b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14e68f3-2404-40b6-b83b-d4c0cb970a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ab002e-eb5f-47df-94ac-762d8f56cd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52001c4e-c9a3-4244-9a51-0e857b2d0b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe91fd64-7832-4840-9b05-8398559c3c36",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d306a82f-25a8-4a64-8b30-c6ceb107d096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4cb0b8-467c-4bcf-a503-27d2cf645491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29825efa-459d-4ac9-867f-e41f164d47f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51aa59fe-c269-49bd-9712-c2e6c7cb7b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f814b2b-3316-4aa5-99fb-01e057ebb5e8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf33aa0-a171-4490-aafc-9f4d99c55147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae59ceec-b4bb-44e1-9974-f7ee367d8d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdff2bae-7563-4b8b-8910-70ac37e7c0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b0fc7e-6b85-495b-a946-2e7ecd0c20d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8be6026-327a-4ad3-8eba-3f957868892e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc5768a-2b7d-4ea6-bca8-06d952f519f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fdd197b-183a-47bb-835c-e38ab09f2830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba29bb8-0854-4913-9a98-11d121c379c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a32b3a6-54e8-4304-8fb3-491a8ee3214b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5659c665-c6ef-4430-8351-278b1705df68",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac228a0-09b0-4b40-b4bf-377b6f27ee09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f5e6449-8221-4fb2-8342-8e396af1f23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a863b1f-9ccf-43fa-817c-ea6d8fecdadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f384c51-9d01-4c54-9544-778331a20c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab61c451-15c6-4b7b-a9c2-4e22a8b771b7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456adf08-e9c4-4d5f-813c-c518818d5b36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b5d05f-6647-4e80-918f-1380b2f74417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b7ab4b-a864-4cce-9fe7-23369f3e207c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e7bc97-51c1-495f-ac01-7992127117ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386b2a32-ec82-46f9-982c-c3392fff6db0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3f3dbe-737a-48fd-baf3-87405b6a0270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13e39f32-7aae-4ba0-b8a8-717b2a5d1ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea18d1-88c9-41da-9700-430b299addfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4f7c12-590c-4d63-a9af-eab87e0b4471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b00d34-2e5b-4a3b-b3d2-e5d19558dfcc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa54f9f-23e6-4d9d-831d-3595a42023b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767433e3-8115-434f-b63b-c59caa65babc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea70df1-64b7-48f0-a2db-b7d476157a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5859820-c216-433f-a0b2-2d86a1476304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fac36e7-03a0-4d52-b8a4-e5fbed3aa030",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa342633-c07a-49c7-a05e-130ac2325978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c0e256-158c-4431-a67a-01f898df3b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d13c923-a841-4a45-99a9-a888a3e66aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010508f5-eb7b-45f1-9d93-fefcda5105cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787b5bf8-f7db-4378-ac6f-2adbc80514bd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb7de91-e9c3-40ac-b521-70fba3523993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec60407-3af1-4e50-8887-07232c4a9fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1a28d8-55f5-4b98-bf8f-1de715ef4399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3425a8c4-e617-4d20-995f-94fff4eca682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a037fcac-e078-4bc6-abca-8e7cedc47a8d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97627c0a-6b2b-4305-9dcc-5beedc3e804b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086e09b6-3935-4ec7-a851-4dfba3af6374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f43a29-9422-4ea0-91ff-eb1979e4e88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f859cb6-90df-40b8-9eb5-ba6e1a3e5202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babc6e91-8402-48ca-b8c8-a816b1938e92",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6fae1e-5a9f-41bf-b46d-b7e6c4d69dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b1eca1-2abf-499b-a75b-bb33c96aa202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4c276a-459f-41e8-a07f-e7b9fba48d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecbcebc-c8df-4854-9b04-4c2e60cba0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b21bccf-6cf4-4e6f-8f97-47dd538fe86d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269ce53-054f-47e7-9d32-0a17d4523c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d92c44-95f5-4ab9-91f8-2b71760cce37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51fb047-6849-42d7-b1ea-815e25ff094c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be93b520-cc4b-4465-8a93-c8b9af34a079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0293c1ec-7d22-43ee-a6a0-b4e2e37120af",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087fcebb-e7d5-4f0d-ba33-e937c833053f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93df42c-d51d-49d3-9675-e33049ef5af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa038b64-c745-4c4a-b313-653266633c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f549bc6c-84c4-453a-b7b8-c8674056fd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80e29e4-8d18-4350-987e-a96d8a58a90e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9ac8ac-b63e-4791-9d95-04c5f0d08e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b79b3a9-e004-4365-bf58-ef53243f9dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97670f06-b7a7-4979-835d-10a00d9eff1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c9a944-c943-4771-af26-afb6f24f47cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4d78fc-cf3e-475b-a5b0-a50cae8e34b0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d801572-68f9-4389-b9fc-0ef39c7972c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99bb51c-da08-43ee-8463-65749782ee6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a1ef70-5a18-454e-aea3-0b8850f8e309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6438e03a-5227-42ce-a53a-cbde44911fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce444d83-f4d5-4716-a56a-fce41125cea4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7309db43-44f4-44ad-9d33-6cbb0152f56b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c079fa-c341-4c24-a9f1-5d9d1eeedf1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e3e408-bdc1-40e6-8702-1068921ce2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a38184-506b-48f7-a8c0-15aba4f96223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd0bcee-a6ca-4fe2-929e-3fd53b8cc5aa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52e452e-57fc-4d2c-aed2-9f309453f901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994f2ee0-896c-4ad2-a6ec-01cde80061a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96e9bda-f090-4037-84b0-d251dd2db40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8dc8ed0-75c4-4b07-8da7-b05b67ce2527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c64e0e-a784-481f-b2b7-b1c9dcb22b71",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9298f678-20c5-4911-8c60-2d978181f539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c18618d-12c6-436a-b543-dc3bdf387975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5b0074-0ea0-4eca-ae44-6bf7b281f110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38324520-140b-47c3-b6fe-37dc7a24e16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de700e6-fcbc-4f1e-babf-5ea1b2026aa4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f53b3-85ea-416f-a766-8d51afc6c614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc956f5d-baba-4635-8e0b-6d84129956a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab24b29-c3c8-4d9e-826b-595692f4a1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5337b428-3cc8-4c6b-afb3-da428a5c5a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e6649b-826a-44c9-bd02-1e40ff2c34ae",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f2910f-ee00-488b-a3ea-ea15a83f6c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4d658f-58db-4a4b-95e2-0c6ae825de72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ee051b-3677-4d37-9ba2-5a46b75dae8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b42bac0-1d12-4ede-940a-d491d2110049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c832fec9-e64e-4886-8827-53c10f26f033",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d157d7ba-6956-4098-ab9a-e1b7a09694f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9930bdc2-95d2-4cae-be3b-b8778d086aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca9c7fd-3383-45a9-a4b3-2537eadc3cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d8a0fc-bb30-4c32-9fb3-345e9aaa7c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9690230e-845b-4fb9-8833-68b2097371ce",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1015c590-1266-4b0a-81ea-1ef0bc54a34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b732bb2-6341-4455-a7de-81e7b00c1266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b9cb40-8478-48d5-a6e9-8eefa3b55e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414d2eff-4ae6-42c5-a87a-68f042677e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d559a23e-1a33-4476-a20a-98e13ccf216b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00e29d1-8834-45fa-bc65-a9df93a62f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e95c37-0572-40a5-9601-ac4f684c86c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f042685-5f02-4574-9d19-c8a4db23c701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4748ea-00d5-4c38-be7f-d7eca83afb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8e9c58-a236-4a5d-827f-21612c86667e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c9cfb2-616a-4579-843d-379b23ff9aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1388de-0ff7-41f0-800b-c66ab2d2bd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86427b78-99b0-485b-a638-7600a02f1148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2308b047-7946-4ec1-bbd2-50d552945dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58bb2f3-c842-42cc-b9a0-de0b25b73c56",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b26569-65c0-45a2-b0f0-0ccad1dc6850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd88b3b-85ef-4d55-bcfb-698bd569b65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec67439a-431c-4bdf-bb9f-ab83d7998a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602bd276-98bc-457b-8417-19b9bc4116e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66e7771-f167-44c4-9815-388fa4ae146d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14606dd-de7a-4a55-a177-d6fc243ac77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a897a687-4ea0-4ac0-a65b-b5e6a896862e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87372992-28ad-4e82-b8e1-1c1e33c680ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7520fb-b6e4-45a5-bb2b-86746ba1331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c471b7-1e1a-45dc-ad60-30456c04895d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d891407b-33c5-403b-9491-9cf88a7be3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0e135f-c3bf-47a4-931d-531149cc184e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96074d6-3313-47f5-9d5a-848c2fe4765f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0391f4c6-a572-4a8a-b3e7-4a788349679f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999088fd-ff69-409f-9adf-aa78bb3a564a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f33727-a79f-433c-a79a-f105b7f420c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad33313-4e16-4cfd-bdf3-d853cfc70ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09b5c71-70d1-4310-bc27-54c799b9586b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bc4d3f-1712-4716-8577-8858393ce565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd54e82-c148-4480-aec8-e8bc5bc40f38",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2230d2f3-49b3-4311-9340-93caae5201fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4690cee5-4635-431e-92c4-40e034f1fcd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90018f4a-ec6d-462d-a360-8d62c3b28f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e05bb07-0471-4c75-a9ed-ad1ee0f13d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b5f4da-a8ec-4be6-938e-4d088373c8f4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56577b66-dd94-4bbd-b710-fd401d08e5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550b2297-f364-464e-8f90-ff21522adce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad2d726-6a36-4098-98ac-93f221e4bbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c932afd4-a59b-4004-a86f-970b99b1201e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce001883-8fdd-40a6-a958-fce4a1eb3a18",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85896458-c54a-4690-baf7-e1fe53a5968e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26122059-ff53-4e7f-bb0b-157454164a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd0fe4a-c12f-47c3-a56a-1b5dca501d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0ce270-08e5-4874-be80-d85c22299b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e697a85f-7036-45e8-82b7-360a4761f99f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932f7840-368f-4926-8650-0556dfc95885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb9a8ef-5c79-431c-9ace-e17259879f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082e6439-368d-47bb-92fa-14b76a3f4823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54270937-97ca-423f-a2aa-e5f54eef931f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b004e278-a65d-4a6e-b621-b308abc6aa0f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bcec0e-e5ab-44ea-b6f8-c4706c066091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed3669a-6db1-4b06-aa66-a0d5f57dfde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86750b4-279a-45af-85f0-ce4505033c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a215b3-a9fd-4f54-86c6-173f19fcffd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3595f977-aa0e-458b-9c8d-cdbff25a6693",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abf0b36-f565-4d12-be92-390ef741abec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31917338-6a94-4437-8f2c-6e764793cceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c48d71e-548b-49cb-8e1c-8364e66c0e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd377959-5d8b-4d3b-addf-fd78ead06b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bc25cc-c3fd-42af-bb18-7fcfe9ef9fbb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8348a7-f13f-41f9-ba8f-f2cdb230d4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbf618e-aa4d-40ae-9cd9-300ac8438765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a599644-2771-479f-b33f-b38425ef1ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff1ef9c-cd94-454f-9d03-032b3dc615bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53aee71-db02-46fd-aa60-4b4f81f39fd6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba60696b-a599-44b4-ba87-8b0cfe616de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dff324b-ad38-4388-bb2b-8767890a00d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c161a4d2-7d92-42bd-bc17-53059d035975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9708167-261d-4443-a6a4-fec37e48ebcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453c8b4f-249f-42f1-89db-ca519aa232c3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7caa24-1d63-4f51-930a-e221454c5151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba70833-4326-4028-a7b6-b818803e8920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04d3c96-4eb6-437f-8e26-bc0e9f7045dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8785d2d0-b88d-46b9-b01a-ba3bdda07599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48eab76-758a-4209-ab8c-79dd3d58fc95",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09fae48-2f60-4e08-afec-42c640522ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaf561c-fee5-4e9b-8686-8161dec449c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523dd98a-258c-4ac7-a32e-f2f1fba94366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69ee312-67f7-4f04-8f68-8c0e0ea4a76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1f34a8-81e7-4067-925a-3a3db276fdb5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2c6381-8b47-4ab8-bb21-583d4a761d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dccf77-5367-4af9-9c15-53da8c4e763d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef588f67-c659-4523-8574-372ee812244d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03e1efc-e64f-4b9c-b7b0-991e5d12fbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8dcefc-8a3f-41fd-9b8f-a188d0e2ff50",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c40a18-94c8-422f-b5fd-e495053b9ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de75ae9-f33a-4c56-925f-4c76cf8450cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8021b810-36bd-480f-bfe7-c3a7b9c49a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6d98b6-a2fc-46e7-b1ff-4b4b300153e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0674861-5fdb-4ee1-bf82-bb0ac59441e6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ea241b-542b-4db3-85fe-5eaee3d360af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514b565f-e111-4f88-b932-fd632ab45630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d548cfd-967c-4822-87b4-7e9e4db67e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9833bbc6-ff00-4bbe-875d-53c1edb1c120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf407d2-f9a2-4b68-a4ac-d10eef4eb349",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7badc1-49f2-4e04-b196-731ea24e9cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9227ea-de83-458e-a268-32768756fcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5cf0a6-25ae-424f-9051-a06255e06ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e521f864-04c0-483d-8071-26f200c9a681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c344e3a6-5006-494d-8c6a-bbfb378fe1ea",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d71f7c-0ee6-4d18-82ef-82c8a4c196b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4644224c-952d-4c3b-9e14-edf435673de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563b3f84-356f-46ce-92c5-5660dce953a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd844256-3ee0-47f1-9c6a-35096e265654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f9df71-0baa-4934-8b7e-5e721b79e821",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb83d117-d0c5-4e7c-83c1-e8a07c875f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24c7d58-ff65-42a9-8115-4283ec241da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0faee0-4900-4949-a3eb-974781019050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb5e9bb-5853-4024-b294-2f0f4ddacbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b3f9c5-9e79-458d-9ac4-83254d851d81",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c2f959-db0a-4d68-a0e4-d2805aeeb707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac3454e-c1c5-45be-a718-83311d51815c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ac2722-f0aa-4548-b12d-eb478fce3705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d4b0c5-153d-4b87-9213-b4548006164e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7337626c-df63-4788-bb79-8fe6c5b34261",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54175470-c7ce-490c-a066-a809b6317216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e79389-e1e0-4e67-b047-98a1b5855145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647d3b58-f2e7-48f1-bd26-d974cf146ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0464b04-98e2-44d8-b854-0c612d5ce9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a35da-0b84-4a25-b8d5-d1586c421931",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ef655b-372c-45e8-8027-0b8507e9bfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42587114-cd47-433e-8e61-9788b3984021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd5cfd5-0c10-4dd4-a6a1-35b0ac3120ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d227a334-85c6-4d2c-8b2d-7ac31948adf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d22a47-96cb-4f46-bd3b-f4feace5f8a0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750c022b-af0f-4218-9c89-6b0c1378f233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759d2bbf-44ef-4bc8-b44b-e21a01f9c67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc0e318-5382-489f-a4b7-4e0ad29f50a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f71512-44a7-4af7-9053-dd2a6dc9212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d09907-41ac-4fd4-b2c1-2237349efe66",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4632896-ec2e-49f5-85df-6d32a3eafd68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e8ae61-d263-4152-a806-d3bfc46a6199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb3dbdd-e75a-470f-a1b8-8b946c17cec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d930c8-07d9-41ed-8489-4665d042b3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918b8aab-c081-4dab-acd3-a035a7e51868",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c84512-ab66-4d2c-b730-cdf0ea42346a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b6069e-0029-4643-af55-5fb99ec393ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d0a600-1c2b-4ac3-b103-dd26c839c8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d33acd-0498-4062-9706-b1b543a98dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec435861-69ad-42e4-add5-047965558900",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d11ff5-5752-4072-94bd-27a2886000ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f36cc63-ddfd-4064-974b-8bfe48340ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c605d4-fb28-4ba0-8a29-42b471f78e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4502fa35-8c93-43a1-b30c-d136acf80db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc15eeb5-057d-4c21-aa2a-bb5947bc68dc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3162d111-e79f-42b5-94de-f4f6ae2f9ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a91d4d-e918-41b6-bdb0-1f5366c55772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4869149-ccbe-41a6-8639-f5c03f0eb5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e491291f-0d3c-4180-8940-c971a5533fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51336c64-4022-4a7a-b468-98a7f98cbf0a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798cc0ae-bf04-4130-b1d9-0c407a1763d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5301dc6-b83e-4697-8301-d3dcf63909d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14219bba-41eb-48e7-b6db-20102edf9a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e0407d-9759-482a-ae3a-a8bc5592a9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a03076-4e87-47d6-bbf3-2ef17be77e19",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca380265-46b0-4001-864a-62c4c4526a1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6d84aca-40ce-4de0-9761-da3e1c0ffb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860e2c06-3c8e-4d9d-98aa-1168205851ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232eaeb3-3fa2-4755-bf05-92a02932ce1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f59366-e72a-432e-816b-00196871f796",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cc6bfe-3a19-410e-adc2-a6ed5c98ef3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd09725e-8c08-497e-9e39-841994522d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ac9923-581a-4f9b-b160-711be4a114dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397829c2-d6bc-497b-a8ce-6f8bea43a05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa70de2-73b0-42e6-9f16-f5b8b2d1ca7b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18697cea-9fc0-40f9-8e3e-902494639dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c626a52-01dd-43dd-90ec-7f6f74874097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4301e797-0a18-4645-b1e7-02fca1436a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee8fcaa-71a4-4ce8-9706-cc904e03a35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b3e771-3650-4be1-b576-f894b47e5eda",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5a00ad-8152-41d1-bbc8-f3ba02cb013e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dec5da5-6cfb-4dcc-87bf-c997f9968957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b44972-fb60-4a93-abbf-b3f419c83f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a889fba-0f5c-427d-af5f-7acf72feac82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db0ae98-8652-43ef-893a-e442cadf165f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0e3374-49dd-4fd7-a72b-5178fadc1a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd888253-28eb-43c6-a923-a3e8850197e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d4e6c6-497c-4ca8-b740-ebb3424dc4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e9478b-6f4b-4afc-ae83-93b275d14040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a4a469-e54d-4245-9524-bf4e0e8be5e0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fb12a7-9ba3-41b7-aff8-84b30d957d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc07787-aa2c-4621-b11d-28a65006441c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baf02ea-9b31-4236-a5b3-e744249af49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9d641f-a87f-47d4-8b6a-5cc71af71430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907c5858-3b6f-4fe1-9968-92a2256f96d9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dc1c39-1a98-4a11-b46d-395e11bffd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecc769f-1cfb-441a-af60-d9932ca4ffa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b266fba-23ad-43bc-be3c-b2f1dc6a56f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc483280-be3b-4e3b-a925-4148b2bc7a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd19869b-0402-44ee-8b51-32d779d9a3ba",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8016ffb0-774b-4ca4-b0c9-8434db0082d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90bffb5-67d9-4c8c-8f21-515d6017c093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740e374e-76a9-43b8-9663-6dfc64eeb580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a507728-1530-4edf-9928-6fd183a0f085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce30c403-343e-4911-8434-38d855c2b403",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9f40e7-65b9-4015-a045-3b3e2e54077d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cff302-5f9a-41c9-ad70-c8aaea6b193c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd8bff5-aa74-4c5d-bc42-0a15c4e91a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ad1ba8-3487-4a6b-8f94-18387e8e5548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6261a08-4341-4024-ab1e-b648cec22a3e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b11f352-e618-41d0-898e-50b63a8d07b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fd44557-f5af-4ae5-9fef-bed7fb5a02f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92fadf1-2442-4ccf-b628-3e7aee527ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7212eb1b-2744-4def-81e7-a3d81ba66ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76db6eb8-d0e3-4bbf-b2cb-7740eb86f21a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699b0e4b-d402-4aab-8c6c-63005a5708fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2be05c4f-e6d2-4269-8a7f-d072dc2a2d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd1865f-9abe-4635-a534-5be3899cdc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dce50db-07c5-46e7-90b0-84af9b5145b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98fd1b0-7b0f-4f91-9461-943233b32906",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e1405c-7024-4598-a66e-14e1001baa16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4c5ad2-21a4-4c07-9a92-dde9d556e991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb8b751-fa0b-4734-974f-4e299ecd5776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a64d28a-f157-414b-841c-85335dcf5bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f853ff7-fd92-4af0-ac17-5bb250d93a4b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e30f51-e43c-48c4-bb0b-ebf5b846f92d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0351d4b-d58c-457a-9db7-47818205eb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df14437-e501-4a8d-b87b-b804e72d5705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e900064a-5fc6-44f7-b512-155859b4b286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d708414d-b148-4917-9526-241ce86ba003",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e3c07d-8413-473b-8227-fe347979cd83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4261ac0f-fcb6-4d69-8276-c366f558fd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f67424-4d92-4973-956e-a27c85748a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec24cd9-0164-4027-94af-abe6470735bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0b79b3-d51e-4b3a-8530-8e9499b39011",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556dae85-10bc-4032-a2c6-f56053d8c5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad791fd-c2de-4780-b446-079af4426ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6a14fe-1fb6-4cc1-ad0b-9bc98dc4c873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4110ceb-99e5-463c-8fcd-4e53351af18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9c95a0-ff21-4e5b-8554-adefc92ec5be",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f451c4a-5f06-471b-bfb1-13f9268712d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "958efa29-61a4-463c-b20a-e5bf1482df34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e3523-7c43-4e7a-b0f0-3b00e44728ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae004fe-247c-4e4a-8618-5e9adad8a9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0397a2a-fc21-48aa-8b17-b92ca425831e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168db7db-dc3d-4424-8290-cf0aa8b14ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b898ae5d-1c25-46ef-85cb-6be8b1aa0c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d94ded-1a67-48e0-9b09-331bfda8e907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fd99a7-deac-44d8-928d-678f6bbb4352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff26c0e-c156-46cc-86dc-770e1d96faf4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9a03de-d445-487e-83c2-24e480bbb361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53c8dc14-91c4-4e73-a727-f21108b11a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63fa614-68c9-44c8-8375-e31a546501c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a01f43-ca41-4e79-b5c9-739ee74e567e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ced0ae2-55ed-4037-b9c9-f0bf414947be",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5879d8cf-adf9-4c1a-9f50-4d84076ab20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d77e1f-0b44-43e6-ad63-3089eb9590e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee92778-1ad9-4654-9adb-47a76b2b4163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6deac3b-7ab4-4c43-ae0d-b68664db78e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c62a60-e0ae-4eb6-b921-fa87127f55ef",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a8f70f-72bd-427e-8b80-4e80d8a9030b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbcef0a4-fe2e-446f-8e30-1ca0f8960c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac842e44-c41b-4a36-a35f-9164ad58b868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16efc3d5-ba26-4e0a-8414-00516000472a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cab2b8-b58f-4dbb-9d17-b398542f7504",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e73e65-5a7d-4090-8a5c-45d51731412f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd89e99b-be24-465e-8c95-29112c0e8082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430ccf95-540e-4a7b-83ee-db6814321120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a83b409-9a09-4432-b026-a4bb4e379df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246e4b51-50db-4edc-b9d1-f85d3dbf0689",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4844880e-90b9-41f0-9d39-0bdd95b67cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f27ebec-fb42-4cd9-9fd9-f62e8b39b20d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee4b5e8-3e75-4a05-9f5f-44a20a310b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb63e96-e2bd-4bf0-9cd0-c727f2cc4164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bac52e-b401-4347-992e-35413f29e68d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0a9a48-2a3a-44ff-8472-f19aeadcb082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5bd1336-c2d6-485a-937f-78bb63d26afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a40cffd-3465-4e32-944e-3072903474ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4329fea-12c9-42f4-8742-82b4f625ebf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29e8bd8-42e8-4ff6-aebf-4b4ef7d15ade",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f41e3e-6a06-41d0-8a8e-77c0aa89eefd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a732e27-f392-4578-91eb-59f55dcdf305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8032f5b-9f71-4239-8e4b-893e0709febb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbe3a66-38ef-4fa7-acc4-b91735b70343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c976eabd-bbc9-4456-8720-26857b433295",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b63284f-f059-423c-bae0-e393bb167d3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17a8522-f043-41db-b5f5-9a267f90bdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bb5af9-5129-4b98-8f34-30b888f68904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab1d940-1897-419d-b022-bca0122d53e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f034d7b5-5f5a-4e03-9adc-01b0711d0b2c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f19d150-3917-4fed-8748-4d71d3a63827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49146cc8-696a-4ab0-a362-75b6e48ea494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72332c88-2844-400e-a34d-31f624ecb6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418c3626-c319-4b51-be42-2170bc37b824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3baaa9-2eb8-4390-bc18-dc6f9e966c5b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b6a96c-351f-42c5-a7a1-110fd20fdb8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2460ebd-7ae6-4662-9aae-4fac2211dbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e64bfd1-f8d1-4376-9b95-07ce89462377",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eaf8d31-fa79-4f8f-a85e-d77ca2a85f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88665ba6-335f-4307-b051-ce905fad9944",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b011454a-a72a-4f4f-9b93-1367f048ae88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f7921e-0865-454c-9fa9-0eef625c56aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02861734-b8ff-407a-8532-dbda04465958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7c4d98-f1ac-467d-8289-dbdf977a548d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c25880b-a50d-46bf-8d7c-4626a059904a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4676174d-c5e6-4a57-a185-531e9ce8dc55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cfc6fc-64d6-46a8-810b-bb5bb3bef970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed31fae5-f573-401a-9178-8e50a02c16f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b2ee2a-da72-416b-b23d-8ab532f28f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10b093d-6b16-47f6-8a92-260c28b6755a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a54716-9091-4e23-97a8-2c74252b08de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da52fa3e-72bd-40fe-b040-61bd538e522d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cb83de-586b-4722-9ce6-584620b35b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caa92f6-fb99-4b43-855e-cfbda27f37da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918a5ae2-ecb9-40de-8dbe-7a8b0281c04d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9921f102-e23a-4a3c-bad9-d42dd48227b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b58a8d-3981-4dfa-a097-1aa93ca6ae54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e360da-d9f7-4ee0-94fa-8626c995ead2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895a7e25-4d08-45b7-a078-5d5bc6a51859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21967ac-a0af-4787-8f2d-82fa74fe68d4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a05c11d-9fa2-4145-a3df-ad5b0307ffb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d5fc0e-a74d-4b10-b5fa-efa2bf565648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3d9e39-e828-468b-b9d9-044a0f516037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7817d07-862e-459a-b19e-d9e451810ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacd416b-4695-4f74-a126-10b7e39d28ed",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e956b027-a9e5-4648-bd84-715a37717679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e6d3411-36ac-41e6-8e86-c6adebe70822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f025163-b71e-451f-932f-4510f13f4ec6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8934aefe-128e-4f77-94e3-39d97f98c849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0dadbf-b5cb-43e2-8d55-2cefe7c48802",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e2fad5-d4d8-4e29-a328-f8872cca0963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89024cfe-05c9-4e23-9287-abac4d2ba2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0cbfe6-c5cb-4758-adb3-18d309355f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51784ba-23ed-4fc7-9f14-e65f285d8e5b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "840c36dd-dc33-4924-b7be-939d8e652ec7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebe652c8-10e6-4761-aade-6faa559c7474"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12cc9a95-5436-4872-979b-9371c802116a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e4ec2c9-0c61-40bd-b541-a254ce16ceec"
                    }
                  }
                ]
              },
              {
                "id": "0ad269db-5773-4825-9709-c6fcd1750d4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dae2d0a8-2a18-4ad7-9a95-5f8870549a1d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b55e13a-11c3-4b73-a201-4647e9d370f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dbf5fdeb-a64f-49b2-a73c-0f3a6e9a7f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f737cb-aa35-4dbb-9b65-dad0bbfde9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2039c411-1f13-4db0-8577-7856345d3961"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97a57dc9-55c6-43d9-b696-d259d7771383",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc1708fc-397e-465d-9a43-de973fd429fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f0869d-6714-4af3-90d9-0b0ecf732130",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b543bda8-9284-4e44-849d-d417d87b62b7"
                    }
                  }
                ]
              },
              {
                "id": "9fc4f7b1-b6d2-43cc-9795-d419e84f6fb8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "83906b37-84a9-46cd-afbc-08a35751633d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae9f53-a36e-4579-a422-5ee1ec575b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ee524d22-3114-4eeb-8ba7-dc95c2629376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd076de2-08ae-4076-92a7-3bea5a347d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838eae83-8e1f-4705-8b2a-ee253edc48fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ee3d4c98-913c-45ec-9f0a-619eeebb0ff6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d261eb1f-e11c-4665-828f-e407aef8b05f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c41706fe-7f09-4a21-9130-75a52aea1926",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2db91e6f-5a26-4479-8a31-96bfa3c7d709"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9bbedc7-08af-4ff4-b278-725eeaf50ab9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d34e273-a2eb-4d0e-a233-c9e9dc2827cb"
                    }
                  }
                ]
              },
              {
                "id": "6c656adc-ef28-454e-a455-32bb2c04bac7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e27bafee-0970-47ed-8aed-e6555f969571",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "65ddb945-8459-478e-9c21-baf5ac35c2fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb7d2608-eac4-4d78-a44c-8ccaae6f7d0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7e3288a-c92e-4bd6-a66a-893ea9fa505a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce5f8fbd-b867-4cd4-b9eb-45933881e985",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e04620a9-51ae-4274-afc9-2e4305f56741"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db78ada0-3c23-4112-b1d2-43ba658a4dc3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8db3e7e-9a29-4a42-8166-9716b482e8de"
            }
          }
        ]
      },
      {
        "id": "82912a8c-3db0-4839-8577-f731ba29d1c0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b837b223-caab-4c9b-beb8-089ceee8ad71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd9907a0-efa1-4062-8b3d-8183948af526",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7856ab7b-3d61-4dab-9d5f-9c72ed0cc6f3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b8a88d-c974-4099-a605-d30356f3c0d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dd1d88a7-d52e-468d-814a-567a6e82b0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51596b0-89a6-4952-bfa4-787124cd00ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f01eb65e-2483-4924-ab80-3c73a4d5a3cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5543cc6-6163-4ca2-9791-bee6e8ce4aae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e86c8ef-38cd-414d-ab61-4265b68f8146"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4132966-2d0d-49d8-8e70-9b6640abe3b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6563b604-415c-47e9-9a27-89ceea8c16c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c32bcca1-e529-407a-ae65-bb73bbaf103c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5126d52b-604b-48bb-9f9f-101373c8e668"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18dacbda-35c9-40fa-b635-baac3d8e1c72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "479719f8-6c31-4083-bf5d-a962990e4b0e"
            }
          }
        ]
      },
      {
        "id": "60c34ae9-2104-414e-b5a4-ca10777c3370",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fad3303e-7f80-4cdd-a9e4-d56dcf6c4eb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9def416-f959-43ad-96d5-4353e5d2da52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56233135-10a2-4d76-89c8-8d87ae440838",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ca4430-b1d8-462f-8b98-c3e5a776a831",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf2d3a8a-7d53-4505-98bd-c5804a8ac74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d38b9a8-c986-4623-abaa-fedaf4b686d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9292224-576e-4697-84d9-cc4ceb767cca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab7628a8-7813-40dd-bbfb-d794bf8283cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1d2275c-2e7d-4412-83fc-0c2e75136803"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0beb3bba-78d0-4707-bb5e-d2ce7e49ccce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2aa2aae-f031-40ce-9b21-ea2ba6f6c923"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32d55c72-a023-44b7-ad62-8f6d67a1faf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a0928ce-1e74-421b-9d3e-2cd32eed4712"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fff2ed5e-4cb3-4a30-99b5-5a33311c05ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c840f9e-8e53-40e6-bc30-0a0b28a445dc"
            }
          }
        ]
      },
      {
        "id": "64385cd3-21a2-4d0e-8cd4-3165f7a85557",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc76d29e-4053-4acb-ae7a-0cd21ac8be3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0495f94-ee70-4cab-8ca9-74a06be66da8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d23b6cf-13b6-43d9-b09a-df6b17f0bbbb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe1e473-41c4-4817-a56d-5d2848b6694c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb031260-b294-4567-bc24-4d1931dc5a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a189534c-84be-4040-a745-6dbdc7e1407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9a8d6d8-09e4-4478-99e0-6ef0e5ad195f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0aac30a-f9f6-40b0-97bd-981f0c8864ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5267b11-d9a0-4458-88dd-f404f7c514c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6c23ccf-ae3e-4c45-bfaf-a808ad5ad226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fa9d4ac-c36a-4f92-8c71-c0519e5b2deb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a2c96b8-7093-4dd4-9c8e-2386532f987d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b014055-b3b4-42d7-8bbe-5974e046c4f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1ab0a30-6aca-4a0f-8dd8-82d947e36896",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d2084f1-4e05-404b-a31e-77fcf63b5fce"
            }
          }
        ]
      },
      {
        "id": "ee7da640-53ca-4f8f-b36a-a0bacfe2b60e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35641e59-d77c-4bba-8d66-34b478b3baa0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e73d0c17-6938-4d58-b972-a6b1636613c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c2c3243f-e956-4d65-a31b-7c3946fd62e8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad517c09-faf7-4981-b4b2-648ec2604959",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebc9887f-b8fd-4ad6-b53a-083338f7785e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.05964912280702,
      "responseMin": 5,
      "responseMax": 216,
      "responseSd": 22.82503903379858,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705192786862,
      "completed": 1705192799188
    },
    "executions": [
      {
        "id": "c19c5748-099f-4b86-960c-ca886336e7f3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81f56ab7-9ce0-4490-9418-df2e700eda42",
          "httpRequestId": "71cf4579-890f-4bca-9d8e-5bf1486195ff"
        },
        "item": {
          "id": "c19c5748-099f-4b86-960c-ca886336e7f3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "613116b4-f476-40fe-93d9-a8c5ce7cfdfd",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 0
        }
      },
      {
        "id": "b9ae71f4-84c6-4aba-b092-bee741e22761",
        "cursor": {
          "ref": "4e1acd5b-52fd-4c1c-a3b6-3f1ee65bd510",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "41c4b484-c3bb-4030-bc96-5bcff0d0572c"
        },
        "item": {
          "id": "b9ae71f4-84c6-4aba-b092-bee741e22761",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bb4c0303-2714-4216-81a4-2020fb78c969",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "b9c3edb4-1036-4e94-a506-5789273f58fc",
        "cursor": {
          "ref": "3480bf69-1b13-463f-8c9b-449d94ba859d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "170987dd-71c2-42ca-94cf-f149a194c702"
        },
        "item": {
          "id": "b9c3edb4-1036-4e94-a506-5789273f58fc",
          "name": "did_json"
        },
        "response": {
          "id": "38bfe1e8-4888-44e6-8e70-f8ad34722adf",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d42c40c-7c90-417b-b81a-bbc7776753e1",
        "cursor": {
          "ref": "073b8ebd-809f-4726-8f69-40745021aa5d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae881109-6103-4b08-985d-1b1283d0ce48"
        },
        "item": {
          "id": "2d42c40c-7c90-417b-b81a-bbc7776753e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bf68781-4e68-4411-837b-586e26e33cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d42c40c-7c90-417b-b81a-bbc7776753e1",
        "cursor": {
          "ref": "073b8ebd-809f-4726-8f69-40745021aa5d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae881109-6103-4b08-985d-1b1283d0ce48"
        },
        "item": {
          "id": "2d42c40c-7c90-417b-b81a-bbc7776753e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "1bf68781-4e68-4411-837b-586e26e33cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0240a6f-4a66-4fbe-af28-97a503b65d54",
        "cursor": {
          "ref": "22c6621c-0741-4643-9677-821372e05db9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c6525d4a-b50d-429d-941b-6a9de9928d67"
        },
        "item": {
          "id": "e0240a6f-4a66-4fbe-af28-97a503b65d54",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d9c1d6a8-9691-456e-9d16-1c5e0e2d4945",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99468187-48fb-4113-a5aa-6d256039babf",
        "cursor": {
          "ref": "4ee7e7ca-c567-4429-8c0e-8aa5d77c57d1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d138c4ea-04be-4846-bb57-efce4c8de58a"
        },
        "item": {
          "id": "99468187-48fb-4113-a5aa-6d256039babf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cebfef89-8793-43c9-ba48-38de85fd10a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3864a16b-d255-49e0-b972-07e72c51bf7f",
        "cursor": {
          "ref": "57d59a3c-b6d4-48de-b3bd-ded1c0c4fbf2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "813cc77b-3018-4282-b478-7b4d3b75476c"
        },
        "item": {
          "id": "3864a16b-d255-49e0-b972-07e72c51bf7f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ac4e3031-79f9-42f2-8c62-7ea00377f58f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc1fa98-683a-4b71-81fd-05fa740fa047",
        "cursor": {
          "ref": "c555da1d-a51b-499c-827b-b7c25d4f03c5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e0efaf25-1555-4d1f-aa08-33e675051481"
        },
        "item": {
          "id": "bbc1fa98-683a-4b71-81fd-05fa740fa047",
          "name": "identifiers"
        },
        "response": {
          "id": "2d4d586b-4efe-4845-ab8e-57e41948c553",
          "status": "OK",
          "code": 200,
          "responseTime": 216,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd403d4-c151-4dc9-bbcd-9816a592047f",
        "cursor": {
          "ref": "d9287b13-16e9-41da-80d7-d3555adfe972",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1b0cc3e5-9f89-4285-9790-d2d54eb4de4f"
        },
        "item": {
          "id": "cbd403d4-c151-4dc9-bbcd-9816a592047f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b93e4fcb-d2d9-4bfc-af71-fb6de60bee27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a14b244-af34-4027-9ded-407c2e5a475a",
        "cursor": {
          "ref": "e74bfdbc-30df-47ab-8b53-27b530afc644",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3d6bf10d-d8d9-4d07-9ac1-d7d8132b5086"
        },
        "item": {
          "id": "7a14b244-af34-4027-9ded-407c2e5a475a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "46193918-2453-4638-a1cf-6ac61479dabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3601279b-f73b-4dc3-b24c-deb03ba07317",
        "cursor": {
          "ref": "168a750d-69ea-4bea-a904-c6ba84df9474",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "38f1ebd1-15b4-4701-b6bf-f9befc4aa235"
        },
        "item": {
          "id": "3601279b-f73b-4dc3-b24c-deb03ba07317",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "221d70d0-a277-451d-a557-b5c527e1814d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c27048c-27f9-4535-8e8c-0a42df3a82b7",
        "cursor": {
          "ref": "8a7d3eac-13e9-4051-b232-95f8d65dcc15",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ca4471c5-02f8-42e4-962d-6492a9a45532"
        },
        "item": {
          "id": "8c27048c-27f9-4535-8e8c-0a42df3a82b7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "777bed37-9499-46a0-8e8e-3ed9d93dbbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bf295d-0349-4afe-942c-6cf17c9e2c28",
        "cursor": {
          "ref": "b80e5421-516a-49dc-b28a-127def3bc079",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "50eb08c6-d22f-40c2-bdad-41cde3427f0b"
        },
        "item": {
          "id": "e6bf295d-0349-4afe-942c-6cf17c9e2c28",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "65a9ce89-07c2-487a-b0aa-474ad74ab00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e928e978-ef2a-475d-bd98-a8a30f32bed7",
        "cursor": {
          "ref": "7b4bcb27-8b17-451a-bf96-0f80a243f6ce",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5f877dd5-3ebb-45ce-8f2f-1a3abdb3f344"
        },
        "item": {
          "id": "e928e978-ef2a-475d-bd98-a8a30f32bed7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "21bea44e-58a7-4295-b81b-f614b1284f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fdd3d2e-9918-4c3f-b562-10777e461394",
        "cursor": {
          "ref": "26e8b7c7-e307-4e16-a4c7-0bc623517ed1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "84ad432c-cc24-42c8-bba7-fac68ffee764"
        },
        "item": {
          "id": "1fdd3d2e-9918-4c3f-b562-10777e461394",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "17f7995d-d1fd-4eaf-84ee-bd1b4a4b37fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c562e86-0881-4bf8-b8f8-9896a82ebef8",
        "cursor": {
          "ref": "349783cd-7960-4ceb-b0d4-dfc2c2938962",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "00c595e3-697f-44e5-a93f-8bc5c606dcb7"
        },
        "item": {
          "id": "1c562e86-0881-4bf8-b8f8-9896a82ebef8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4b8d09a5-f6d2-4b41-be12-09c4f84780ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0587935e-fbf3-4b1d-bfdb-1fa60344c90a",
        "cursor": {
          "ref": "fa0c9a79-79ef-4f02-baf7-d17c9dab3c37",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "043e54db-a2e3-4b6d-afc5-ef6964cd30fe"
        },
        "item": {
          "id": "0587935e-fbf3-4b1d-bfdb-1fa60344c90a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d9059cb0-715b-4b94-bae6-737f90629853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0c0287-48bb-46bb-aaba-3541985c7218",
        "cursor": {
          "ref": "76b96c1a-a0f7-4b71-a4a1-b330d61dc541",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d3b09abe-39e3-4e90-ae7b-b194cc51589c"
        },
        "item": {
          "id": "4f0c0287-48bb-46bb-aaba-3541985c7218",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4d3c0249-6bdb-4608-a4bd-2ce96fe76c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf37293f-f15b-4ec4-b951-0a7e00188430",
        "cursor": {
          "ref": "6710e4f4-c28d-4011-b237-4bc6dbc37b61",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fad1fbc1-b0a8-45bf-a982-44936c514b5f"
        },
        "item": {
          "id": "bf37293f-f15b-4ec4-b951-0a7e00188430",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ea8e1467-8425-400f-940c-652d42b96115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eba3ed9-051d-465c-9168-d3febe438ce4",
        "cursor": {
          "ref": "59b65f19-1892-4401-8226-8339b08500ae",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3113d971-738c-48d0-a0a5-4783b97aa05b"
        },
        "item": {
          "id": "6eba3ed9-051d-465c-9168-d3febe438ce4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8654f5ac-b86c-419d-b620-9457076e8c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82336cc-4379-4ed8-977a-7361bc5d1bc8",
        "cursor": {
          "ref": "3c8ee5f3-c47b-47e3-a04d-d2203a325784",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8372c9eb-2648-43bf-8126-79b2c5b4fcb2"
        },
        "item": {
          "id": "a82336cc-4379-4ed8-977a-7361bc5d1bc8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "19612fc1-d632-4873-a710-f4636a7cd566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109915b2-a56d-48e6-bda6-2491c36789b4",
        "cursor": {
          "ref": "69e2b9df-271a-447d-9635-8da39f05c1ba",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3ef50b36-70b2-4422-afc1-c7b891e2c043"
        },
        "item": {
          "id": "109915b2-a56d-48e6-bda6-2491c36789b4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ef8787c-18f8-4c15-907d-0ad36b99ed86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b1610d-aa41-4a66-8874-fe2d6101b565",
        "cursor": {
          "ref": "63b71110-9186-4b98-8d55-bc1f064ac19d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "59f77aa1-c462-4afb-979d-fcab3a971a70"
        },
        "item": {
          "id": "94b1610d-aa41-4a66-8874-fe2d6101b565",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "64cc2a5e-7c2b-4fab-b87b-3a3b8c57a5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6825c9ab-3e14-4384-8245-9567a840be02",
        "cursor": {
          "ref": "a031271e-3f32-456d-b24d-caa86a79fc1c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cfd7d1ee-fd31-41f8-9184-bd16d06644f8"
        },
        "item": {
          "id": "6825c9ab-3e14-4384-8245-9567a840be02",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e081f7bb-3841-4a2a-b8a2-effeb358310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acacb559-fc5b-44c8-9761-674c93c05d91",
        "cursor": {
          "ref": "f0bff251-5b14-4a85-98f3-61b04326c768",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e430d124-0830-45bb-94f4-374c0986290f"
        },
        "item": {
          "id": "acacb559-fc5b-44c8-9761-674c93c05d91",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "857b9635-dfa8-4c91-b945-338fa8445cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33efd0b3-7f8c-4a18-9a01-48d512b9ccaf",
        "cursor": {
          "ref": "178e1780-cf5f-443b-9a6d-b6b5399fb086",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7b047938-6fdd-41fa-a301-35351e108d45"
        },
        "item": {
          "id": "33efd0b3-7f8c-4a18-9a01-48d512b9ccaf",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bf02fd8b-b0e2-4650-a87b-cff8f28ecdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b42c159-148a-466a-b023-0f37c94cf640",
        "cursor": {
          "ref": "85f4a589-2d92-4986-8106-263d2c0d451f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1d8c3ee1-a903-454a-8146-da35210feee9"
        },
        "item": {
          "id": "5b42c159-148a-466a-b023-0f37c94cf640",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "837c6a8a-4afa-4f1d-b720-4f85da90d047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df4b78e-65f1-4aac-b9e9-26bfbfbb0957",
        "cursor": {
          "ref": "39e326c6-39e4-4df5-b09f-665dc07fad1e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bcded863-7a76-4021-9fac-64a9ddd54645"
        },
        "item": {
          "id": "7df4b78e-65f1-4aac-b9e9-26bfbfbb0957",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c8fa2f53-2d34-44c0-9be4-b2d033de9444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00c142a-7f5b-40e3-bfbb-035e0bc461bc",
        "cursor": {
          "ref": "bee4ff1d-b181-4717-a18f-fc5adaec6d39",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "29b80146-4540-4b21-97ed-56c90c6bf460"
        },
        "item": {
          "id": "a00c142a-7f5b-40e3-bfbb-035e0bc461bc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e6e6f11e-1567-44f4-ae6a-606d58463666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4d149b-889b-4f5f-9832-65303348db0b",
        "cursor": {
          "ref": "0085f927-4117-459b-b6dc-5d6f8bdb209d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "776ddeab-3674-4c2b-a26b-e3506cbac78c"
        },
        "item": {
          "id": "3e4d149b-889b-4f5f-9832-65303348db0b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9d45534b-56ab-40f3-9b1b-3b965e92c18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263f0a89-5c18-40a7-a519-99ed666c7f2b",
        "cursor": {
          "ref": "b792a7fe-3053-4d16-b388-64e7a022543a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "87b34ce5-cab4-476f-a75e-994c19b271f9"
        },
        "item": {
          "id": "263f0a89-5c18-40a7-a519-99ed666c7f2b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "11b9af46-5ecc-4d94-8540-5ccbd3b61ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdb1a5e-85e7-436e-84d3-77dd12666869",
        "cursor": {
          "ref": "19823c79-d3e5-4e9e-9caf-fbdc7304d653",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "17e59444-0827-423d-b392-7ff46588f1f4"
        },
        "item": {
          "id": "8bdb1a5e-85e7-436e-84d3-77dd12666869",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bf687af4-8ab2-4e47-ac35-0154703e12b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a318b28-4792-4811-adb9-5c318896306f",
        "cursor": {
          "ref": "df27b70f-7865-4e77-b8a8-7c77de134bec",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "34f38b5b-0b2f-4a42-9dc6-d50edfb68aa7"
        },
        "item": {
          "id": "0a318b28-4792-4811-adb9-5c318896306f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "614cab6d-2cd7-4315-b7ce-f2daf8f63327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb6c051-bd49-478a-9906-6d1d0082d962",
        "cursor": {
          "ref": "510bdfe7-b6f0-4d25-8c1b-fdc7788af66e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9718ebdf-c89a-43d8-bc64-0e65347e714b"
        },
        "item": {
          "id": "cfb6c051-bd49-478a-9906-6d1d0082d962",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "99622985-929f-466f-beec-00a5e3fa55a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d190e13a-e33b-4990-a23e-f7712b26756b",
        "cursor": {
          "ref": "1a7bb480-aa96-44b9-b777-1f24f799f1e3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6e45f418-a492-4dd7-b974-13fffa300d25"
        },
        "item": {
          "id": "d190e13a-e33b-4990-a23e-f7712b26756b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fbaaad11-dfa3-416c-b4bf-3fd17cc69ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f800337d-6311-4dad-bbf2-741b3db10d4b",
        "cursor": {
          "ref": "30e45da2-f77e-4a52-94b6-a5c6cb71e081",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "35227bc2-876c-45ac-b084-b2c7dba6a33e"
        },
        "item": {
          "id": "f800337d-6311-4dad-bbf2-741b3db10d4b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0b52053b-2712-4c0e-8cab-dbe2dbe08e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c31e10-4d98-490a-a653-41d060692888",
        "cursor": {
          "ref": "00348065-a3be-4b5d-bb09-5f2219917278",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e2933794-d84f-4f5e-ba69-d881e3809d09"
        },
        "item": {
          "id": "e6c31e10-4d98-490a-a653-41d060692888",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c30d0483-b36d-4b82-9a13-c9a75442e50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4cddd2-79de-46e0-b96c-d8cecba89ed8",
        "cursor": {
          "ref": "fcc54863-35ae-41c2-8906-45f64175eaeb",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4109023e-a327-4906-8f9f-18540f591bbe"
        },
        "item": {
          "id": "1f4cddd2-79de-46e0-b96c-d8cecba89ed8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b4ee60cc-dfbc-458d-b45b-ad913216b522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78624dc5-1946-49bd-ab55-ee01bcec25e9",
        "cursor": {
          "ref": "5d89d8b4-5f2d-4362-8516-749b2a3f9ef4",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0234be4a-2cda-4526-9720-c25fe6327e9f"
        },
        "item": {
          "id": "78624dc5-1946-49bd-ab55-ee01bcec25e9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "95224d7b-1cb3-4a0e-9ad7-2b1fb06b01f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7c7ff1-018c-403c-8830-c9423737e712",
        "cursor": {
          "ref": "4a0bc62d-e17b-42ed-a747-35a21b762db3",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "419dcd6e-d11b-4499-bf67-7f9ea7eb78e4"
        },
        "item": {
          "id": "fa7c7ff1-018c-403c-8830-c9423737e712",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4f8288bb-219c-4ecd-ad89-232c75e29b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e53994-6b78-483c-ba5b-aed4cd9c4630",
        "cursor": {
          "ref": "264db293-a24c-44a3-be75-f8bd5bb8c73a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8f159819-f619-4023-bd7f-0a7aeed8cf8b"
        },
        "item": {
          "id": "37e53994-6b78-483c-ba5b-aed4cd9c4630",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dff3b4be-3a41-4add-930a-f13406c73d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5988c8-0127-45fd-a431-f66d056f6861",
        "cursor": {
          "ref": "6eaf588e-202a-4b06-a08d-6bd05342a2ce",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f841f421-883b-4ec7-a3db-df94c7c9d827"
        },
        "item": {
          "id": "af5988c8-0127-45fd-a431-f66d056f6861",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "45d48c8f-77a8-4f1c-8b97-a718399f8222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a985d197-34fc-401a-accf-67792f4f68a4",
        "cursor": {
          "ref": "ee2ae522-dd5a-4448-8901-1b32767e469e",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b6fb75a9-ff73-42a4-bd16-70d3ccc6d95b"
        },
        "item": {
          "id": "a985d197-34fc-401a-accf-67792f4f68a4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "26b01ccc-7af1-474e-8f41-b7f8a86b41c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c5447c-af5a-40e5-a1d3-810f7a761ef2",
        "cursor": {
          "ref": "2277ca91-382d-412c-8e6c-6151db2f1001",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "577cae89-3ccf-4ed6-a65b-60e4c7a59fed"
        },
        "item": {
          "id": "19c5447c-af5a-40e5-a1d3-810f7a761ef2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "811ea178-1571-4d4f-a347-25cc80bfdfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b226c3a-1b6b-4f2b-be63-8fb49ec4fcbd",
        "cursor": {
          "ref": "3d190f20-bff1-45b5-98bf-4de2b6eaf4e3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "84f78191-2dbd-4a62-832f-fcba44f8d98c"
        },
        "item": {
          "id": "5b226c3a-1b6b-4f2b-be63-8fb49ec4fcbd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "398f15f4-0ae8-453a-8eac-8bf379af8318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c743dd0-abfb-4295-b583-774585322e30",
        "cursor": {
          "ref": "5dce2ccc-3815-4a06-a863-1b58b5086682",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f05f6ae8-abb2-4415-8e85-1c300a6d719a"
        },
        "item": {
          "id": "0c743dd0-abfb-4295-b583-774585322e30",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7e46d0fa-c3d4-494f-81f7-6c7fa16638e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8137a597-d7d5-46ca-8d0a-20796320cdbe",
        "cursor": {
          "ref": "e8efba0f-d582-40cc-a680-fe9c801c3c70",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c68bc33b-868f-457d-96ef-bb49e0927c87"
        },
        "item": {
          "id": "8137a597-d7d5-46ca-8d0a-20796320cdbe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6a5c4b22-8196-4ddd-b15c-8152c88e95be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8772a509-ce62-4b8d-9d4b-73e266da2baa",
        "cursor": {
          "ref": "c9012c0a-276a-423f-b3ab-9e6140d16801",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b635011a-6759-48ca-a63c-0fdc9ecaf188"
        },
        "item": {
          "id": "8772a509-ce62-4b8d-9d4b-73e266da2baa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c3f0769e-9f75-4a17-a9a8-f4d176dc0432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1b537f-1a9d-4657-8a62-e43b82cf9834",
        "cursor": {
          "ref": "13ede992-bea5-4f2d-a799-3d139e5be060",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "26406f06-cfc8-49e7-aac9-d439c06021b0"
        },
        "item": {
          "id": "6e1b537f-1a9d-4657-8a62-e43b82cf9834",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "86a6d936-71c5-487f-be8b-ff52479efd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee0ef8e-e329-47a9-86d8-30417d9a6caa",
        "cursor": {
          "ref": "e20390e8-cacf-43d2-a16b-b116d86590aa",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7a4fadb3-9823-43a3-a671-6f35bc373c45"
        },
        "item": {
          "id": "eee0ef8e-e329-47a9-86d8-30417d9a6caa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "99c59d75-90f1-45eb-bfcc-9cc82b8d879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480abde4-08ee-44bb-8045-a0a6c8ff5894",
        "cursor": {
          "ref": "6e11057a-6af7-4ede-ac0e-7ab4c5ac348f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fe505a01-0bbd-4157-903b-e7be0fbae8c9"
        },
        "item": {
          "id": "480abde4-08ee-44bb-8045-a0a6c8ff5894",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1e0ebb8c-73ad-4a55-931e-a6dd4b8252cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a27cfdd-5615-488b-b1c8-07e91976682a",
        "cursor": {
          "ref": "81464ccf-84dc-4a40-b0d5-183733e393ef",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5ec200eb-54f9-46a0-ab2a-d91f2218db5c"
        },
        "item": {
          "id": "3a27cfdd-5615-488b-b1c8-07e91976682a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "51092517-eeb1-4e81-9b0f-479c845ef06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ed1ec0-36a5-46eb-a22d-22b014108864",
        "cursor": {
          "ref": "2373e08e-dedc-45e9-b51f-ebef900e077c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3108b63c-a117-4249-9883-28673edba561"
        },
        "item": {
          "id": "32ed1ec0-36a5-46eb-a22d-22b014108864",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a0d5c474-225a-4f1b-bb95-27fde43592df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e213bc6-5915-44fe-80c4-42933f574d9e",
        "cursor": {
          "ref": "5d474ecd-c972-4e68-873d-ba3ef383e86c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b5452eb2-331e-4ac6-8199-a3e7ca075f9f"
        },
        "item": {
          "id": "2e213bc6-5915-44fe-80c4-42933f574d9e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1acf3d43-5714-4854-a945-1c1b9b269009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1d866d-94cf-428e-85f0-9156ef7d8818",
        "cursor": {
          "ref": "19e0747e-5a81-40dd-8011-01acb21a3088",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "26b19dc0-ca5e-496b-ab6b-91d4f3342d61"
        },
        "item": {
          "id": "3d1d866d-94cf-428e-85f0-9156ef7d8818",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b9931b2c-4aee-40cd-947e-179bb2fa690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d8a925-69bd-4003-aca9-370b40f21f75",
        "cursor": {
          "ref": "79df4014-8391-45f7-8de6-6ed834620819",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e4c037ae-c179-4ad0-8467-92f826184d92"
        },
        "item": {
          "id": "f2d8a925-69bd-4003-aca9-370b40f21f75",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "34430da1-b639-4a79-924c-bd0dc389c4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0681614b-90f2-4446-8a43-f714693f0994",
        "cursor": {
          "ref": "0d7b009c-044e-432e-8ef6-a18b8f2349b5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b0e62a0f-eccd-43ca-87ae-e0f961281bf3"
        },
        "item": {
          "id": "0681614b-90f2-4446-8a43-f714693f0994",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f86411d3-6a12-4038-b737-097b40c94fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01db4246-2764-40eb-9c84-f2bd2bb07bfc",
        "cursor": {
          "ref": "d93e8ada-b950-4505-8c35-5e5374638dae",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5f1a2bc9-74dc-4669-9719-119113bfff89"
        },
        "item": {
          "id": "01db4246-2764-40eb-9c84-f2bd2bb07bfc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "44594ac0-268e-460d-9dd3-3d80e2fba19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb15898-efb1-496b-b9ec-a17751fa0122",
        "cursor": {
          "ref": "538d5ddb-2aa5-4559-a163-d9b82d1d4dd8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b01f6d32-72e2-4eea-b25e-3eb79f2e63aa"
        },
        "item": {
          "id": "ecb15898-efb1-496b-b9ec-a17751fa0122",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4c3b461c-b45d-4355-9eaa-842c150287b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280bc304-59d5-4d6c-8735-93f11b7007b0",
        "cursor": {
          "ref": "e210dac6-e396-46b8-9043-56e84a126d8d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5262acc2-4a1c-4cfa-b9b7-fd6d3c219c12"
        },
        "item": {
          "id": "280bc304-59d5-4d6c-8735-93f11b7007b0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c98dc82a-cd7d-4171-93c1-1e6fe24c1b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdcafc6-8483-4d4e-8a92-41775a077208",
        "cursor": {
          "ref": "6b13858a-a95d-471e-ab49-cab5549e659f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5a3f273c-194d-4e3c-9f8b-16c6a03f7730"
        },
        "item": {
          "id": "1cdcafc6-8483-4d4e-8a92-41775a077208",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d85bbc4-33e8-4f16-bd3e-958c4d35624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d25832-7a1b-42be-8287-2c1d7f70b740",
        "cursor": {
          "ref": "c996f477-d259-425d-80b9-46c5a202f407",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "32cc5ff6-e5fc-407f-8cce-95a9e15b6800"
        },
        "item": {
          "id": "e0d25832-7a1b-42be-8287-2c1d7f70b740",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6b795b53-a664-4310-84b1-4ec4d1468948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc8d6d3-e78c-4575-a87a-3410100ce1cd",
        "cursor": {
          "ref": "d1e8b017-b35e-4c89-9405-7ed184714a49",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "92c208eb-407b-4a01-b507-0660a16467e9"
        },
        "item": {
          "id": "3fc8d6d3-e78c-4575-a87a-3410100ce1cd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f559424d-1436-4be2-9b34-15bacaccbc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7cf480-fabb-4f17-bc7c-908987a6646a",
        "cursor": {
          "ref": "5ba78694-086c-44be-b908-cb6ca34fdff1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8caa5d14-b8ac-4dae-98cd-4153a2d9d0b3"
        },
        "item": {
          "id": "8f7cf480-fabb-4f17-bc7c-908987a6646a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "749cb667-fde5-42ba-9900-76f7dd0ac140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07a817a-d586-451d-8eaf-f6e7e0eb73fe",
        "cursor": {
          "ref": "8dd9a7ea-bfd9-428b-8fdd-743555a8b81c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "88acee8a-b9b2-44d3-8312-848d3a90bc45"
        },
        "item": {
          "id": "a07a817a-d586-451d-8eaf-f6e7e0eb73fe",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "563df6ab-2188-4c08-8af7-a4a25274491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee350cec-0081-4666-b808-6829f77f1aac",
        "cursor": {
          "ref": "e54e7770-3339-4275-b01e-b80971006bcd",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "48a784ec-8732-4767-868a-e7ef4b564e88"
        },
        "item": {
          "id": "ee350cec-0081-4666-b808-6829f77f1aac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9cecf5e2-f51a-4deb-a119-3aab1d5cff7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c58211d-9e67-462e-9a0f-827a0d5af4bc",
        "cursor": {
          "ref": "c519b4f1-a204-4582-b1ef-de2c8d402416",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c4c9b28f-e52c-4fe7-af09-ff6ef89369aa"
        },
        "item": {
          "id": "6c58211d-9e67-462e-9a0f-827a0d5af4bc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "82129ca2-4de4-48d6-8c7a-eea613ab4948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86f3b93-f53e-4179-a019-9c986f5275ed",
        "cursor": {
          "ref": "2333c1ba-05a3-45eb-9224-cf6865d74f0d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "99a3159a-cee7-4eb8-8327-258b2abc4ef0"
        },
        "item": {
          "id": "c86f3b93-f53e-4179-a019-9c986f5275ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "55975f7e-bb70-483a-ac44-4e55e8443d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5fa296-4977-44f5-85a3-ec882009b644",
        "cursor": {
          "ref": "b977cf8f-8042-4802-bcf8-a10c549cb294",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "223b9fef-dd15-4fd5-b9cc-dbec0c79a729"
        },
        "item": {
          "id": "cb5fa296-4977-44f5-85a3-ec882009b644",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a59fb65c-d45d-4921-8a38-9563f99c7534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791b2d65-144b-48e9-b1b5-fefe8c6221bb",
        "cursor": {
          "ref": "efe73a1d-efe2-4b60-8d78-e9f92399be74",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91f9b410-8781-48dd-a12a-de180e232de2"
        },
        "item": {
          "id": "791b2d65-144b-48e9-b1b5-fefe8c6221bb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8ab354c6-4bee-4ed5-a8f0-d66fa4593315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea613e9-ead7-47be-9706-c41f127ca4da",
        "cursor": {
          "ref": "41551ea1-250a-4217-b901-13a60934909b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dc43bfe6-3023-4045-8a93-a59a79194df3"
        },
        "item": {
          "id": "cea613e9-ead7-47be-9706-c41f127ca4da",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a2648acb-fee5-4620-8c64-1ae8b552c73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9805d080-4339-4cf4-a8a8-c8b563f63038",
        "cursor": {
          "ref": "5e7b6d49-3513-4f49-81fd-0806e0417684",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b380229d-3001-4b85-ae62-94be01420c2c"
        },
        "item": {
          "id": "9805d080-4339-4cf4-a8a8-c8b563f63038",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bc8f0f39-495a-46b2-9d3e-7178856ae7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7360a080-ac92-4094-b325-92f51ff3de4a",
        "cursor": {
          "ref": "4da7fdc8-021d-4f46-acac-58c0375a8e1e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9fbee024-da0f-40ae-beaa-fe0c2c87487a"
        },
        "item": {
          "id": "7360a080-ac92-4094-b325-92f51ff3de4a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f0854a17-cb0f-4bd1-99e2-16cb6c61fe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e29e14-38e8-497d-ac51-424ee004c4e9",
        "cursor": {
          "ref": "db7af050-76aa-4a57-b0ea-c6d92af17b7c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e95bb60f-437a-4c92-8b9f-e07837504394"
        },
        "item": {
          "id": "c1e29e14-38e8-497d-ac51-424ee004c4e9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f47987d1-8d1a-4c97-ab2c-1ac7ebfdc48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f3d74e-9841-4305-9bb6-e93f35b49615",
        "cursor": {
          "ref": "2914f6fb-ebba-4ba6-a9d6-1805e1c1a8e9",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "944b960b-1830-4ce9-b453-4cc03bd6fe88"
        },
        "item": {
          "id": "91f3d74e-9841-4305-9bb6-e93f35b49615",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "746f61e5-c3db-457e-ba9f-8f3928c2a17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb15eec-de13-478c-b805-b98fda931422",
        "cursor": {
          "ref": "9e1e6cfe-cc69-4be2-a31b-e8204d86cda6",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4afe2448-d54a-4438-a618-e376f26968df"
        },
        "item": {
          "id": "3eb15eec-de13-478c-b805-b98fda931422",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9b6a4ce5-5754-4dfd-aadf-3bfb72e65ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e983590f-f5c5-4340-baa6-f87a65983aa0",
        "cursor": {
          "ref": "179ee130-46bd-4612-a963-117ed69be242",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "18e63f9a-6d6c-4335-b404-f2ebb1069035"
        },
        "item": {
          "id": "e983590f-f5c5-4340-baa6-f87a65983aa0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3b2f7d95-e77f-4624-bd02-9d9dcec23977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acdc18f-f4f3-4e6c-b031-9c0326d40a16",
        "cursor": {
          "ref": "c2418929-550c-4e44-a71e-6f2233284cc3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "90351dc1-c10e-4a20-aeea-32f61f40c094"
        },
        "item": {
          "id": "3acdc18f-f4f3-4e6c-b031-9c0326d40a16",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e72ed324-e327-4db1-ae6a-cc7cdab8a74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb48d155-c84d-42ed-95a2-0bc2bb1edb3a",
        "cursor": {
          "ref": "668f089f-20ed-4ac9-96ad-2b101a1f91a8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "85dab6be-3738-4d77-bd3c-992fa1a04081"
        },
        "item": {
          "id": "bb48d155-c84d-42ed-95a2-0bc2bb1edb3a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4c53ab16-7125-4676-a05f-885064291303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4dd435-e3d6-4c9c-8114-1e757143189d",
        "cursor": {
          "ref": "d19e339e-e2fe-42e5-8219-6be7e4713f07",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "03d5eaa0-3367-4f48-a577-f50d9070d5a8"
        },
        "item": {
          "id": "1e4dd435-e3d6-4c9c-8114-1e757143189d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e3c9157e-b13b-4393-9715-0113587cfac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7796c5-d0a9-4d26-bde9-85fd5694cbc4",
        "cursor": {
          "ref": "bb3e2357-8a84-4600-8d1f-35595d6df5aa",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1cacce1d-c6a8-420f-94c3-a44399cb959e"
        },
        "item": {
          "id": "0f7796c5-d0a9-4d26-bde9-85fd5694cbc4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0f095707-b908-49dc-a4fc-ffcea798c59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b2ecbe-7418-4f7e-a24d-b7ff4427d94a",
        "cursor": {
          "ref": "6db11dcd-1bf2-4081-9413-0aa1ac2d1a27",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "52c6c34a-dabb-4c72-aaff-5846ac506a1e"
        },
        "item": {
          "id": "43b2ecbe-7418-4f7e-a24d-b7ff4427d94a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "13b83296-8514-42ec-aedb-669777777678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea45f2b-7f15-4c5d-a0fa-475f40cff482",
        "cursor": {
          "ref": "e1a0d925-2357-4b6a-bf52-73b8039190fd",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "38016cf9-643e-485f-986b-6bea5110ac48"
        },
        "item": {
          "id": "cea45f2b-7f15-4c5d-a0fa-475f40cff482",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2abdb2bd-5ce6-4bf1-a075-8435f16477b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064eed1b-d3ef-4d87-b39f-52a46e0df8ac",
        "cursor": {
          "ref": "f731fadf-920b-4114-95c5-b546c595401b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "11fbb5fa-c203-45c6-b481-34badaf35ede"
        },
        "item": {
          "id": "064eed1b-d3ef-4d87-b39f-52a46e0df8ac",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bdc7cbe1-bd9c-4904-94a2-1e3f833959b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e130489-e22b-4bec-87a7-a2219af8a848",
        "cursor": {
          "ref": "4ec35b58-4c79-4a84-966e-8bcd832fff46",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "de13106c-383b-4747-b68b-dccfdc3574a8"
        },
        "item": {
          "id": "9e130489-e22b-4bec-87a7-a2219af8a848",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a7d64c84-0566-4be3-bb9c-6ac7b49c42c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490b1da6-589e-4a28-a5d2-53f8fa561912",
        "cursor": {
          "ref": "8c28564a-d324-4efd-9b22-38ad3825a650",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6aaee239-ffd1-49cd-883b-9f9740fc953a"
        },
        "item": {
          "id": "490b1da6-589e-4a28-a5d2-53f8fa561912",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3cdd0e99-a0cc-443a-a60f-4e86dedb9a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247554ea-2578-48c7-909a-db1ac33df75e",
        "cursor": {
          "ref": "dbe4c997-a002-4360-8ee4-11e5cc700766",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cc82d21f-12f7-4284-985b-bd7494b571e1"
        },
        "item": {
          "id": "247554ea-2578-48c7-909a-db1ac33df75e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "13bd91b7-71dd-4f92-8623-1b8b11ab57a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685f64c8-b1da-4fc1-a00c-bb4b5995eab5",
        "cursor": {
          "ref": "01baa55b-2b1a-437b-8569-167d55f07975",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3138cbd1-2bb0-431f-a061-0401fd7c9a9b"
        },
        "item": {
          "id": "685f64c8-b1da-4fc1-a00c-bb4b5995eab5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "da087bb6-de44-4708-a708-f3863b22c738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9849de-7ea7-42f0-b549-827a18bc041b",
        "cursor": {
          "ref": "552de318-8c5f-40b6-b649-f62ec43c9166",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "93491186-de92-4752-8aae-45c7b7810287"
        },
        "item": {
          "id": "3a9849de-7ea7-42f0-b549-827a18bc041b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6cb441b7-68d8-4ee0-9251-b259e24cd838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93da3533-f881-435d-8e30-0e829f8dccfe",
        "cursor": {
          "ref": "6fb360fb-da4d-49fa-a09e-101739f7c188",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ddc00fbf-a177-41db-95a9-59e52498c013"
        },
        "item": {
          "id": "93da3533-f881-435d-8e30-0e829f8dccfe",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "302c46a6-8f45-48cc-acef-a6f286dfbe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5622e13d-cf62-4ecf-bbe4-84ae1c125927",
        "cursor": {
          "ref": "abad57da-3749-41e4-a1e4-7ea208be164d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9c7cb694-c06b-494a-b326-0fc5c5f770dc"
        },
        "item": {
          "id": "5622e13d-cf62-4ecf-bbe4-84ae1c125927",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "09513532-8f5a-43c4-8225-43c913c1ad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d13ca5-f0db-4542-9f43-f966b3d6b90e",
        "cursor": {
          "ref": "dfb0d44a-80a1-44d8-a18d-cedc41bc4b48",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7f180741-64cb-4f1d-820a-2901d25d0496"
        },
        "item": {
          "id": "24d13ca5-f0db-4542-9f43-f966b3d6b90e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "faa1aae1-a050-4c3e-8c5d-1816a6bfa3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d9649b-c561-47fc-acfc-113891e435e8",
        "cursor": {
          "ref": "0aa230ee-7803-4e54-ab76-bdd1bf7f49ec",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8902e12c-00bd-4e51-8dfc-c4c86a14a56d"
        },
        "item": {
          "id": "56d9649b-c561-47fc-acfc-113891e435e8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "061c9081-6feb-4d54-a7fc-c9484209024e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e12bd4-34af-4e8e-b0dc-488746544b0a",
        "cursor": {
          "ref": "5421a739-3b7c-471e-9d1f-236a3058b9d2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "68c43670-fd73-4407-af27-0cbcf564c269"
        },
        "item": {
          "id": "f6e12bd4-34af-4e8e-b0dc-488746544b0a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1b4bd9b-f164-4360-8fe2-fb1b194c0582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2be3e0b-7aff-431f-ab0d-6ed897f847c2",
        "cursor": {
          "ref": "478a59d5-1b56-4e8c-9eca-bcb2199b1749",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "035e2ad7-cb38-4735-a4ab-5262d706b0fb"
        },
        "item": {
          "id": "b2be3e0b-7aff-431f-ab0d-6ed897f847c2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7038ef44-5724-409a-af5a-00a10109b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb969cdc-83c1-4c7e-ae73-105219ff3795",
        "cursor": {
          "ref": "d7b5751a-a9de-423b-a7fd-af6ff31c63e2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8ad49140-805e-47eb-ba63-1079f2593e5d"
        },
        "item": {
          "id": "bb969cdc-83c1-4c7e-ae73-105219ff3795",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ed98ac0b-ea07-4f7c-a7f5-5e465e20cc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8539ad-3b00-4843-b0f5-4f460b290e81",
        "cursor": {
          "ref": "d22a4f77-74c4-48a4-991b-313a97f3f2e2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1387fc75-1f72-45e5-94c9-8dac0c365c9c"
        },
        "item": {
          "id": "bc8539ad-3b00-4843-b0f5-4f460b290e81",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97f55ba7-9e7e-444b-a22a-5ef139ca3d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1849cac-165a-43e4-9e20-78d5db8163d6",
        "cursor": {
          "ref": "b2c39ca5-80b6-4c97-9b18-2c22b3a1390e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4c3ccc0a-2a79-4cb6-956f-ed8966a81b01"
        },
        "item": {
          "id": "a1849cac-165a-43e4-9e20-78d5db8163d6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f3c11e40-9055-4dc3-811f-dd1e135e48ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cca45c-0de9-4b9e-b9b0-19011d6ed4b5",
        "cursor": {
          "ref": "8ef0180a-5b9a-4fcf-947d-5541972a242c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "69bf4fb9-6002-43a7-a6ce-07b0a1335a04"
        },
        "item": {
          "id": "61cca45c-0de9-4b9e-b9b0-19011d6ed4b5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "49cfa3a4-9681-4eff-94f3-ed6405d360a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e32a788-582c-4fe3-8fa3-efc18d6c52a2",
        "cursor": {
          "ref": "2d7de6c1-5d55-4035-aa59-5f6729242083",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b8d5b91b-5e86-4fcf-b9a8-09925ff83670"
        },
        "item": {
          "id": "4e32a788-582c-4fe3-8fa3-efc18d6c52a2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1e103511-8b62-4ad4-8525-8b94720e1949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f841f30-76b2-49d8-a292-fb11c5ec1abc",
        "cursor": {
          "ref": "80541595-a23a-40c2-8055-2554d8ea0a45",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bc33893f-689b-4908-ba49-1d455cdf6ed4"
        },
        "item": {
          "id": "4f841f30-76b2-49d8-a292-fb11c5ec1abc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d832658c-c9a1-4946-99d9-7b7ae0508cd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c4b120-c2e2-4fdf-b1d0-6d4aa326b4ec",
        "cursor": {
          "ref": "5a8a0e8f-1a9a-414e-9522-4c1db8befe21",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "51ab1d67-be8e-4712-b854-af936b20e61c"
        },
        "item": {
          "id": "45c4b120-c2e2-4fdf-b1d0-6d4aa326b4ec",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "362cad4e-f948-4a42-bb52-aef197279714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "27042959-3161-485f-8803-4041f7bc5c56",
        "cursor": {
          "ref": "c0bff2ab-c05f-4bb9-b546-075f65745b4e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cc04d55e-a050-4a98-b49a-9a12ad36fd24"
        },
        "item": {
          "id": "27042959-3161-485f-8803-4041f7bc5c56",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2187b019-fa39-46c8-b5db-d8b047dbdd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1c1b6088-0b29-4d6f-86f7-2607c0bc7dfe",
        "cursor": {
          "ref": "f6a40bbd-ed09-4ab4-b729-8b074b5ee13a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e5fa1a49-40e2-4312-8d74-ed6969514da4"
        },
        "item": {
          "id": "1c1b6088-0b29-4d6f-86f7-2607c0bc7dfe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "00c1e5a5-1ab1-4b10-b57e-63d8531000b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "33cd0c66-5efa-4619-aa8a-a7e2488a395b",
        "cursor": {
          "ref": "1e00d954-c87e-4b82-baf3-0b62a495ff35",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "95d0c9ff-15f5-46c6-8ebb-38388befd3b4"
        },
        "item": {
          "id": "33cd0c66-5efa-4619-aa8a-a7e2488a395b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b2c1cd89-f851-4ff3-b4f5-382abd7ca275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8e31e2aa-b99e-4ded-93ab-0be7d10757d9",
        "cursor": {
          "ref": "5316a222-1108-459f-afce-9245dafabaa5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "501f707a-6d97-496e-990c-7182a9aa6b3f"
        },
        "item": {
          "id": "8e31e2aa-b99e-4ded-93ab-0be7d10757d9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "aa647c6b-b96e-4795-bc49-974dbc28cfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d81402a1-f1a2-4eb5-936e-90c88e6931bc",
        "cursor": {
          "ref": "eef29f2e-59f4-4eb6-a7c6-59872614ae1c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1ce7c597-8e6b-46b4-9ae5-e44df86ef256"
        },
        "item": {
          "id": "d81402a1-f1a2-4eb5-936e-90c88e6931bc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "705f1405-6747-410b-8d78-0b71be21246a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b2b04c5c-081b-448a-bb11-2efc106d64d4",
        "cursor": {
          "ref": "51c6e5d9-2d44-4510-8a84-3ede267ac23b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c872d6ed-759f-4e99-a30d-b95b6895989a"
        },
        "item": {
          "id": "b2b04c5c-081b-448a-bb11-2efc106d64d4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "479c394d-0b6e-45fb-9e60-65b81f51487d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8c629233-ffc2-472e-a293-113ea2a89114",
        "cursor": {
          "ref": "f43238ad-7b65-4e9c-b11d-1ea97de264e4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a4a38b57-bf35-42ae-a89a-989c79cc65c1"
        },
        "item": {
          "id": "8c629233-ffc2-472e-a293-113ea2a89114",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bd435d1a-e45a-41d0-87b1-133283134474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ed4d68-d0e0-4662-b800-a816a64b8a16",
        "cursor": {
          "ref": "cd5dd446-4f9a-42ec-978e-79d576f21761",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "333e9597-41a8-426d-8901-2af4bad9f47a"
        },
        "item": {
          "id": "a4ed4d68-d0e0-4662-b800-a816a64b8a16",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3a9ba7e6-eb50-4b56-a082-781e2c382969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d81169e-5993-4527-9879-6a8392fab3d6",
        "cursor": {
          "ref": "280ea7b1-1678-4d8c-a3f5-5833a4e9a671",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dd98a324-5a0f-49d9-bb38-c845771aef23"
        },
        "item": {
          "id": "8d81169e-5993-4527-9879-6a8392fab3d6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b67c2eca-2e2b-4057-b04b-9510879b658e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330b46c0-8338-4a4a-9971-f2199a1a124e",
        "cursor": {
          "ref": "ef46ef3d-6506-450b-8c20-b00d9b05b0f6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0e49b314-c445-4a53-b94b-7a58e6f84599"
        },
        "item": {
          "id": "330b46c0-8338-4a4a-9971-f2199a1a124e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9a8c2209-6e04-411b-b0bc-5d5149e7d9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6a41cd-ea35-4ff0-abf3-f646094310fb",
        "cursor": {
          "ref": "aa6bf0c0-dafa-4e42-b0d3-eb54f6cd840a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9e97d427-8c1c-4668-82ea-b8570ed0df6b"
        },
        "item": {
          "id": "6a6a41cd-ea35-4ff0-abf3-f646094310fb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56c7e1d0-3bb8-4b95-86e5-d012ec4c205b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8709ca22-0f67-4366-a36d-af57da9ea7fc",
        "cursor": {
          "ref": "439b0c62-d72c-4971-a746-d29ea113aa9f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "093469ff-b6a2-4d01-8b6d-300d9b81b9ae"
        },
        "item": {
          "id": "8709ca22-0f67-4366-a36d-af57da9ea7fc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bee49552-63d0-4397-b10d-81440f5da6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8faf92-8f78-43ca-9cce-ff26cc1386b9",
        "cursor": {
          "ref": "8c8d5410-847a-4c1f-9719-172fe41cb37c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1a037c37-fbfa-49b2-bb80-2049450c2b02"
        },
        "item": {
          "id": "3d8faf92-8f78-43ca-9cce-ff26cc1386b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d86f90cc-f701-4614-bd00-85320a261b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c879f4b3-8eb8-42bb-a8ff-1feeb08a3fb6",
        "cursor": {
          "ref": "0f6ba431-30a8-4671-8d74-35319557e3e4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "32ca6b29-280b-4895-82f6-106f0326e2c1"
        },
        "item": {
          "id": "c879f4b3-8eb8-42bb-a8ff-1feeb08a3fb6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e71780fe-4f41-42f8-b1ff-53e012ebaaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba8fe4c-8d22-49db-af94-eec14eef811c",
        "cursor": {
          "ref": "a2bf87fb-7cdc-4528-a74f-8039d9379351",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8507265e-e469-4cd6-9806-3d04a2f4da7b"
        },
        "item": {
          "id": "7ba8fe4c-8d22-49db-af94-eec14eef811c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "83212365-2f9d-4707-a417-3ae48a7ba453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c90293-88b6-474f-809d-398c6e29b7e0",
        "cursor": {
          "ref": "10471fae-696a-498d-9cdf-7e03c57e40e3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "47281c87-f6b5-4068-930a-6e5b1228d2bf"
        },
        "item": {
          "id": "64c90293-88b6-474f-809d-398c6e29b7e0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "91467252-a4a4-4154-a38a-5524ac5142ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdde09fc-2edb-42b9-8404-c356cf412196",
        "cursor": {
          "ref": "e8ba161c-a342-4d48-99fc-ed9fb948dbed",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3684fc7d-3d21-4e6d-9b33-36a6d06e8f60"
        },
        "item": {
          "id": "cdde09fc-2edb-42b9-8404-c356cf412196",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fb84439a-8584-4b26-995d-ec88cabaca14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33ef6e6-7aed-49d2-8785-8dcab9aec0e4",
        "cursor": {
          "ref": "352c0bf4-0b99-4144-8feb-37793f199992",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5e12593e-f011-4029-98d7-b4d122445640"
        },
        "item": {
          "id": "c33ef6e6-7aed-49d2-8785-8dcab9aec0e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a09cf883-a5ec-4f8d-8a53-4a3cfa27f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c14097-374b-478c-ae76-c6f547729cc4",
        "cursor": {
          "ref": "dbb3f1a5-a798-4c72-b44f-29562d7b9e0b",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c91e1558-f832-43c0-a2df-8b02cb61a3c4"
        },
        "item": {
          "id": "08c14097-374b-478c-ae76-c6f547729cc4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7e664de-032c-489c-9fed-1c15b5d029c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afb8b21-35a7-4606-8678-b90c2cf5ca86",
        "cursor": {
          "ref": "12839461-05c9-447b-8e99-a64744445b7f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d03731fc-f753-4830-b517-a438cbff87ee"
        },
        "item": {
          "id": "9afb8b21-35a7-4606-8678-b90c2cf5ca86",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aea3a75f-46d9-476e-ac8b-6363ad875404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1d1d2a-2b53-4207-9596-ca0730037d63",
        "cursor": {
          "ref": "2f6cc266-af05-44c9-af7c-7c99d110ff6f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ae240cee-8473-4466-b197-0a5b4b0531c2"
        },
        "item": {
          "id": "5c1d1d2a-2b53-4207-9596-ca0730037d63",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "77a264bf-9d8e-42ea-8f1f-626a7a198472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee6f916-4ac5-4fca-90d2-472329148bfa",
        "cursor": {
          "ref": "6aa9b5d7-d7d9-4331-91b2-a00bc634455f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2f3ca33f-dc85-4f01-9563-d479be642572"
        },
        "item": {
          "id": "3ee6f916-4ac5-4fca-90d2-472329148bfa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c1c9661b-fb64-4a68-8daf-1b70e8d98617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf3bb2f-a77b-4719-a49f-64f6dc48213e",
        "cursor": {
          "ref": "62e47f8e-ac0d-447b-8997-a6088bef3221",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bd567a1a-d095-4be2-82cc-6b0020f20a1e"
        },
        "item": {
          "id": "8cf3bb2f-a77b-4719-a49f-64f6dc48213e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "912de89f-8573-4d8a-93ed-a89e3db33d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf92d48-ca7b-4feb-a0c4-7ad02136bbe8",
        "cursor": {
          "ref": "55ccf18a-c2c1-43eb-bc2a-e3675edeec29",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fcda8c90-b726-4035-b543-033e0d0830d0"
        },
        "item": {
          "id": "caf92d48-ca7b-4feb-a0c4-7ad02136bbe8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "373b6ab2-2363-4394-9823-1e718bb1c93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0b4413-9ee9-43de-83f7-d9301b4a5197",
        "cursor": {
          "ref": "7a452487-a980-4928-b1d3-aaf0304d4750",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "10b47edd-cc55-4501-82ec-d0bcadc95fc9"
        },
        "item": {
          "id": "dd0b4413-9ee9-43de-83f7-d9301b4a5197",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ea04b500-c7f9-45ce-b079-d4b29ebd810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505ead09-cc27-4f01-acab-13ea36c801ba",
        "cursor": {
          "ref": "976ca47b-7ff4-45a9-8341-ba41266276c0",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b0c0832d-a686-4b8a-a99b-15dd4c3f9c42"
        },
        "item": {
          "id": "505ead09-cc27-4f01-acab-13ea36c801ba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "410cf7d3-5c0b-4be1-a18d-558623cd6ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd2e7c1-c07a-4712-937a-2eb37b83efdc",
        "cursor": {
          "ref": "75514371-f6c4-41e3-8146-f2afcbeca56f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0abdd21-8baa-45f3-97f0-bf75457a0c05"
        },
        "item": {
          "id": "9fd2e7c1-c07a-4712-937a-2eb37b83efdc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e5eef17e-51f1-484f-b34f-f9705031bcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1941c8-14c8-4c78-9bea-7a88de3dbeb6",
        "cursor": {
          "ref": "45ec3f94-9a6c-41bc-8ec7-7d07fc11251c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c6364c25-2e4d-41b1-b591-04768e3f16fe"
        },
        "item": {
          "id": "1c1941c8-14c8-4c78-9bea-7a88de3dbeb6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aaae5a82-d9d3-4699-b976-f476c731a85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cd26fa-b49e-4e35-8177-b120e0411eaf",
        "cursor": {
          "ref": "9a5b5fda-d57d-4a61-a70d-0d94d329d0dc",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "40a94d48-a9f3-463e-9a71-5905d04e13f8"
        },
        "item": {
          "id": "11cd26fa-b49e-4e35-8177-b120e0411eaf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "88c730ca-4ac8-4ed8-8b2c-599a804d1e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace0afa9-c506-497b-9aca-e043bd53b15e",
        "cursor": {
          "ref": "7e01e097-0038-4b8e-8de2-7361ccb6e7a2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c3db78c8-f546-4553-b594-64eeca89410d"
        },
        "item": {
          "id": "ace0afa9-c506-497b-9aca-e043bd53b15e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d384a25-38f9-40bc-9645-0b75167ca3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce01ad73-a7b0-4ce3-9fcd-e4bdcabf2e74",
        "cursor": {
          "ref": "761d6df0-f800-417b-bb5b-8430b56f3042",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c110a0fc-8dbd-4bad-80f8-6db5b51e6769"
        },
        "item": {
          "id": "ce01ad73-a7b0-4ce3-9fcd-e4bdcabf2e74",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1162147c-6315-4507-b54e-951554137100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e26efc-56ee-4186-b227-e7a3c8c91902",
        "cursor": {
          "ref": "c90c2e62-0295-4132-9e09-82b5656dbc07",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ddae25e0-0b2d-4f0c-9899-884643e4ea5b"
        },
        "item": {
          "id": "a1e26efc-56ee-4186-b227-e7a3c8c91902",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b20a4e12-2111-421a-9431-cace312b2fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae6a20d-90ff-4262-8497-4286daf6b788",
        "cursor": {
          "ref": "21ff5a7f-4d77-4864-b238-d779b67b3409",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2fe4605d-9688-435e-9a84-15881a65ae48"
        },
        "item": {
          "id": "7ae6a20d-90ff-4262-8497-4286daf6b788",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "57be1e6c-70e8-48f4-8f86-46c32163513f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16abd1d-1e06-41ee-a768-034e2196e0ec",
        "cursor": {
          "ref": "c3b490f6-296a-40c6-8d94-108fdaa385d8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "934f296d-9623-42ef-a6ac-714ba5acb798"
        },
        "item": {
          "id": "e16abd1d-1e06-41ee-a768-034e2196e0ec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c06852d6-1d18-48c6-809a-806f07d5ed8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a6321f-2280-4467-994a-9dd87700a846",
        "cursor": {
          "ref": "9cfda60d-f2b9-4a8f-af32-944a43276d7b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9a4084ab-1f60-4406-9d2f-5a7998e33403"
        },
        "item": {
          "id": "68a6321f-2280-4467-994a-9dd87700a846",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2f2b347-54c7-4169-b780-bbaf8905d751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456e75e0-db98-4e09-949a-0af8550271f4",
        "cursor": {
          "ref": "e4708dda-928f-47f4-b8d5-1b889b8c6a7a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7ae85edd-90c3-41dc-9bd4-38d02533bd69"
        },
        "item": {
          "id": "456e75e0-db98-4e09-949a-0af8550271f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "16ed4065-d18f-464c-a421-f947492e6e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81c664b-e3e5-40e9-9ee1-5605aa776b93",
        "cursor": {
          "ref": "557220a8-1c1c-4a4f-838a-a80336b0d98d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5a4204e7-9996-474c-b37f-b37695b7a541"
        },
        "item": {
          "id": "d81c664b-e3e5-40e9-9ee1-5605aa776b93",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7b9eb07-9fda-4859-971c-bf529b02bc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917802bc-61cd-4e0e-a49a-493680804927",
        "cursor": {
          "ref": "ab7ac623-a5e2-4a76-bb72-0a9a9d11cee0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc775774-507f-47d3-9e9c-2baa8be8daf3"
        },
        "item": {
          "id": "917802bc-61cd-4e0e-a49a-493680804927",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8321c293-743a-4e22-911d-38a51c89730c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6ecf98-c982-451d-ad95-f54dc1c80918",
        "cursor": {
          "ref": "bf6e0017-c763-46e1-a521-816b566d9ca9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "de053d38-a2bd-4327-a600-d1cf232b6699"
        },
        "item": {
          "id": "7d6ecf98-c982-451d-ad95-f54dc1c80918",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "15d11c14-f506-4199-b5c1-86dac6083198",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ed4eed-df26-413d-94f9-edae9196239c",
        "cursor": {
          "ref": "c78e8659-17b0-4fcd-8dbc-98b0c6da7469",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "64899e85-9027-40f6-b7d5-c6f025452f62"
        },
        "item": {
          "id": "a3ed4eed-df26-413d-94f9-edae9196239c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "08e0d70a-3621-42c6-bd53-fc579408970c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62542796-a0c7-4b40-af96-9b6f747a5d22",
        "cursor": {
          "ref": "f0c55536-07a3-4135-a0a3-4bf2a80d0bb2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "49a3f984-5af9-4168-ae25-fe7b15a44bd9"
        },
        "item": {
          "id": "62542796-a0c7-4b40-af96-9b6f747a5d22",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ce62cf4-07bd-41ef-9fa5-85fab53efd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3333d5d3-b9d2-4226-b7a9-38d869a61410",
        "cursor": {
          "ref": "ed393a90-1080-41ea-af62-bd3983fd0fa4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "875baeb4-cacd-41ed-8128-53a56a15d307"
        },
        "item": {
          "id": "3333d5d3-b9d2-4226-b7a9-38d869a61410",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4624968d-cc9e-4174-8e86-8779422f429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e51f0c-1ca2-4cb0-af21-b65761f2e446",
        "cursor": {
          "ref": "a1a2cd54-f27f-493b-a915-a56382ec1ac8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "58aec687-443e-4e79-8132-16c577e6b012"
        },
        "item": {
          "id": "e5e51f0c-1ca2-4cb0-af21-b65761f2e446",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7825a0fe-e27f-42eb-a5ea-82725b71c91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4726e6b-2db4-458f-8a2e-8311ba71bbe2",
        "cursor": {
          "ref": "cb62d684-bdf9-419b-84bc-2dd801a95fa6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ae0cae18-b508-4d17-aec6-27120e03c6c3"
        },
        "item": {
          "id": "c4726e6b-2db4-458f-8a2e-8311ba71bbe2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "846787f7-a4f5-4e7d-a064-e58701c4e629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2d3216-c481-47f1-8932-1985cbdca605",
        "cursor": {
          "ref": "c1a9028c-cfaf-45a8-a7cd-6331d56ecb64",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a18eb537-1017-4aaf-9cbe-92fc8be31f93"
        },
        "item": {
          "id": "ad2d3216-c481-47f1-8932-1985cbdca605",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "658eb7fd-993e-4c0f-8da0-bc326a5c46f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66236d95-8b32-414a-8a0f-916ade11fbba",
        "cursor": {
          "ref": "b642c35a-6bd5-4868-a549-b08350935d44",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c42461a7-5b96-42bb-95d2-90eab90931c9"
        },
        "item": {
          "id": "66236d95-8b32-414a-8a0f-916ade11fbba",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a81ed46d-1162-4fbc-b8dd-c2ddb7b33c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21a744f-3b6b-46a1-8674-2d619f8ce959",
        "cursor": {
          "ref": "96470763-d9f7-4933-a6f0-d4063045667d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8e287cdb-ade7-4357-b133-f427d4f4f283"
        },
        "item": {
          "id": "b21a744f-3b6b-46a1-8674-2d619f8ce959",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "398d5f92-dbd5-4a6d-aca8-333a63c2d231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb41a8b-93f6-4f01-b823-e74b044d222b",
        "cursor": {
          "ref": "5599f855-7531-4a32-8695-4ac8ee99c187",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e4752390-da68-4fd9-b241-dd2d7aab2263"
        },
        "item": {
          "id": "6eb41a8b-93f6-4f01-b823-e74b044d222b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "93dde2a0-4686-4c16-91c9-3d9c69c8bdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c366dcb-a4df-49de-a48d-e03900dff366",
        "cursor": {
          "ref": "09d55485-2b07-4b23-9bb6-ccea1acb41e4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fa1a5734-4205-46c0-8d04-b8d7cfed046e"
        },
        "item": {
          "id": "2c366dcb-a4df-49de-a48d-e03900dff366",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f8cdfb67-32b3-45d6-9b01-ea26f262dbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48365593-9cea-47d2-a47b-06a8650124e3",
        "cursor": {
          "ref": "4656171f-7032-44d6-8251-c8e07e285c41",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d0c2fbe7-6ce3-4be1-bcd0-47dc69c11a54"
        },
        "item": {
          "id": "48365593-9cea-47d2-a47b-06a8650124e3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d0e293c1-354d-4597-a4f0-d8c276fc3aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a6f32c-b40f-4ec5-afb7-86cc1656f1e2",
        "cursor": {
          "ref": "6e7fcb1f-6534-45b5-8060-fd059a1efc4b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3a407ba6-3ceb-4cce-ad93-072737428334"
        },
        "item": {
          "id": "38a6f32c-b40f-4ec5-afb7-86cc1656f1e2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "00326c1d-7acc-43bf-9c3a-e2236541ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640e5ceb-b8f4-4d95-bda7-dda3e4966b5e",
        "cursor": {
          "ref": "cead545b-a229-4752-a16d-31cdb86e4e7f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "63bd4efd-d106-4750-ae60-537e3d9f6d7c"
        },
        "item": {
          "id": "640e5ceb-b8f4-4d95-bda7-dda3e4966b5e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bac01f09-7794-4383-99bf-0f5b779a8327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4283fa-54eb-459f-93e7-8dacf470a107",
        "cursor": {
          "ref": "738e835c-e813-486c-94a0-f4e4649d8b45",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8b9eefcb-9e54-4859-aca1-643b55e28b17"
        },
        "item": {
          "id": "4a4283fa-54eb-459f-93e7-8dacf470a107",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ffc0b558-4f03-4adf-bf58-915a6740ed61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe9d597-cdcb-4c30-94fe-84514fdf90e6",
        "cursor": {
          "ref": "289a7f2d-07e6-4c19-954c-ff9102b18002",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "716697b8-8d90-4f24-9fa1-3681bb49488b"
        },
        "item": {
          "id": "5fe9d597-cdcb-4c30-94fe-84514fdf90e6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6e492484-135a-4068-a7d3-78a3adb65793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2472b13c-b4e1-4ad5-a07b-3561aa8048a2",
        "cursor": {
          "ref": "0990be0d-704f-4460-a0ae-829592a76294",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d66e2217-9ef9-4c5d-9a8b-a296ab651a11"
        },
        "item": {
          "id": "2472b13c-b4e1-4ad5-a07b-3561aa8048a2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e7c5c77e-b365-486f-a705-1cb205b177fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f479f02d-3547-4f5b-9ae2-3a30c4687801",
        "cursor": {
          "ref": "1becc891-856d-40af-9de2-747422733175",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "73549130-7c23-4182-bb02-3386818b490a"
        },
        "item": {
          "id": "f479f02d-3547-4f5b-9ae2-3a30c4687801",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb0fc03b-c116-491f-b304-781225d13dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d177d39-d9be-441c-bf82-e72042461118",
        "cursor": {
          "ref": "bfc3bd3f-be91-4554-85ad-fbf5ce3abcd0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a9398d21-296d-4640-9092-5ec5b545bb3e"
        },
        "item": {
          "id": "9d177d39-d9be-441c-bf82-e72042461118",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3df96e85-4d69-4156-88a8-ecd5de056963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18a67bf-c10e-48fd-a802-2d731b94bbf4",
        "cursor": {
          "ref": "18fb57d9-f9a5-4ef5-9cf9-2418a817bcfb",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c5d1274-adc4-4824-aa29-8a8b52b9b634"
        },
        "item": {
          "id": "d18a67bf-c10e-48fd-a802-2d731b94bbf4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4607a2f3-3d1f-42c3-8e98-e13ad8765d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdb29f2-7c79-4d90-9e34-03e29b2e2b91",
        "cursor": {
          "ref": "96ee4420-c0da-455e-a481-5b5a90d77740",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fc4582f4-67ad-42d8-8515-411654b30585"
        },
        "item": {
          "id": "6cdb29f2-7c79-4d90-9e34-03e29b2e2b91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3361fdf6-a69b-410c-ab50-4c2e8234518e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0611ff-054b-449a-9bed-987eca37b712",
        "cursor": {
          "ref": "b1add62d-09ca-42e3-aa99-37a813e9fc67",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fde75538-030e-4855-816f-8e00c61ab05a"
        },
        "item": {
          "id": "0d0611ff-054b-449a-9bed-987eca37b712",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0c13104b-026a-4ce0-8899-1441b8de605e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0eb020d-83ea-4583-9b5d-af6b45d4f091",
        "cursor": {
          "ref": "55001427-c6b3-4bf1-8ab2-b4100e7ac18e",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "588cd03c-a7f8-498f-97eb-6cb90b2fcf1e"
        },
        "item": {
          "id": "a0eb020d-83ea-4583-9b5d-af6b45d4f091",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2aece801-9f4c-4849-a5cb-e474ba6367eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c646fce4-2af3-4ee6-8999-c5079c4f7148",
        "cursor": {
          "ref": "98acb2a2-0b0f-4a6e-a91f-edcf3b70b6a5",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "716f3c08-adc4-4db7-8f9f-c08320b828a4"
        },
        "item": {
          "id": "c646fce4-2af3-4ee6-8999-c5079c4f7148",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26752e9e-1dcd-4759-b996-3aac5b45ff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f114c55-1b64-41fd-ac0c-cef3642c69c7",
        "cursor": {
          "ref": "b28c7818-31e2-4a84-afc7-58ea8fc39aef",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c59a33fd-3917-4740-bd6e-d7501c08e238"
        },
        "item": {
          "id": "3f114c55-1b64-41fd-ac0c-cef3642c69c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "550d6409-9d0a-4d72-a3d5-9e423cb3c0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d85ea90-13f1-4c36-87bd-062e9a9f7501",
        "cursor": {
          "ref": "531cb33b-d1f6-46f4-a509-79a65ce783a8",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6e9823cc-23c1-4ceb-b2b9-7cd7a5c77943"
        },
        "item": {
          "id": "8d85ea90-13f1-4c36-87bd-062e9a9f7501",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "569245ba-c369-4abc-96c1-65c14b3e2fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329ce346-9b80-41f3-a834-80815ffc48ba",
        "cursor": {
          "ref": "f0799f11-1d87-4313-9ed4-47c6c6c54e50",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9acfffb6-9f59-40cb-b8f5-513c173097ae"
        },
        "item": {
          "id": "329ce346-9b80-41f3-a834-80815ffc48ba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "363dca5b-8d53-46dc-91f9-9e6e7275042a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddb4b9f-a756-4dc0-bcec-7d57bcee1acf",
        "cursor": {
          "ref": "1d649981-f695-4f22-a45d-b2a1a5fd381c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "418e2eb9-d7d3-458c-906e-63bf576470fb"
        },
        "item": {
          "id": "5ddb4b9f-a756-4dc0-bcec-7d57bcee1acf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "63ecd584-b6a0-4347-b1a4-7b6870dea392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e44734-9942-4630-ac11-cdb06ee7feaa",
        "cursor": {
          "ref": "3bc272e0-37cb-4aef-96b2-876094681f4e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1ca59272-c88b-44d1-b82d-5646b0e31d52"
        },
        "item": {
          "id": "e2e44734-9942-4630-ac11-cdb06ee7feaa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "91b4a7a8-7986-4d07-943d-089638b54442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c4fdbe-cf5b-43b3-b08d-b63d8f2d63a7",
        "cursor": {
          "ref": "34a9aac6-0d7b-403a-bff1-ddbc38a0f8d8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "606b88cc-63ab-4328-9693-96633aba0d70"
        },
        "item": {
          "id": "58c4fdbe-cf5b-43b3-b08d-b63d8f2d63a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "054c7a02-9fb5-4ae8-9138-dc62329a9eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e457c05-05c0-40e3-8a83-da35c13efec5",
        "cursor": {
          "ref": "3473b4f8-e3f0-45b6-90b1-3f1d026916f5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5ee46f29-a3cd-41d6-b4cb-c4999df22b2f"
        },
        "item": {
          "id": "9e457c05-05c0-40e3-8a83-da35c13efec5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "971b8f8d-b49f-4db7-b794-e416b4e606d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99380648-5d62-4f8a-bbbb-102397d3eea8",
        "cursor": {
          "ref": "c3a44215-762c-491b-8259-b3f40d3df68b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ee6d6683-232f-4d36-801f-d92bbe8f1f0e"
        },
        "item": {
          "id": "99380648-5d62-4f8a-bbbb-102397d3eea8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a7c79664-84d0-491a-a5f4-e18f23235391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce67973-39c9-49fb-b7a6-1c8f00baa4e0",
        "cursor": {
          "ref": "0159a8ed-68bf-408d-901c-f3df0734a7cc",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "61acf3ed-cf3d-4cab-b619-9be9c80c9a4e"
        },
        "item": {
          "id": "7ce67973-39c9-49fb-b7a6-1c8f00baa4e0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "59d9786f-1b57-4a01-9408-09a1d574e78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6300a3-5fb6-400a-adce-27371b4d5e1d",
        "cursor": {
          "ref": "10dfe96c-74fb-4aa4-b7f6-9b951245b0c4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7d5c9517-7d0f-4391-a854-f35e1f002c21"
        },
        "item": {
          "id": "0c6300a3-5fb6-400a-adce-27371b4d5e1d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ebc87643-b04c-4dfd-a019-7d6cc15d25b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffdb7b9-37c7-4038-b3a4-4a4dcf535af9",
        "cursor": {
          "ref": "bdff2361-0085-49ca-a6ac-4bb11359f3c9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2735f2c7-a185-4909-bdd3-e5d6845ce2c8"
        },
        "item": {
          "id": "6ffdb7b9-37c7-4038-b3a4-4a4dcf535af9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b9211421-5615-4590-9b04-e95d03c05762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5047fc1c-c4d3-4376-bff2-ec022fb2192c",
        "cursor": {
          "ref": "22b4dd24-41f9-447b-b726-637de5021d10",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ca6c25de-4f1d-4078-8130-9f3a28db8f5f"
        },
        "item": {
          "id": "5047fc1c-c4d3-4376-bff2-ec022fb2192c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "651715fe-916f-4ca4-877c-fdafebd41ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0717f7b-734b-446e-b125-da7064be3ddc",
        "cursor": {
          "ref": "ee5c4d09-3022-45c8-9b8b-1006909831d4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "71a587bc-41b6-4e1c-9e8b-4a93b313f9ee"
        },
        "item": {
          "id": "a0717f7b-734b-446e-b125-da7064be3ddc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "94ddbf67-c0ce-4ff3-b0a0-63f84496a822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0845da2-6977-479b-8b43-0c4d006e8900",
        "cursor": {
          "ref": "25e7d208-0e10-4871-9366-250cb071cc6c",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "03b2eb54-7e31-45fd-9cbe-004729c986f0"
        },
        "item": {
          "id": "c0845da2-6977-479b-8b43-0c4d006e8900",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dc66ce33-506e-423c-bed9-4abf32a719d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08736ff2-5d0a-4a15-89c8-6e08bd8141c2",
        "cursor": {
          "ref": "871eb9f2-c0d4-48b1-8e12-d25b26236a58",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c0819fea-d462-4206-bfad-de7c6b6c2636"
        },
        "item": {
          "id": "08736ff2-5d0a-4a15-89c8-6e08bd8141c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5e1813d6-fbea-47be-b67e-9291934b2f89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6027536a-0f5b-4d2d-92eb-03fc704e6950",
        "cursor": {
          "ref": "54c8f85d-9109-4071-ab21-940a63e58c95",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b667cbb9-045f-4606-8a8b-75b651271a48"
        },
        "item": {
          "id": "6027536a-0f5b-4d2d-92eb-03fc704e6950",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fded62fc-7454-4d9f-8451-f95975ed9a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f43187-7897-4e83-9881-ef25c2c6a837",
        "cursor": {
          "ref": "17cb665c-18da-4bdb-9118-b14e3e6316e2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "633f6a26-0292-43e0-8f37-207e58cbe772"
        },
        "item": {
          "id": "f0f43187-7897-4e83-9881-ef25c2c6a837",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "31e51c43-7511-4ef5-87e6-9850bba784ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13edcc40-fa5a-4e2b-a7a6-01326b6e603e",
        "cursor": {
          "ref": "e5c85e43-1d71-4093-9199-dbb892da66ad",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ac1aeb14-e6c9-4ca4-9432-e36b80649b31"
        },
        "item": {
          "id": "13edcc40-fa5a-4e2b-a7a6-01326b6e603e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a927c3fb-13b3-4a1d-9134-4bdc7d476eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f209d7f1-75bd-4a1e-8d60-d68f9dd11d6f",
        "cursor": {
          "ref": "8df43c44-21fb-4be6-9410-0e9185950ad7",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "87017e2f-b4a1-4e41-8a4c-ed49027d4d84"
        },
        "item": {
          "id": "f209d7f1-75bd-4a1e-8d60-d68f9dd11d6f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eb72c77d-e6cf-42dd-9f90-f5f508f20cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da381961-8be9-452c-8bd9-6ce2d44973d4",
        "cursor": {
          "ref": "f1d62e05-549a-4b14-b76e-1da49d359f6c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "86c599cf-d2bd-462e-9577-7b54f7623c64"
        },
        "item": {
          "id": "da381961-8be9-452c-8bd9-6ce2d44973d4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "07db1c0e-27bb-4350-8497-dcbfccbefcd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cc896c-d4b9-48fc-9ad6-845f4a16eaba",
        "cursor": {
          "ref": "5b27d421-d991-4ffd-93f7-deddd6a0e3c6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "09165f5d-ab93-441e-8424-bb8cb4bed49b"
        },
        "item": {
          "id": "c8cc896c-d4b9-48fc-9ad6-845f4a16eaba",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "63bc7a8a-413d-4c83-88fb-175c273c08bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06255118-49ef-4af4-ae5b-5cae4eea11f3",
        "cursor": {
          "ref": "5224e86e-e9ca-4bb7-9388-55e636b646bb",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1c5d242f-9fea-4349-937f-3204211613d4"
        },
        "item": {
          "id": "06255118-49ef-4af4-ae5b-5cae4eea11f3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "905c847a-9454-4fe5-b511-8d1a20c42f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c343fe-687f-40bc-bbe7-f832216987c4",
        "cursor": {
          "ref": "60fa1b29-584d-4030-8446-b0852fa7b9b2",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "32637fd6-b30f-42ba-9ce0-a1580bf8734b"
        },
        "item": {
          "id": "b2c343fe-687f-40bc-bbe7-f832216987c4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "58869629-38a3-4ce1-b923-1ca0f4532b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766305f8-a485-4019-b1be-78fd45a0b57c",
        "cursor": {
          "ref": "26ba75f0-5a9c-4cd1-b7ac-2d54ad2dfb6e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9de7776b-d366-404e-9291-751a697cf0b1"
        },
        "item": {
          "id": "766305f8-a485-4019-b1be-78fd45a0b57c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fd5ff6ed-7bfd-4ea7-9268-a7bda4909815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f9a6f9-0e9d-44e0-947b-485ca697c50c",
        "cursor": {
          "ref": "cdd70add-b66d-4543-b0e4-cc833af35576",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e53704c4-498a-450e-bb84-1762b149244b"
        },
        "item": {
          "id": "a2f9a6f9-0e9d-44e0-947b-485ca697c50c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "efd1266d-1389-4169-8c91-23c9046ebe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe91fd64-7832-4840-9b05-8398559c3c36",
        "cursor": {
          "ref": "35d26866-209f-4d12-af89-e8860e34269f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3adaf671-5a87-4022-8b27-e2561757cc07"
        },
        "item": {
          "id": "fe91fd64-7832-4840-9b05-8398559c3c36",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cd0eb184-6370-4f85-b4d3-cee5cfd17a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f814b2b-3316-4aa5-99fb-01e057ebb5e8",
        "cursor": {
          "ref": "756e8ec2-5c69-4702-86a0-17628a45c20d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8ffe858f-5368-48cd-ae58-8647d649ba28"
        },
        "item": {
          "id": "2f814b2b-3316-4aa5-99fb-01e057ebb5e8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a575e202-c7b2-4c25-bed3-e76b57be6f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8be6026-327a-4ad3-8eba-3f957868892e",
        "cursor": {
          "ref": "510cd979-c64f-4428-a20a-6fb870c937f5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4a01a09-77a1-4b15-b714-21b30d2d051d"
        },
        "item": {
          "id": "f8be6026-327a-4ad3-8eba-3f957868892e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ac44040-66af-44ac-b8b1-89a49e6137ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5659c665-c6ef-4430-8351-278b1705df68",
        "cursor": {
          "ref": "5d00899e-acdc-4f5b-a7b6-763efebc21b6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "78d5dc70-74f5-4568-80f0-f1e591959454"
        },
        "item": {
          "id": "5659c665-c6ef-4430-8351-278b1705df68",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1a7424f5-2ac4-4a04-a076-c546067fd5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab61c451-15c6-4b7b-a9c2-4e22a8b771b7",
        "cursor": {
          "ref": "b83659e8-9f65-4b62-b494-e688fa656a25",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec8a907a-b637-4ed9-b539-34cb5b39b018"
        },
        "item": {
          "id": "ab61c451-15c6-4b7b-a9c2-4e22a8b771b7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ca8a3da1-6985-4cdd-9d92-ec90955042bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386b2a32-ec82-46f9-982c-c3392fff6db0",
        "cursor": {
          "ref": "51ea490c-3055-4163-8218-608977c79e05",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4d01133a-5a53-49e4-98da-7c13c9feb8fd"
        },
        "item": {
          "id": "386b2a32-ec82-46f9-982c-c3392fff6db0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0aa78aa7-742e-499e-91b4-33ffbcd19fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b00d34-2e5b-4a3b-b3d2-e5d19558dfcc",
        "cursor": {
          "ref": "cbf3604e-bdf0-4295-b02e-f717ca022c7c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b3133c43-83ed-4487-a460-66e9c5910e61"
        },
        "item": {
          "id": "f5b00d34-2e5b-4a3b-b3d2-e5d19558dfcc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "49b5f521-f670-47cd-b4dd-7e97f83add8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fac36e7-03a0-4d52-b8a4-e5fbed3aa030",
        "cursor": {
          "ref": "3c1884ce-b53d-4d0d-99ed-74218fdaebcc",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "973083ab-a8c7-4126-ac87-8bec315a2fc6"
        },
        "item": {
          "id": "7fac36e7-03a0-4d52-b8a4-e5fbed3aa030",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb3148e4-2afe-4094-a9ca-24237b3fca23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787b5bf8-f7db-4378-ac6f-2adbc80514bd",
        "cursor": {
          "ref": "330c332f-685d-479b-aa8a-2eb796909445",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d4a1e11a-320a-4358-a7fc-0029a9e8c6ee"
        },
        "item": {
          "id": "787b5bf8-f7db-4378-ac6f-2adbc80514bd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f26e707b-10fe-42d4-856c-e4b063087e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a037fcac-e078-4bc6-abca-8e7cedc47a8d",
        "cursor": {
          "ref": "8329a62f-5c7e-4282-bd03-6abdd48e8b4d",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4f100022-b641-427d-9062-f04bd99fcf71"
        },
        "item": {
          "id": "a037fcac-e078-4bc6-abca-8e7cedc47a8d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "31ed5e0b-e0f4-46cc-a3d3-7794446a50a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babc6e91-8402-48ca-b8c8-a816b1938e92",
        "cursor": {
          "ref": "05adf470-0094-4cba-9c88-aadb8a56ff3b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a77604bf-72e5-4648-8c75-1639e2b7a458"
        },
        "item": {
          "id": "babc6e91-8402-48ca-b8c8-a816b1938e92",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "eef4de0c-036f-4689-ade1-318fbfc2f09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b21bccf-6cf4-4e6f-8f97-47dd538fe86d",
        "cursor": {
          "ref": "1e49eb65-18f3-40a6-b53f-a5362a3189bc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a2a11918-8903-47f7-b81f-e54f43a24fdc"
        },
        "item": {
          "id": "1b21bccf-6cf4-4e6f-8f97-47dd538fe86d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c2aeaefa-a9d7-47ff-91d9-dbf4a6ef90c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0293c1ec-7d22-43ee-a6a0-b4e2e37120af",
        "cursor": {
          "ref": "62080fe7-b85f-4e3d-be33-f333170122bd",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f8497fe5-8947-4229-a166-2a1fbaa139d3"
        },
        "item": {
          "id": "0293c1ec-7d22-43ee-a6a0-b4e2e37120af",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b2a098b0-63f3-4300-9aeb-56e9f9e424f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80e29e4-8d18-4350-987e-a96d8a58a90e",
        "cursor": {
          "ref": "823b596c-5220-4858-bc92-75cf85143e20",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "243e94e1-3576-4ac5-bf95-a95052fa6ea3"
        },
        "item": {
          "id": "d80e29e4-8d18-4350-987e-a96d8a58a90e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a30861b3-0e04-4b12-8748-601dd35d4a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4d78fc-cf3e-475b-a5b0-a50cae8e34b0",
        "cursor": {
          "ref": "a23cad1e-a390-42e7-8fb2-74a4a09c7ca2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f4f7c513-a67d-4a6c-a421-e52a29518551"
        },
        "item": {
          "id": "9e4d78fc-cf3e-475b-a5b0-a50cae8e34b0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8fb1e94a-6bb9-4a56-847a-3fe30228ce4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce444d83-f4d5-4716-a56a-fce41125cea4",
        "cursor": {
          "ref": "9a213ff7-b558-4c12-bae0-09b8c3cd4e25",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4c9a3476-4c89-497b-9ce0-e24e2616ab70"
        },
        "item": {
          "id": "ce444d83-f4d5-4716-a56a-fce41125cea4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d35e300d-23f0-46b5-8083-8b7cbb902f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd0bcee-a6ca-4fe2-929e-3fd53b8cc5aa",
        "cursor": {
          "ref": "a59b856b-ff8b-4f38-a95f-701a48cbb92d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e251122d-824c-424e-b02e-8556df230771"
        },
        "item": {
          "id": "9cd0bcee-a6ca-4fe2-929e-3fd53b8cc5aa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d4bdd5de-4bc0-4c52-85fb-86e9a5a15d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c64e0e-a784-481f-b2b7-b1c9dcb22b71",
        "cursor": {
          "ref": "60457cbe-e10d-42d3-8596-9b7332bf9584",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cb7e3517-cafe-431b-a993-662d42e99f40"
        },
        "item": {
          "id": "67c64e0e-a784-481f-b2b7-b1c9dcb22b71",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f2bd3212-e44c-4040-856d-2b3facc4d2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de700e6-fcbc-4f1e-babf-5ea1b2026aa4",
        "cursor": {
          "ref": "aabd3d95-92cd-4dd4-97cd-dc4d6d9308a9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d5b8c3b7-caea-4372-a031-931047da220b"
        },
        "item": {
          "id": "9de700e6-fcbc-4f1e-babf-5ea1b2026aa4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9e9d8d9d-c4b0-447b-9d17-ca45a7ce20c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e6649b-826a-44c9-bd02-1e40ff2c34ae",
        "cursor": {
          "ref": "df7341aa-fa40-429c-b9b8-c245c3176a45",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e3a9a987-fa2e-4898-a8b3-2e7a0486c087"
        },
        "item": {
          "id": "b3e6649b-826a-44c9-bd02-1e40ff2c34ae",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ce842362-4ad7-496c-8362-c644154afa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c832fec9-e64e-4886-8827-53c10f26f033",
        "cursor": {
          "ref": "1ebaf059-e35d-4cfb-96ee-6f16e6ae6160",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a413e671-456f-4f95-8a85-5d1aa6924303"
        },
        "item": {
          "id": "c832fec9-e64e-4886-8827-53c10f26f033",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "66bd7608-f008-4eb5-8407-70ef65b084aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9690230e-845b-4fb9-8833-68b2097371ce",
        "cursor": {
          "ref": "c3bb566b-5712-4bf0-9a7b-9b71a327dfeb",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "26c05fee-d50e-468e-919d-0354788a941a"
        },
        "item": {
          "id": "9690230e-845b-4fb9-8833-68b2097371ce",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f87b6c92-2681-4a76-a55d-831ce5dab38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d559a23e-1a33-4476-a20a-98e13ccf216b",
        "cursor": {
          "ref": "3efda812-bb46-42a8-9a7b-13905c0e4e09",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e077a2a2-7c76-4860-bffa-dc4d794db517"
        },
        "item": {
          "id": "d559a23e-1a33-4476-a20a-98e13ccf216b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5c078db8-1122-4b31-9b04-674334cefe30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8e9c58-a236-4a5d-827f-21612c86667e",
        "cursor": {
          "ref": "0d8ebfc8-6481-4a3e-b28d-fed296ca6ad3",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "86c79432-a1e2-447c-8a17-2e1f8a4b941b"
        },
        "item": {
          "id": "fc8e9c58-a236-4a5d-827f-21612c86667e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c56c924d-f22e-47f6-bafa-5b67772fb46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58bb2f3-c842-42cc-b9a0-de0b25b73c56",
        "cursor": {
          "ref": "53e6a928-1088-4cbd-92df-76744bea6f69",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f7b690d6-e8e7-40cb-a9f2-6660bd92a8e0"
        },
        "item": {
          "id": "c58bb2f3-c842-42cc-b9a0-de0b25b73c56",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "31d088a0-aa55-470b-8afb-9800e48c9313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66e7771-f167-44c4-9815-388fa4ae146d",
        "cursor": {
          "ref": "f8b96b8b-6557-46b2-8e2a-587bb2dd89f5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2c654ddd-738e-45f0-9d4a-68394ef0ab0c"
        },
        "item": {
          "id": "c66e7771-f167-44c4-9815-388fa4ae146d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8b38acbd-b6cd-4b40-a5a0-19742a9a0faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c471b7-1e1a-45dc-ad60-30456c04895d",
        "cursor": {
          "ref": "6e822c0b-894d-44a4-b5f8-4d0d4c12cfeb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6b0df28e-2d7d-49c2-ad71-d807a3a6db7f"
        },
        "item": {
          "id": "60c471b7-1e1a-45dc-ad60-30456c04895d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0954dc53-6378-4093-9cad-85ab8cc83cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999088fd-ff69-409f-9adf-aa78bb3a564a",
        "cursor": {
          "ref": "a9e35d9d-2712-44ea-9bf1-abab581bd208",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "05275cde-5d1c-461f-81d8-c149fe7334d7"
        },
        "item": {
          "id": "999088fd-ff69-409f-9adf-aa78bb3a564a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "83534aaa-cc40-4976-a9c7-9519ffbc995d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd54e82-c148-4480-aec8-e8bc5bc40f38",
        "cursor": {
          "ref": "e60a70f3-3ef3-46ff-8fff-910e1ada1b9f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "26fa50e3-fa2c-4970-8baf-2b450a928d74"
        },
        "item": {
          "id": "5fd54e82-c148-4480-aec8-e8bc5bc40f38",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7a16c779-6d2a-4787-897c-4c433e1b51ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b5f4da-a8ec-4be6-938e-4d088373c8f4",
        "cursor": {
          "ref": "581f5116-1a3e-4515-a297-2c44af548b7a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f72d3e9f-0f14-465c-8ab7-385d8bea4730"
        },
        "item": {
          "id": "c7b5f4da-a8ec-4be6-938e-4d088373c8f4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5e5df529-ba6f-40ca-b23d-235ca4a9eef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce001883-8fdd-40a6-a958-fce4a1eb3a18",
        "cursor": {
          "ref": "c92c9c69-6b64-4faf-a1fc-d3c98096bc7d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a4428090-fb7c-48a2-a7eb-2d161c5f4ac2"
        },
        "item": {
          "id": "ce001883-8fdd-40a6-a958-fce4a1eb3a18",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "72e8b01f-4448-4c2f-b16a-41d2af006846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e697a85f-7036-45e8-82b7-360a4761f99f",
        "cursor": {
          "ref": "7371f8c4-a34e-4ac2-8018-977cd8a93430",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3363c2fd-2a99-4a6e-8e3c-e95c34a282f4"
        },
        "item": {
          "id": "e697a85f-7036-45e8-82b7-360a4761f99f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "57429811-0de0-4676-b5ca-0819dbbbd8f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b004e278-a65d-4a6e-b621-b308abc6aa0f",
        "cursor": {
          "ref": "6f8c2c93-db0b-4056-bad4-da4f3419dae1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dc9cdcd7-6da6-41d9-81e8-6f59fcc3458e"
        },
        "item": {
          "id": "b004e278-a65d-4a6e-b621-b308abc6aa0f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4fd99b27-5f1f-4e2b-a17f-e327030a94f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3595f977-aa0e-458b-9c8d-cdbff25a6693",
        "cursor": {
          "ref": "01c9fba7-95fd-4f17-9edd-163ecbc2cf2a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1c5a8e80-a55c-4196-9c7b-521118188953"
        },
        "item": {
          "id": "3595f977-aa0e-458b-9c8d-cdbff25a6693",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8da969e0-3908-42ce-8383-0cbbcbb7485c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bc25cc-c3fd-42af-bb18-7fcfe9ef9fbb",
        "cursor": {
          "ref": "e5383b00-9fe8-4c21-a87f-865d1da3178d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a1c38daa-f9d4-47e9-905c-1a67cd1bee99"
        },
        "item": {
          "id": "a6bc25cc-c3fd-42af-bb18-7fcfe9ef9fbb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5b1bef01-348a-4762-a087-e70ead6c3b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53aee71-db02-46fd-aa60-4b4f81f39fd6",
        "cursor": {
          "ref": "babf7c71-b250-4653-9181-467773594163",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "70d3e384-d0a7-4530-9956-1fa3f8f0300f"
        },
        "item": {
          "id": "d53aee71-db02-46fd-aa60-4b4f81f39fd6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "85d66979-ed19-440b-b3aa-2aee6050aeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453c8b4f-249f-42f1-89db-ca519aa232c3",
        "cursor": {
          "ref": "aa5783b3-da4a-4703-821f-40cc446ebf79",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8c50e9a8-6660-4420-aa7e-7d7e8b783b72"
        },
        "item": {
          "id": "453c8b4f-249f-42f1-89db-ca519aa232c3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3785a667-c811-4ed7-91b2-52b3c0fa9e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48eab76-758a-4209-ab8c-79dd3d58fc95",
        "cursor": {
          "ref": "c2212143-eeaa-40cb-a942-f227f8a4d6c6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "85a00236-c926-40bd-9cab-43f37abc41aa"
        },
        "item": {
          "id": "d48eab76-758a-4209-ab8c-79dd3d58fc95",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9c7d1323-d865-4147-911c-08b6bce30716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1f34a8-81e7-4067-925a-3a3db276fdb5",
        "cursor": {
          "ref": "cabc00bb-372b-4bff-a98c-20a6cbe6ce8e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "56d9b49f-4644-441a-9253-18ac71c4a6de"
        },
        "item": {
          "id": "7e1f34a8-81e7-4067-925a-3a3db276fdb5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c6ffaff4-447a-4b6a-9286-aea5f9369f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8dcefc-8a3f-41fd-9b8f-a188d0e2ff50",
        "cursor": {
          "ref": "4d8625c1-00b1-4099-b44a-88d3db92ab98",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a7d9ad86-f483-4614-aa5a-46c4bb0241d9"
        },
        "item": {
          "id": "2e8dcefc-8a3f-41fd-9b8f-a188d0e2ff50",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b8dd8ae7-a27c-4247-876d-31ae50e87870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0674861-5fdb-4ee1-bf82-bb0ac59441e6",
        "cursor": {
          "ref": "bbcf6548-b07a-4a3a-8da3-4eff59d8eaeb",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b9d2c7e8-a3bc-4616-8e47-22e432dc8857"
        },
        "item": {
          "id": "c0674861-5fdb-4ee1-bf82-bb0ac59441e6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9e880116-4020-4463-97e0-3c2b48f78121",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "faf407d2-f9a2-4b68-a4ac-d10eef4eb349",
        "cursor": {
          "ref": "f02086db-fc0b-437c-baf2-fb64a03e5725",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "11c019e2-7870-45cd-bee5-467956769866"
        },
        "item": {
          "id": "faf407d2-f9a2-4b68-a4ac-d10eef4eb349",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "52640ea1-3603-4c4f-8230-afaf9d0b498e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c344e3a6-5006-494d-8c6a-bbfb378fe1ea",
        "cursor": {
          "ref": "2309d219-a05c-44d1-a24e-0bfb652e4a2f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a0f3ec1d-9e52-40e4-a2c0-ea2728ba6ebd"
        },
        "item": {
          "id": "c344e3a6-5006-494d-8c6a-bbfb378fe1ea",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "68a4cd58-4000-483a-bdfe-9e92d56151fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f9df71-0baa-4934-8b7e-5e721b79e821",
        "cursor": {
          "ref": "77ce4f66-d7a6-4242-9a13-a2af64e63edc",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "59edae33-41a5-409e-b97f-00e9e3551988"
        },
        "item": {
          "id": "95f9df71-0baa-4934-8b7e-5e721b79e821",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4fee25fd-6df6-4ec5-b068-a2aea87b1d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b3f9c5-9e79-458d-9ac4-83254d851d81",
        "cursor": {
          "ref": "ae24c0ec-f42c-40de-b4b8-c33731ab3773",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "40f25ae9-e69c-479a-b21c-b6d7f993b0bb"
        },
        "item": {
          "id": "f9b3f9c5-9e79-458d-9ac4-83254d851d81",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b61612ad-e1c6-4c58-bc54-a0576788f174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7337626c-df63-4788-bb79-8fe6c5b34261",
        "cursor": {
          "ref": "ef59931b-a38d-4125-a1fd-2c28ff42c840",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "01ecf7a4-9065-4908-86d0-3d7e5b107570"
        },
        "item": {
          "id": "7337626c-df63-4788-bb79-8fe6c5b34261",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "453c9725-ee9e-466f-b8d8-b8102101089a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a35da-0b84-4a25-b8d5-d1586c421931",
        "cursor": {
          "ref": "a9ae56e4-8d96-490d-a155-33d5e25980ed",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "94c316b1-2a70-432b-962b-d8c767123d2c"
        },
        "item": {
          "id": "8c8a35da-0b84-4a25-b8d5-d1586c421931",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "65e983d8-f606-4264-85f9-227229984cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d22a47-96cb-4f46-bd3b-f4feace5f8a0",
        "cursor": {
          "ref": "bececb2f-64a5-4840-a27c-ccf074c07d2b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "615b7189-6425-4112-9c1d-d2638ed04364"
        },
        "item": {
          "id": "d5d22a47-96cb-4f46-bd3b-f4feace5f8a0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0d791f41-8746-49fd-9808-b5a3977e81c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d09907-41ac-4fd4-b2c1-2237349efe66",
        "cursor": {
          "ref": "cd82ee9b-7717-4f3f-9f4d-7a67c47535a1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4b1cd2da-b09c-4b7f-a821-72ddd264fc59"
        },
        "item": {
          "id": "b9d09907-41ac-4fd4-b2c1-2237349efe66",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7e1cee17-33d7-40ac-9cbc-db4b780e0e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918b8aab-c081-4dab-acd3-a035a7e51868",
        "cursor": {
          "ref": "09bf9eac-f939-4d3f-9ea6-43d2f0e20a35",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "257be103-78f4-4d37-8f0e-cf3097f7f275"
        },
        "item": {
          "id": "918b8aab-c081-4dab-acd3-a035a7e51868",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6706f077-6568-4f53-88c2-63ad53473ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec435861-69ad-42e4-add5-047965558900",
        "cursor": {
          "ref": "b2a1ecb7-ec96-4862-9846-2658e3ba276f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a502f021-280f-477d-8eea-cd719316079d"
        },
        "item": {
          "id": "ec435861-69ad-42e4-add5-047965558900",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d06c67cc-8d04-471b-9dfe-9664a7601791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc15eeb5-057d-4c21-aa2a-bb5947bc68dc",
        "cursor": {
          "ref": "5e310468-1766-4acc-b4bf-cab041db9b22",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7fa2dcd7-e978-412e-8983-e76db4dfc90f"
        },
        "item": {
          "id": "bc15eeb5-057d-4c21-aa2a-bb5947bc68dc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "71fb41ee-e7f5-421e-bb5e-e4b5e1c4bf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51336c64-4022-4a7a-b468-98a7f98cbf0a",
        "cursor": {
          "ref": "d5b50ff2-5fb7-4ad9-86af-472bc5a94b55",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1e88970d-1b90-47dd-80e6-7bb31e5a1ff0"
        },
        "item": {
          "id": "51336c64-4022-4a7a-b468-98a7f98cbf0a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a583bcdd-592d-46e5-ba18-c10c17c0e311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a03076-4e87-47d6-bbf3-2ef17be77e19",
        "cursor": {
          "ref": "8b813970-ac85-47ba-acb4-cd105115663f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d1d8a2bb-7e99-4095-883a-dceaea7d6a03"
        },
        "item": {
          "id": "21a03076-4e87-47d6-bbf3-2ef17be77e19",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "88bfdd56-de79-4344-89da-814643cfc80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f59366-e72a-432e-816b-00196871f796",
        "cursor": {
          "ref": "66a85df4-b4ae-427f-9f6d-ba74e83266e4",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d01beb64-ab6a-4a61-9fb5-0f9e3c838755"
        },
        "item": {
          "id": "79f59366-e72a-432e-816b-00196871f796",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4f37998a-37bb-4eb1-becd-fc6d5101c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa70de2-73b0-42e6-9f16-f5b8b2d1ca7b",
        "cursor": {
          "ref": "bf7a984e-4a45-4652-8630-0dbd6c3bdcb7",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9dde566f-803c-4330-b374-7c7c54e17fdf"
        },
        "item": {
          "id": "aaa70de2-73b0-42e6-9f16-f5b8b2d1ca7b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "01d21fd5-c346-462c-89dd-8844b4692f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b3e771-3650-4be1-b576-f894b47e5eda",
        "cursor": {
          "ref": "4e6e3c31-362b-4fd4-b178-4a166f120c08",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "05214f6f-72f3-43b0-aeca-9e2fefadf073"
        },
        "item": {
          "id": "29b3e771-3650-4be1-b576-f894b47e5eda",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "899ce6ed-efd5-42ca-9db4-3ed830409fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db0ae98-8652-43ef-893a-e442cadf165f",
        "cursor": {
          "ref": "0d50517a-496b-4f18-bc1b-f9c1f2a35c39",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a76f4667-80e9-436d-aa48-78b377218231"
        },
        "item": {
          "id": "7db0ae98-8652-43ef-893a-e442cadf165f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5d7cf62b-4f1d-4de7-9fd5-814c53429854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a4a469-e54d-4245-9524-bf4e0e8be5e0",
        "cursor": {
          "ref": "2fe928c3-b8e2-46b9-b950-f1c2eef3d6a0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6ad432c-1de1-4116-b044-11ec5e071cc0"
        },
        "item": {
          "id": "e1a4a469-e54d-4245-9524-bf4e0e8be5e0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fa526e70-faf9-4c91-8831-a236c96bbc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907c5858-3b6f-4fe1-9968-92a2256f96d9",
        "cursor": {
          "ref": "c243c4cc-65f9-4882-85f8-e28014d321b3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cc514430-58c9-4d66-957e-cf9e4ef8309c"
        },
        "item": {
          "id": "907c5858-3b6f-4fe1-9968-92a2256f96d9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b4d49cc4-4a2b-45aa-b52d-7b6438c64339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd19869b-0402-44ee-8b51-32d779d9a3ba",
        "cursor": {
          "ref": "62761442-edae-49ba-a83e-dbdc9750e6b2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5c8ff656-3f56-490d-8b05-5b0947f18fee"
        },
        "item": {
          "id": "dd19869b-0402-44ee-8b51-32d779d9a3ba",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "782449bc-f595-466c-95e9-9db25d93fd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce30c403-343e-4911-8434-38d855c2b403",
        "cursor": {
          "ref": "ceff3a2f-3b8f-4af1-9b22-c3870679ab95",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b597f1ac-335f-4efb-8f60-5283ca966ede"
        },
        "item": {
          "id": "ce30c403-343e-4911-8434-38d855c2b403",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c5127588-588c-4d61-936e-c947f9433a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6261a08-4341-4024-ab1e-b648cec22a3e",
        "cursor": {
          "ref": "2eb18782-2e40-4d08-b25e-e3515bc71bd7",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f7eafe91-654a-46ed-9310-7c241823b2a1"
        },
        "item": {
          "id": "f6261a08-4341-4024-ab1e-b648cec22a3e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b98e9d3c-8896-4e5f-bc08-33ccae709d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db6eb8-d0e3-4bbf-b2cb-7740eb86f21a",
        "cursor": {
          "ref": "64570bce-c5f9-469a-ab84-1402ca53492c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5d2c7e1b-2f11-44f9-8e7d-f7426c3d92d4"
        },
        "item": {
          "id": "76db6eb8-d0e3-4bbf-b2cb-7740eb86f21a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2c097e8a-5d21-47e9-aeed-7ae88525c7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98fd1b0-7b0f-4f91-9461-943233b32906",
        "cursor": {
          "ref": "471e8475-230c-40aa-ad89-34a0079e614a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "245785a4-a945-4299-a831-93958dd23aec"
        },
        "item": {
          "id": "a98fd1b0-7b0f-4f91-9461-943233b32906",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e34363ec-e7d4-4b46-89d5-57fd83179cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f853ff7-fd92-4af0-ac17-5bb250d93a4b",
        "cursor": {
          "ref": "d6197d3b-5082-49d5-b8d6-c561620053b2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1680b358-3eb1-47ff-a7c9-f0402f5e65ef"
        },
        "item": {
          "id": "8f853ff7-fd92-4af0-ac17-5bb250d93a4b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6bb7e2cc-b126-41a0-ad03-358f84b6a39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d708414d-b148-4917-9526-241ce86ba003",
        "cursor": {
          "ref": "4c653862-e433-453f-abb1-19c278240b85",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0190bc27-6233-4603-b732-3be4d0a514db"
        },
        "item": {
          "id": "d708414d-b148-4917-9526-241ce86ba003",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2eea67d7-99bf-4759-b32b-03c89da3a3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0b79b3-d51e-4b3a-8530-8e9499b39011",
        "cursor": {
          "ref": "67688abe-bd2f-4a10-b20d-858f17d45df0",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "aed6131e-f2d6-476f-852d-96f79d2a667a"
        },
        "item": {
          "id": "9d0b79b3-d51e-4b3a-8530-8e9499b39011",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "752f3b6a-45c0-4614-a6f2-a99a4582d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9c95a0-ff21-4e5b-8554-adefc92ec5be",
        "cursor": {
          "ref": "d272b64b-a10a-4d35-bf64-9396c6589d6c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6de54be3-d1fe-4af5-ace2-e1acdaa29d82"
        },
        "item": {
          "id": "9b9c95a0-ff21-4e5b-8554-adefc92ec5be",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "38853b70-cf29-473f-93bd-60648ba51f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0397a2a-fc21-48aa-8b17-b92ca425831e",
        "cursor": {
          "ref": "496975bf-e8b3-40df-aeb6-6af517120e04",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "df29a4c1-2559-4a7c-8483-9f537e0d4e38"
        },
        "item": {
          "id": "e0397a2a-fc21-48aa-8b17-b92ca425831e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "90e31692-f010-4afc-b85e-595e8090c214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff26c0e-c156-46cc-86dc-770e1d96faf4",
        "cursor": {
          "ref": "860fc37a-759d-49e7-9d71-f36260198b46",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c76d4ab0-e5eb-49d0-95ee-455d0d5906f0"
        },
        "item": {
          "id": "6ff26c0e-c156-46cc-86dc-770e1d96faf4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "604f389d-f776-4ac2-a694-06adfacdf436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ced0ae2-55ed-4037-b9c9-f0bf414947be",
        "cursor": {
          "ref": "ec9eef5e-fe05-4715-bddd-2ee139377965",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "48c6a852-a46c-489d-9675-83de3ac2fbad"
        },
        "item": {
          "id": "9ced0ae2-55ed-4037-b9c9-f0bf414947be",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8ae418a6-999d-4296-a72f-30d3d53b1d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c62a60-e0ae-4eb6-b921-fa87127f55ef",
        "cursor": {
          "ref": "56c5122a-9651-4d16-8d3b-be137681920a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6198318c-b435-473e-a303-786d3a717271"
        },
        "item": {
          "id": "f6c62a60-e0ae-4eb6-b921-fa87127f55ef",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "24e67850-d308-4a95-b045-8192916042e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cab2b8-b58f-4dbb-9d17-b398542f7504",
        "cursor": {
          "ref": "ae1646e2-d153-4363-9693-f9e2555597ae",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2d2eb77e-3771-41be-8b9d-afdbab5b8cc1"
        },
        "item": {
          "id": "e7cab2b8-b58f-4dbb-9d17-b398542f7504",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "58a4792c-706e-4dda-ba75-71cc4f90e0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246e4b51-50db-4edc-b9d1-f85d3dbf0689",
        "cursor": {
          "ref": "bc897f60-08cd-4865-9de9-77c202c22a6c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fb198f78-0f1f-4a88-9539-92637f8f3434"
        },
        "item": {
          "id": "246e4b51-50db-4edc-b9d1-f85d3dbf0689",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8a71b995-773d-4952-bd89-065a1ecaac50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bac52e-b401-4347-992e-35413f29e68d",
        "cursor": {
          "ref": "4b832b37-a9e7-41ed-9fa4-9c87488d2157",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0d119b1e-6765-480b-b13a-b27ab281aa72"
        },
        "item": {
          "id": "b4bac52e-b401-4347-992e-35413f29e68d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "404a5df1-3a5e-4a3a-ae6d-16c3b3a4625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29e8bd8-42e8-4ff6-aebf-4b4ef7d15ade",
        "cursor": {
          "ref": "13093aae-fd3e-4872-b26a-9df038f33ba5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ef8792ab-ce11-41ec-a6f0-dc0b07c8b5ba"
        },
        "item": {
          "id": "a29e8bd8-42e8-4ff6-aebf-4b4ef7d15ade",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b50304d0-84da-466c-a99f-145e98f6872e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c976eabd-bbc9-4456-8720-26857b433295",
        "cursor": {
          "ref": "0d6b57bf-7638-4ef4-9761-f2cb2cfdc3be",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "54ca4ab4-0cf9-42e9-9b9a-f31fa34dbbc4"
        },
        "item": {
          "id": "c976eabd-bbc9-4456-8720-26857b433295",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2b96ae06-be82-480c-bbcf-b77e95e33f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f034d7b5-5f5a-4e03-9adc-01b0711d0b2c",
        "cursor": {
          "ref": "e902b7b0-e3dc-46d6-a115-c16eb232a77f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "630b4e51-bb97-40da-a3f1-e26774262bac"
        },
        "item": {
          "id": "f034d7b5-5f5a-4e03-9adc-01b0711d0b2c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2775aa64-e77d-4e97-9a58-7b238513ef85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3baaa9-2eb8-4390-bc18-dc6f9e966c5b",
        "cursor": {
          "ref": "b7bc6736-4bf7-4708-91b4-f0f46ac22b98",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6b3a7abc-6db9-40aa-b431-ffc7c66e7018"
        },
        "item": {
          "id": "ea3baaa9-2eb8-4390-bc18-dc6f9e966c5b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8d58185c-573a-496f-a4c2-9d11717d534d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88665ba6-335f-4307-b051-ce905fad9944",
        "cursor": {
          "ref": "98c0093e-4b0d-482d-b1ce-bb0c0625d17b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a5153a6d-0e01-4146-9df1-960c1b722750"
        },
        "item": {
          "id": "88665ba6-335f-4307-b051-ce905fad9944",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "abf4f1a1-40e3-4293-9516-424c91b482cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c25880b-a50d-46bf-8d7c-4626a059904a",
        "cursor": {
          "ref": "6ebb762d-08bf-42ce-a3bd-28ceb1f12c47",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "37b7c6bf-aa46-46c5-850c-cbe2c37a7d66"
        },
        "item": {
          "id": "2c25880b-a50d-46bf-8d7c-4626a059904a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7bdd0bfe-5399-406f-8bba-d1407b086973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10b093d-6b16-47f6-8a92-260c28b6755a",
        "cursor": {
          "ref": "f930133d-e3ab-4ff7-bb98-f67680c851f7",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cb2d5c87-26db-4a33-b29c-8fa64ef3abd5"
        },
        "item": {
          "id": "b10b093d-6b16-47f6-8a92-260c28b6755a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2e4e1848-8fb5-4e8a-86da-3685c85a2698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918a5ae2-ecb9-40de-8dbe-7a8b0281c04d",
        "cursor": {
          "ref": "0e85adf1-fadd-4767-8b00-888538d2b806",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "19e0fb89-0dd5-494b-bf52-530d3ca4a14d"
        },
        "item": {
          "id": "918a5ae2-ecb9-40de-8dbe-7a8b0281c04d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "59da54e3-e42f-43ce-9b0b-8afc5f0bef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21967ac-a0af-4787-8f2d-82fa74fe68d4",
        "cursor": {
          "ref": "922aa5a6-dc73-42b8-aa32-c85e983d5a56",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "9958dd26-f8ed-4397-b963-f18e777d0d15"
        },
        "item": {
          "id": "e21967ac-a0af-4787-8f2d-82fa74fe68d4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3217a952-e312-42d8-b643-3b58e643bf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacd416b-4695-4f74-a126-10b7e39d28ed",
        "cursor": {
          "ref": "e7b3f820-9455-454b-b720-bf32c0d3fd45",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "48b96732-d4ec-4bbb-bab9-9c72fde40c17"
        },
        "item": {
          "id": "eacd416b-4695-4f74-a126-10b7e39d28ed",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fe845e55-7ff7-4d3a-bd61-22b392ee5fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0dadbf-b5cb-43e2-8d55-2cefe7c48802",
        "cursor": {
          "ref": "2d96d471-0a37-45b3-a2a0-27f849bf4ed5",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "eb37759e-4d87-4d9b-be7f-c8c9031b3313"
        },
        "item": {
          "id": "8f0dadbf-b5cb-43e2-8d55-2cefe7c48802",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "99c6ab73-6c41-4c4e-b64b-45bd2d9ec7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae2d0a8-2a18-4ad7-9a95-5f8870549a1d",
        "cursor": {
          "ref": "271aaef8-fe5d-4de6-9a64-67ace1df7ea3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "62fd7cde-1d57-4bf8-b9a1-f3a52d1e182e"
        },
        "item": {
          "id": "dae2d0a8-2a18-4ad7-9a95-5f8870549a1d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6cd49804-2ce9-4f4c-af9e-1b3da21656fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83906b37-84a9-46cd-afbc-08a35751633d",
        "cursor": {
          "ref": "74d0e181-878a-48b3-94af-482089d93585",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c094cebd-5980-43fe-9f78-cb5ace93a25f"
        },
        "item": {
          "id": "83906b37-84a9-46cd-afbc-08a35751633d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fb740ca8-0afe-4ebc-ab27-3a73659fd448",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d261eb1f-e11c-4665-828f-e407aef8b05f",
        "cursor": {
          "ref": "e982adc6-adb9-45d7-bc04-7151236204f4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e03ede44-8402-48fc-bc90-cc341a4d47af"
        },
        "item": {
          "id": "d261eb1f-e11c-4665-828f-e407aef8b05f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "df53fa57-e9bd-4023-b731-ed8b33289682",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c656adc-ef28-454e-a455-32bb2c04bac7",
        "cursor": {
          "ref": "197749b6-d7cb-4486-b6d5-17be11f087b8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "525fffaa-ceae-46e0-9e20-53cadf3d0ee6"
        },
        "item": {
          "id": "6c656adc-ef28-454e-a455-32bb2c04bac7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "23846ab1-158b-44a2-b017-c1e44feac22d",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7856ab7b-3d61-4dab-9d5f-9c72ed0cc6f3",
        "cursor": {
          "ref": "e566d0e3-d6cc-4a1b-8d59-1465b8188482",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a07be630-068a-46ce-8e47-39ccee97d703"
        },
        "item": {
          "id": "7856ab7b-3d61-4dab-9d5f-9c72ed0cc6f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc87a89e-660b-4b43-a194-1161a8000ca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7856ab7b-3d61-4dab-9d5f-9c72ed0cc6f3",
        "cursor": {
          "ref": "e566d0e3-d6cc-4a1b-8d59-1465b8188482",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a07be630-068a-46ce-8e47-39ccee97d703"
        },
        "item": {
          "id": "7856ab7b-3d61-4dab-9d5f-9c72ed0cc6f3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc87a89e-660b-4b43-a194-1161a8000ca9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56233135-10a2-4d76-89c8-8d87ae440838",
        "cursor": {
          "ref": "56ae7b9e-ac94-4a75-a7a2-7503d1960907",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b2975ffc-c924-4e0d-bdc5-bc0d25e48986"
        },
        "item": {
          "id": "56233135-10a2-4d76-89c8-8d87ae440838",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7be274c7-4ac0-49b3-9919-43ecdd456090",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d23b6cf-13b6-43d9-b09a-df6b17f0bbbb",
        "cursor": {
          "ref": "0199b6c0-a5a7-49e3-af8e-2506f6e6bc17",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "812032e0-4a16-4fe1-b00f-85613412b28b"
        },
        "item": {
          "id": "7d23b6cf-13b6-43d9-b09a-df6b17f0bbbb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "09aafc21-3bbd-4282-b818-0f34a7d0b08c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}